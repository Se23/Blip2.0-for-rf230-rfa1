<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="53:TestAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40480188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40447c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40447c88"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40b03408"/></to>
    </wire>
    <wire loc="56:TestAppC.nc">
      <from><interface-ref name="LinkUpLed" scoped="" ref="0x4047faa0"/></from>
      <to><interface-ref name="Green" scoped="" ref="0x40afa468"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Green" scoped="" ref="0x40afa468"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:TestAppC.nc">
      <from><interface-ref name="LinkDownLed" scoped="" ref="0x40479120"/></from>
      <to><interface-ref name="Red" scoped="" ref="0x40afaa80"/></to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Red" scoped="" ref="0x40afaa80"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:TestAppC.nc">
      <from><interface-ref name="PacketRxLed" scoped="" ref="0x40479788"/></from>
      <to><interface-ref name="Yellow" scoped="" ref="0x40af90e0"/></to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Yellow" scoped="" ref="0x40af90e0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:TestAppC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x4047ceb8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b234c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b234c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b333d0"/></to>
    </wire>
    <wire loc="66:TestAppC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40b43898"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40e115b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40e115b8"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40e10708"/></to>
    </wire>
    <wire loc="67:TestAppC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40b23010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e11168"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40e11168"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40e102b8"/></to>
    </wire>
    <wire loc="71:TestAppC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b24258"/>
      <arguments>
        <value cst="I:32855">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppControlProtocol" scoped="" ref="0x40e29118"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppControlProtocol" scoped="" ref="0x40e29118"/></from>
      <to><interface-ref name="PppControlProtocol" scoped="" ref="0x40e55700"/></to>
    </wire>
    <wire loc="72:TestAppC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b24258"/>
      <arguments>
        <value cst="I:87">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40e29660"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40e29660"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40e549a0"/></to>
    </wire>
    <wire loc="73:TestAppC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e288b0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b42010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40b42010"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b45aa0"/></to>
    </wire>
    <wire loc="74:TestAppC.nc">
      <from><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e270e0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40b23b00"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40b23b00"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40c6b2b0"/></to>
    </wire>
    <wire loc="75:TestAppC.nc">
      <from><interface-ref name="Ipv6LcpAutomaton" scoped="" ref="0x404919d0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e29bb8"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e29bb8"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e7c0e8"/></to>
    </wire>
    <wire loc="76:TestAppC.nc">
      <from><interface-ref name="PppIpv6" scoped="" ref="0x40498ec8"/></from>
      <to><interface-ref name="PppIpv6" scoped="" ref="0x40e12738"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppIpv6" scoped="" ref="0x40e12738"/></from>
      <to><interface-ref name="PppIpv6" scoped="" ref="0x40e26d48"/></to>
    </wire>
    <wire loc="80:TestAppC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40ea1370"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b42010"/></to>
    </wire>
    <wire loc="81:TestAppC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b24258"/>
      <arguments>
        <value cst="I:16463">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40e71df8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40e71df8"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40ea0370"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eba290"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x411ec670"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4118caf0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e269e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dea650"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410e79d0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41088d58"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4102c340"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bbd278"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40a97d78"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40a93920"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a4c6d8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40975978"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x408e2400"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f95c98"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f62758"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40b037a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40357b58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40357b58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40421738"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40b03d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a10f0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a10f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a6a48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40b02240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a8968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404c9960"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404a0108"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408a56f0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404a5238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404a0108"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x404a6e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404adee0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404adee0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404bde00"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x404a5608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x404e60e0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x404e60e0"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x404e6920"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="BatteryWarning" scoped="" ref="0x404a5a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404a7cd0"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a7cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4089b6e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404ac6c0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406eb2d8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404ac310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41176140"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404ac310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407c6ec0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404ac310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4062c010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404ac310"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f09df8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404c8628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x404ac310"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404c89d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x404ac6c0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x404c8da0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x404b6348"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404c8260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404c95b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x404ece20"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x404e9688"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x404e9688"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x40503a98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404ea1d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404ed750"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404ed750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x404eabd8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40554438"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40503a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40513210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x404f9750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40500ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x40509ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40510750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404ee2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4050aa98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404f3ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40504670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4050cc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404f1010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404f7670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x404fcce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x405024b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40507ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x405112f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x405018e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404f0ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404f5590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40513e08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404f4a08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40505210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x404ff750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x405088e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404eece8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404f8210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404fd8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x405030a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4050b670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404f1a08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x404f60a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x404fb750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40506750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x404fac08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x405002f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x405094b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40511ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404ef8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404f4010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4050a0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404f34b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40505c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052baf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4050c210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x405072f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40531c68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404e85f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404f8c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x404fc2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40512830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40502ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40535440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x404fa210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404f04b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x404f6b18"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40525920"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x40882530"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40565448"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40565448"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406c1ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x406c2818"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x405628f0"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x405628f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x405600b0"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40880c78"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408be968"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x408be968"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x404f6b18"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40881118"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408849c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408849c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408a8b98"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40880270"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40799e30"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40799e30"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x407c15d8"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40560c88"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x405030a0"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40572210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40561330"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40561330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40579c38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40579c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4068ecc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40693cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40580f20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40580f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40edeb48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406b50c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40671968"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40f0e870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40ee01c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ee01c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40f08270"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f0f630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4063f768"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4063f768"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406380c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40f07c70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405aac00"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405aac00"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405bfd50"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40f04cb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405b4010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x405bb420"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x405cdac0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405b4010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x405c6e88"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405b4010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x405c2248"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405b4010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x405d0680"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405cae80"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40a914b8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407ec478"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4070fed8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405caa90"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4062ed50"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4062c448"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x406325f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405aac00"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4064d380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4062ed50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40690658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406b32b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406c1ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x408794d8"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40887170"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406bede8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406bede8"/></from>
      <to><interface-ref name="VoltageMilliVolts" scoped="" ref="0x40841180"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40887d60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40861a18"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40861a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f91170"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408864d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40860c88"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40860c88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f903f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="AdcRaw" scoped="" ref="0x40841e70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406cdc98"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406cdc98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406d7480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="MeasureBridge" scoped="" ref="0x40840b10"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x4050a0a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4083f5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40843da8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40843da8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40579c38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406cc848"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40845a88"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406d5940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406cc848"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406d41b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x406e11b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406df618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406ccd20"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406d7480"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407ac868"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x406d3958"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40795390"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408481c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406d41b8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407948b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406d5940"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x407c8590"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407973d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40794040"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406ddbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406ddbd8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406e8b58"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40793088"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40799e30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406eddb0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406ea110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406e11b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4073f3a0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4073f3a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f61bf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4077da50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406df618"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x406f2dd8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x406db588"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x406db588"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40712658"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406e7648"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a8968"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x407919f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x406e86c8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40790150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4073fee8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4073fee8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f607b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4070e2a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4073fae0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f603a8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4077d5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f60e48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f5e338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4077da50"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40f5e760"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40f62a90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f5dc90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40f797f8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407919f0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40f79bf0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x40791de8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f79f08"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40790150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40f775b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407907e8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x407a0c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407c00c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407cd010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407cb268"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407cad88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407cad88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407c4320"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407c3558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407d7858"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407d7858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407e4878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407cf010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x407ee470"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407d3c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x407df978"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407d3c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407ddd28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407d3c28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x407f1100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407ec868"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <from><interface-ref name="calcTask" scoped="" ref="0x40855328"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x408601e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f918b0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x408605f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f91cb8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f908b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4087b208"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40f90cd8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f93010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f8e2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408a56f0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408a8850"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x408a0c60"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4088ee60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4088ee60"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x404ff750"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4089f660"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x408a7860"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x408a7860"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x4050c210"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4089e060"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x408a62e0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x408a62e0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x4050cc08"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x4089ea48"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x408a6cc8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x408a6cc8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x4050b670"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x408be330"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408c1b98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x408c1b98"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408c6590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408b9ab0"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408d0068"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x408e4280"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408be330"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x408e4940"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408be968"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408e7b18"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408f4ee8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408f4ee8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40975d10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x408fc5e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x408e2ef0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40975d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409790f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40911be0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40936be8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40926068"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4095a310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4090c100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409353a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4090e010"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4095a9a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4091fdf8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409356d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40975978"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4097ad48"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4096d840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4090e548"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4095aed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40972c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409585a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40972618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x4096d338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40ae0af8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40972c20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a2f710"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40972618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a2f350"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40a2fea0"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x4096d338"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40977500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4096d840"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a2ee50"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4096d840"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a48340"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4096d840"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40a2e3c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40991948"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40a2e898"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x409947f8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x4098ec18"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40a2a718"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4098b548"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a29608"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a29608"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a53330"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a429e8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a29a88"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a29a88"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a53c20"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x409bc7a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x4099ca18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x409bd010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x409ba428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40a2ddb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40a2c270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40a518f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40a537a0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40a537a0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40a4ce28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a53c20"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a4b290"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a53330"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a4ca10"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a4e6f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ac4170"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ac4170"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ae67f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a890a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a4e6f0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40a4bb28"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40a98178"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40a98178"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40a93d70"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40a8a010"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40a98688"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40a98688"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40a92368"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40a8a448"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40a98b80"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40a98b80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40a92880"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40a99508"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40a94cd0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40a99010"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40a947b8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40a9aa80"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40a94288"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a91888"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a8968"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a90010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a90010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ae4ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ae2890"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ae2890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40adddd8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40adb078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407cad88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aefa38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408849c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40aef010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40972c20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40aef6f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40972618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x4096d338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40af2a28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x40aec218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40420010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40420c70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4035a458"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40450b50"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x40afbe10"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x40b184f8"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x40b17288"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x40b17288"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x40b16a80"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40afb1c0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40afb7e8"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Orange" scoped="" ref="0x40af9718"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b17d28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <from><interface-ref name="Led" scoped="" ref="0x40b17d28"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40b13558"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b13b80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408849c0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b417a0"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b68588"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b68588"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c48660"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40b45aa0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b57e88"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40b3b978"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40b677a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40b677a8"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40b57370"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40c6b2b0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40d519f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b46010"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40b24258"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40b46908"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40b43898"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40b45010"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40b23010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppControl" scoped="" ref="0x40b344f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b454c8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b454c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b62b00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b46010"/>
      <arguments>
        <value cst="I:49185">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40c6ec80"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40c6ec80"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40c67d08"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40c6abe8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b45aa0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c699a8"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b68588"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40c68700"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40b677a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="ProtocolReject" scoped="" ref="0x40b56d98"/></from>
      <to><interface-ref name="ProtocolReject" scoped="" ref="0x40c6a030"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="ProtocolReject" scoped="" ref="0x40c6a030"/></from>
      <to><interface-ref name="ProtocolReject" scoped="" ref="0x40c633c0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40b35778"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40c6b2b0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppProtocolReject" scoped="" ref="0x40b46598"/></from>
      <to><interface-ref name="PppProtocolReject" scoped="" ref="0x40b54a20"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40c693d0"/></from>
      <to><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b67270"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b67270"/></from>
      <to><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b7c5f0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c48660"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x410652e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b58d90"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40b46010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppProtocolReject" scoped="" ref="0x40b63a28"/></from>
      <to><interface-ref name="PppProtocolReject" scoped="" ref="0x40b46598"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="TransmitFramePool" scoped="" ref="0x40b58278"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40baac78"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPool" scoped="" ref="0x40baac78"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40bc0310"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcFraming" scoped="" ref="0x40b5d248"/></from>
      <to><interface-ref name="HdlcFraming" scoped="" ref="0x40c03e08"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="HdlcFraming" scoped="" ref="0x40c03e08"/></from>
      <to><interface-ref name="HdlcFraming" scoped="" ref="0x4102ca50"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcControl" scoped="" ref="0x40b63e38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40c03a10"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40c03a10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4102c658"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40c035e8"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40b45010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40c03010"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40b46908"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x40b622c8"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x40b184f8"/></to>
    </wire>
    <wire loc="410:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="processError_task" scoped="" ref="0x40b94010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="354:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="processFrame_task" scoped="" ref="0x40b9caf0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="controlEngine_task" scoped="" ref="0x40b74228"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="transmitEngine_task" scoped="" ref="0x40b6b870"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bc0ea0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="FragmentPoolStorage" scoped="" ref="0x4101e878"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <from><interface-ref name="FragmentPool" scoped="" ref="0x40bc0310"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40bbd608"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <from><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bbde38"/></from>
      <to><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bc0ea0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x4102d0d8"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40c03010"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x4102d6b0"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40c035e8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="InputFramePool" scoped="" ref="0x4102dac8"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x41063de0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPool" scoped="" ref="0x41063de0"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40bc0310"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="514:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <from><interface-ref name="uartStreamSendDone" scoped="" ref="0x41065e18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <from><interface-ref name="inputEngine_task" scoped="" ref="0x41064270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bc0ea0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="FragmentPoolStorage" scoped="" ref="0x410993a8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40c6a6b0"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40d48e58"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40d48e58"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x41087648"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40d519f0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x410e7ce8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40c7d5a0"/></from>
      <to><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40c693d0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c7ebd0"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c699a8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40c81908"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40c68700"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40d491e8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AddressControlFieldCompressionOption" scoped="" ref="0x40c83708"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40d491e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="MaximumReceiveUnitOption" scoped="" ref="0x40c623f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40d491e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AsyncControlCharacterMapOption" scoped="" ref="0x40c61160"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40c7e518"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40d41480"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40d41480"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x410f9010"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40d48e58"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x40d47370"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureAck" scoped="" ref="0x40d47370"/></from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x41087b40"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x40d47868"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureNak" scoped="" ref="0x40d47868"/></from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x41085050"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x40d47d60"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureReject" scoped="" ref="0x40d47d60"/></from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x41085548"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x40d46330"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateRequest" scoped="" ref="0x40d46330"/></from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x41085a40"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40d46828"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40d46828"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x41084010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ProtocolReject" scoped="" ref="0x40c633c0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40c7d938"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40d519f0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40d49cf0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40d519f0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40e1fe18"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40d48e58"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40e1e330"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40d46828"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40e1f920"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40d48960"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40d48960"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x41087150"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40c61cb8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40c6abe8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40d418a8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40c6abe8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40d4aa88"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40c6abe8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e1f288"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40c6abe8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x4108fdb0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40d4aa88"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x41089568"/></from>
      <to><interface-ref name="PppProtocolOption" scoped="" ref="0x40d491e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x41088150"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40d49cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x410f9438"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40d418a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x410f9b88"/></from>
      <to><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpOptions" scoped="" ref="0x40e20740"/></from>
      <to><interface-ref name="LcpOptions" scoped="" ref="0x411219e0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41120548"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e1f288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x41120be0"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40e1f920"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x4111ec00"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40e1fe18"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x4111c170"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40e1e330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="RestartTimer" scoped="" ref="0x4111f290"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4111aa00"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4111aa00"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x40dee820"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="resumeAutomaton_task" scoped="" ref="0x4111cac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="restartTimerFired_task" scoped="" ref="0x4111c688"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x40dee820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40deab60"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40df76c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e24470"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e24470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4117e030"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x4117cd00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41143560"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41143560"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41176578"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4117daa8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4063f768"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41173010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405aac00"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41171010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405b4010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40e10e10"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a29608"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40e0d298"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a29a88"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <from><interface-ref name="streamFeeder_task" scoped="" ref="0x40e38b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e7c0e8"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x411ec988"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e52e08"/></from>
      <to><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e270e0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40e882c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="InterfaceIdentifierOption" scoped="" ref="0x40e55da8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40e53600"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40e87a40"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40e87a40"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x4118ce08"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e53be0"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e81998"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e81998"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x411c2d50"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40e85010"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40e85010"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x4118a330"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x40e85508"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureAck" scoped="" ref="0x40e85508"/></from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x4118a828"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x40e85a00"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureNak" scoped="" ref="0x40e85a00"/></from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x4118ad20"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x40e85ef8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureReject" scoped="" ref="0x40e85ef8"/></from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x41189250"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x40e84400"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateRequest" scoped="" ref="0x40e84400"/></from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x41189748"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40e848f8"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40e848f8"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x41189c40"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e88dd0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e7c0e8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40e7a508"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40e85010"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40e7aa00"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40e848f8"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40e7a010"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40e87a40"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e520e0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e7c0e8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e54ed8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e288b0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e81dc0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e288b0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e57b48"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e288b0"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e7b8c0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e288b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41190ba0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e57b48"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x4118d3a8"/></from>
      <to><interface-ref name="PppProtocolOption" scoped="" ref="0x40e882c8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x4118deb0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e88dd0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x411ff188"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e81dc0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x411ff8d8"/></from>
      <to><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpOptions" scoped="" ref="0x40e7cd70"/></from>
      <to><interface-ref name="LcpOptions" scoped="" ref="0x411eb660"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x411ea250"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e7b8c0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x411ea8e8"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40e7a010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x411e8890"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40e7a508"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x411e8d88"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40e7aa00"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="RestartTimer" scoped="" ref="0x411eaf00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x411e46c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x411e46c0"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x40dee820"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="resumeAutomaton_task" scoped="" ref="0x411e6788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="restartTimerFired_task" scoped="" ref="0x411e6350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e9a6e8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ea1370"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x40e9fe90"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x40e9a370"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <from><interface-ref name="sendBuffer_task" scoped="" ref="0x40e9b3d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x40eba610"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x40e9fe90"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="TestP" loc="2:TestP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <configuration/>
    </component>
    <component qname="BatterySwitchC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <configuration/>
    </component>
    <component qname="BatterySwitchP" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <module/>
    </component>
    <component qname="BatterySwitchC.TimerMilliC" loc="44(BatterySwitchC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningC.VoltageC" loc="1(BatteryWarningC.VoltageC):/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <configuration/>
    </component>
    <component qname="SingleVoltageC" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SingleVoltageC.AdcReadClientC" loc="21(SingleVoltageC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Andras Biro &#60;bbandi86@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SingleVoltageC.TimerMilliC" loc="44(SingleVoltageC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC" loc="89(VoltageArbiterP.FcfsArbiterC):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:UcminiVoltage.read">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC.Queue" loc="42(VoltageArbiterP.FcfsArbiterC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC.Arbiter" loc="52(VoltageArbiterP.FcfsArbiterC.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageArbiterP.MultiplexedReadC" loc="18(VoltageArbiterP.MultiplexedReadC):/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
        <short>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.</short>
        <long>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MultiplexedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningP" loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-16 21:45:58 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C.UartP" loc="46(Atm128Uart1C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="LedC" loc="41:/opt/tinyos-2.x/tos/system/LedC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedC.nc">
        <short>&#10; Provide access to the Led components available on this platform.</short>
        <long>&#10; Provide access to the Led components available on this platform.&#10; LEDs are made available positionally (e.g., Led0) and by color&#10; (e.g., Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedC" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedP" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PppDaemonC" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
        <short> A complete PPP daemon: the basic PPP infrastructure with an&#10; instance of Link Control Protocol already linked in.</short>
        <long> A complete PPP daemon: the basic PPP infrastructure with an&#10; instance of Link Control Protocol already linked in.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppDaemonP" loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <module/>
    </component>
    <component qname="PppC" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
        <short> Top-level configuration for a PPP instance, not including LCP support.</short>
        <long> Top-level configuration for a PPP instance, not including LCP support.&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppP" loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <module/>
    </component>
    <component qname="PppC.TransmitFramePoolC" loc="50(PppC.TransmitFramePoolC):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
        <short> Allocate a block of memory that can be partioned into individual&#10; fragments.</short>
        <long> Allocate a block of memory that can be partioned into individual&#10; fragments.&#10;&#10; There is no limit on the duration that a fragment may be held, nor&#10; any assumption on the order in which fragments are released.&#10; Requests will fail only if the entire pool is in use.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer.&#10; This must be a multiple of two, to preserve 16-bit alignment.  It's&#10; not checked in the code, so don't be a goober and ignore this&#10; requirement.&#10;&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FragmentPoolC"/>
        <arguments>
          <value cst="I:1282">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppC.TransmitFramePoolC.FragmentPoolStorageP" loc="41(PppC.TransmitFramePoolC.FragmentPoolStorageP):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
        <short> The module that reserves storage for the pool.</short>
        <long> The module that reserves storage for the pool.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FragmentPoolStorageP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FragmentPoolImplC" loc="39:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
        <short> Configuration that links together all the pools with the pool&#10; management implementation.</short>
        <long> Configuration that links together all the pools with the pool&#10; management implementation.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FragmentPoolImplC.FragmentPoolImplP" loc="39(FragmentPoolImplC.FragmentPoolImplP):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
        <short> Module to implement management of all fragment pools.</short>
        <long> Module to implement management of all fragment pools.&#10;&#10; @param NUM_POOLS The total number of pools allocated throughout the&#10; system.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FragmentPoolImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppC.HdlcFramingC" loc="78(PppC.HdlcFramingC):/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
        <short> Implementation of HDLC-like framing as defined in RFC1662 for PPP.</short>
        <long> Implementation of HDLC-like framing as defined in RFC1662 for PPP.&#10;&#10; This implementation is optimized to receive data as efficiently as&#10; possible.  It does this by maintaining a FragmentPool that allows&#10; multiple fragments to be collected in interrupt context while a&#10; previous frame is being processed in task context.  Extra bytes&#10; inserted for transparency during transmission are stripped while&#10; the data is being received, to &#10;&#10; @note When used in PPP, it is highly likely that the first frame&#10; received after a Configure-Ack that completes the LCP negotiation&#10; will fail with a BadCRC.  That Configure-Ack will install a new&#10; ACCM indicating that low-value octets are valid data, rather than&#10; being corrupted control characters.  The sender of the following&#10; frame will assume this ACCM is installed, and will neglect to add&#10; transparency escapes for those characters.  Because this component&#10; will have already begun processing the incoming data for the frame,&#10; but the task that interprets the Configure-Ack and installs the&#10; ACCM may not have completed, it is highly likely that some valid&#10; data characters will be dropped, resulting in a checksum failure&#10; and loss of the frame.  The peer will subsequently retransmit the&#10; frame, which will be correctly interpreted because by that point&#10; the ACCM will have been updated.  In other words, don't get your&#10; knickers all in a twist because the LEDs indicate a BadCRC HDLC&#10; error on startup.&#10;&#10; The implementation uses a local task to process transmission of&#10; messages.  Notification of frame transmission occurs in this&#10; context.&#10;&#10; @note You must release all frames signaled by receivedFrame() when&#10; you stop this component, including any frames signalled after you&#10; began the stop process.&#10;&#10; @param RX_BUFFER_SIZE Size, in octets, to use for the fragment pool&#10; used to hold incoming messages&#10;&#10; @param RX_FRAME_LIMIT Maximum number of fragments (individual&#10; messages) supported by the fragment pool&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcFramingC"/>
        <arguments>
          <value cst="I:1284">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppC.HdlcFramingC.HdlcFramingP" loc="38(PppC.HdlcFramingC.HdlcFramingP):/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
        <short> Implement HDLC framing.</short>
        <long> Implement HDLC framing.&#10;&#10; @param RX_FRAME_LIMIT The maximum number of frames that can be held&#10; waiting for the receiver to process them. *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcFramingP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppC.HdlcFramingC.InputFramePoolC" loc="50(PppC.HdlcFramingC.InputFramePoolC):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
        <short> Allocate a block of memory that can be partioned into individual&#10; fragments.</short>
        <long> Allocate a block of memory that can be partioned into individual&#10; fragments.&#10;&#10; There is no limit on the duration that a fragment may be held, nor&#10; any assumption on the order in which fragments are released.&#10; Requests will fail only if the entire pool is in use.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer.&#10; This must be a multiple of two, to preserve 16-bit alignment.  It's&#10; not checked in the code, so don't be a goober and ignore this&#10; requirement.&#10;&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FragmentPoolC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppC.HdlcFramingC.InputFramePoolC.FragmentPoolStorageP" loc="41(PppC.HdlcFramingC.InputFramePoolC.FragmentPoolStorageP):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
        <short> The module that reserves storage for the pool.</short>
        <long> The module that reserves storage for the pool.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FragmentPoolStorageP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC" loc="40:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
        <short> The component that supports the Link Control Protocol of RFC1661.</short>
        <long> The component that supports the Link Control Protocol of RFC1661.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolP" loc="36:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
        <short> Publish the protocol number to which this component should be&#10; wired in the PppC component *</short>
      </documentation>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.PppConfigureEngineC" loc="45(LinkControlProtocolC.PppConfigureEngineC):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.</short>
        <long> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.&#10;&#10; @param Protocol_ the 16-bit protocol value&#10;&#10; @param InhibitCompression If true, this protocol requires that&#10; optional frame compression be inhibited for its packets.&#10;&#10; @param NumOptions An upper bound on the number of options that will&#10; be linked into this engine.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppConfigureEngineC"/>
        <arguments>
          <value cst="I:49185">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP" loc="33(LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <documentation loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> RFC 1661 section 5.5.</short>
        <long> RFC 1661 section 5.5.  Data field contains a sequence of options. *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppConfigureEngineP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.CoordinatorC" loc="38(LinkControlProtocolC.CoordinatorC):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppProtocolCodeCoordinatorC"/>
        <arguments>
          <value cst="I:49185">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP" loc="40(LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppProtocolCodeCoordinatorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.LcpAutomatonC" loc="48(LinkControlProtocolC.LcpAutomatonC):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
        <short> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.</short>
        <long> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.&#10;&#10; Note that there is generally instance of this automaton for each&#10; control protocol: the LCP instance associated with the PppDaemonC&#10; configuration has one, but so will every other network protocol&#10; that leverages LCP's option negotiation sequence for configuration.&#10; Which is most of the interesting ones.&#10;&#10; @param Protocol The protocol type encoded in PPP packets&#10;&#10; @param InhibitCompression If TRUE, any options like PCOMP and&#10; ACCOMP that might result in non-default encodings are to be&#10; inhibited for this protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LcpAutomatonC"/>
        <arguments>
          <value cst="I:49185">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP" loc="34(LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <instance number="0">
        <component-ref qname="LcpAutomatonP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.LcpAutomatonC.MuxAlarmMilli32C" loc="38(LinkControlProtocolC.LcpAutomatonC.MuxAlarmMilli32C):/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
        <short> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.</short>
        <long> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MuxAlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_" loc="46:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
        <short> The base component used for multiplexing client alarms onto a&#10; single hardware alarm with precision TMilli and size uint32_t.</short>
        <long> The base component used for multiplexing client alarms onto a&#10; single hardware alarm with precision TMilli and size uint32_t.&#10;&#10; For debugging purposes, the DEBUG_MULTIPLEX_ALARM preprocessor&#10; simple will export an interface that allows inspection of the&#10; internal details of the multiplex structures.  When it is used, the&#10; underlying Alarm interface that is multiplexed is also published to&#10; allow more controlled testing using a controlled alarm&#10; implementation.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_.VirtualizeAlarmC" loc="46(MuxAlarmMilli32C_.VirtualizeAlarmC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being &#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C" loc="37(MuxAlarmMilli32C_.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C" loc="37(MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC" loc="51(MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="DefaultHdlcUartC" loc="37:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
        <short> Component that uses PlatformSerialC to provide an HdlcUart&#10; interface.</short>
        <long> Component that uses PlatformSerialC to provide an HdlcUart&#10; interface.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultHdlcUartP" loc="32:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <module/>
    </component>
    <component qname="PppIpv6C" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
        <short> TinyOS PPP Network Control Protocol for IPv6 per RFC5072.</short>
        <long> TinyOS PPP Network Control Protocol for IPv6 per RFC5072.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppIpv6P" loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/pppipv6.h">
        <short> Material supporting RFC5072 IPv6-over-PPP, without being bound to&#10; a particular TinyOS implementation of IP.</short>
        <long> Material supporting RFC5072 IPv6-over-PPP, without being bound to&#10; a particular TinyOS implementation of IP.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PppIpv6C.PppConfigureEngineC" loc="45(PppIpv6C.PppConfigureEngineC):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.</short>
        <long> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.&#10;&#10; @param Protocol_ the 16-bit protocol value&#10;&#10; @param InhibitCompression If true, this protocol requires that&#10; optional frame compression be inhibited for its packets.&#10;&#10; @param NumOptions An upper bound on the number of options that will&#10; be linked into this engine.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppConfigureEngineC"/>
        <arguments>
          <value cst="I:32855">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP" loc="33(PppIpv6C.PppConfigureEngineC.PppConfigureEngineP):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <documentation loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> RFC 1661 section 5.5.</short>
        <long> RFC 1661 section 5.5.  Data field contains a sequence of options. *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppConfigureEngineP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C.CoordinatorC" loc="38(PppIpv6C.CoordinatorC):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppProtocolCodeCoordinatorC"/>
        <arguments>
          <value cst="I:32855">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP" loc="40(PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppProtocolCodeCoordinatorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C.LcpAutomatonC" loc="48(PppIpv6C.LcpAutomatonC):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
        <short> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.</short>
        <long> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.&#10;&#10; Note that there is generally instance of this automaton for each&#10; control protocol: the LCP instance associated with the PppDaemonC&#10; configuration has one, but so will every other network protocol&#10; that leverages LCP's option negotiation sequence for configuration.&#10; Which is most of the interesting ones.&#10;&#10; @param Protocol The protocol type encoded in PPP packets&#10;&#10; @param InhibitCompression If TRUE, any options like PCOMP and&#10; ACCOMP that might result in non-default encodings are to be&#10; inhibited for this protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LcpAutomatonC"/>
        <arguments>
          <value cst="I:32855">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP" loc="34(PppIpv6C.LcpAutomatonC.LcpAutomatonP):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <instance number="1">
        <component-ref qname="LcpAutomatonP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C.LcpAutomatonC.MuxAlarmMilli32C" loc="38(PppIpv6C.LcpAutomatonC.MuxAlarmMilli32C):/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
        <short> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.</short>
        <long> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="MuxAlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="PppPrintfC" loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
        <short> Support printf(3) within applications that use PPP.</short>
        <long> Support printf(3) within applications that use PPP.&#10;&#10; printf is too useful as a debugging capability to be lost simply&#10; because the serial interface is shuttling packets back and forth.&#10; Wiring this protocol allows console output to be passed to the peer&#10; in a special protocol message, where it can be displayed.&#10;&#10; Applications that do this should use the following wiring:&#10;components PppPrintfC;&#10;PppC.PppProtocol[PppPrintfC.Protocol] -> PppPrintfC;&#10;PppPrintfC.Ppp -> PppC;&#10; where PppC is alternatively PppDaemonC.  Simply using this&#10; component without wiring in its protocol will work, in that the&#10; messages will be sent to the peer, but standard PPP implementations&#10; that do not recognize the TinyOS-specific PPP protocol will send a&#10; Protocol-Reject message, which the TinyOS PPP implementation will be&#10; unable to process.  Wiring in the protocol allows TinyOS PPP to&#10; disable it when the peer is unable to process the messages,&#10; avoiding log clutter.&#10;&#10; A variant PPP implementation that recognizes TinyOS packets can be&#10; obtained by reading the instructions in the patch file in&#10; ${TOSDIR}/lib/ppp/tos-pppd.patch.&#10;&#10; @note For cross-platform compatibility, this module uses the PutcharP&#10; component from ${TOSDIR}/lib/printf.  That directory must be in&#10; your component search path.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppPrintfP" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
        <short> Implement putchar() in a way that transfers the data in packets&#10; over PPP.</short>
        <long> Implement putchar() in a way that transfers the data in packets&#10; over PPP. *</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.x/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x4050d458" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4050d680" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4050d8a8" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.x/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40582ac0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40582ac0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40582ef0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40582ef0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4058f120" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x4058f328" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4061f758" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061f758"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4061fb88" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061fb88"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4061fd78" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4063a6d0" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4063a6d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4063ab30" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4063ab30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4063ad98" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4063ad98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40649230" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40649230"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40649498" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40649920" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40649920"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x4065b470" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x4065b470"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x4065b8d0" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x4065b8d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x4065bb38" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x4065bb38"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x4065a010" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x4065a010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x4065a278" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4066f358" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4066f358"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4068fee8" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4068fee8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x4068c0f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40710e38" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x4074a5a0" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x4074bca8" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407bf2f8" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407bf2f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407bf728" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407bf728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40798c80" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40798c80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4085f4e8" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x4085c6f0" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MultiplexedReadC" loc="18:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
        <short>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.</short>
        <long>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x4087a3d8" loc="18:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
          <component-ref qname="MultiplexedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x4087a3d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FragmentPoolC" loc="50:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
        <short> Allocate a block of memory that can be partioned into individual&#10; fragments.</short>
        <long> Allocate a block of memory that can be partioned into individual&#10; fragments.&#10;&#10; There is no limit on the duration that a fragment may be held, nor&#10; any assumption on the order in which fragments are released.&#10; Requests will fail only if the entire pool is in use.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer.&#10; This must be a multiple of two, to preserve 16-bit alignment.  It's&#10; not checked in the code, so don't be a goober and ignore this&#10; requirement.&#10;&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="POOL_SIZE_B" ref="0x40ba8bd0" loc="50:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
          <component-ref qname="FragmentPoolC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
        <constant name="FRAGMENT_COUNT" ref="0x40ba8e08" loc="51:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
          <component-ref qname="FragmentPoolC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FragmentPoolStorageP" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
        <short> The module that reserves storage for the pool.</short>
        <long> The module that reserves storage for the pool.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="POOL_ID" ref="0x40ba5918" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
          <component-ref qname="FragmentPoolStorageP"/>
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="fragment_pool_id_t" ref="0x40babd20"/></typename>
          </type-int>
        </constant>
        <constant name="POOL_SIZE_B" ref="0x40ba5b30" loc="42:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
          <component-ref qname="FragmentPoolStorageP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
        <constant name="FRAGMENT_COUNT" ref="0x40ba5d68" loc="43:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
          <component-ref qname="FragmentPoolStorageP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FragmentPoolImplP" loc="39:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
        <short> Module to implement management of all fragment pools.</short>
        <long> Module to implement management of all fragment pools.&#10;&#10; @param NUM_POOLS The total number of pools allocated throughout the&#10; system.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="NUM_POOLS" ref="0x40bbe350" loc="39:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
          <component-ref qname="FragmentPoolImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcFramingC" loc="78:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
        <short> Implementation of HDLC-like framing as defined in RFC1662 for PPP.</short>
        <long> Implementation of HDLC-like framing as defined in RFC1662 for PPP.&#10;&#10; This implementation is optimized to receive data as efficiently as&#10; possible.  It does this by maintaining a FragmentPool that allows&#10; multiple fragments to be collected in interrupt context while a&#10; previous frame is being processed in task context.  Extra bytes&#10; inserted for transparency during transmission are stripped while&#10; the data is being received, to &#10;&#10; @note When used in PPP, it is highly likely that the first frame&#10; received after a Configure-Ack that completes the LCP negotiation&#10; will fail with a BadCRC.  That Configure-Ack will install a new&#10; ACCM indicating that low-value octets are valid data, rather than&#10; being corrupted control characters.  The sender of the following&#10; frame will assume this ACCM is installed, and will neglect to add&#10; transparency escapes for those characters.  Because this component&#10; will have already begun processing the incoming data for the frame,&#10; but the task that interprets the Configure-Ack and installs the&#10; ACCM may not have completed, it is highly likely that some valid&#10; data characters will be dropped, resulting in a checksum failure&#10; and loss of the frame.  The peer will subsequently retransmit the&#10; frame, which will be correctly interpreted because by that point&#10; the ACCM will have been updated.  In other words, don't get your&#10; knickers all in a twist because the LEDs indicate a BadCRC HDLC&#10; error on startup.&#10;&#10; The implementation uses a local task to process transmission of&#10; messages.  Notification of frame transmission occurs in this&#10; context.&#10;&#10; @note You must release all frames signaled by receivedFrame() when&#10; you stop this component, including any frames signalled after you&#10; began the stop process.&#10;&#10; @param RX_BUFFER_SIZE Size, in octets, to use for the fragment pool&#10; used to hold incoming messages&#10;&#10; @param RX_FRAME_LIMIT Maximum number of fragments (individual&#10; messages) supported by the fragment pool&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="RX_BUFFER_SIZE" ref="0x40bc1b00" loc="78:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
          <component-ref qname="HdlcFramingC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
        <constant name="RX_FRAME_LIMIT" ref="0x40bc1d60" loc="79:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
          <component-ref qname="HdlcFramingC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HdlcFramingP" loc="38:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
        <short> Implement HDLC framing.</short>
        <long> Implement HDLC framing.&#10;&#10; @param RX_FRAME_LIMIT The maximum number of frames that can be held&#10; waiting for the receiver to process them. *</long>
      </documentation>
      <parameters>
        <constant name="RX_FRAME_LIMIT" ref="0x40c00cd0" loc="38:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
          <component-ref qname="HdlcFramingP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PppConfigureEngineC" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.</short>
        <long> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.&#10;&#10; @param Protocol_ the 16-bit protocol value&#10;&#10; @param InhibitCompression If true, this protocol requires that&#10; optional frame compression be inhibited for its packets.&#10;&#10; @param NumOptions An upper bound on the number of options that will&#10; be linked into this engine.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40cb6158" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
          <component-ref qname="PppConfigureEngineC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40cb63c8" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
          <component-ref qname="PppConfigureEngineC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
        <constant name="NumOptions" ref="0x40cb6600" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
          <component-ref qname="PppConfigureEngineC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PppConfigureEngineP" loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> RFC 1661 section 5.5.</short>
        <long> RFC 1661 section 5.5.  Data field contains a sequence of options. *</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40cd8c68" loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
          <component-ref qname="PppConfigureEngineP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40cd8ed8" loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
          <component-ref qname="PppConfigureEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
        <constant name="NumOptions" ref="0x40cd5158" loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
          <component-ref qname="PppConfigureEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PppProtocolCodeCoordinatorC" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d42468" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
          <component-ref qname="PppProtocolCodeCoordinatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PppProtocolCodeCoordinatorP" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d3d530" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
          <component-ref qname="PppProtocolCodeCoordinatorP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LcpAutomatonC" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
        <short> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.</short>
        <long> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.&#10;&#10; Note that there is generally instance of this automaton for each&#10; control protocol: the LCP instance associated with the PppDaemonC&#10; configuration has one, but so will every other network protocol&#10; that leverages LCP's option negotiation sequence for configuration.&#10; Which is most of the interesting ones.&#10;&#10; @param Protocol The protocol type encoded in PPP packets&#10;&#10; @param InhibitCompression If TRUE, any options like PCOMP and&#10; ACCOMP that might result in non-default encodings are to be&#10; inhibited for this protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d50010" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
          <component-ref qname="LcpAutomatonC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40d50280" loc="49:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
          <component-ref qname="LcpAutomatonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LcpAutomatonP" loc="34:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc" abstract="">
      <parameters>
        <constant name="Protocol" ref="0x40d78030" loc="34:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
          <component-ref qname="LcpAutomatonP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40d782a0" loc="35:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
          <component-ref qname="LcpAutomatonP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MuxAlarmMilli32C" loc="38:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
        <short> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.</short>
        <long> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being &#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40de8010" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40de8010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40de8440" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40de8440"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x40de8620" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Ipv6LcpAutomaton" ref="0x404919d0" loc="9:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ipv6LcpAutomaton" scoped="" ref="0x404919d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40491ba8"/>
        <function-ref name="down" scoped="" ref="0x40491c88"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40491d68"/>
        <function-ref name="open" scoped="" ref="0x40491e48"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40491f28"/>
        <function-ref name="signalEvent" scoped="" ref="0x4047e018"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x4047e0f8"/>
        <function-ref name="close" scoped="" ref="0x4047e1d8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x4047e2b8"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x4047e398"/>
        <function-ref name="up" scoped="" ref="0x4047e478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkDownLed" ref="0x40479120" loc="6:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkDownLed" scoped="" ref="0x40479120"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x404792f8"/>
        <function-ref name="on" scoped="" ref="0x404793d8"/>
        <function-ref name="off" scoped="" ref="0x404794b8"/>
        <function-ref name="set" scoped="" ref="0x40479598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40480188" loc="4:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40480188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40480360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LinkUpLed" ref="0x4047faa0" loc="5:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkUpLed" scoped="" ref="0x4047faa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x4047fc78"/>
        <function-ref name="on" scoped="" ref="0x4047fd58"/>
        <function-ref name="off" scoped="" ref="0x4047fe38"/>
        <function-ref name="set" scoped="" ref="0x4047ff18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppIpv6" ref="0x40498ec8" loc="10:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppIpv6" scoped="" ref="0x40498ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppIpv6"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x404860c0"/>
        <function-ref name="linkUp" scoped="" ref="0x404861a0"/>
        <function-ref name="receive" scoped="" ref="0x40486280"/>
        <function-ref name="localIid" scoped="" ref="0x40486360"/>
        <function-ref name="remoteIid" scoped="" ref="0x40486440"/>
        <function-ref name="linkIsUp" scoped="" ref="0x40486520"/>
        <function-ref name="linkDown" scoped="" ref="0x40486600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketRxLed" ref="0x40479788" loc="7:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRxLed" scoped="" ref="0x40479788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40479960"/>
        <function-ref name="on" scoped="" ref="0x40479a40"/>
        <function-ref name="off" scoped="" ref="0x40479b20"/>
        <function-ref name="set" scoped="" ref="0x40479c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x4047ceb8" loc="8:TestP.nc">
      <component-ref qname="TestP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x4047ceb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404780c0"/>
        <function-ref name="stopDone" scoped="" ref="0x404781a0"/>
        <function-ref name="start" scoped="" ref="0x40478280"/>
        <function-ref name="stop" scoped="" ref="0x40478360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404a48f8" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404a48f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a4ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40447c88" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40447c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40447e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a10f0" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a10f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a12c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404a8968" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404a8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404a8b40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404a8c20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404a8d00"/>
        <function-ref name="actualMicro" scoped="" ref="0x404a8de0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404a8ec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404a0108" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404a0108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a02e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatteryWarning" ref="0x404a5a00" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatteryWarning" scoped="" ref="0x404a5a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a6a48" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a6a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a6c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x404a5608" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x404a5608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a57e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404a5238" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404a5238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x404a6e38" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x404a6e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a5050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404adee0" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404adee0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ac0e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404ac6c0" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404ac6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ac898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404ac310" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404ac310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ac4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x404c8da0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x404c8da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404bde00" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404bde00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c8010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404c89d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404c89d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c8bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404c8260" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404c8260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c8438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404c8628" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404c8628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c8800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404c95b0" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404c95b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c9788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404c9960" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404c9960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404c9b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404c9c18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404c9cf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x404c9dd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404c9eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x404b6348" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x404b6348"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b6520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x404e60e0" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x404e60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e62b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x404ece20" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x404ece20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e3010"/>
        <function-ref name="isInput" scoped="" ref="0x404e30f0"/>
        <function-ref name="toggle" scoped="" ref="0x404e31d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404e32b0"/>
        <function-ref name="get" scoped="" ref="0x404e3390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e3470"/>
        <function-ref name="set" scoped="" ref="0x404e3550"/>
        <function-ref name="clr" scoped="" ref="0x404e3630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x404e6920" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x404e6920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e6af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404ea1d0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404ea1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ea3a8"/>
        <function-ref name="isInput" scoped="" ref="0x404ea488"/>
        <function-ref name="toggle" scoped="" ref="0x404ea568"/>
        <function-ref name="isOutput" scoped="" ref="0x404ea648"/>
        <function-ref name="get" scoped="" ref="0x404ea728"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ea808"/>
        <function-ref name="set" scoped="" ref="0x404ea8e8"/>
        <function-ref name="clr" scoped="" ref="0x404ea9c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x404eabd8" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x404eabd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eadb0"/>
        <function-ref name="isInput" scoped="" ref="0x404eae90"/>
        <function-ref name="toggle" scoped="" ref="0x404e9010"/>
        <function-ref name="isOutput" scoped="" ref="0x404e90f0"/>
        <function-ref name="get" scoped="" ref="0x404e91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e92b0"/>
        <function-ref name="set" scoped="" ref="0x404e9390"/>
        <function-ref name="clr" scoped="" ref="0x404e9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x404e9688" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x404e9688"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e9860"/>
        <function-ref name="isInput" scoped="" ref="0x404e9940"/>
        <function-ref name="toggle" scoped="" ref="0x404e9a20"/>
        <function-ref name="isOutput" scoped="" ref="0x404e9b00"/>
        <function-ref name="get" scoped="" ref="0x404e9be0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e9cc0"/>
        <function-ref name="set" scoped="" ref="0x404e9da0"/>
        <function-ref name="clr" scoped="" ref="0x404e9e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40513210" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40513210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405135e8"/>
        <function-ref name="isInput" scoped="" ref="0x405136c8"/>
        <function-ref name="toggle" scoped="" ref="0x405137a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40513888"/>
        <function-ref name="get" scoped="" ref="0x40513968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513a48"/>
        <function-ref name="set" scoped="" ref="0x40513b28"/>
        <function-ref name="clr" scoped="" ref="0x40513c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x404f9750" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x404f9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f9928"/>
        <function-ref name="isInput" scoped="" ref="0x404f9a08"/>
        <function-ref name="toggle" scoped="" ref="0x404f9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9bc8"/>
        <function-ref name="get" scoped="" ref="0x404f9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9d88"/>
        <function-ref name="set" scoped="" ref="0x404f9e68"/>
        <function-ref name="clr" scoped="" ref="0x40505010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40500ce8" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40500ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500ec0"/>
        <function-ref name="isInput" scoped="" ref="0x404ff010"/>
        <function-ref name="toggle" scoped="" ref="0x404ff0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff1d0"/>
        <function-ref name="get" scoped="" ref="0x404ff2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff390"/>
        <function-ref name="set" scoped="" ref="0x404ff470"/>
        <function-ref name="clr" scoped="" ref="0x404ff550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x40509ea8" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x40509ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405080c0"/>
        <function-ref name="isInput" scoped="" ref="0x405081a0"/>
        <function-ref name="toggle" scoped="" ref="0x40508280"/>
        <function-ref name="isOutput" scoped="" ref="0x40508360"/>
        <function-ref name="get" scoped="" ref="0x40508440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508520"/>
        <function-ref name="set" scoped="" ref="0x40508600"/>
        <function-ref name="clr" scoped="" ref="0x405086e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40510750" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40510750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510928"/>
        <function-ref name="isInput" scoped="" ref="0x40510a08"/>
        <function-ref name="toggle" scoped="" ref="0x40510ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40510bc8"/>
        <function-ref name="get" scoped="" ref="0x40510ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510d88"/>
        <function-ref name="set" scoped="" ref="0x40510e68"/>
        <function-ref name="clr" scoped="" ref="0x4050f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404ee2f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404ee2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ee4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404ee5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404ee688"/>
        <function-ref name="isOutput" scoped="" ref="0x404ee768"/>
        <function-ref name="get" scoped="" ref="0x404ee848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ee928"/>
        <function-ref name="set" scoped="" ref="0x404eea08"/>
        <function-ref name="clr" scoped="" ref="0x404eeae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4050aa98" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4050aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ac70"/>
        <function-ref name="isInput" scoped="" ref="0x4050ad50"/>
        <function-ref name="toggle" scoped="" ref="0x4050ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x4050af10"/>
        <function-ref name="get" scoped="" ref="0x40509010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405090f0"/>
        <function-ref name="set" scoped="" ref="0x405091d0"/>
        <function-ref name="clr" scoped="" ref="0x405092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404ed750" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404ed750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ed928"/>
        <function-ref name="isInput" scoped="" ref="0x404eda08"/>
        <function-ref name="toggle" scoped="" ref="0x404edae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404edbc8"/>
        <function-ref name="get" scoped="" ref="0x404edca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404edd88"/>
        <function-ref name="set" scoped="" ref="0x404ede68"/>
        <function-ref name="clr" scoped="" ref="0x404f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404f3ea8" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404f3ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404fd1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404fd280"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd360"/>
        <function-ref name="get" scoped="" ref="0x404fd440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd520"/>
        <function-ref name="set" scoped="" ref="0x404fd600"/>
        <function-ref name="clr" scoped="" ref="0x404fd6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40504670" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40504670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504848"/>
        <function-ref name="isInput" scoped="" ref="0x40504928"/>
        <function-ref name="toggle" scoped="" ref="0x40504a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40504ae8"/>
        <function-ref name="get" scoped="" ref="0x40504bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504ca8"/>
        <function-ref name="set" scoped="" ref="0x40504d88"/>
        <function-ref name="clr" scoped="" ref="0x40504e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4050cc08" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4050cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4050cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b0f0"/>
        <function-ref name="get" scoped="" ref="0x4050b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b2b0"/>
        <function-ref name="set" scoped="" ref="0x4050b390"/>
        <function-ref name="clr" scoped="" ref="0x4050b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404f1010" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404f1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f11e8"/>
        <function-ref name="isInput" scoped="" ref="0x404f12c8"/>
        <function-ref name="toggle" scoped="" ref="0x404f13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1488"/>
        <function-ref name="get" scoped="" ref="0x404f1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f1648"/>
        <function-ref name="set" scoped="" ref="0x404f1728"/>
        <function-ref name="clr" scoped="" ref="0x404f1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404f7670" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7848"/>
        <function-ref name="isInput" scoped="" ref="0x404f7928"/>
        <function-ref name="toggle" scoped="" ref="0x404f7a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7ae8"/>
        <function-ref name="get" scoped="" ref="0x404f7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f7ca8"/>
        <function-ref name="set" scoped="" ref="0x404f7d88"/>
        <function-ref name="clr" scoped="" ref="0x404f7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x404fcce8" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x404fcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fcec0"/>
        <function-ref name="isInput" scoped="" ref="0x404fb010"/>
        <function-ref name="toggle" scoped="" ref="0x404fb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb1d0"/>
        <function-ref name="get" scoped="" ref="0x404fb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb390"/>
        <function-ref name="set" scoped="" ref="0x404fb470"/>
        <function-ref name="clr" scoped="" ref="0x404fb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x405024b0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x405024b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502688"/>
        <function-ref name="isInput" scoped="" ref="0x40502768"/>
        <function-ref name="toggle" scoped="" ref="0x40502848"/>
        <function-ref name="isOutput" scoped="" ref="0x40502928"/>
        <function-ref name="get" scoped="" ref="0x40502a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502ae8"/>
        <function-ref name="set" scoped="" ref="0x40502bc8"/>
        <function-ref name="clr" scoped="" ref="0x40502ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40507ce8" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40507ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40506010"/>
        <function-ref name="toggle" scoped="" ref="0x405060f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405061d0"/>
        <function-ref name="get" scoped="" ref="0x405062b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506390"/>
        <function-ref name="set" scoped="" ref="0x40506470"/>
        <function-ref name="clr" scoped="" ref="0x40506550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x405112f0" loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x405112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405114c8"/>
        <function-ref name="isInput" scoped="" ref="0x405115a8"/>
        <function-ref name="toggle" scoped="" ref="0x40511688"/>
        <function-ref name="isOutput" scoped="" ref="0x40511768"/>
        <function-ref name="get" scoped="" ref="0x40511848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511928"/>
        <function-ref name="set" scoped="" ref="0x40511a08"/>
        <function-ref name="clr" scoped="" ref="0x40511ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x405018e0" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x405018e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40501b98"/>
        <function-ref name="toggle" scoped="" ref="0x40501c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40501d58"/>
        <function-ref name="get" scoped="" ref="0x40501e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501f18"/>
        <function-ref name="set" scoped="" ref="0x40500010"/>
        <function-ref name="clr" scoped="" ref="0x405000f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404f0ea8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404f0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ef0c0"/>
        <function-ref name="isInput" scoped="" ref="0x404ef1a0"/>
        <function-ref name="toggle" scoped="" ref="0x404ef280"/>
        <function-ref name="isOutput" scoped="" ref="0x404ef360"/>
        <function-ref name="get" scoped="" ref="0x404ef440"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ef520"/>
        <function-ref name="set" scoped="" ref="0x404ef600"/>
        <function-ref name="clr" scoped="" ref="0x404ef6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404f5590" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404f5590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f5768"/>
        <function-ref name="isInput" scoped="" ref="0x404f5848"/>
        <function-ref name="toggle" scoped="" ref="0x404f5928"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5a08"/>
        <function-ref name="get" scoped="" ref="0x404f5ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f5bc8"/>
        <function-ref name="set" scoped="" ref="0x404f5ca8"/>
        <function-ref name="clr" scoped="" ref="0x404f5d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40513e08" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40513e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512010"/>
        <function-ref name="isInput" scoped="" ref="0x405120f0"/>
        <function-ref name="toggle" scoped="" ref="0x405121d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405122b0"/>
        <function-ref name="get" scoped="" ref="0x40512390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512470"/>
        <function-ref name="set" scoped="" ref="0x40512550"/>
        <function-ref name="clr" scoped="" ref="0x40512630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404f4a08" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404f4a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f4be0"/>
        <function-ref name="isInput" scoped="" ref="0x404f4cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404f4da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f4e80"/>
        <function-ref name="get" scoped="" ref="0x404f3010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f30f0"/>
        <function-ref name="set" scoped="" ref="0x404f31d0"/>
        <function-ref name="clr" scoped="" ref="0x404f32b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40505210" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40505210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405053e8"/>
        <function-ref name="isInput" scoped="" ref="0x405054c8"/>
        <function-ref name="toggle" scoped="" ref="0x405055a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40505688"/>
        <function-ref name="get" scoped="" ref="0x40505768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505848"/>
        <function-ref name="set" scoped="" ref="0x40505928"/>
        <function-ref name="clr" scoped="" ref="0x40505a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x404ff750" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x404ff750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff928"/>
        <function-ref name="isInput" scoped="" ref="0x404ffa08"/>
        <function-ref name="toggle" scoped="" ref="0x404ffae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ffbc8"/>
        <function-ref name="get" scoped="" ref="0x404ffca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ffd88"/>
        <function-ref name="set" scoped="" ref="0x404ffe68"/>
        <function-ref name="clr" scoped="" ref="0x4050c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x405088e0" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x405088e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40508b98"/>
        <function-ref name="toggle" scoped="" ref="0x40508c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40508d58"/>
        <function-ref name="get" scoped="" ref="0x40508e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508f18"/>
        <function-ref name="set" scoped="" ref="0x40507010"/>
        <function-ref name="clr" scoped="" ref="0x405070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404eece8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404eece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404eeec0"/>
        <function-ref name="isInput" scoped="" ref="0x404ed010"/>
        <function-ref name="toggle" scoped="" ref="0x404ed0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ed1d0"/>
        <function-ref name="get" scoped="" ref="0x404ed2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ed390"/>
        <function-ref name="set" scoped="" ref="0x404ed470"/>
        <function-ref name="clr" scoped="" ref="0x404ed550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404f8210" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404f8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f83e8"/>
        <function-ref name="isInput" scoped="" ref="0x404f84c8"/>
        <function-ref name="toggle" scoped="" ref="0x404f85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f8688"/>
        <function-ref name="get" scoped="" ref="0x404f8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f8848"/>
        <function-ref name="set" scoped="" ref="0x404f8928"/>
        <function-ref name="clr" scoped="" ref="0x404f8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404fd8e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404fd8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fdab8"/>
        <function-ref name="isInput" scoped="" ref="0x404fdb98"/>
        <function-ref name="toggle" scoped="" ref="0x404fdc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404fdd58"/>
        <function-ref name="get" scoped="" ref="0x404fde38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fdf18"/>
        <function-ref name="set" scoped="" ref="0x404fc010"/>
        <function-ref name="clr" scoped="" ref="0x404fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x405030a0" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x405030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503278"/>
        <function-ref name="isInput" scoped="" ref="0x40503358"/>
        <function-ref name="toggle" scoped="" ref="0x40503438"/>
        <function-ref name="isOutput" scoped="" ref="0x40503518"/>
        <function-ref name="get" scoped="" ref="0x405035f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405036d8"/>
        <function-ref name="set" scoped="" ref="0x405037b8"/>
        <function-ref name="clr" scoped="" ref="0x40503898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4050b670" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4050b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b848"/>
        <function-ref name="isInput" scoped="" ref="0x4050b928"/>
        <function-ref name="toggle" scoped="" ref="0x4050ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bae8"/>
        <function-ref name="get" scoped="" ref="0x4050bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bca8"/>
        <function-ref name="set" scoped="" ref="0x4050bd88"/>
        <function-ref name="clr" scoped="" ref="0x4050be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404f1a08" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404f1a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f1be0"/>
        <function-ref name="isInput" scoped="" ref="0x404f1cc0"/>
        <function-ref name="toggle" scoped="" ref="0x404f1da0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f1e80"/>
        <function-ref name="get" scoped="" ref="0x404f0010"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f00f0"/>
        <function-ref name="set" scoped="" ref="0x404f01d0"/>
        <function-ref name="clr" scoped="" ref="0x404f02b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x404f60a0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x404f60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f62f8"/>
        <function-ref name="isInput" scoped="" ref="0x404f63d8"/>
        <function-ref name="toggle" scoped="" ref="0x404f64b8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6598"/>
        <function-ref name="get" scoped="" ref="0x404f6678"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f6758"/>
        <function-ref name="set" scoped="" ref="0x404f6838"/>
        <function-ref name="clr" scoped="" ref="0x404f6918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x404fb750" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x404fb750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb928"/>
        <function-ref name="isInput" scoped="" ref="0x404fba08"/>
        <function-ref name="toggle" scoped="" ref="0x404fbae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbbc8"/>
        <function-ref name="get" scoped="" ref="0x404fbca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbd88"/>
        <function-ref name="set" scoped="" ref="0x404fbe68"/>
        <function-ref name="clr" scoped="" ref="0x404fa010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40506750" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40506750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506928"/>
        <function-ref name="isInput" scoped="" ref="0x40506a08"/>
        <function-ref name="toggle" scoped="" ref="0x40506ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40506bc8"/>
        <function-ref name="get" scoped="" ref="0x40506ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506d88"/>
        <function-ref name="set" scoped="" ref="0x40506e68"/>
        <function-ref name="clr" scoped="" ref="0x40513010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x404fac08" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x404fac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404faee0"/>
        <function-ref name="isInput" scoped="" ref="0x404f9010"/>
        <function-ref name="toggle" scoped="" ref="0x404f90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f91d0"/>
        <function-ref name="get" scoped="" ref="0x404f92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9390"/>
        <function-ref name="set" scoped="" ref="0x404f9470"/>
        <function-ref name="clr" scoped="" ref="0x404f9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x405002f0" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x405002f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405004c8"/>
        <function-ref name="isInput" scoped="" ref="0x405005a8"/>
        <function-ref name="toggle" scoped="" ref="0x40500688"/>
        <function-ref name="isOutput" scoped="" ref="0x40500768"/>
        <function-ref name="get" scoped="" ref="0x40500848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40500928"/>
        <function-ref name="set" scoped="" ref="0x40500a08"/>
        <function-ref name="clr" scoped="" ref="0x40500ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x405094b0" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x405094b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509688"/>
        <function-ref name="isInput" scoped="" ref="0x40509768"/>
        <function-ref name="toggle" scoped="" ref="0x40509848"/>
        <function-ref name="isOutput" scoped="" ref="0x40509928"/>
        <function-ref name="get" scoped="" ref="0x40509a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509ae8"/>
        <function-ref name="set" scoped="" ref="0x40509bc8"/>
        <function-ref name="clr" scoped="" ref="0x40509ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40511ce8" loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40511ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40510010"/>
        <function-ref name="toggle" scoped="" ref="0x405100f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405101d0"/>
        <function-ref name="get" scoped="" ref="0x405102b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510390"/>
        <function-ref name="set" scoped="" ref="0x40510470"/>
        <function-ref name="clr" scoped="" ref="0x40510550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404ef8e0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404ef8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404efab8"/>
        <function-ref name="isInput" scoped="" ref="0x404efb98"/>
        <function-ref name="toggle" scoped="" ref="0x404efc78"/>
        <function-ref name="isOutput" scoped="" ref="0x404efd58"/>
        <function-ref name="get" scoped="" ref="0x404efe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x404eff18"/>
        <function-ref name="set" scoped="" ref="0x404ee010"/>
        <function-ref name="clr" scoped="" ref="0x404ee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404f4010" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f41e8"/>
        <function-ref name="isInput" scoped="" ref="0x404f42c8"/>
        <function-ref name="toggle" scoped="" ref="0x404f43a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f4488"/>
        <function-ref name="get" scoped="" ref="0x404f4568"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f4648"/>
        <function-ref name="set" scoped="" ref="0x404f4728"/>
        <function-ref name="clr" scoped="" ref="0x404f4808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4050a0a0" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4050a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a278"/>
        <function-ref name="isInput" scoped="" ref="0x4050a358"/>
        <function-ref name="toggle" scoped="" ref="0x4050a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a518"/>
        <function-ref name="get" scoped="" ref="0x4050a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a6d8"/>
        <function-ref name="set" scoped="" ref="0x4050a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4050a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404f34b0" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404f34b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f3688"/>
        <function-ref name="isInput" scoped="" ref="0x404f3768"/>
        <function-ref name="toggle" scoped="" ref="0x404f3848"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3928"/>
        <function-ref name="get" scoped="" ref="0x404f3a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f3ae8"/>
        <function-ref name="set" scoped="" ref="0x404f3bc8"/>
        <function-ref name="clr" scoped="" ref="0x404f3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40505c08" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40505c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505de0"/>
        <function-ref name="isInput" scoped="" ref="0x40505ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40504010"/>
        <function-ref name="isOutput" scoped="" ref="0x405040f0"/>
        <function-ref name="get" scoped="" ref="0x405041d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405042b0"/>
        <function-ref name="set" scoped="" ref="0x40504390"/>
        <function-ref name="clr" scoped="" ref="0x40504470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4050c210" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4050c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c688"/>
        <function-ref name="get" scoped="" ref="0x4050c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c848"/>
        <function-ref name="set" scoped="" ref="0x4050c928"/>
        <function-ref name="clr" scoped="" ref="0x4050ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x405072f0" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x405072f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405074c8"/>
        <function-ref name="isInput" scoped="" ref="0x405075a8"/>
        <function-ref name="toggle" scoped="" ref="0x40507688"/>
        <function-ref name="isOutput" scoped="" ref="0x40507768"/>
        <function-ref name="get" scoped="" ref="0x40507848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507928"/>
        <function-ref name="set" scoped="" ref="0x40507a08"/>
        <function-ref name="clr" scoped="" ref="0x40507ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404e85f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404e85f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404e87c8"/>
        <function-ref name="isInput" scoped="" ref="0x404e88a8"/>
        <function-ref name="toggle" scoped="" ref="0x404e8988"/>
        <function-ref name="isOutput" scoped="" ref="0x404e8a68"/>
        <function-ref name="get" scoped="" ref="0x404e8b48"/>
        <function-ref name="makeOutput" scoped="" ref="0x404e8c28"/>
        <function-ref name="set" scoped="" ref="0x404e8d08"/>
        <function-ref name="clr" scoped="" ref="0x404e8de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404f8c08" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404f8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f8de0"/>
        <function-ref name="isInput" scoped="" ref="0x404f8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404f7010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f70f0"/>
        <function-ref name="get" scoped="" ref="0x404f71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f72b0"/>
        <function-ref name="set" scoped="" ref="0x404f7390"/>
        <function-ref name="clr" scoped="" ref="0x404f7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x404fc2f0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x404fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fc688"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc768"/>
        <function-ref name="get" scoped="" ref="0x404fc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc928"/>
        <function-ref name="set" scoped="" ref="0x404fca08"/>
        <function-ref name="clr" scoped="" ref="0x404fcae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40503a98" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40503a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503c70"/>
        <function-ref name="isInput" scoped="" ref="0x40503d50"/>
        <function-ref name="toggle" scoped="" ref="0x40503e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40503f10"/>
        <function-ref name="get" scoped="" ref="0x40502010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405020f0"/>
        <function-ref name="set" scoped="" ref="0x405021d0"/>
        <function-ref name="clr" scoped="" ref="0x405022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40512830" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40512830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512a08"/>
        <function-ref name="isInput" scoped="" ref="0x40512ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40512bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40512ca8"/>
        <function-ref name="get" scoped="" ref="0x40512d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512e68"/>
        <function-ref name="set" scoped="" ref="0x40511010"/>
        <function-ref name="clr" scoped="" ref="0x405110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40502ea8" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40502ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405010c0"/>
        <function-ref name="isInput" scoped="" ref="0x405011a0"/>
        <function-ref name="toggle" scoped="" ref="0x40501280"/>
        <function-ref name="isOutput" scoped="" ref="0x40501360"/>
        <function-ref name="get" scoped="" ref="0x40501440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501520"/>
        <function-ref name="set" scoped="" ref="0x40501600"/>
        <function-ref name="clr" scoped="" ref="0x405016e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x404fa210" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x404fa210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa3e8"/>
        <function-ref name="isInput" scoped="" ref="0x404fa4c8"/>
        <function-ref name="toggle" scoped="" ref="0x404fa5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa688"/>
        <function-ref name="get" scoped="" ref="0x404fa768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa848"/>
        <function-ref name="set" scoped="" ref="0x404fa928"/>
        <function-ref name="clr" scoped="" ref="0x404faa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404f04b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404f04b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f0688"/>
        <function-ref name="isInput" scoped="" ref="0x404f0768"/>
        <function-ref name="toggle" scoped="" ref="0x404f0848"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0928"/>
        <function-ref name="get" scoped="" ref="0x404f0a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0ae8"/>
        <function-ref name="set" scoped="" ref="0x404f0bc8"/>
        <function-ref name="clr" scoped="" ref="0x404f0ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x404f6b18" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x404f6b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6cf0"/>
        <function-ref name="isInput" scoped="" ref="0x404f6dd0"/>
        <function-ref name="toggle" scoped="" ref="0x404f6eb0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f5010"/>
        <function-ref name="get" scoped="" ref="0x404f50f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f51d0"/>
        <function-ref name="set" scoped="" ref="0x404f52b0"/>
        <function-ref name="clr" scoped="" ref="0x404f5390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4051a0a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4051a0a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a290"/>
        <function-ref name="isInput" scoped="" ref="0x4051a370"/>
        <function-ref name="toggle" scoped="" ref="0x4051a450"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a530"/>
        <function-ref name="get" scoped="" ref="0x4051a610"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a6f0"/>
        <function-ref name="set" scoped="" ref="0x4051a7d0"/>
        <function-ref name="clr" scoped="" ref="0x4051a8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40525920" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40525920"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40525b08"/>
        <function-ref name="isInput" scoped="" ref="0x40525be8"/>
        <function-ref name="toggle" scoped="" ref="0x40525cc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40525da8"/>
        <function-ref name="get" scoped="" ref="0x40525e88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524010"/>
        <function-ref name="set" scoped="" ref="0x405240f0"/>
        <function-ref name="clr" scoped="" ref="0x405241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4052f2b8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4052f2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052f4a0"/>
        <function-ref name="isInput" scoped="" ref="0x4052f580"/>
        <function-ref name="toggle" scoped="" ref="0x4052f660"/>
        <function-ref name="isOutput" scoped="" ref="0x4052f740"/>
        <function-ref name="get" scoped="" ref="0x4052f820"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052f900"/>
        <function-ref name="set" scoped="" ref="0x4052f9e0"/>
        <function-ref name="clr" scoped="" ref="0x4052fac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4052baf8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4052baf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052bce0"/>
        <function-ref name="isInput" scoped="" ref="0x4052bdc0"/>
        <function-ref name="toggle" scoped="" ref="0x4052bea0"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a010"/>
        <function-ref name="get" scoped="" ref="0x4052a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a1d0"/>
        <function-ref name="set" scoped="" ref="0x4052a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4052a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40535440" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40535440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40535628"/>
        <function-ref name="isInput" scoped="" ref="0x40535708"/>
        <function-ref name="toggle" scoped="" ref="0x405357e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405358c8"/>
        <function-ref name="get" scoped="" ref="0x405359a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40535a88"/>
        <function-ref name="set" scoped="" ref="0x40535b68"/>
        <function-ref name="clr" scoped="" ref="0x40535c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40531c68" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40531c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40531e50"/>
        <function-ref name="isInput" scoped="" ref="0x40530010"/>
        <function-ref name="toggle" scoped="" ref="0x405300f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405301d0"/>
        <function-ref name="get" scoped="" ref="0x405302b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40530390"/>
        <function-ref name="set" scoped="" ref="0x40530470"/>
        <function-ref name="clr" scoped="" ref="0x40530550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4053b5c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4053b5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053b7b0"/>
        <function-ref name="isInput" scoped="" ref="0x4053b890"/>
        <function-ref name="toggle" scoped="" ref="0x4053b970"/>
        <function-ref name="isOutput" scoped="" ref="0x4053ba50"/>
        <function-ref name="get" scoped="" ref="0x4053bb30"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053bc10"/>
        <function-ref name="set" scoped="" ref="0x4053bcf0"/>
        <function-ref name="clr" scoped="" ref="0x4053bdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40554438" loc="18:/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40554438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40554610"/>
        <function-ref name="isInput" scoped="" ref="0x405546f0"/>
        <function-ref name="toggle" scoped="" ref="0x405547d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405548b0"/>
        <function-ref name="get" scoped="" ref="0x40554990"/>
        <function-ref name="makeOutput" scoped="" ref="0x40554a70"/>
        <function-ref name="set" scoped="" ref="0x40554b50"/>
        <function-ref name="clr" scoped="" ref="0x40554c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a7cd0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <component-ref qname="BatteryWarningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a7cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a7ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x405628f0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <component-ref qname="BatterySwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405628f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40562f18"/>
        <function-ref name="readDone" scoped="" ref="0x40564188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x405600b0" loc="3:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405600b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405606d8"/>
        <function-ref name="readDone" scoped="" ref="0x40560930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40560c88" loc="4:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40560c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40560e60"/>
        <function-ref name="isInput" scoped="" ref="0x4056c010"/>
        <function-ref name="toggle" scoped="" ref="0x4056c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4056c1d0"/>
        <function-ref name="get" scoped="" ref="0x4056c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056c390"/>
        <function-ref name="set" scoped="" ref="0x4056c470"/>
        <function-ref name="clr" scoped="" ref="0x4056c550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40572210" loc="5:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40572210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4056bd58"/>
        <function-ref name="fired" scoped="" ref="0x4056b010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4056b718"/>
        <function-ref name="isOneShot" scoped="" ref="0x4056b4c0"/>
        <function-ref name="getdt" scoped="" ref="0x4056a268"/>
        <function-ref name="gett0" scoped="" ref="0x4056a010"/>
        <function-ref name="isRunning" scoped="" ref="0x4056b268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40572838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4056ba38"/>
        <function-ref name="startOneShot" scoped="" ref="0x40572ab8"/>
        <function-ref name="stop" scoped="" ref="0x40572d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40561330" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BatterySwitchC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40561330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4056ee38"/>
        <function-ref name="fired" scoped="" ref="0x4056e0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4056e7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x4056e5a0"/>
        <function-ref name="getdt" scoped="" ref="0x406c4310"/>
        <function-ref name="gett0" scoped="" ref="0x406c40b8"/>
        <function-ref name="isRunning" scoped="" ref="0x4056e348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40561958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4056eb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40561bd8"/>
        <function-ref name="stop" scoped="" ref="0x40561e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40579c38" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40579c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40574730"/>
        <function-ref name="fired" scoped="" ref="0x405769d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405740f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40576e80"/>
        <function-ref name="getdt" scoped="" ref="0x40574be0"/>
        <function-ref name="gett0" scoped="" ref="0x40574988"/>
        <function-ref name="isRunning" scoped="" ref="0x40576c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40576278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40574410"/>
        <function-ref name="startOneShot" scoped="" ref="0x405764f8"/>
        <function-ref name="stop" scoped="" ref="0x40576778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40580f20" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40580f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406733e8"/>
        <function-ref name="fired" scoped="" ref="0x4057fba0"/>
        <function-ref name="startAt" scoped="" ref="0x406730a8"/>
        <function-ref name="isRunning" scoped="" ref="0x4057fe18"/>
        <function-ref name="getAlarm" scoped="" ref="0x40673660"/>
        <function-ref name="start" scoped="" ref="0x4057f688"/>
        <function-ref name="stop" scoped="" ref="0x4057f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40ee01c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ee01c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40edf670"/>
        <function-ref name="fired" scoped="" ref="0x40ee0e28"/>
        <function-ref name="startAt" scoped="" ref="0x40edf330"/>
        <function-ref name="isRunning" scoped="" ref="0x40edf0b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40edf8e8"/>
        <function-ref name="start" scoped="" ref="0x40ee0910"/>
        <function-ref name="stop" scoped="" ref="0x40ee0bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40f04cb8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40f04cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40f02778"/>
        <function-ref name="test" scoped="" ref="0x40f03aa8"/>
        <function-ref name="fired" scoped="" ref="0x40f03830"/>
        <function-ref name="force" scoped="" ref="0x40f02c90"/>
        <function-ref name="get" scoped="" ref="0x40f03318"/>
        <function-ref name="reset" scoped="" ref="0x40f03d20"/>
        <function-ref name="getMode" scoped="" ref="0x40f02a18"/>
        <function-ref name="isOn" scoped="" ref="0x40f02500"/>
        <function-ref name="set" scoped="" ref="0x40f03590"/>
        <function-ref name="start" scoped="" ref="0x40f02010"/>
        <function-ref name="stop" scoped="" ref="0x40f02288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40f08270" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f08270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f07728"/>
        <function-ref name="fired" scoped="" ref="0x40f08ed8"/>
        <function-ref name="startAt" scoped="" ref="0x40f073e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40f07170"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f079a0"/>
        <function-ref name="start" scoped="" ref="0x40f089c0"/>
        <function-ref name="stop" scoped="" ref="0x40f08c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f09df8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f09df8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f08010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40f07c70" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40f07c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40f04778"/>
        <function-ref name="test" scoped="" ref="0x40f06a78"/>
        <function-ref name="get" scoped="" ref="0x40f062e8"/>
        <function-ref name="reset" scoped="" ref="0x40f06cf0"/>
        <function-ref name="getMode" scoped="" ref="0x40f04a18"/>
        <function-ref name="overflow" scoped="" ref="0x40f06800"/>
        <function-ref name="isOn" scoped="" ref="0x40f04500"/>
        <function-ref name="set" scoped="" ref="0x40f06560"/>
        <function-ref name="start" scoped="" ref="0x40f04010"/>
        <function-ref name="stop" scoped="" ref="0x40f04288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405aac00" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405aac00"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b5690"/>
        <function-ref name="test" scoped="" ref="0x405b7a08"/>
        <function-ref name="get" scoped="" ref="0x405b7278"/>
        <function-ref name="reset" scoped="" ref="0x405b7c80"/>
        <function-ref name="getMode" scoped="" ref="0x405b5930"/>
        <function-ref name="overflow" scoped="" ref="0x405b7790"/>
        <function-ref name="isOn" scoped="" ref="0x405b5418"/>
        <function-ref name="set" scoped="" ref="0x405b74f0"/>
        <function-ref name="start" scoped="" ref="0x405b7ef8"/>
        <function-ref name="stop" scoped="" ref="0x405b51a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405bb420" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405bb420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c0ee0"/>
        <function-ref name="test" scoped="" ref="0x405c0288"/>
        <function-ref name="fired" scoped="" ref="0x405c0010"/>
        <function-ref name="get" scoped="" ref="0x405bba68"/>
        <function-ref name="reset" scoped="" ref="0x405c0500"/>
        <function-ref name="getMode" scoped="" ref="0x405bf1c0"/>
        <function-ref name="isOn" scoped="" ref="0x405c0c68"/>
        <function-ref name="set" scoped="" ref="0x405bbce0"/>
        <function-ref name="start" scoped="" ref="0x405c0778"/>
        <function-ref name="stop" scoped="" ref="0x405c09f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405b4010" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405b4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405b3a68"/>
        <function-ref name="test" scoped="" ref="0x405b4de8"/>
        <function-ref name="fired" scoped="" ref="0x405b4b70"/>
        <function-ref name="force" scoped="" ref="0x405c1010"/>
        <function-ref name="get" scoped="" ref="0x405b4658"/>
        <function-ref name="reset" scoped="" ref="0x405b3088"/>
        <function-ref name="getMode" scoped="" ref="0x405b3d08"/>
        <function-ref name="isOn" scoped="" ref="0x405b37f0"/>
        <function-ref name="set" scoped="" ref="0x405b48d0"/>
        <function-ref name="start" scoped="" ref="0x405b3300"/>
        <function-ref name="stop" scoped="" ref="0x405b3578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x405c6e88" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x405c6e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c4908"/>
        <function-ref name="test" scoped="" ref="0x405c5c88"/>
        <function-ref name="fired" scoped="" ref="0x405c5a10"/>
        <function-ref name="force" scoped="" ref="0x405c4e20"/>
        <function-ref name="get" scoped="" ref="0x405c54f8"/>
        <function-ref name="reset" scoped="" ref="0x405c5f00"/>
        <function-ref name="getMode" scoped="" ref="0x405c4ba8"/>
        <function-ref name="isOn" scoped="" ref="0x405c4690"/>
        <function-ref name="set" scoped="" ref="0x405c5770"/>
        <function-ref name="start" scoped="" ref="0x405c41a0"/>
        <function-ref name="stop" scoped="" ref="0x405c4418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405caa90" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405caa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405cac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x405c2248" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x405c2248"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405d1ca0"/>
        <function-ref name="test" scoped="" ref="0x405d1048"/>
        <function-ref name="fired" scoped="" ref="0x405c2da8"/>
        <function-ref name="force" scoped="" ref="0x405d0288"/>
        <function-ref name="get" scoped="" ref="0x405c2890"/>
        <function-ref name="reset" scoped="" ref="0x405d12c0"/>
        <function-ref name="getMode" scoped="" ref="0x405d0010"/>
        <function-ref name="isOn" scoped="" ref="0x405d1a28"/>
        <function-ref name="set" scoped="" ref="0x405c2b08"/>
        <function-ref name="start" scoped="" ref="0x405d1538"/>
        <function-ref name="stop" scoped="" ref="0x405d17b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405bfd50" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405bfd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c67f0"/>
        <function-ref name="test" scoped="" ref="0x405c8b70"/>
        <function-ref name="get" scoped="" ref="0x405c83e0"/>
        <function-ref name="reset" scoped="" ref="0x405c8de8"/>
        <function-ref name="getMode" scoped="" ref="0x405c6a90"/>
        <function-ref name="overflow" scoped="" ref="0x405c88f8"/>
        <function-ref name="isOn" scoped="" ref="0x405c6578"/>
        <function-ref name="set" scoped="" ref="0x405c8658"/>
        <function-ref name="start" scoped="" ref="0x405c6088"/>
        <function-ref name="stop" scoped="" ref="0x405c6300"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405cae80" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405cae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405d9070"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405cdac0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405cdac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405ca538"/>
        <function-ref name="test" scoped="" ref="0x405cc8b0"/>
        <function-ref name="fired" scoped="" ref="0x405cc638"/>
        <function-ref name="get" scoped="" ref="0x405cc120"/>
        <function-ref name="reset" scoped="" ref="0x405ccb28"/>
        <function-ref name="getMode" scoped="" ref="0x405ca7d8"/>
        <function-ref name="isOn" scoped="" ref="0x405ca2c0"/>
        <function-ref name="set" scoped="" ref="0x405cc398"/>
        <function-ref name="start" scoped="" ref="0x405ccda0"/>
        <function-ref name="stop" scoped="" ref="0x405ca048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x405d0680" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x405d0680"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405cd1a0"/>
        <function-ref name="test" scoped="" ref="0x405ce528"/>
        <function-ref name="fired" scoped="" ref="0x405ce2b0"/>
        <function-ref name="force" scoped="" ref="0x405cd6b8"/>
        <function-ref name="get" scoped="" ref="0x405d0cc8"/>
        <function-ref name="reset" scoped="" ref="0x405ce7a0"/>
        <function-ref name="getMode" scoped="" ref="0x405cd440"/>
        <function-ref name="isOn" scoped="" ref="0x405cef08"/>
        <function-ref name="set" scoped="" ref="0x405ce010"/>
        <function-ref name="start" scoped="" ref="0x405cea18"/>
        <function-ref name="stop" scoped="" ref="0x405cec90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404336b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40433888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40440958" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40440958"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403503d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403503d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40440b30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40440c10"/>
        <function-ref name="led1On" scoped="" ref="0x40440cf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40440dd0"/>
        <function-ref name="led3Off" scoped="" ref="0x40440eb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40436010"/>
        <function-ref name="get" scoped="" ref="0x404360f0"/>
        <function-ref name="led1Off" scoped="" ref="0x404361d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x404362b0"/>
        <function-ref name="led3On" scoped="" ref="0x40436390"/>
        <function-ref name="led0On" scoped="" ref="0x40436470"/>
        <function-ref name="led2Off" scoped="" ref="0x40436550"/>
        <function-ref name="led2On" scoped="" ref="0x40436630"/>
        <function-ref name="set" scoped="" ref="0x40436790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4035a458" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40434148" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40434320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4062ed50" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062ed50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406204e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406209d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40620760"/>
        <function-ref name="overflow" scoped="" ref="0x40620c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4062c010" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4062c010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4062c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4062c448" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4062c448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4062cb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406320a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4062ce10"/>
        <function-ref name="overflow" scoped="" ref="0x40632320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x406325f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x406325f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4062f068"/>
        <function-ref name="test" scoped="" ref="0x406313e8"/>
        <function-ref name="get" scoped="" ref="0x40632c38"/>
        <function-ref name="reset" scoped="" ref="0x40631660"/>
        <function-ref name="getMode" scoped="" ref="0x4062f308"/>
        <function-ref name="overflow" scoped="" ref="0x40631170"/>
        <function-ref name="isOn" scoped="" ref="0x40631dc8"/>
        <function-ref name="set" scoped="" ref="0x40632eb0"/>
        <function-ref name="start" scoped="" ref="0x406318d8"/>
        <function-ref name="stop" scoped="" ref="0x40631b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4063f768" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4063f768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4063feb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4063b3c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4063b150"/>
        <function-ref name="overflow" scoped="" ref="0x4063b640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4064d380" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4064d380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4064dad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4064b010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4064dd48"/>
        <function-ref name="overflow" scoped="" ref="0x4064b288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406380c0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406380c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40638810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40638d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40638a88"/>
        <function-ref name="overflow" scoped="" ref="0x4064d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40edeb48" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40edeb48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f0f068"/>
        <function-ref name="fired" scoped="" ref="0x40edd820"/>
        <function-ref name="startAt" scoped="" ref="0x40eddd10"/>
        <function-ref name="isRunning" scoped="" ref="0x40edda98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f0f2e0"/>
        <function-ref name="start" scoped="" ref="0x40edd308"/>
        <function-ref name="stop" scoped="" ref="0x40edd5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40f0e870" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40f0e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f0dd58"/>
        <function-ref name="fired" scoped="" ref="0x40f0d528"/>
        <function-ref name="startAt" scoped="" ref="0x40f0da18"/>
        <function-ref name="isRunning" scoped="" ref="0x40f0d7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f0c010"/>
        <function-ref name="start" scoped="" ref="0x40f0d010"/>
        <function-ref name="stop" scoped="" ref="0x40f0d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f0f630" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f0f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f0fd80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f0e288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f0e010"/>
        <function-ref name="overflow" scoped="" ref="0x40f0e500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40690658" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40690658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40690830"/>
        <function-ref name="runTask" scoped="" ref="0x40690910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40693cc8" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40693cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40690190"/>
        <function-ref name="fired" scoped="" ref="0x40692950"/>
        <function-ref name="startAt" scoped="" ref="0x40692e40"/>
        <function-ref name="isRunning" scoped="" ref="0x40692bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40690408"/>
        <function-ref name="start" scoped="" ref="0x40692438"/>
        <function-ref name="stop" scoped="" ref="0x406926d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40671968" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40671968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406934c8"/>
        <function-ref name="fired" scoped="" ref="0x40670768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40670e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40670c18"/>
        <function-ref name="getdt" scoped="" ref="0x40693978"/>
        <function-ref name="gett0" scoped="" ref="0x40693720"/>
        <function-ref name="isRunning" scoped="" ref="0x406709c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40670010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406931a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40670290"/>
        <function-ref name="stop" scoped="" ref="0x40670510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406b32b8" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406b32b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406b3490"/>
        <function-ref name="runTask" scoped="" ref="0x406b3570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406b50c0" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406b50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b4ba8"/>
        <function-ref name="fired" scoped="" ref="0x406b5e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b4568"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b4310"/>
        <function-ref name="getdt" scoped="" ref="0x406b3068"/>
        <function-ref name="gett0" scoped="" ref="0x406b4e00"/>
        <function-ref name="isRunning" scoped="" ref="0x406b40b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406b56e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b4888"/>
        <function-ref name="startOneShot" scoped="" ref="0x406b5968"/>
        <function-ref name="stop" scoped="" ref="0x406b5be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4068ecc8" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4068ecc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406b78d8"/>
        <function-ref name="fired" scoped="" ref="0x4068dad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406b7278"/>
        <function-ref name="isOneShot" scoped="" ref="0x406b7010"/>
        <function-ref name="getdt" scoped="" ref="0x406b7da8"/>
        <function-ref name="gett0" scoped="" ref="0x406b7b40"/>
        <function-ref name="isRunning" scoped="" ref="0x4068dd40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4068d350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406b75a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4068d5e0"/>
        <function-ref name="stop" scoped="" ref="0x4068d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40565448" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <component-ref qname="BatteryWarningC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40565448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40565a70"/>
        <function-ref name="readDone" scoped="" ref="0x40565cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406c1ba0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <component-ref qname="VoltageArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406c1ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406be1e0"/>
        <function-ref name="readDone" scoped="" ref="0x406be438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406bede8" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <component-ref qname="SingleVoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406bede8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406ce448"/>
        <function-ref name="readDone" scoped="" ref="0x406ce6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406ccd20" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406ccd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406ccef8"/>
        <function-ref name="configure" scoped="" ref="0x40845010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406cdc98" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406cdc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406cc2e8"/>
        <function-ref name="readDone" scoped="" ref="0x406cc540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x406cc848" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406cc848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x406cca20"/>
        <function-ref name="getChannel" scoped="" ref="0x406ccb00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406ccbe0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406d7480" loc="19:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406d7480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406d7aa8"/>
        <function-ref name="readDone" scoped="" ref="0x406d7d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x406d3958" loc="20:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x406d3958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406d5010"/>
        <function-ref name="readDone" scoped="" ref="0x406d5288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x406d5940" loc="23:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406d5940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x406d5b18"/>
        <function-ref name="getChannel" scoped="" ref="0x406d5bf8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406d5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x406d41b8" loc="24:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406d41b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406d4390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406d4470"/>
        <function-ref name="request" scoped="" ref="0x406d4550"/>
        <function-ref name="granted" scoped="" ref="0x406d4630"/>
        <function-ref name="isOwner" scoped="" ref="0x406d4710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406df618" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406df618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406df7f0"/>
        <function-ref name="configure" scoped="" ref="0x406df8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x406eddb0" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406eddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406df010"/>
        <function-ref name="dataReady" scoped="" ref="0x406df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x406ddbd8" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406ddbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406dddb0"/>
        <function-ref name="cancel" scoped="" ref="0x406dde90"/>
        <function-ref name="dataReady" scoped="" ref="0x406e0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406e11b8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406e11b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406e1390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406e1470"/>
        <function-ref name="request" scoped="" ref="0x406e1550"/>
        <function-ref name="granted" scoped="" ref="0x406e1630"/>
        <function-ref name="isOwner" scoped="" ref="0x406e1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406eb2d8" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406eb2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406eb4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x406ea110" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406ea110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406ea2e8"/>
        <function-ref name="dataReady" scoped="" ref="0x406ea3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x406e8b58" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406e8b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406e8d30"/>
        <function-ref name="cancel" scoped="" ref="0x406e8e10"/>
        <function-ref name="dataReady" scoped="" ref="0x406e8ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x406f2dd8" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x406f2dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x406e9010"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x406e90f0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x406e91d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x406e92b0"/>
        <function-ref name="setChannel" scoped="" ref="0x406e9390"/>
        <function-ref name="enableAdc" scoped="" ref="0x406e9470"/>
        <function-ref name="setAdlar" scoped="" ref="0x406e9550"/>
        <function-ref name="enableInterruption" scoped="" ref="0x406e9630"/>
        <function-ref name="isComplete" scoped="" ref="0x406e9710"/>
        <function-ref name="cancel" scoped="" ref="0x406e97f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x406e98d0"/>
        <function-ref name="getRef" scoped="" ref="0x406e99b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x406e9a90"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x406e9bf0"/>
        <function-ref name="startConversion" scoped="" ref="0x406e9cd0"/>
        <function-ref name="isStarted" scoped="" ref="0x406e9db0"/>
        <function-ref name="getChannel" scoped="" ref="0x406e9e90"/>
        <function-ref name="setAdcsra" scoped="" ref="0x406e7010"/>
        <function-ref name="setRef" scoped="" ref="0x406e70f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x406e71d0"/>
        <function-ref name="setContinuous" scoped="" ref="0x406e72b0"/>
        <function-ref name="getValue" scoped="" ref="0x406e7390"/>
        <function-ref name="dataReady" scoped="" ref="0x406e7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x406e86c8" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406e86c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406e88a0"/>
        <function-ref name="stop" scoped="" ref="0x406e8980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406e7648" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406e7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406e7820"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406e7900"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406e79e0"/>
        <function-ref name="actualMicro" scoped="" ref="0x406e7ac0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406e7ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x406db588" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x406db588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x406db760"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x406db840"/>
        <function-ref name="setPrescaler" scoped="" ref="0x406db920"/>
        <function-ref name="isEnabled" scoped="" ref="0x406dba00"/>
        <function-ref name="setChannel" scoped="" ref="0x406dbae0"/>
        <function-ref name="enableAdc" scoped="" ref="0x406dbbc0"/>
        <function-ref name="setAdlar" scoped="" ref="0x406dbca0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x406dbd80"/>
        <function-ref name="isComplete" scoped="" ref="0x406dbe60"/>
        <function-ref name="cancel" scoped="" ref="0x40713010"/>
        <function-ref name="disableAdc" scoped="" ref="0x407130f0"/>
        <function-ref name="getRef" scoped="" ref="0x407131d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x407132b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40713410"/>
        <function-ref name="startConversion" scoped="" ref="0x407134f0"/>
        <function-ref name="isStarted" scoped="" ref="0x407135d0"/>
        <function-ref name="getChannel" scoped="" ref="0x407136b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40713790"/>
        <function-ref name="setRef" scoped="" ref="0x40713870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40713950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40713a30"/>
        <function-ref name="getValue" scoped="" ref="0x40713b10"/>
        <function-ref name="dataReady" scoped="" ref="0x40713bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4070fed8" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4070fed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4070e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40712658" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40712658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40712830"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x40712910"/>
        <function-ref name="setPrescaler" scoped="" ref="0x407129f0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40712ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x40712bb0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40712c90"/>
        <function-ref name="setAdlar" scoped="" ref="0x40712d70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40712e50"/>
        <function-ref name="isComplete" scoped="" ref="0x4070f010"/>
        <function-ref name="cancel" scoped="" ref="0x4070f0f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x4070f1d0"/>
        <function-ref name="getRef" scoped="" ref="0x4070f2b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4070f390"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4070f4f0"/>
        <function-ref name="startConversion" scoped="" ref="0x4070f5d0"/>
        <function-ref name="isStarted" scoped="" ref="0x4070f6b0"/>
        <function-ref name="getChannel" scoped="" ref="0x4070f790"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4070f870"/>
        <function-ref name="setRef" scoped="" ref="0x4070f950"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4070fa30"/>
        <function-ref name="setContinuous" scoped="" ref="0x4070fb10"/>
        <function-ref name="getValue" scoped="" ref="0x4070fbf0"/>
        <function-ref name="dataReady" scoped="" ref="0x4070fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4070e2a8" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4070e2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4070e480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4073fae0" loc="92:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4073fae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4073fcc8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4073fda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4077da50" loc="96:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4077da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4077dc38"/>
        <function-ref name="configure" scoped="" ref="0x4077dd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4073fee8" loc="93:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4073fee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4077d0e0"/>
        <function-ref name="requested" scoped="" ref="0x4077d1c0"/>
        <function-ref name="granted" scoped="" ref="0x4077d2a0"/>
        <function-ref name="isOwner" scoped="" ref="0x4077d380"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4077d460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4073f3a0" loc="91:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4073f3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4073f588"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4073f668"/>
        <function-ref name="request" scoped="" ref="0x4073f748"/>
        <function-ref name="granted" scoped="" ref="0x4073f828"/>
        <function-ref name="isOwner" scoped="" ref="0x4073f908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4077d5a0" loc="94:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4077d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4077d778"/>
        <function-ref name="userId" scoped="" ref="0x4077d858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f62758" loc="44:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f62758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f62930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40f62a90" loc="45:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40f62a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f62c68"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f62d48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f62e28"/>
        <function-ref name="dequeue" scoped="" ref="0x40f62f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f603a8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f603a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f60590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f60670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f5e338" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f5e338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f5e520"/>
        <function-ref name="configure" scoped="" ref="0x40f5e600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f5e760" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f5e760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f5e938"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f5ea18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f5eaf8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f5ebd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f607b0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f607b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f60988"/>
        <function-ref name="requested" scoped="" ref="0x40f60a68"/>
        <function-ref name="granted" scoped="" ref="0x40f60b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40f60c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f60d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f5ed18" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f5ed18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f5eef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f5d010"/>
        <function-ref name="led1On" scoped="" ref="0x40f5d0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f5d1d0"/>
        <function-ref name="led3Off" scoped="" ref="0x40f5d2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f5d390"/>
        <function-ref name="get" scoped="" ref="0x40f5d470"/>
        <function-ref name="led1Off" scoped="" ref="0x40f5d550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f5d630"/>
        <function-ref name="led3On" scoped="" ref="0x40f5d710"/>
        <function-ref name="led0On" scoped="" ref="0x40f5d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40f5d8d0"/>
        <function-ref name="led2On" scoped="" ref="0x40f5d9b0"/>
        <function-ref name="set" scoped="" ref="0x40f5db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f61bf0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f61bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f61dd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f61eb8"/>
        <function-ref name="request" scoped="" ref="0x40f60010"/>
        <function-ref name="granted" scoped="" ref="0x40f600f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f601d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f60e48" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f60e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f5e050"/>
        <function-ref name="userId" scoped="" ref="0x40f5e130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f5dc90" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f5dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f5de68"/>
        <function-ref name="runTask" scoped="" ref="0x40f5c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40791de8" loc="72:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40791de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40790010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40790150" loc="73:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40790150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40790328"/>
        <function-ref name="requested" scoped="" ref="0x40790408"/>
        <function-ref name="granted" scoped="" ref="0x407904e8"/>
        <function-ref name="isOwner" scoped="" ref="0x407905c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407906a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x407919f0" loc="70:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407919f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40791bc8"/>
        <function-ref name="stop" scoped="" ref="0x40791ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407907e8" loc="74:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407907e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407909c0"/>
        <function-ref name="userId" scoped="" ref="0x40790aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40f79bf0" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40f79bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40f79dc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40f79f08" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f79f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f770f0"/>
        <function-ref name="requested" scoped="" ref="0x40f771d0"/>
        <function-ref name="granted" scoped="" ref="0x40f772b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f77390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f77470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40f797f8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40f797f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f799d0"/>
        <function-ref name="stop" scoped="" ref="0x40f79ab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40f775b0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f775b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f77788"/>
        <function-ref name="userId" scoped="" ref="0x40f77868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40793088" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40793088"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407937d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407973d8" loc="48:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407973d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40797a00"/>
        <function-ref name="readDone" scoped="" ref="0x40797c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40795390" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40795390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407959d8"/>
        <function-ref name="readDone" scoped="" ref="0x40795c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x407948b8" loc="53:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407948b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40794a90"/>
        <function-ref name="getChannel" scoped="" ref="0x40794b70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40794c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40794040" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40794040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40794218"/>
        <function-ref name="cancel" scoped="" ref="0x407942f8"/>
        <function-ref name="dataReady" scoped="" ref="0x407943d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x407a0c70" loc="104:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x407a0c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407a0e48"/>
        <function-ref name="runTask" scoped="" ref="0x407a0f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40799e30" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40799e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407ab590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x407c15d8" loc="53:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x407c15d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407c1d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x407c00c0" loc="54:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407c00c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407c0810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c0d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c0a88"/>
        <function-ref name="overflow" scoped="" ref="0x407b7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407cb268" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407cb268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407cb9b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407cbea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407cbc30"/>
        <function-ref name="overflow" scoped="" ref="0x407ca150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407cd010" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407cd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407cd760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407cdc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407cd9d8"/>
        <function-ref name="overflow" scoped="" ref="0x407cdec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407cad88" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407cad88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407c74e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c79d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c7760"/>
        <function-ref name="overflow" scoped="" ref="0x407c7c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407c6ec0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407c6ec0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407c40c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407c4320" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407c4320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407c4a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c3010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c4ce8"/>
        <function-ref name="overflow" scoped="" ref="0x407c3288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407c3558" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407c3558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407d8010"/>
        <function-ref name="test" scoped="" ref="0x407c2350"/>
        <function-ref name="get" scoped="" ref="0x407c3ba0"/>
        <function-ref name="reset" scoped="" ref="0x407c25c8"/>
        <function-ref name="getMode" scoped="" ref="0x407d82b0"/>
        <function-ref name="overflow" scoped="" ref="0x407c20d8"/>
        <function-ref name="isOn" scoped="" ref="0x407c2d30"/>
        <function-ref name="set" scoped="" ref="0x407c3e18"/>
        <function-ref name="start" scoped="" ref="0x407c2840"/>
        <function-ref name="stop" scoped="" ref="0x407c2ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407cf010" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407cf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407e5a68"/>
        <function-ref name="test" scoped="" ref="0x407cfde8"/>
        <function-ref name="fired" scoped="" ref="0x407cfb70"/>
        <function-ref name="get" scoped="" ref="0x407cf658"/>
        <function-ref name="reset" scoped="" ref="0x407e5088"/>
        <function-ref name="getMode" scoped="" ref="0x407e5d08"/>
        <function-ref name="isOn" scoped="" ref="0x407e57f0"/>
        <function-ref name="set" scoped="" ref="0x407cf8d0"/>
        <function-ref name="start" scoped="" ref="0x407e5300"/>
        <function-ref name="stop" scoped="" ref="0x407e5578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407d7858" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407d7858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407d32c0"/>
        <function-ref name="test" scoped="" ref="0x407d4648"/>
        <function-ref name="get" scoped="" ref="0x407d7ea0"/>
        <function-ref name="reset" scoped="" ref="0x407d48c0"/>
        <function-ref name="getMode" scoped="" ref="0x407d3560"/>
        <function-ref name="overflow" scoped="" ref="0x407d43d0"/>
        <function-ref name="isOn" scoped="" ref="0x407d3048"/>
        <function-ref name="set" scoped="" ref="0x407d4130"/>
        <function-ref name="start" scoped="" ref="0x407d4b38"/>
        <function-ref name="stop" scoped="" ref="0x407d4db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407d3c28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407d3c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407d0698"/>
        <function-ref name="test" scoped="" ref="0x407d2a28"/>
        <function-ref name="fired" scoped="" ref="0x407d27b0"/>
        <function-ref name="force" scoped="" ref="0x407d0bb0"/>
        <function-ref name="get" scoped="" ref="0x407d2298"/>
        <function-ref name="reset" scoped="" ref="0x407d2ca0"/>
        <function-ref name="getMode" scoped="" ref="0x407d0938"/>
        <function-ref name="isOn" scoped="" ref="0x407d0420"/>
        <function-ref name="set" scoped="" ref="0x407d2510"/>
        <function-ref name="start" scoped="" ref="0x407d2f18"/>
        <function-ref name="stop" scoped="" ref="0x407d01a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x407df978" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x407df978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407dd418"/>
        <function-ref name="test" scoped="" ref="0x407de7a0"/>
        <function-ref name="fired" scoped="" ref="0x407de528"/>
        <function-ref name="force" scoped="" ref="0x407dd930"/>
        <function-ref name="get" scoped="" ref="0x407de010"/>
        <function-ref name="reset" scoped="" ref="0x407dea18"/>
        <function-ref name="getMode" scoped="" ref="0x407dd6b8"/>
        <function-ref name="isOn" scoped="" ref="0x407dd1a0"/>
        <function-ref name="set" scoped="" ref="0x407de288"/>
        <function-ref name="start" scoped="" ref="0x407dec90"/>
        <function-ref name="stop" scoped="" ref="0x407def08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407ee470" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407ee470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407edee0"/>
        <function-ref name="test" scoped="" ref="0x407ed288"/>
        <function-ref name="fired" scoped="" ref="0x407ed010"/>
        <function-ref name="get" scoped="" ref="0x407eeab8"/>
        <function-ref name="reset" scoped="" ref="0x407ed500"/>
        <function-ref name="getMode" scoped="" ref="0x407ec1c0"/>
        <function-ref name="isOn" scoped="" ref="0x407edc68"/>
        <function-ref name="set" scoped="" ref="0x407eed30"/>
        <function-ref name="start" scoped="" ref="0x407ed778"/>
        <function-ref name="stop" scoped="" ref="0x407ed9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407ec478" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407ec478"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407ec650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407ddd28" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407ddd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407da7b0"/>
        <function-ref name="test" scoped="" ref="0x407dcb20"/>
        <function-ref name="fired" scoped="" ref="0x407dc8a8"/>
        <function-ref name="force" scoped="" ref="0x407dacc8"/>
        <function-ref name="get" scoped="" ref="0x407dc390"/>
        <function-ref name="reset" scoped="" ref="0x407dcd98"/>
        <function-ref name="getMode" scoped="" ref="0x407daa50"/>
        <function-ref name="isOn" scoped="" ref="0x407da538"/>
        <function-ref name="set" scoped="" ref="0x407dc608"/>
        <function-ref name="start" scoped="" ref="0x407da048"/>
        <function-ref name="stop" scoped="" ref="0x407da2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407ec868" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407ec868"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407eca40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x407f1100" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x407f1100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407f0b50"/>
        <function-ref name="test" scoped="" ref="0x407f1ed8"/>
        <function-ref name="fired" scoped="" ref="0x407f1c60"/>
        <function-ref name="force" scoped="" ref="0x407ee088"/>
        <function-ref name="get" scoped="" ref="0x407f1748"/>
        <function-ref name="reset" scoped="" ref="0x407f0170"/>
        <function-ref name="getMode" scoped="" ref="0x407f0df0"/>
        <function-ref name="isOn" scoped="" ref="0x407f08d8"/>
        <function-ref name="set" scoped="" ref="0x407f19c0"/>
        <function-ref name="start" scoped="" ref="0x407f03e8"/>
        <function-ref name="stop" scoped="" ref="0x407f0660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407e4878" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407e4878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407df2e0"/>
        <function-ref name="test" scoped="" ref="0x407e1668"/>
        <function-ref name="get" scoped="" ref="0x407e4ec0"/>
        <function-ref name="reset" scoped="" ref="0x407e18e0"/>
        <function-ref name="getMode" scoped="" ref="0x407df580"/>
        <function-ref name="overflow" scoped="" ref="0x407e13f0"/>
        <function-ref name="isOn" scoped="" ref="0x407df068"/>
        <function-ref name="set" scoped="" ref="0x407e1150"/>
        <function-ref name="start" scoped="" ref="0x407e1b58"/>
        <function-ref name="stop" scoped="" ref="0x407e1dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407ac868" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407ac868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407acea0"/>
        <function-ref name="readDone" scoped="" ref="0x407c8130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x407c8590" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x407c8590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407c8bc8"/>
        <function-ref name="readDone" scoped="" ref="0x407c8e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x408481c0" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408481c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408483a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40848488"/>
        <function-ref name="request" scoped="" ref="0x40848568"/>
        <function-ref name="granted" scoped="" ref="0x40848648"/>
        <function-ref name="isOwner" scoped="" ref="0x40848728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcTask" ref="0x40855328" loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcTask" scoped="" ref="0x40855328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40855500"/>
        <function-ref name="runTask" scoped="" ref="0x408555e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40845a88" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40845a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40845c60"/>
        <function-ref name="getChannel" scoped="" ref="0x40845d40"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40845e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcRaw" ref="0x40841e70" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcRaw" scoped="" ref="0x40841e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408404b8"/>
        <function-ref name="readDone" scoped="" ref="0x40840710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureBridge" ref="0x40840b10" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureBridge" scoped="" ref="0x40840b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40840ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40840dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40840ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x4083f010"/>
        <function-ref name="get" scoped="" ref="0x4083f0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4083f1d0"/>
        <function-ref name="set" scoped="" ref="0x4083f2b0"/>
        <function-ref name="clr" scoped="" ref="0x4083f390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageMilliVolts" ref="0x40841180" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageMilliVolts" scoped="" ref="0x40841180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408417a8"/>
        <function-ref name="readDone" scoped="" ref="0x40841a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4083f5f8" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4083f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40857110"/>
        <function-ref name="fired" scoped="" ref="0x408583a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40858ab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40858858"/>
        <function-ref name="getdt" scoped="" ref="0x408575c0"/>
        <function-ref name="gett0" scoped="" ref="0x40857368"/>
        <function-ref name="isRunning" scoped="" ref="0x40858600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4083fc20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40858dd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4083fea0"/>
        <function-ref name="stop" scoped="" ref="0x40858150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40843da8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SingleVoltageC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40843da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408638a8"/>
        <function-ref name="fired" scoped="" ref="0x40865b38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40863268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40863010"/>
        <function-ref name="getdt" scoped="" ref="0x40863d58"/>
        <function-ref name="gett0" scoped="" ref="0x40863b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40865d90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408653e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40863588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40865660"/>
        <function-ref name="stop" scoped="" ref="0x408658e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x408601e8" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x408601e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x408603d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408604b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4087b208" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4087b208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4087b3f0"/>
        <function-ref name="configure" scoped="" ref="0x4087b4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x408605f0" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x408605f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408607c8"/>
        <function-ref name="requested" scoped="" ref="0x408608a8"/>
        <function-ref name="granted" scoped="" ref="0x40860988"/>
        <function-ref name="isOwner" scoped="" ref="0x40860a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40860b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40861a18" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40861a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40861c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40861ce0"/>
        <function-ref name="request" scoped="" ref="0x40861dc0"/>
        <function-ref name="granted" scoped="" ref="0x40861ea0"/>
        <function-ref name="isOwner" scoped="" ref="0x40860010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40860c88" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40860c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40860e60"/>
        <function-ref name="userId" scoped="" ref="0x4087b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f95c98" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f95c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f95e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f93010" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f93010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f931e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f932c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f933a8"/>
        <function-ref name="dequeue" scoped="" ref="0x40f93488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f918b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f918b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f91a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f91b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f908b0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f908b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f90a98"/>
        <function-ref name="configure" scoped="" ref="0x40f90b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f90cd8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f90cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f90eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f8f010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f8f0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f8f1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f91cb8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f91cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f91e90"/>
        <function-ref name="requested" scoped="" ref="0x40f90010"/>
        <function-ref name="granted" scoped="" ref="0x40f900f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f901d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f902b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f8f310" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f8f310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f8f4e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f8f5c8"/>
        <function-ref name="led1On" scoped="" ref="0x40f8f6a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f8f788"/>
        <function-ref name="led3Off" scoped="" ref="0x40f8f868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f8f948"/>
        <function-ref name="get" scoped="" ref="0x40f8fa28"/>
        <function-ref name="led1Off" scoped="" ref="0x40f8fb08"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f8fbe8"/>
        <function-ref name="led3On" scoped="" ref="0x40f8fcc8"/>
        <function-ref name="led0On" scoped="" ref="0x40f8fda8"/>
        <function-ref name="led2Off" scoped="" ref="0x40f8fe88"/>
        <function-ref name="led2On" scoped="" ref="0x40f8e010"/>
        <function-ref name="set" scoped="" ref="0x40f8e170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f91170" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f91170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f91358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f91438"/>
        <function-ref name="request" scoped="" ref="0x40f91518"/>
        <function-ref name="granted" scoped="" ref="0x40f915f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40f916d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f903f0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f903f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f905c8"/>
        <function-ref name="userId" scoped="" ref="0x40f906a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f8e2f0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f8e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f8e4c8"/>
        <function-ref name="runTask" scoped="" ref="0x40f8e5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x408794d8" loc="19:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x408794d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40879b10"/>
        <function-ref name="readDone" scoped="" ref="0x40879d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40887170" loc="21:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40887170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40887798"/>
        <function-ref name="readDone" scoped="" ref="0x408879f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40887d60" loc="22:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40887d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40886010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408860f0"/>
        <function-ref name="request" scoped="" ref="0x408861d0"/>
        <function-ref name="granted" scoped="" ref="0x408862b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40886390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x408864d0" loc="23:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408864d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408866a8"/>
        <function-ref name="userId" scoped="" ref="0x40886788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40880270" loc="12:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40880270"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x408809c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4089b6e0" loc="14:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4089b6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4089b8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x40882530" loc="10:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x40882530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40882b58"/>
        <function-ref name="readDone" scoped="" ref="0x40882db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x406c2818" loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x406c2818"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406c2e40"/>
        <function-ref name="readDone" scoped="" ref="0x408820b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40881118" loc="11:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40881118"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408812f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408813d0"/>
        <function-ref name="led1On" scoped="" ref="0x408814b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40881590"/>
        <function-ref name="led3Off" scoped="" ref="0x40881670"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40881750"/>
        <function-ref name="get" scoped="" ref="0x40881830"/>
        <function-ref name="led1Off" scoped="" ref="0x40881910"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408819f0"/>
        <function-ref name="led3On" scoped="" ref="0x40881ad0"/>
        <function-ref name="led0On" scoped="" ref="0x40881bb0"/>
        <function-ref name="led2Off" scoped="" ref="0x40881c90"/>
        <function-ref name="led2On" scoped="" ref="0x40881d70"/>
        <function-ref name="set" scoped="" ref="0x40881ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40880c78" loc="13:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40880c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40880e50"/>
        <function-ref name="isInput" scoped="" ref="0x4089b010"/>
        <function-ref name="toggle" scoped="" ref="0x4089b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4089b1d0"/>
        <function-ref name="get" scoped="" ref="0x4089b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089b390"/>
        <function-ref name="set" scoped="" ref="0x4089b470"/>
        <function-ref name="clr" scoped="" ref="0x4089b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x408849c0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408849c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40884b98"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40884c78"/>
        <function-ref name="led1On" scoped="" ref="0x40884d58"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40884e38"/>
        <function-ref name="led3Off" scoped="" ref="0x40884f18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4088e010"/>
        <function-ref name="get" scoped="" ref="0x4088e0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4088e1d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4088e2b0"/>
        <function-ref name="led3On" scoped="" ref="0x4088e390"/>
        <function-ref name="led0On" scoped="" ref="0x4088e470"/>
        <function-ref name="led2Off" scoped="" ref="0x4088e550"/>
        <function-ref name="led2On" scoped="" ref="0x4088e630"/>
        <function-ref name="set" scoped="" ref="0x4088e790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4088ee60" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4088ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a7050"/>
        <function-ref name="isInput" scoped="" ref="0x408a7130"/>
        <function-ref name="toggle" scoped="" ref="0x408a7210"/>
        <function-ref name="isOutput" scoped="" ref="0x408a72f0"/>
        <function-ref name="get" scoped="" ref="0x408a73d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a74b0"/>
        <function-ref name="set" scoped="" ref="0x408a7590"/>
        <function-ref name="clr" scoped="" ref="0x408a7670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x408a6cc8" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x408a6cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a6ea0"/>
        <function-ref name="isInput" scoped="" ref="0x408a5010"/>
        <function-ref name="toggle" scoped="" ref="0x408a50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408a51d0"/>
        <function-ref name="get" scoped="" ref="0x408a52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a5390"/>
        <function-ref name="set" scoped="" ref="0x408a5470"/>
        <function-ref name="clr" scoped="" ref="0x408a5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x408a7860" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x408a7860"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a7a38"/>
        <function-ref name="isInput" scoped="" ref="0x408a7b18"/>
        <function-ref name="toggle" scoped="" ref="0x408a7bf8"/>
        <function-ref name="isOutput" scoped="" ref="0x408a7cd8"/>
        <function-ref name="get" scoped="" ref="0x408a7db8"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a7e98"/>
        <function-ref name="set" scoped="" ref="0x408a6010"/>
        <function-ref name="clr" scoped="" ref="0x408a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x408a56f0" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408a56f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a58c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x408a62e0" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x408a62e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a64b8"/>
        <function-ref name="isInput" scoped="" ref="0x408a6598"/>
        <function-ref name="toggle" scoped="" ref="0x408a6678"/>
        <function-ref name="isOutput" scoped="" ref="0x408a6758"/>
        <function-ref name="get" scoped="" ref="0x408a6838"/>
        <function-ref name="makeOutput" scoped="" ref="0x408a6918"/>
        <function-ref name="set" scoped="" ref="0x408a69f8"/>
        <function-ref name="clr" scoped="" ref="0x408a6ad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x408a0c60" loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x408a0c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408a0e38"/>
        <function-ref name="isInput" scoped="" ref="0x408a0f18"/>
        <function-ref name="toggle" scoped="" ref="0x4089f010"/>
        <function-ref name="isOutput" scoped="" ref="0x4089f0f0"/>
        <function-ref name="get" scoped="" ref="0x4089f1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089f2b0"/>
        <function-ref name="set" scoped="" ref="0x4089f390"/>
        <function-ref name="clr" scoped="" ref="0x4089f470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x4089ea48" loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x4089ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089ec20"/>
        <function-ref name="isInput" scoped="" ref="0x4089ed00"/>
        <function-ref name="toggle" scoped="" ref="0x4089ede0"/>
        <function-ref name="isOutput" scoped="" ref="0x4089eec0"/>
        <function-ref name="get" scoped="" ref="0x4089d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089d0f0"/>
        <function-ref name="set" scoped="" ref="0x4089d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4089d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408a8850" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408a8850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a8a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4089f660" loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4089f660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089f838"/>
        <function-ref name="isInput" scoped="" ref="0x4089f918"/>
        <function-ref name="toggle" scoped="" ref="0x4089f9f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4089fad8"/>
        <function-ref name="get" scoped="" ref="0x4089fbb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089fc98"/>
        <function-ref name="set" scoped="" ref="0x4089fd78"/>
        <function-ref name="clr" scoped="" ref="0x4089fe58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x408a8b98" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408a8b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408a8d70"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408a8e50"/>
        <function-ref name="led1On" scoped="" ref="0x408a0010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408a00f0"/>
        <function-ref name="led3Off" scoped="" ref="0x408a01d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408a02b0"/>
        <function-ref name="get" scoped="" ref="0x408a0390"/>
        <function-ref name="led1Off" scoped="" ref="0x408a0470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408a0550"/>
        <function-ref name="led3On" scoped="" ref="0x408a0630"/>
        <function-ref name="led0On" scoped="" ref="0x408a0710"/>
        <function-ref name="led2Off" scoped="" ref="0x408a07f0"/>
        <function-ref name="led2On" scoped="" ref="0x408a08d0"/>
        <function-ref name="set" scoped="" ref="0x408a0a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4089e060" loc="52:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4089e060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4089e238"/>
        <function-ref name="isInput" scoped="" ref="0x4089e318"/>
        <function-ref name="toggle" scoped="" ref="0x4089e3f8"/>
        <function-ref name="isOutput" scoped="" ref="0x4089e4d8"/>
        <function-ref name="get" scoped="" ref="0x4089e5b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4089e698"/>
        <function-ref name="set" scoped="" ref="0x4089e778"/>
        <function-ref name="clr" scoped="" ref="0x4089e858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408be330" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408be330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408be508"/>
        <function-ref name="disable" scoped="" ref="0x408be5e8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408be6c8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408be7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x408be968" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x408be968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408beb40"/>
        <function-ref name="isInput" scoped="" ref="0x408bec20"/>
        <function-ref name="toggle" scoped="" ref="0x408bed00"/>
        <function-ref name="isOutput" scoped="" ref="0x408bede0"/>
        <function-ref name="get" scoped="" ref="0x408beec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408c1010"/>
        <function-ref name="set" scoped="" ref="0x408c10f0"/>
        <function-ref name="clr" scoped="" ref="0x408c11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408c1b98" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408c1b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408c1d70"/>
        <function-ref name="disable" scoped="" ref="0x408c1e50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408bc010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408bc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x408d0068" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408d0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408d0240"/>
        <function-ref name="fired" scoped="" ref="0x408d0320"/>
        <function-ref name="disable" scoped="" ref="0x408d0400"/>
        <function-ref name="isEnabled" scoped="" ref="0x408d04e0"/>
        <function-ref name="reset" scoped="" ref="0x408d05c0"/>
        <function-ref name="setMask" scoped="" ref="0x408d06a0"/>
        <function-ref name="enable" scoped="" ref="0x408d0780"/>
        <function-ref name="getPins" scoped="" ref="0x408d0860"/>
        <function-ref name="getMask" scoped="" ref="0x408d0940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x408b9ab0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408b9ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408b9c88"/>
        <function-ref name="fired" scoped="" ref="0x408b9d68"/>
        <function-ref name="disable" scoped="" ref="0x408b9e48"/>
        <function-ref name="isEnabled" scoped="" ref="0x408b9f28"/>
        <function-ref name="reset" scoped="" ref="0x408c6018"/>
        <function-ref name="setMask" scoped="" ref="0x408c60f8"/>
        <function-ref name="enable" scoped="" ref="0x408c61d8"/>
        <function-ref name="getPins" scoped="" ref="0x408c62b8"/>
        <function-ref name="getMask" scoped="" ref="0x408c6398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408c6590" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408c6590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408c6778"/>
        <function-ref name="disable" scoped="" ref="0x408c6858"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408c6938"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408c6a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x408e7b18" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e7b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408e7cf0"/>
        <function-ref name="stopDone" scoped="" ref="0x408e7dd0"/>
        <function-ref name="start" scoped="" ref="0x408e7eb0"/>
        <function-ref name="stop" scoped="" ref="0x408e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x408e2400" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x408e2400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408e25d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x408fc5e8" loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x408fc5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fc7c0"/>
        <function-ref name="runTask" scoped="" ref="0x408fc8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x408e2ef0" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x408e2ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fd0e0"/>
        <function-ref name="runTask" scoped="" ref="0x408fd1c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x408e4280" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x408e4280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408e4458"/>
        <function-ref name="disable" scoped="" ref="0x408e4538"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408e4618"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408e46f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x408e4940" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x408e4940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408e4b18"/>
        <function-ref name="isInput" scoped="" ref="0x408e4bf8"/>
        <function-ref name="toggle" scoped="" ref="0x408e4cd8"/>
        <function-ref name="isOutput" scoped="" ref="0x408e4db8"/>
        <function-ref name="get" scoped="" ref="0x408e4e98"/>
        <function-ref name="makeOutput" scoped="" ref="0x408e2010"/>
        <function-ref name="set" scoped="" ref="0x408e20f0"/>
        <function-ref name="clr" scoped="" ref="0x408e21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408f4ee8" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408f4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408f10e0"/>
        <function-ref name="stopDone" scoped="" ref="0x408f11c0"/>
        <function-ref name="start" scoped="" ref="0x408f12a0"/>
        <function-ref name="stop" scoped="" ref="0x408f1380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40911be0" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40911be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40911db8"/>
        <function-ref name="getPayload" scoped="" ref="0x40911e98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f0010"/>
        <function-ref name="cancel" scoped="" ref="0x408f00f0"/>
        <function-ref name="sendDone" scoped="" ref="0x408f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40926068" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40926068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40926240"/>
        <function-ref name="payloadLength" scoped="" ref="0x40926320"/>
        <function-ref name="getPayload" scoped="" ref="0x40926400"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409264e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409265c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090c100" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090c100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090c2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4090e548" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4090e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4090e720"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4090e800"/>
        <function-ref name="led1On" scoped="" ref="0x4090e8e0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4090e9c0"/>
        <function-ref name="led3Off" scoped="" ref="0x4090eaa0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4090eb80"/>
        <function-ref name="get" scoped="" ref="0x4090ec60"/>
        <function-ref name="led1Off" scoped="" ref="0x4090ed40"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4090ee20"/>
        <function-ref name="led3On" scoped="" ref="0x4090ef00"/>
        <function-ref name="led0On" scoped="" ref="0x4091c010"/>
        <function-ref name="led2Off" scoped="" ref="0x4091c0f0"/>
        <function-ref name="led2On" scoped="" ref="0x4091c1d0"/>
        <function-ref name="set" scoped="" ref="0x4091c330"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4090e010" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4090e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4090e1e8"/>
        <function-ref name="noAck" scoped="" ref="0x4090e2c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4090e3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4091fdf8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4091fdf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40910010"/>
        <function-ref name="source" scoped="" ref="0x409100f0"/>
        <function-ref name="address" scoped="" ref="0x409101d0"/>
        <function-ref name="destination" scoped="" ref="0x409102b0"/>
        <function-ref name="setSource" scoped="" ref="0x40910390"/>
        <function-ref name="setDestination" scoped="" ref="0x40910470"/>
        <function-ref name="type" scoped="" ref="0x40910550"/>
        <function-ref name="setType" scoped="" ref="0x40910630"/>
        <function-ref name="isForMe" scoped="" ref="0x40910710"/>
        <function-ref name="setGroup" scoped="" ref="0x409107f0"/>
        <function-ref name="localGroup" scoped="" ref="0x409108d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4095aed0" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4095aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409580c0"/>
        <function-ref name="getPayload" scoped="" ref="0x409581a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40958280"/>
        <function-ref name="cancel" scoped="" ref="0x40958360"/>
        <function-ref name="sendDone" scoped="" ref="0x40958440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409585a0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409585a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40958778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40936be8" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40936be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40936dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40936eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40935010"/>
        <function-ref name="cancel" scoped="" ref="0x409350f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4095a310" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4095a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4095a4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4095a5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4095a6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4095a788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4095a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409353a8" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409353a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40935590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4095a9a8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4095a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4095ab80"/>
        <function-ref name="noAck" scoped="" ref="0x4095ac60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4095ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x409356d0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x409356d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x409358a8"/>
        <function-ref name="source" scoped="" ref="0x40935988"/>
        <function-ref name="address" scoped="" ref="0x40935a68"/>
        <function-ref name="destination" scoped="" ref="0x40935b48"/>
        <function-ref name="setSource" scoped="" ref="0x40935c28"/>
        <function-ref name="setDestination" scoped="" ref="0x40935d08"/>
        <function-ref name="type" scoped="" ref="0x40935de8"/>
        <function-ref name="setType" scoped="" ref="0x40935ec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4095a010"/>
        <function-ref name="setGroup" scoped="" ref="0x4095a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4095a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40975d10" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40975d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40975ee8"/>
        <function-ref name="stopDone" scoped="" ref="0x40972010"/>
        <function-ref name="start" scoped="" ref="0x409720f0"/>
        <function-ref name="stop" scoped="" ref="0x409721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40972c20" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40972c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x408efde8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40972df8"/>
        <function-ref name="getPayload" scoped="" ref="0x40972ed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40971010"/>
        <function-ref name="cancel" scoped="" ref="0x409710f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409711d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40975978" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40975978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40975b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40972618" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40972618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x408efde8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409727f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4096d840" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4096d840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4096da18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4096daf8"/>
        <function-ref name="led1On" scoped="" ref="0x4096dbd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4096dcb8"/>
        <function-ref name="led3Off" scoped="" ref="0x4096dd98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4096de78"/>
        <function-ref name="get" scoped="" ref="0x40970010"/>
        <function-ref name="led1Off" scoped="" ref="0x409700f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409701d0"/>
        <function-ref name="led3On" scoped="" ref="0x409702b0"/>
        <function-ref name="led0On" scoped="" ref="0x40970390"/>
        <function-ref name="led2Off" scoped="" ref="0x40970470"/>
        <function-ref name="led2On" scoped="" ref="0x40970550"/>
        <function-ref name="set" scoped="" ref="0x409706b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x4096d338" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x4096d338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x408efde8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4096d510"/>
        <function-ref name="offset" scoped="" ref="0x4096d5f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4096d6d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409790f8" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409790f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409792d0"/>
        <function-ref name="stopDone" scoped="" ref="0x409793b0"/>
        <function-ref name="start" scoped="" ref="0x40979490"/>
        <function-ref name="stop" scoped="" ref="0x40979570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x409bc7a0" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x409bc7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409bc978"/>
        <function-ref name="runTask" scoped="" ref="0x409bca58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4098b548" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4098b548"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4098b720"/>
        <function-ref name="stop" scoped="" ref="0x4098b800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x4099ca18" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x4099ca18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4099cbf0"/>
        <function-ref name="runTask" scoped="" ref="0x4099ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4097ad48" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4097ad48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4097af20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40989518" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40989518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x409896f0"/>
        <function-ref name="flush" scoped="" ref="0x409897d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x409bd010" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x409bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409bd1e8"/>
        <function-ref name="runTask" scoped="" ref="0x409bd2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x4098ec18" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x4098ec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4098edf0"/>
        <function-ref name="resetSend" scoped="" ref="0x4098eed0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40977010"/>
        <function-ref name="resetReceive" scoped="" ref="0x409770f0"/>
        <function-ref name="putData" scoped="" ref="0x409771d0"/>
        <function-ref name="putDone" scoped="" ref="0x409772b0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40977390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40977500" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40977500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409776d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409777b8"/>
        <function-ref name="led1On" scoped="" ref="0x40977898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40977978"/>
        <function-ref name="led3Off" scoped="" ref="0x40977a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40977b38"/>
        <function-ref name="get" scoped="" ref="0x40977c18"/>
        <function-ref name="led1Off" scoped="" ref="0x40977cf8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40977dd8"/>
        <function-ref name="led3On" scoped="" ref="0x40977eb8"/>
        <function-ref name="led0On" scoped="" ref="0x40990010"/>
        <function-ref name="led2Off" scoped="" ref="0x409900f0"/>
        <function-ref name="led2On" scoped="" ref="0x409901d0"/>
        <function-ref name="set" scoped="" ref="0x40990330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x409ba428" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x409ba428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409ba600"/>
        <function-ref name="runTask" scoped="" ref="0x409ba6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x409947f8" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x409947f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x409949d0"/>
        <function-ref name="nextByte" scoped="" ref="0x40994ab0"/>
        <function-ref name="startSend" scoped="" ref="0x40994b90"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40994c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x40991948" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40991948"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40991b20"/>
        <function-ref name="byteReceived" scoped="" ref="0x40991c00"/>
        <function-ref name="endPacket" scoped="" ref="0x40991ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40a2ddb0" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40a2ddb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a2c010"/>
        <function-ref name="runTask" scoped="" ref="0x40a2c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a2f710" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a2f710"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x408efde8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a2f8f8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a2f9d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2fab8"/>
        <function-ref name="cancel" scoped="" ref="0x40a2fb98"/>
        <function-ref name="sendDone" scoped="" ref="0x40a2fc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40a2c270" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40a2c270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a2c448"/>
        <function-ref name="runTask" scoped="" ref="0x40a2c528"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a2f350" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a2f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x408efde8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a2f538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40a2fea0" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40a2fea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x408efde8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40a2e0c0"/>
        <function-ref name="offset" scoped="" ref="0x40a2e1a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40a2e280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a2ee50" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a2ee50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a2d050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a2d130"/>
        <function-ref name="led1On" scoped="" ref="0x40a2d210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a2d2f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a2d3d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a2d4b0"/>
        <function-ref name="get" scoped="" ref="0x40a2d590"/>
        <function-ref name="led1Off" scoped="" ref="0x40a2d670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a2d750"/>
        <function-ref name="led3On" scoped="" ref="0x40a2d830"/>
        <function-ref name="led0On" scoped="" ref="0x40a2d910"/>
        <function-ref name="led2Off" scoped="" ref="0x40a2d9f0"/>
        <function-ref name="led2On" scoped="" ref="0x40a2dad0"/>
        <function-ref name="set" scoped="" ref="0x40a2dc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40a2e898" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40a2e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40a2ea70"/>
        <function-ref name="nextByte" scoped="" ref="0x40a2eb50"/>
        <function-ref name="startSend" scoped="" ref="0x40a2ec30"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40a2ed10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40a2e3c0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40a2e3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40a2e598"/>
        <function-ref name="byteReceived" scoped="" ref="0x40a2e678"/>
        <function-ref name="endPacket" scoped="" ref="0x40a2e758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40a429e8" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a429e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a42bc0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a42ca0"/>
        <function-ref name="receive" scoped="" ref="0x40a42d80"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a42e60"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a48010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a480f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a481d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40a2a718" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40a2a718"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40a2a8f0"/>
        <function-ref name="resetSend" scoped="" ref="0x40a2a9d0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40a2aab0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40a2ab90"/>
        <function-ref name="putData" scoped="" ref="0x40a2ac70"/>
        <function-ref name="putDone" scoped="" ref="0x40a2ad50"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40a2ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a48340" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a48340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a48518"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a485f8"/>
        <function-ref name="led1On" scoped="" ref="0x40a486d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a487b8"/>
        <function-ref name="led3Off" scoped="" ref="0x40a48898"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a48978"/>
        <function-ref name="get" scoped="" ref="0x40a48a58"/>
        <function-ref name="led1Off" scoped="" ref="0x40a48b38"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a48c18"/>
        <function-ref name="led3On" scoped="" ref="0x40a48cf8"/>
        <function-ref name="led0On" scoped="" ref="0x40a48dd8"/>
        <function-ref name="led2Off" scoped="" ref="0x40a48eb8"/>
        <function-ref name="led2On" scoped="" ref="0x40a47010"/>
        <function-ref name="set" scoped="" ref="0x40a47170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40a518f0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40a518f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a51ac8"/>
        <function-ref name="receive" scoped="" ref="0x40a51ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a29a88" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a29a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a29c60"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a29d40"/>
        <function-ref name="receive" scoped="" ref="0x40a29e20"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a29f00"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a55010"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a550f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a29608" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a29608"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a297e0"/>
        <function-ref name="stop" scoped="" ref="0x40a298c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40a537a0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40a537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a53978"/>
        <function-ref name="receive" scoped="" ref="0x40a53a58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a53c20" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a53c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a53df8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a53ed8"/>
        <function-ref name="receive" scoped="" ref="0x40a4e010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a4e0f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a4e1d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a4e2b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a4e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a4e6f0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a4e6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4ee40"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a4d350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a4d0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40a4d5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a53330" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a53330"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a53508"/>
        <function-ref name="stop" scoped="" ref="0x40a535e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40a4ce28" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40a4ce28"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4b050"/>
        <function-ref name="receive" scoped="" ref="0x40a4b130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40a4bb28" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40a4bb28"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a4bd00"/>
        <function-ref name="stop" scoped="" ref="0x40a4bde0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a4c6d8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a4c6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a4c8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a4b290" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a4b290"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4b468"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a4b548"/>
        <function-ref name="receive" scoped="" ref="0x40a4b628"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a4b708"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a4b7e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a4b8c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a4b9a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a890a0" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a890a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a897f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a89ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a89a68"/>
        <function-ref name="overflow" scoped="" ref="0x40a88010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40a8a448" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40a8a448"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a8a620"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a8a700"/>
        <function-ref name="rxDone" scoped="" ref="0x40a8a7e0"/>
        <function-ref name="txDone" scoped="" ref="0x40a8a8c0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a8a9a0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a8aa80"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a8ab60"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a8ac40"/>
        <function-ref name="tx" scoped="" ref="0x40a8ad20"/>
        <function-ref name="rx" scoped="" ref="0x40a8ae00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a4ca10" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a4ca10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a4cbe8"/>
        <function-ref name="stop" scoped="" ref="0x40a4ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40a8a010" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40a8a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a8a1e8"/>
        <function-ref name="stop" scoped="" ref="0x40a8a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40a99508" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40a99508"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a996e0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a997c0"/>
        <function-ref name="rxDone" scoped="" ref="0x40a998a0"/>
        <function-ref name="txDone" scoped="" ref="0x40a99980"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a99a60"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a99b40"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a99c20"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a99d00"/>
        <function-ref name="tx" scoped="" ref="0x40a99de0"/>
        <function-ref name="rx" scoped="" ref="0x40a99ec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40a98b80" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40a98b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a98d58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a98e38"/>
        <function-ref name="rxDone" scoped="" ref="0x40a98f18"/>
        <function-ref name="txDone" scoped="" ref="0x40a97010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a970f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a971d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a972b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a97390"/>
        <function-ref name="tx" scoped="" ref="0x40a97470"/>
        <function-ref name="rx" scoped="" ref="0x40a97550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40a99010" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40a99010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a991e8"/>
        <function-ref name="stop" scoped="" ref="0x40a992c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40a98178" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40a98178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a98350"/>
        <function-ref name="stop" scoped="" ref="0x40a98430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40a98688" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40a98688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a98860"/>
        <function-ref name="stop" scoped="" ref="0x40a98940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40a9aa80" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40a9aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a9ac58"/>
        <function-ref name="stop" scoped="" ref="0x40a9ad38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40a97d78" loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40a97d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a94010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40a94cd0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40a94cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a94ea8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a93010"/>
        <function-ref name="rxDone" scoped="" ref="0x40a930f0"/>
        <function-ref name="txDone" scoped="" ref="0x40a931d0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a932b0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a93390"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a93470"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a93550"/>
        <function-ref name="tx" scoped="" ref="0x40a93630"/>
        <function-ref name="rx" scoped="" ref="0x40a93710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40a914b8" loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40a914b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40a91690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40a93920" loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40a93920"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a93af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40a92880" loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40a92880"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a92a58"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a92b38"/>
        <function-ref name="rxDone" scoped="" ref="0x40a92c18"/>
        <function-ref name="txDone" scoped="" ref="0x40a92cf8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a92dd8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a92eb8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a91010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a910f0"/>
        <function-ref name="tx" scoped="" ref="0x40a911d0"/>
        <function-ref name="rx" scoped="" ref="0x40a912b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40a947b8" loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40a947b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a94990"/>
        <function-ref name="stop" scoped="" ref="0x40a94a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40a93d70" loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40a93d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a92010"/>
        <function-ref name="stop" scoped="" ref="0x40a920f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40a92368" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40a92368"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a92540"/>
        <function-ref name="stop" scoped="" ref="0x40a92620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40a91888" loc="126:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a91888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40a91a60"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40a91b40"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40a91c20"/>
        <function-ref name="actualMicro" scoped="" ref="0x40a91d00"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40a91de0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a90010" loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a90010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a901e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40a94288" loc="115:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40a94288"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a94460"/>
        <function-ref name="stop" scoped="" ref="0x40a94540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ac4170" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ac4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac48c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ac4db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ac4b38"/>
        <function-ref name="overflow" scoped="" ref="0x40ac3048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ae4ae8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ae4ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae3308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ae37f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ae3580"/>
        <function-ref name="overflow" scoped="" ref="0x40ae3a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ae67f0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ae67f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c0288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c0450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae4010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ae4500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ae4288"/>
        <function-ref name="overflow" scoped="" ref="0x40ae4778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ae2890" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ae2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40adf010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40adf500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40adf288"/>
        <function-ref name="overflow" scoped="" ref="0x40adf778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40adb078" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40adb078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40adb7c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40adbcb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40adba40"/>
        <function-ref name="overflow" scoped="" ref="0x40ad9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40adddd8" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40adddd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404bd060"/>
            <typename><typedef-ref name="TMcu" ref="0x404bd410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40adc570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40adca60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40adc7e8"/>
        <function-ref name="overflow" scoped="" ref="0x40adccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40ae0af8" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40ae0af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40ae0cd0"/>
        <function-ref name="offset" scoped="" ref="0x40ae0db0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40ae0e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40aef010" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40aef010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aef1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40aef2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aef3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40aef488"/>
        <function-ref name="sendDone" scoped="" ref="0x40aef568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40aef6f0" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40aef6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aef8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aefa38" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aefa38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aefc10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aefcf0"/>
        <function-ref name="led1On" scoped="" ref="0x40aefdd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aefeb0"/>
        <function-ref name="led3Off" scoped="" ref="0x40aee010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aee0f0"/>
        <function-ref name="get" scoped="" ref="0x40aee1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40aee2b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40aee390"/>
        <function-ref name="led3On" scoped="" ref="0x40aee470"/>
        <function-ref name="led0On" scoped="" ref="0x40aee550"/>
        <function-ref name="led2Off" scoped="" ref="0x40aee630"/>
        <function-ref name="led2On" scoped="" ref="0x40aee710"/>
        <function-ref name="set" scoped="" ref="0x40aee870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x40aec218" loc="54:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x40aec218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40aec3f0"/>
        <function-ref name="runTask" scoped="" ref="0x40aec4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x40af2a28" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40af2a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40af2c00"/>
        <function-ref name="offset" scoped="" ref="0x40af2ce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40af2dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40b02240" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40b02240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b02418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40b03408" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40b03408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40b035e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40b03d68" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40b03d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b02010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40b037a0" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40b037a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b03978"/>
        <function-ref name="taskLoop" scoped="" ref="0x40b03a58"/>
        <function-ref name="runNextTask" scoped="" ref="0x40b03b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403b2330" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403b2508"/>
        <function-ref name="runTask" scoped="" ref="0x403b25e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40357b58" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40357b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40357d30"/>
        <function-ref name="taskLoop" scoped="" ref="0x40357e10"/>
        <function-ref name="runNextTask" scoped="" ref="0x40357ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40420010" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40420010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404201e8"/>
        <function-ref name="runTask" scoped="" ref="0x404202c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40420c70" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40420c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40420e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40421738" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40421738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421910"/>
        <function-ref name="taskLoop" scoped="" ref="0x404219f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40421ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40450b50" loc="44:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40450b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40450d28"/>
        <function-ref name="on" scoped="" ref="0x40450e08"/>
        <function-ref name="off" scoped="" ref="0x40450ee8"/>
        <function-ref name="set" scoped="" ref="0x40afb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x40afbe10" loc="50:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x40afbe10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40afa010"/>
        <function-ref name="on" scoped="" ref="0x40afa0f0"/>
        <function-ref name="off" scoped="" ref="0x40afa1d0"/>
        <function-ref name="set" scoped="" ref="0x40afa2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Green" ref="0x40afa468" loc="68:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Green" scoped="" ref="0x40afa468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40afa640"/>
        <function-ref name="on" scoped="" ref="0x40afa720"/>
        <function-ref name="off" scoped="" ref="0x40afa800"/>
        <function-ref name="set" scoped="" ref="0x40afa8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Yellow" ref="0x40af90e0" loc="77:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Yellow" scoped="" ref="0x40af90e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40af92b8"/>
        <function-ref name="on" scoped="" ref="0x40af9398"/>
        <function-ref name="off" scoped="" ref="0x40af9478"/>
        <function-ref name="set" scoped="" ref="0x40af9558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x40b184f8" loc="85:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40b184f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40b186d0"/>
        <function-ref name="toggle" scoped="" ref="0x40b187b0"/>
        <function-ref name="get" scoped="" ref="0x40b18890"/>
        <function-ref name="on" scoped="" ref="0x40b18970"/>
        <function-ref name="set" scoped="" ref="0x40b18a50"/>
        <function-ref name="off" scoped="" ref="0x40b18b30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40afb1c0" loc="46:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40afb1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40afb398"/>
        <function-ref name="on" scoped="" ref="0x40afb478"/>
        <function-ref name="off" scoped="" ref="0x40afb558"/>
        <function-ref name="set" scoped="" ref="0x40afb638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Red" ref="0x40afaa80" loc="71:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Red" scoped="" ref="0x40afaa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40afac58"/>
        <function-ref name="on" scoped="" ref="0x40afad38"/>
        <function-ref name="off" scoped="" ref="0x40afae18"/>
        <function-ref name="set" scoped="" ref="0x40afaef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40afb7e8" loc="48:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40afb7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40afb9c0"/>
        <function-ref name="on" scoped="" ref="0x40afbaa0"/>
        <function-ref name="off" scoped="" ref="0x40afbb80"/>
        <function-ref name="set" scoped="" ref="0x40afbc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Orange" ref="0x40af9718" loc="80:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Orange" scoped="" ref="0x40af9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40af98f0"/>
        <function-ref name="on" scoped="" ref="0x40af99d0"/>
        <function-ref name="off" scoped="" ref="0x40af9ab0"/>
        <function-ref name="set" scoped="" ref="0x40af9b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x40b17288" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40b17288"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40b17460"/>
        <function-ref name="toggle" scoped="" ref="0x40b17540"/>
        <function-ref name="get" scoped="" ref="0x40b17620"/>
        <function-ref name="on" scoped="" ref="0x40b17700"/>
        <function-ref name="set" scoped="" ref="0x40b177e0"/>
        <function-ref name="off" scoped="" ref="0x40b178c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x40b17d28" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x40b17d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40b17f00"/>
        <function-ref name="on" scoped="" ref="0x40b16010"/>
        <function-ref name="off" scoped="" ref="0x40b160f0"/>
        <function-ref name="set" scoped="" ref="0x40b161d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x40b16a80" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40b16a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40b16c58"/>
        <function-ref name="toggle" scoped="" ref="0x40b16d38"/>
        <function-ref name="get" scoped="" ref="0x40b16e18"/>
        <function-ref name="on" scoped="" ref="0x40b16ef8"/>
        <function-ref name="set" scoped="" ref="0x40b13010"/>
        <function-ref name="off" scoped="" ref="0x40b130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x40b13558" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x40b13558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40b13730"/>
        <function-ref name="on" scoped="" ref="0x40b13810"/>
        <function-ref name="off" scoped="" ref="0x40b138f0"/>
        <function-ref name="set" scoped="" ref="0x40b139d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b13b80" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b13b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b13d58"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b13e38"/>
        <function-ref name="led1On" scoped="" ref="0x40b13f18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b12010"/>
        <function-ref name="led3Off" scoped="" ref="0x40b120f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b121d0"/>
        <function-ref name="get" scoped="" ref="0x40b122b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40b12390"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b12470"/>
        <function-ref name="led3On" scoped="" ref="0x40b12550"/>
        <function-ref name="led0On" scoped="" ref="0x40b12630"/>
        <function-ref name="led2Off" scoped="" ref="0x40b12710"/>
        <function-ref name="led2On" scoped="" ref="0x40b127f0"/>
        <function-ref name="set" scoped="" ref="0x40b12950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b234c8" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b234c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b236a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b23780"/>
        <function-ref name="start" scoped="" ref="0x40b23860"/>
        <function-ref name="stop" scoped="" ref="0x40b23940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocol" ref="0x40b24258" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40b24258"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40b24430"/>
        <function-ref name="process" scoped="" ref="0x40b24510"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40b245f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x40b43898" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40b43898"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b43a70"/>
        <function-ref name="receivedByte" scoped="" ref="0x40b43b50"/>
        <function-ref name="sendDone" scoped="" ref="0x40b43c30"/>
        <function-ref name="uartError" scoped="" ref="0x40b43d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x40b417a0" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b417a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x40b29288"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b29e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b3c0b8"/>
        <function-ref name="set" scoped="" ref="0x40b41dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ppp" ref="0x40b42010" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40b42010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40b421e8"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40b422c8"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40b423a8"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40b42488"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40b42568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppOptions" ref="0x40b3b978" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40b3b978"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40449438"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x40448010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b412d0"/>
        <function-ref name="set" scoped="" ref="0x40b41010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x40b23010" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40b23010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b231e8"/>
        <function-ref name="stop" scoped="" ref="0x40b232c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40b23b00" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40b23b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b23cd8"/>
        <function-ref name="down" scoped="" ref="0x40b23db8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40b23e98"/>
        <function-ref name="open" scoped="" ref="0x40b20010"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40b200f0"/>
        <function-ref name="signalEvent" scoped="" ref="0x40b201d0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40b202b0"/>
        <function-ref name="close" scoped="" ref="0x40b20390"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40b20470"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40b20550"/>
        <function-ref name="up" scoped="" ref="0x40b20630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppControl" ref="0x40b344f8" loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControl" scoped="" ref="0x40b344f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b346d0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b347b0"/>
        <function-ref name="start" scoped="" ref="0x40b34890"/>
        <function-ref name="stop" scoped="" ref="0x40b34970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b333d0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b333d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b335a8"/>
        <function-ref name="stopDone" scoped="" ref="0x40b33688"/>
        <function-ref name="start" scoped="" ref="0x40b33768"/>
        <function-ref name="stop" scoped="" ref="0x40b33848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProtocolReject" ref="0x40b56d98" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40b56d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40b33010"/>
        <function-ref name="invoke" scoped="" ref="0x40b330f0"/>
        <function-ref name="process" scoped="" ref="0x40b331d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolReject" ref="0x40b54a20" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolReject" scoped="" ref="0x40b54a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolReject"/>
      </instance>
      <interface-functions>
        <function-ref name="process" scoped="" ref="0x40b54bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40b35778" loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40b35778"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b35950"/>
        <function-ref name="down" scoped="" ref="0x40b35a30"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40b35b10"/>
        <function-ref name="open" scoped="" ref="0x40b35bf0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40b35cd0"/>
        <function-ref name="signalEvent" scoped="" ref="0x40b35db0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40b35e90"/>
        <function-ref name="close" scoped="" ref="0x40b34010"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40b340f0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40b341d0"/>
        <function-ref name="up" scoped="" ref="0x40b342b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b454c8" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b454c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b456a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b45780"/>
        <function-ref name="start" scoped="" ref="0x40b45860"/>
        <function-ref name="stop" scoped="" ref="0x40b45940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppRejectedProtocol" ref="0x40b67270" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b67270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40b67448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocol" ref="0x40b46010" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40b46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40b461e8"/>
        <function-ref name="process" scoped="" ref="0x40b462c8"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40b463a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x40b46908" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40b46908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b46ae0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40b46bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b46ca0"/>
        <function-ref name="uartError" scoped="" ref="0x40b46d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolReject" ref="0x40b46598" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolReject" scoped="" ref="0x40b46598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolReject"/>
      </instance>
      <interface-functions>
        <function-ref name="process" scoped="" ref="0x40b46770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ppp" ref="0x40b45aa0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40b45aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40b45c78"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40b45d58"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40b45e38"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40b45f18"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40b44010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppOptions" ref="0x40b677a8" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40b677a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40449438"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x40448010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b680b8"/>
        <function-ref name="set" scoped="" ref="0x40b67dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x40b68588" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b68588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x40b29288"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b29e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b68e70"/>
        <function-ref name="set" scoped="" ref="0x40b68bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x40b45010" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40b45010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b451e8"/>
        <function-ref name="stop" scoped="" ref="0x40b452c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b62b00" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b62b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b62cd8"/>
        <function-ref name="stopDone" scoped="" ref="0x40b62db8"/>
        <function-ref name="start" scoped="" ref="0x40b62e98"/>
        <function-ref name="stop" scoped="" ref="0x40b57010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiLed" ref="0x40b622c8" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40b622c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40b624a0"/>
        <function-ref name="toggle" scoped="" ref="0x40b62580"/>
        <function-ref name="get" scoped="" ref="0x40b62660"/>
        <function-ref name="on" scoped="" ref="0x40b62740"/>
        <function-ref name="set" scoped="" ref="0x40b62820"/>
        <function-ref name="off" scoped="" ref="0x40b62900"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processError_task" ref="0x40b94010" loc="410:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processError_task" scoped="" ref="0x40b94010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b941e8"/>
        <function-ref name="runTask" scoped="" ref="0x40b942c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppRejectedProtocol" ref="0x40b7c5f0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b7c5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40b7c7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitFramePool" ref="0x40b58278" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitFramePool" scoped="" ref="0x40b58278"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b58450"/>
        <function-ref name="slotCount" scoped="" ref="0x40b58530"/>
        <function-ref name="available" scoped="" ref="0x40b58610"/>
        <function-ref name="request" scoped="" ref="0x40b586f0"/>
        <function-ref name="poolSize" scoped="" ref="0x40b587d0"/>
        <function-ref name="freeze" scoped="" ref="0x40b588b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocol" ref="0x40b58d90" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40b58d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40b63010"/>
        <function-ref name="process" scoped="" ref="0x40b630f0"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40b631d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processFrame_task" ref="0x40b9caf0" loc="354:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processFrame_task" scoped="" ref="0x40b9caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b9ccc8"/>
        <function-ref name="runTask" scoped="" ref="0x40b9cda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProtocolReject" ref="0x40b634a0" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40b634a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40b63678"/>
        <function-ref name="invoke" scoped="" ref="0x40b63758"/>
        <function-ref name="process" scoped="" ref="0x40b63838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="controlEngine_task" ref="0x40b74228" loc="93:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="controlEngine_task" scoped="" ref="0x40b74228"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b74400"/>
        <function-ref name="runTask" scoped="" ref="0x40b744e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolReject" ref="0x40b63a28" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolReject" scoped="" ref="0x40b63a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolReject"/>
      </instance>
      <interface-functions>
        <function-ref name="process" scoped="" ref="0x40b63c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ppp" ref="0x40b57e88" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40b57e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40b7c070"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40b7c150"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40b7c230"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40b7c310"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40b7c3f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcControl" ref="0x40b63e38" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcControl" scoped="" ref="0x40b63e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b62050"/>
        <function-ref name="stop" scoped="" ref="0x40b62130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppOptions" ref="0x40b57370" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40b57370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40449438"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x40448010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b57c58"/>
        <function-ref name="set" scoped="" ref="0x40b57998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transmitEngine_task" ref="0x40b6b870" loc="174:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transmitEngine_task" scoped="" ref="0x40b6b870"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b6bac8"/>
        <function-ref name="runTask" scoped="" ref="0x40b6bba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcFraming" ref="0x40b5d248" loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFraming" scoped="" ref="0x40b5d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcFraming"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedFrame" scoped="" ref="0x40b5d420"/>
        <function-ref name="receivedDelimiter" scoped="" ref="0x40b5d500"/>
        <function-ref name="sendFrame" scoped="" ref="0x40b5d5e0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b5d6c0"/>
        <function-ref name="releaseReceivedFrame" scoped="" ref="0x40b5d7a0"/>
        <function-ref name="receptionError" scoped="" ref="0x40b5d880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x40baac78" loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <component-ref qname="PppC.TransmitFramePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x40baac78"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40baae50"/>
        <function-ref name="slotCount" scoped="" ref="0x40ba9010"/>
        <function-ref name="available" scoped="" ref="0x40ba90f0"/>
        <function-ref name="request" scoped="" ref="0x40ba91d0"/>
        <function-ref name="poolSize" scoped="" ref="0x40ba92b0"/>
        <function-ref name="freeze" scoped="" ref="0x40ba9390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPoolStorage" ref="0x4101e878" loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <component-ref qname="PppC.TransmitFramePoolC.FragmentPoolStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x4101e878"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x4101ea50"/>
        <function-ref name="slots" scoped="" ref="0x4101eb30"/>
        <function-ref name="id" scoped="" ref="0x4101ec10"/>
        <function-ref name="poolSize" scoped="" ref="0x4101ecf0"/>
        <function-ref name="pool" scoped="" ref="0x4101edd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragmentPoolStorage" ref="0x40bc0ea0" loc="47:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <component-ref qname="FragmentPoolImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bc0ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40babd20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x40bbf0c0"/>
        <function-ref name="slots" scoped="" ref="0x40bbf1a0"/>
        <function-ref name="id" scoped="" ref="0x40bbf280"/>
        <function-ref name="poolSize" scoped="" ref="0x40bbf360"/>
        <function-ref name="pool" scoped="" ref="0x40bbf440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x40bc0310" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <component-ref qname="FragmentPoolImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x40bc0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40babd20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bc04e8"/>
        <function-ref name="slotCount" scoped="" ref="0x40bc05c8"/>
        <function-ref name="available" scoped="" ref="0x40bc06a8"/>
        <function-ref name="request" scoped="" ref="0x40bc0788"/>
        <function-ref name="poolSize" scoped="" ref="0x40bc0868"/>
        <function-ref name="freeze" scoped="" ref="0x40bc0948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragmentPoolStorage" ref="0x40bbde38" loc="48:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <component-ref qname="FragmentPoolImplC.FragmentPoolImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bbde38"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40babd20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x40bbc050"/>
        <function-ref name="slots" scoped="" ref="0x40bbc130"/>
        <function-ref name="id" scoped="" ref="0x40bbc210"/>
        <function-ref name="poolSize" scoped="" ref="0x40bbc2f0"/>
        <function-ref name="pool" scoped="" ref="0x40bbc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bbd278" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <component-ref qname="FragmentPoolImplC.FragmentPoolImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bbd278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bbd450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x40bbd608" loc="42:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <component-ref qname="FragmentPoolImplC.FragmentPoolImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x40bbd608"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40babd20"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bbd7f0"/>
        <function-ref name="slotCount" scoped="" ref="0x40bbd8d0"/>
        <function-ref name="available" scoped="" ref="0x40bbd9b0"/>
        <function-ref name="request" scoped="" ref="0x40bbda90"/>
        <function-ref name="poolSize" scoped="" ref="0x40bbdb70"/>
        <function-ref name="freeze" scoped="" ref="0x40bbdc50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFraming" ref="0x40c03e08" loc="86:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFraming" scoped="" ref="0x40c03e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcFraming"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedFrame" scoped="" ref="0x40c48010"/>
        <function-ref name="receivedDelimiter" scoped="" ref="0x40c480f0"/>
        <function-ref name="sendFrame" scoped="" ref="0x40c481d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40c482b0"/>
        <function-ref name="releaseReceivedFrame" scoped="" ref="0x40c48390"/>
        <function-ref name="receptionError" scoped="" ref="0x40c48470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x40c03010" loc="81:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40c03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c031e8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40c032c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40c033a8"/>
        <function-ref name="uartError" scoped="" ref="0x40c03488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x40c48660" loc="90:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c48660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x40b29288"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b29e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c47010"/>
        <function-ref name="set" scoped="" ref="0x40c48c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x40c035e8" loc="82:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40c035e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c037c0"/>
        <function-ref name="stop" scoped="" ref="0x40c038a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40c03a10" loc="85:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40c03a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c03be8"/>
        <function-ref name="stop" scoped="" ref="0x40c03cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4102c658" loc="46:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4102c658"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4102c830"/>
        <function-ref name="stop" scoped="" ref="0x4102c910"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFraming" ref="0x4102ca50" loc="47:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFraming" scoped="" ref="0x4102ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcFraming"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedFrame" scoped="" ref="0x4102cc28"/>
        <function-ref name="receivedDelimiter" scoped="" ref="0x4102cd08"/>
        <function-ref name="sendFrame" scoped="" ref="0x4102cde8"/>
        <function-ref name="sendDone" scoped="" ref="0x4102cec8"/>
        <function-ref name="releaseReceivedFrame" scoped="" ref="0x41065010"/>
        <function-ref name="receptionError" scoped="" ref="0x410650f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartStreamSendDone" ref="0x41065e18" loc="514:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartStreamSendDone" scoped="" ref="0x41065e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41064010"/>
        <function-ref name="runTask" scoped="" ref="0x410640f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputEngine_task" ref="0x41064270" loc="134:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputEngine_task" scoped="" ref="0x41064270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41064448"/>
        <function-ref name="runTask" scoped="" ref="0x41064528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x4102d0d8" loc="40:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x4102d0d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4102d2b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x4102d390"/>
        <function-ref name="sendDone" scoped="" ref="0x4102d470"/>
        <function-ref name="uartError" scoped="" ref="0x4102d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4102c340" loc="45:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4102c340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4102c518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x410652e0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x410652e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x40b29288"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b29e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41065bc8"/>
        <function-ref name="set" scoped="" ref="0x41065908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x4102d6b0" loc="41:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x4102d6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4102d888"/>
        <function-ref name="stop" scoped="" ref="0x4102d968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InputFramePool" ref="0x4102dac8" loc="42:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InputFramePool" scoped="" ref="0x4102dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4102dca0"/>
        <function-ref name="slotCount" scoped="" ref="0x4102dd80"/>
        <function-ref name="available" scoped="" ref="0x4102de60"/>
        <function-ref name="request" scoped="" ref="0x4102c010"/>
        <function-ref name="poolSize" scoped="" ref="0x4102c0f0"/>
        <function-ref name="freeze" scoped="" ref="0x4102c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x41063de0" loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <component-ref qname="PppC.HdlcFramingC.InputFramePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x41063de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41062010"/>
        <function-ref name="slotCount" scoped="" ref="0x410620f0"/>
        <function-ref name="available" scoped="" ref="0x410621d0"/>
        <function-ref name="request" scoped="" ref="0x410622b0"/>
        <function-ref name="poolSize" scoped="" ref="0x41062390"/>
        <function-ref name="freeze" scoped="" ref="0x41062470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPoolStorage" ref="0x410993a8" loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <component-ref qname="PppC.HdlcFramingC.InputFramePoolC.FragmentPoolStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x410993a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x41099580"/>
        <function-ref name="slots" scoped="" ref="0x41099660"/>
        <function-ref name="id" scoped="" ref="0x41099740"/>
        <function-ref name="poolSize" scoped="" ref="0x41099820"/>
        <function-ref name="pool" scoped="" ref="0x41099900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x40c6a6b0" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40c6a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40c6a888"/>
        <function-ref name="invoke" scoped="" ref="0x40c6a968"/>
        <function-ref name="process" scoped="" ref="0x40c6aa48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppRejectedProtocol" ref="0x40c693d0" loc="49:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40c693d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40c695a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40c6ec80" loc="42:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40c6ec80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40c6ee58"/>
        <function-ref name="process" scoped="" ref="0x40c6b010"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40c6b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ProtocolReject" ref="0x40c6a030" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40c6a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40c6a208"/>
        <function-ref name="invoke" scoped="" ref="0x40c6a2e8"/>
        <function-ref name="process" scoped="" ref="0x40c6a3c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcFramingOptions" ref="0x40c699a8" loc="50:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c699a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x40b29288"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b29e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c682d0"/>
        <function-ref name="set" scoped="" ref="0x40c68010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40c6abe8" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40c6abe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40c6adc0"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40c6aea0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40c69010"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40c690f0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40c691d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppOptions" ref="0x40c68700" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40c68700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40449438"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x40448010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c67010"/>
        <function-ref name="set" scoped="" ref="0x40c68d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40c6b2b0" loc="43:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40c6b2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c6b488"/>
        <function-ref name="down" scoped="" ref="0x40c6b568"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40c6b648"/>
        <function-ref name="open" scoped="" ref="0x40c6b728"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40c6b808"/>
        <function-ref name="signalEvent" scoped="" ref="0x40c6b8e8"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40c6b9c8"/>
        <function-ref name="close" scoped="" ref="0x40c6baa8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40c6bb88"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40c6bc68"/>
        <function-ref name="up" scoped="" ref="0x40c6bd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AddressControlFieldCompressionOption" ref="0x40c83708" loc="40:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AddressControlFieldCompressionOption" scoped="" ref="0x40c83708"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40c620f0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40c839c0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40c83aa0"/>
        <function-ref name="processNakValue" scoped="" ref="0x40c83b80"/>
        <function-ref name="setRemote" scoped="" ref="0x40c83c60"/>
        <function-ref name="reset" scoped="" ref="0x40c83d40"/>
        <function-ref name="setLocal" scoped="" ref="0x40c83e20"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40c83f00"/>
        <function-ref name="getType" scoped="" ref="0x40c62010"/>
        <function-ref name="considerRequest" scoped="" ref="0x40c838e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncControlCharacterMapOption" ref="0x40c61160" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncControlCharacterMapOption" scoped="" ref="0x40c61160"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40c61b18"/>
        <function-ref name="appendRequest" scoped="" ref="0x40c61418"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40c614f8"/>
        <function-ref name="processNakValue" scoped="" ref="0x40c615d8"/>
        <function-ref name="setRemote" scoped="" ref="0x40c616b8"/>
        <function-ref name="reset" scoped="" ref="0x40c61798"/>
        <function-ref name="setLocal" scoped="" ref="0x40c61878"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40c61958"/>
        <function-ref name="getType" scoped="" ref="0x40c61a38"/>
        <function-ref name="considerRequest" scoped="" ref="0x40c61338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppRejectedProtocol" ref="0x40c7d5a0" loc="52:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40c7d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40c7d778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40c67d08" loc="38:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40c67d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40c67ee0"/>
        <function-ref name="process" scoped="" ref="0x40c63010"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40c630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ProtocolReject" ref="0x40c633c0" loc="39:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40c633c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40c63598"/>
        <function-ref name="invoke" scoped="" ref="0x40c63678"/>
        <function-ref name="process" scoped="" ref="0x40c63758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcFramingOptions" ref="0x40c7ebd0" loc="50:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40c7ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x40b29288"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b29e20"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c814d8"/>
        <function-ref name="set" scoped="" ref="0x40c81218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40c61cb8" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40c61cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40c61e90"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40c82010"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40c820f0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40c821d0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40c822b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppOptions" ref="0x40c81908" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40c81908"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40449438"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x40448010"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c7d2d0"/>
        <function-ref name="set" scoped="" ref="0x40c7d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MaximumReceiveUnitOption" ref="0x40c623f8" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MaximumReceiveUnitOption" scoped="" ref="0x40c623f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40c62db0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40c626b0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40c62790"/>
        <function-ref name="processNakValue" scoped="" ref="0x40c62870"/>
        <function-ref name="setRemote" scoped="" ref="0x40c62950"/>
        <function-ref name="reset" scoped="" ref="0x40c62a30"/>
        <function-ref name="setLocal" scoped="" ref="0x40c62b10"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40c62bf0"/>
        <function-ref name="getType" scoped="" ref="0x40c62cd0"/>
        <function-ref name="considerRequest" scoped="" ref="0x40c625d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolCodeCoordinator" ref="0x40c7e518" loc="49:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40c7e518"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40c7e6f0"/>
        <function-ref name="dispatch" scoped="" ref="0x40c7e7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40c7d938" loc="53:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40c7d938"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40c7db10"/>
        <function-ref name="down" scoped="" ref="0x40c7dbf0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40c7dcd0"/>
        <function-ref name="open" scoped="" ref="0x40c7ddb0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40c7de90"/>
        <function-ref name="signalEvent" scoped="" ref="0x40c7c010"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40c7c0f0"/>
        <function-ref name="close" scoped="" ref="0x40c7c1d0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40c7c2b0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40c7c390"/>
        <function-ref name="up" scoped="" ref="0x40c7c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x40d48960" loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40d48960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40d48b38"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40d48c18"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40d48cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x40d48e58" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40d48e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d47050"/>
        <function-ref name="invoke" scoped="" ref="0x40d47130"/>
        <function-ref name="process" scoped="" ref="0x40d47210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x40d46330" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x40d46330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d46508"/>
        <function-ref name="invoke" scoped="" ref="0x40d465e8"/>
        <function-ref name="process" scoped="" ref="0x40d466c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x40d491e8" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x40d491e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="considerRequest" scoped="" ref="0x40d49bb0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40d494b0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40d49590"/>
        <function-ref name="processNakValue" scoped="" ref="0x40d49670"/>
        <function-ref name="setRemote" scoped="" ref="0x40d49750"/>
        <function-ref name="reset" scoped="" ref="0x40d49830"/>
        <function-ref name="setLocal" scoped="" ref="0x40d49910"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40d499f0"/>
        <function-ref name="isNegotiable" scoped="" ref="0x40d493d0"/>
        <function-ref name="getType" scoped="" ref="0x40d49ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x40d47868" loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x40d47868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d47a40"/>
        <function-ref name="invoke" scoped="" ref="0x40d47b20"/>
        <function-ref name="process" scoped="" ref="0x40d47c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40d4aa88" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40d4aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40d4ac60"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40d4ad40"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40d4ae20"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40d4af00"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40d49010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x40d47370" loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x40d47370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d47548"/>
        <function-ref name="invoke" scoped="" ref="0x40d47628"/>
        <function-ref name="process" scoped="" ref="0x40d47708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x40d47d60" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x40d47d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d46010"/>
        <function-ref name="invoke" scoped="" ref="0x40d460f0"/>
        <function-ref name="process" scoped="" ref="0x40d461d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x40d46828" loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40d46828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d46a00"/>
        <function-ref name="invoke" scoped="" ref="0x40d46ae0"/>
        <function-ref name="process" scoped="" ref="0x40d46bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40d49cf0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40d49cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d49ec8"/>
        <function-ref name="down" scoped="" ref="0x40d48010"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40d480f0"/>
        <function-ref name="open" scoped="" ref="0x40d481d0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40d482b0"/>
        <function-ref name="signalEvent" scoped="" ref="0x40d48390"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40d48470"/>
        <function-ref name="close" scoped="" ref="0x40d48550"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40d48630"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40d48710"/>
        <function-ref name="up" scoped="" ref="0x40d487f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x41087150" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x41087150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x41087328"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x41087408"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x410874e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x41087648" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x41087648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41087820"/>
        <function-ref name="invoke" scoped="" ref="0x41087900"/>
        <function-ref name="process" scoped="" ref="0x410879e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x41089568" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x41089568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getType" scoped="" ref="0x41088010"/>
        <function-ref name="appendRequest" scoped="" ref="0x41089830"/>
        <function-ref name="setNegotiable" scoped="" ref="0x41089910"/>
        <function-ref name="processNakValue" scoped="" ref="0x410899f0"/>
        <function-ref name="setRemote" scoped="" ref="0x41089ad0"/>
        <function-ref name="reset" scoped="" ref="0x41089bb0"/>
        <function-ref name="setLocal" scoped="" ref="0x41089c90"/>
        <function-ref name="appendNakValue" scoped="" ref="0x41089d70"/>
        <function-ref name="isNegotiable" scoped="" ref="0x41089e50"/>
        <function-ref name="considerRequest" scoped="" ref="0x41089750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41088d58" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41088d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41087010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x41085050" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x41085050"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41085228"/>
        <function-ref name="invoke" scoped="" ref="0x41085308"/>
        <function-ref name="process" scoped="" ref="0x410853e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x41085a40" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x41085a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41085c18"/>
        <function-ref name="invoke" scoped="" ref="0x41085cf8"/>
        <function-ref name="process" scoped="" ref="0x41085dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x4108fdb0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x4108fdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41089010"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x410890f0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x410891d0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x410892b0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41089390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x41087b40" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x41087b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41087d18"/>
        <function-ref name="invoke" scoped="" ref="0x41087df8"/>
        <function-ref name="process" scoped="" ref="0x41087ed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x41085548" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x41085548"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41085720"/>
        <function-ref name="invoke" scoped="" ref="0x41085800"/>
        <function-ref name="process" scoped="" ref="0x410858e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x41084010" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x41084010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x410841e8"/>
        <function-ref name="invoke" scoped="" ref="0x410842c8"/>
        <function-ref name="process" scoped="" ref="0x410843a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x41088150" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x41088150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41088328"/>
        <function-ref name="down" scoped="" ref="0x41088408"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x410884e8"/>
        <function-ref name="open" scoped="" ref="0x410885c8"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x410886a8"/>
        <function-ref name="signalEvent" scoped="" ref="0x41088788"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x41088868"/>
        <function-ref name="close" scoped="" ref="0x41088948"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x41088a28"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x41088b08"/>
        <function-ref name="up" scoped="" ref="0x41088be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x40d40010" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x40d40010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d401f8"/>
        <function-ref name="invoke" scoped="" ref="0x40d402d8"/>
        <function-ref name="process" scoped="" ref="0x40d403b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40d418a8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40d418a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40d41a80"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40d41b60"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40d41c40"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40d41d20"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40d41e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x40d41480" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40d41480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40d41658"/>
        <function-ref name="dispatch" scoped="" ref="0x40d41738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x410f9b88" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x410f9b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x410f9d70"/>
        <function-ref name="invoke" scoped="" ref="0x410f9e50"/>
        <function-ref name="process" scoped="" ref="0x410f7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x410f9438" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x410f9438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x410f9610"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x410f96f0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x410f97d0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x410f98b0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x410f9990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x410f9010" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x410f9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x410f91e8"/>
        <function-ref name="dispatch" scoped="" ref="0x410f92c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x40e1f920" loc="56:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40e1f920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40e1faf8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40e1fbd8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40e1fcb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x40e20740" loc="52:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x40e20740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x40482368"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x40482ee0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1f048"/>
        <function-ref name="set" scoped="" ref="0x40e20d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x40e1fe18" loc="57:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40e1fe18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e1e010"/>
        <function-ref name="invoke" scoped="" ref="0x40e1e0f0"/>
        <function-ref name="process" scoped="" ref="0x40e1e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e1f288" loc="55:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e1f288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e1f460"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e1f540"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e1f620"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e1f700"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e1f7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x40e1e330" loc="58:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40e1e330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e1e508"/>
        <function-ref name="invoke" scoped="" ref="0x40e1e5e8"/>
        <function-ref name="process" scoped="" ref="0x40e1e6c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40d519f0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40d519f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d51bc8"/>
        <function-ref name="down" scoped="" ref="0x40d51ca8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40d51d88"/>
        <function-ref name="open" scoped="" ref="0x40d51e68"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e20010"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e200f0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e201d0"/>
        <function-ref name="close" scoped="" ref="0x40e202b0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e20390"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e20470"/>
        <function-ref name="up" scoped="" ref="0x40e20550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resumeAutomaton_task" ref="0x4111cac0" loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="resumeAutomaton_task" scoped="" ref="0x4111cac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4111cc98"/>
        <function-ref name="runTask" scoped="" ref="0x4111cd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="restartTimerFired_task" ref="0x4111c688" loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="restartTimerFired_task" scoped="" ref="0x4111c688"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4111c860"/>
        <function-ref name="runTask" scoped="" ref="0x4111c940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x41120be0" loc="43:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x41120be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x41120db8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x41120e98"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x4111f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x411219e0" loc="39:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x411219e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x40482368"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x40482ee0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41120308"/>
        <function-ref name="set" scoped="" ref="0x41120048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x4111ec00" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x4111ec00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x4111edd8"/>
        <function-ref name="invoke" scoped="" ref="0x4111eeb8"/>
        <function-ref name="process" scoped="" ref="0x4111c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410e79d0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410e79d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410e7ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41120548" loc="42:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41120548"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41120720"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41120800"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x411208e0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x411209c0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41120aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RestartTimer" ref="0x4111f290" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartTimer" scoped="" ref="0x4111f290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4111e758"/>
        <function-ref name="fired" scoped="" ref="0x4111fef8"/>
        <function-ref name="startAt" scoped="" ref="0x4111e418"/>
        <function-ref name="isRunning" scoped="" ref="0x4111e1a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x4111e9d0"/>
        <function-ref name="start" scoped="" ref="0x4111f9e0"/>
        <function-ref name="stop" scoped="" ref="0x4111fc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x4111c170" loc="46:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x4111c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x4111c348"/>
        <function-ref name="invoke" scoped="" ref="0x4111c428"/>
        <function-ref name="process" scoped="" ref="0x4111c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x410e7ce8" loc="38:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x410e7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x410e7ec0"/>
        <function-ref name="down" scoped="" ref="0x41121010"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x411210f0"/>
        <function-ref name="open" scoped="" ref="0x411211d0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x411212b0"/>
        <function-ref name="signalEvent" scoped="" ref="0x41121390"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x41121470"/>
        <function-ref name="close" scoped="" ref="0x41121550"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x41121630"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x41121710"/>
        <function-ref name="up" scoped="" ref="0x411217f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4111aa00" loc="40:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.MuxAlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4111aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41118010"/>
        <function-ref name="fired" scoped="" ref="0x41119718"/>
        <function-ref name="startAt" scoped="" ref="0x41119c08"/>
        <function-ref name="isRunning" scoped="" ref="0x41119990"/>
        <function-ref name="getAlarm" scoped="" ref="0x41118288"/>
        <function-ref name="start" scoped="" ref="0x41119200"/>
        <function-ref name="stop" scoped="" ref="0x411194a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x40dee820" loc="47:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <component-ref qname="MuxAlarmMilli32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x40dee820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40dedd58"/>
        <function-ref name="fired" scoped="" ref="0x40ded528"/>
        <function-ref name="startAt" scoped="" ref="0x40deda18"/>
        <function-ref name="isRunning" scoped="" ref="0x40ded7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40deb010"/>
        <function-ref name="start" scoped="" ref="0x40ded010"/>
        <function-ref name="stop" scoped="" ref="0x40ded2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40deab60" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40deab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40df70b8"/>
        <function-ref name="fired" scoped="" ref="0x40de9840"/>
        <function-ref name="startAt" scoped="" ref="0x40de9d50"/>
        <function-ref name="isRunning" scoped="" ref="0x40de9ac8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40df7340"/>
        <function-ref name="start" scoped="" ref="0x40de9308"/>
        <function-ref name="stop" scoped="" ref="0x40de95b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dea650" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dea650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dea828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40df76c0" loc="50:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40df76c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40df5b80"/>
        <function-ref name="fired" scoped="" ref="0x40df5350"/>
        <function-ref name="startAt" scoped="" ref="0x40df5840"/>
        <function-ref name="isRunning" scoped="" ref="0x40df55c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40df5df8"/>
        <function-ref name="start" scoped="" ref="0x40df7e10"/>
        <function-ref name="stop" scoped="" ref="0x40df50d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e24470" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e24470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e23940"/>
        <function-ref name="fired" scoped="" ref="0x40e23110"/>
        <function-ref name="startAt" scoped="" ref="0x40e23600"/>
        <function-ref name="isRunning" scoped="" ref="0x40e23388"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e23bb8"/>
        <function-ref name="start" scoped="" ref="0x40e24bc0"/>
        <function-ref name="stop" scoped="" ref="0x40e24e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41143560" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41143560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41142ab8"/>
        <function-ref name="fired" scoped="" ref="0x41142288"/>
        <function-ref name="startAt" scoped="" ref="0x41142778"/>
        <function-ref name="isRunning" scoped="" ref="0x41142500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41142d30"/>
        <function-ref name="start" scoped="" ref="0x41143cb0"/>
        <function-ref name="stop" scoped="" ref="0x41142010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41171010" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41171010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4116fa68"/>
        <function-ref name="test" scoped="" ref="0x41171de8"/>
        <function-ref name="fired" scoped="" ref="0x41171b70"/>
        <function-ref name="force" scoped="" ref="0x4116e010"/>
        <function-ref name="get" scoped="" ref="0x41171658"/>
        <function-ref name="reset" scoped="" ref="0x4116f088"/>
        <function-ref name="getMode" scoped="" ref="0x4116fd08"/>
        <function-ref name="isOn" scoped="" ref="0x4116f7f0"/>
        <function-ref name="set" scoped="" ref="0x411718d0"/>
        <function-ref name="start" scoped="" ref="0x4116f300"/>
        <function-ref name="stop" scoped="" ref="0x4116f578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41176578" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41176578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41174ab8"/>
        <function-ref name="fired" scoped="" ref="0x41174288"/>
        <function-ref name="startAt" scoped="" ref="0x41174778"/>
        <function-ref name="isRunning" scoped="" ref="0x41174500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41174d30"/>
        <function-ref name="start" scoped="" ref="0x41176cc8"/>
        <function-ref name="stop" scoped="" ref="0x41174010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41176140" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41176140"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41176318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41173010" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41173010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41172a68"/>
        <function-ref name="test" scoped="" ref="0x41173de8"/>
        <function-ref name="get" scoped="" ref="0x41173658"/>
        <function-ref name="reset" scoped="" ref="0x41172088"/>
        <function-ref name="getMode" scoped="" ref="0x41172d08"/>
        <function-ref name="overflow" scoped="" ref="0x41173b70"/>
        <function-ref name="isOn" scoped="" ref="0x411727f0"/>
        <function-ref name="set" scoped="" ref="0x411738d0"/>
        <function-ref name="start" scoped="" ref="0x41172300"/>
        <function-ref name="stop" scoped="" ref="0x41172578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4117e030" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4117e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4117d4e0"/>
        <function-ref name="fired" scoped="" ref="0x4117ec98"/>
        <function-ref name="startAt" scoped="" ref="0x4117d1a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4117ef10"/>
        <function-ref name="getAlarm" scoped="" ref="0x4117d758"/>
        <function-ref name="start" scoped="" ref="0x4117e780"/>
        <function-ref name="stop" scoped="" ref="0x4117ea20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x4117cd00" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x4117cd00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404bd818"/>
            <typename><typedef-ref name="T62khz" ref="0x404bd9c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411791e8"/>
        <function-ref name="fired" scoped="" ref="0x4117a990"/>
        <function-ref name="startAt" scoped="" ref="0x4117ae80"/>
        <function-ref name="isRunning" scoped="" ref="0x4117ac08"/>
        <function-ref name="getAlarm" scoped="" ref="0x41179460"/>
        <function-ref name="start" scoped="" ref="0x4117a478"/>
        <function-ref name="stop" scoped="" ref="0x4117a718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4117daa8" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4117daa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4117c228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4117c718"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4117c4a0"/>
        <function-ref name="overflow" scoped="" ref="0x4117c990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcUart" ref="0x40e115b8" loc="40:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <component-ref qname="DefaultHdlcUartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40e115b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e11790"/>
        <function-ref name="receivedByte" scoped="" ref="0x40e11870"/>
        <function-ref name="sendDone" scoped="" ref="0x40e11950"/>
        <function-ref name="uartError" scoped="" ref="0x40e11a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e11168" loc="39:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <component-ref qname="DefaultHdlcUartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e11168"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e11340"/>
        <function-ref name="stop" scoped="" ref="0x40e11420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="streamFeeder_task" ref="0x40e38b20" loc="118:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="streamFeeder_task" scoped="" ref="0x40e38b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e38cf8"/>
        <function-ref name="runTask" scoped="" ref="0x40e38dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40e10e10" loc="41:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40e10e10"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e0d010"/>
        <function-ref name="stop" scoped="" ref="0x40e0d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcUart" ref="0x40e10708" loc="35:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40e10708"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e108e0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40e109c0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e10aa0"/>
        <function-ref name="uartError" scoped="" ref="0x40e10b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40e0d298" loc="42:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40e0d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e0d470"/>
        <function-ref name="receivedByte" scoped="" ref="0x40e0d550"/>
        <function-ref name="receive" scoped="" ref="0x40e0d630"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40e0d710"/>
        <function-ref name="receiveDone" scoped="" ref="0x40e0d7f0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40e0d8d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e0d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40e102b8" loc="34:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40e102b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40e10490"/>
        <function-ref name="stop" scoped="" ref="0x40e10570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppIpv6" ref="0x40e12738" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppIpv6" scoped="" ref="0x40e12738"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppIpv6"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x40e12910"/>
        <function-ref name="linkUp" scoped="" ref="0x40e129f0"/>
        <function-ref name="receive" scoped="" ref="0x40e12ad0"/>
        <function-ref name="localIid" scoped="" ref="0x40e12bb0"/>
        <function-ref name="remoteIid" scoped="" ref="0x40e12c90"/>
        <function-ref name="linkIsUp" scoped="" ref="0x40e12d70"/>
        <function-ref name="linkDown" scoped="" ref="0x40e12e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40e29660" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40e29660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e29838"/>
        <function-ref name="process" scoped="" ref="0x40e29918"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e299f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppControlProtocol" ref="0x40e29118" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControlProtocol" scoped="" ref="0x40e29118"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e292f0"/>
        <function-ref name="process" scoped="" ref="0x40e293d0"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e294b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e288b0" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e288b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e28a88"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e28b68"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e28c48"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e28d28"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e28e08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowerLcpAutomaton" ref="0x40e270e0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e270e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e272b8"/>
        <function-ref name="down" scoped="" ref="0x40e27398"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e27478"/>
        <function-ref name="open" scoped="" ref="0x40e27558"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e27638"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e27718"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e277f8"/>
        <function-ref name="close" scoped="" ref="0x40e278d8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e279b8"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e27a98"/>
        <function-ref name="up" scoped="" ref="0x40e27b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40e29bb8" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e29bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e29d90"/>
        <function-ref name="down" scoped="" ref="0x40e29e70"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e28010"/>
        <function-ref name="open" scoped="" ref="0x40e280f0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e281d0"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e282b0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e28390"/>
        <function-ref name="close" scoped="" ref="0x40e28470"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e28550"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e28630"/>
        <function-ref name="up" scoped="" ref="0x40e28710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x40e53600" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40e53600"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40e537d8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40e538b8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40e53998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e269e8" loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e269e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e26bc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppIpv6" ref="0x40e26d48" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppIpv6" scoped="" ref="0x40e26d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppIpv6"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x40e26f20"/>
        <function-ref name="linkUp" scoped="" ref="0x40e55018"/>
        <function-ref name="receive" scoped="" ref="0x40e550f8"/>
        <function-ref name="localIid" scoped="" ref="0x40e551d8"/>
        <function-ref name="remoteIid" scoped="" ref="0x40e552b8"/>
        <function-ref name="linkIsUp" scoped="" ref="0x40e55398"/>
        <function-ref name="linkDown" scoped="" ref="0x40e55478"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterfaceIdentifierOption" ref="0x40e55da8" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterfaceIdentifierOption" scoped="" ref="0x40e55da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40e547f0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40e540f0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40e541d0"/>
        <function-ref name="processNakValue" scoped="" ref="0x40e542b0"/>
        <function-ref name="setRemote" scoped="" ref="0x40e54390"/>
        <function-ref name="reset" scoped="" ref="0x40e54470"/>
        <function-ref name="setLocal" scoped="" ref="0x40e54550"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40e54630"/>
        <function-ref name="getType" scoped="" ref="0x40e54710"/>
        <function-ref name="considerRequest" scoped="" ref="0x40e54010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppControlProtocol" ref="0x40e55700" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControlProtocol" scoped="" ref="0x40e55700"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e558d8"/>
        <function-ref name="process" scoped="" ref="0x40e559b8"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e55a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40e549a0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40e549a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e54b78"/>
        <function-ref name="process" scoped="" ref="0x40e54c58"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e54d38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e54ed8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e54ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e530c0"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e531a0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e53280"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e53360"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e53440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowerLcpAutomaton" ref="0x40e52e08" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e52e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e51010"/>
        <function-ref name="down" scoped="" ref="0x40e510f0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e511d0"/>
        <function-ref name="open" scoped="" ref="0x40e512b0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e51390"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e51470"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e51550"/>
        <function-ref name="close" scoped="" ref="0x40e51630"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e51710"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e517f0"/>
        <function-ref name="up" scoped="" ref="0x40e518d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolCodeCoordinator" ref="0x40e53be0" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e53be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40e53db8"/>
        <function-ref name="dispatch" scoped="" ref="0x40e53e98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40e520e0" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e520e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e522b8"/>
        <function-ref name="down" scoped="" ref="0x40e52398"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e52478"/>
        <function-ref name="open" scoped="" ref="0x40e52558"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e52638"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e52718"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e527f8"/>
        <function-ref name="close" scoped="" ref="0x40e528d8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e529b8"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e52a98"/>
        <function-ref name="up" scoped="" ref="0x40e52b78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x40e87a40" loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40e87a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40e87c18"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40e87cf8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40e87dd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x40e85010" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40e85010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e851e8"/>
        <function-ref name="invoke" scoped="" ref="0x40e852c8"/>
        <function-ref name="process" scoped="" ref="0x40e853a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x40e84400" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x40e84400"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e845d8"/>
        <function-ref name="invoke" scoped="" ref="0x40e846b8"/>
        <function-ref name="process" scoped="" ref="0x40e84798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x40e882c8" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x40e882c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="considerRequest" scoped="" ref="0x40e88c90"/>
        <function-ref name="appendRequest" scoped="" ref="0x40e88590"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40e88670"/>
        <function-ref name="processNakValue" scoped="" ref="0x40e88750"/>
        <function-ref name="setRemote" scoped="" ref="0x40e88830"/>
        <function-ref name="reset" scoped="" ref="0x40e88910"/>
        <function-ref name="setLocal" scoped="" ref="0x40e889f0"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40e88ad0"/>
        <function-ref name="isNegotiable" scoped="" ref="0x40e884b0"/>
        <function-ref name="getType" scoped="" ref="0x40e88bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x40e85a00" loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x40e85a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e85bd8"/>
        <function-ref name="invoke" scoped="" ref="0x40e85cb8"/>
        <function-ref name="process" scoped="" ref="0x40e85d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e57b48" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e57b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e57d20"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e57e00"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e57ee0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e88010"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e880f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x40e85508" loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x40e85508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e856e0"/>
        <function-ref name="invoke" scoped="" ref="0x40e857c0"/>
        <function-ref name="process" scoped="" ref="0x40e858a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x40e85ef8" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x40e85ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e840e0"/>
        <function-ref name="invoke" scoped="" ref="0x40e841c0"/>
        <function-ref name="process" scoped="" ref="0x40e842a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x40e848f8" loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40e848f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e84ad0"/>
        <function-ref name="invoke" scoped="" ref="0x40e84bb0"/>
        <function-ref name="process" scoped="" ref="0x40e84c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40e88dd0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e88dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e87010"/>
        <function-ref name="down" scoped="" ref="0x40e870f0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e871d0"/>
        <function-ref name="open" scoped="" ref="0x40e872b0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e87390"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e87470"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e87550"/>
        <function-ref name="close" scoped="" ref="0x40e87630"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e87710"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e877f0"/>
        <function-ref name="up" scoped="" ref="0x40e878d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x4118ce08" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x4118ce08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x4118a010"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x4118a0f0"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x4118a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x4118a330" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x4118a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x4118a508"/>
        <function-ref name="invoke" scoped="" ref="0x4118a5e8"/>
        <function-ref name="process" scoped="" ref="0x4118a6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x4118d3a8" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x4118d3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getType" scoped="" ref="0x4118dd70"/>
        <function-ref name="appendRequest" scoped="" ref="0x4118d670"/>
        <function-ref name="setNegotiable" scoped="" ref="0x4118d750"/>
        <function-ref name="processNakValue" scoped="" ref="0x4118d830"/>
        <function-ref name="setRemote" scoped="" ref="0x4118d910"/>
        <function-ref name="reset" scoped="" ref="0x4118d9f0"/>
        <function-ref name="setLocal" scoped="" ref="0x4118dad0"/>
        <function-ref name="appendNakValue" scoped="" ref="0x4118dbb0"/>
        <function-ref name="isNegotiable" scoped="" ref="0x4118dc90"/>
        <function-ref name="considerRequest" scoped="" ref="0x4118d590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4118caf0" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4118caf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4118ccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x4118ad20" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x4118ad20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x4118aef8"/>
        <function-ref name="invoke" scoped="" ref="0x41189010"/>
        <function-ref name="process" scoped="" ref="0x411890f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x41189748" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x41189748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41189920"/>
        <function-ref name="invoke" scoped="" ref="0x41189a00"/>
        <function-ref name="process" scoped="" ref="0x41189ae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41190ba0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41190ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41190d78"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41190e58"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x4118d010"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x4118d0f0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x4118d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x4118a828" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x4118a828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x4118aa00"/>
        <function-ref name="invoke" scoped="" ref="0x4118aae0"/>
        <function-ref name="process" scoped="" ref="0x4118abc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x41189250" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x41189250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41189428"/>
        <function-ref name="invoke" scoped="" ref="0x41189508"/>
        <function-ref name="process" scoped="" ref="0x411895e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x41189c40" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x41189c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41189e18"/>
        <function-ref name="invoke" scoped="" ref="0x41189ef8"/>
        <function-ref name="process" scoped="" ref="0x41188010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x4118deb0" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x4118deb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x4118c0c0"/>
        <function-ref name="down" scoped="" ref="0x4118c1a0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x4118c280"/>
        <function-ref name="open" scoped="" ref="0x4118c360"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x4118c440"/>
        <function-ref name="signalEvent" scoped="" ref="0x4118c520"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x4118c600"/>
        <function-ref name="close" scoped="" ref="0x4118c6e0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x4118c7c0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x4118c8a0"/>
        <function-ref name="up" scoped="" ref="0x4118c980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x40e80588" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="PppIpv6C.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x40e80588"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e80770"/>
        <function-ref name="invoke" scoped="" ref="0x40e80850"/>
        <function-ref name="process" scoped="" ref="0x40e80930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e81dc0" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="PppIpv6C.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e81dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e80010"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e800f0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e801d0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e802b0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e80390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x40e81998" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="PppIpv6C.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e81998"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40e81b70"/>
        <function-ref name="dispatch" scoped="" ref="0x40e81c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x411ff8d8" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x411ff8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x411ffac0"/>
        <function-ref name="invoke" scoped="" ref="0x411ffba0"/>
        <function-ref name="process" scoped="" ref="0x411ffc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x411ff188" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x411ff188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x411ff360"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x411ff440"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x411ff520"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x411ff600"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x411ff6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x411c2d50" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x411c2d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x411c2f28"/>
        <function-ref name="dispatch" scoped="" ref="0x411ff018"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x40e7a010" loc="56:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40e7a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40e7a1e8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40e7a2c8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40e7a3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x40e7cd70" loc="52:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x40e7cd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x40482368"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x40482ee0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e7b680"/>
        <function-ref name="set" scoped="" ref="0x40e7b3c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x40e7a508" loc="57:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40e7a508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e7a6e0"/>
        <function-ref name="invoke" scoped="" ref="0x40e7a7c0"/>
        <function-ref name="process" scoped="" ref="0x40e7a8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e7b8c0" loc="55:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e7b8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e7ba98"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e7bb78"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e7bc58"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e7bd38"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e7be18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x40e7aa00" loc="58:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40e7aa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e7abd8"/>
        <function-ref name="invoke" scoped="" ref="0x40e7acb8"/>
        <function-ref name="process" scoped="" ref="0x40e7ad98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40e7c0e8" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e7c0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e7c2c0"/>
        <function-ref name="down" scoped="" ref="0x40e7c3a0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e7c480"/>
        <function-ref name="open" scoped="" ref="0x40e7c560"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e7c640"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e7c720"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e7c800"/>
        <function-ref name="close" scoped="" ref="0x40e7c8e0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e7c9c0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e7caa0"/>
        <function-ref name="up" scoped="" ref="0x40e7cb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resumeAutomaton_task" ref="0x411e6788" loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="resumeAutomaton_task" scoped="" ref="0x411e6788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411e6960"/>
        <function-ref name="runTask" scoped="" ref="0x411e6a40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="restartTimerFired_task" ref="0x411e6350" loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="restartTimerFired_task" scoped="" ref="0x411e6350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x411e6528"/>
        <function-ref name="runTask" scoped="" ref="0x411e6608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x411ea8e8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x411ea8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x411eaac0"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x411eaba0"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x411eac80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x411eb660" loc="39:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x411eb660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x40482368"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x40482ee0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x411ea010"/>
        <function-ref name="set" scoped="" ref="0x411ebc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x411e8890" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x411e8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x411e8a68"/>
        <function-ref name="invoke" scoped="" ref="0x411e8b48"/>
        <function-ref name="process" scoped="" ref="0x411e8c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x411ec670" loc="37:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x411ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x411ec848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x411ea250" loc="42:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x411ea250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x411ea428"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x411ea508"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x411ea5e8"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x411ea6c8"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x411ea7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RestartTimer" ref="0x411eaf00" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartTimer" scoped="" ref="0x411eaf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411e83e8"/>
        <function-ref name="fired" scoped="" ref="0x411e9b98"/>
        <function-ref name="startAt" scoped="" ref="0x411e80a8"/>
        <function-ref name="isRunning" scoped="" ref="0x411e9e10"/>
        <function-ref name="getAlarm" scoped="" ref="0x411e8660"/>
        <function-ref name="start" scoped="" ref="0x411e9680"/>
        <function-ref name="stop" scoped="" ref="0x411e9920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x411e8d88" loc="46:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x411e8d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x411e6010"/>
        <function-ref name="invoke" scoped="" ref="0x411e60f0"/>
        <function-ref name="process" scoped="" ref="0x411e61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x411ec988" loc="38:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x411ec988"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x411ecb60"/>
        <function-ref name="down" scoped="" ref="0x411ecc40"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x411ecd20"/>
        <function-ref name="open" scoped="" ref="0x411ece00"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x411ecee0"/>
        <function-ref name="signalEvent" scoped="" ref="0x411eb010"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x411eb0f0"/>
        <function-ref name="close" scoped="" ref="0x411eb1d0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x411eb2b0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x411eb390"/>
        <function-ref name="up" scoped="" ref="0x411eb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x411e46c0" loc="40:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.MuxAlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x411e46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c1928"/>
            <typename><typedef-ref name="TMilli" ref="0x404c1af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x411e3b80"/>
        <function-ref name="fired" scoped="" ref="0x411e3350"/>
        <function-ref name="startAt" scoped="" ref="0x411e3840"/>
        <function-ref name="isRunning" scoped="" ref="0x411e35c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x411e3df8"/>
        <function-ref name="start" scoped="" ref="0x411e4e10"/>
        <function-ref name="stop" scoped="" ref="0x411e30d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40e71df8" loc="67:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <component-ref qname="PppPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40e71df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40ea1010"/>
        <function-ref name="process" scoped="" ref="0x40ea10f0"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40ea11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40ea1370" loc="70:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <component-ref qname="PppPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40ea1370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40ea1548"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40ea1628"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40ea1708"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40ea17e8"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40ea18c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBuffer_task" ref="0x40e9b3d0" loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBuffer_task" scoped="" ref="0x40e9b3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e9b5a8"/>
        <function-ref name="runTask" scoped="" ref="0x40e9b688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40ea0370" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40ea0370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40ea0548"/>
        <function-ref name="process" scoped="" ref="0x40ea0628"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40ea0708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e9a6e8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e9a6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e9a8c0"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e9a9a0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e9aa80"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e9ab60"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e9ac40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x40e9a370" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x40e9a370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x40e9a548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x40e9fe90" loc="43:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x40e9fe90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x40e8b080"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eba290" loc="94:/opt/tinyos-2.x/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eba290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eba468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x40eba610" loc="95:/opt/tinyos-2.x/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x40eba610"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x40eba7e8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="LcpAutomaton" loc="40:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <short> Manage the Link Control Protocol automaton.</short>
        <long> Manage the Link Control Protocol automaton.&#10;&#10; This interface is subject to change, as it is unclear which actions&#10; should be publicly available.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x40488348" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Obtain the current state of the automaton *</short>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonState_e" ref="0x404787f8"/>
            <typename><typedef-ref name="LcpAutomatonState_e" ref="0x40485ed8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="down" ref="0x40488c08" loc="65:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Externally indicate that the layer is ready.</short>
          <long> Externally indicate that the layer is ready.&#10;&#10; This command is normally invoked only by the Ppp daemon when&#10; closing down the link, and by an LCP automaton when all upper&#10; layers have closed. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerUp" ref="0x40492678" loc="110:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to upper layers that the&#10; automaton has entered the Opened state.</short>
          <long> Raised by the automaton to indicate to upper layers that the&#10; automaton has entered the Opened state.&#10;&#10; Normally, upper layers should respond by invoking the up()&#10; command on themselves.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="open" ref="0x404870f8" loc="75:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Administratively enable the automaton.</short>
          <long> Administratively enable the automaton.&#10;&#10; This is normally invoked during application initialization, to&#10; indicate that the corresponding protocol should be enabled as&#10; soon as enough of PPP is up to allow messages to get to it.&#10;&#10; @return SUCCESS if automaton transition succeeded.  ERETRY if the&#10; automaton is busy, and the attempt should repeated. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerFinished" ref="0x40491620" loc="128:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="125:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Initial, Closed, or Stopped states, and&#10; the lower layer is no longer needed for the link.</short>
          <long> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Initial, Closed, or Stopped states, and&#10; the lower layer is no longer needed for the link. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="signalEvent" ref="0x40487f28" loc="101:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Notify the automaton of an event to be executed.</short>
          <long> Notify the automaton of an event to be executed.&#10;&#10; @param evt The event that is inducing a state transition.&#10;&#10; @param params Pointer to an event-specific structure required to&#10; complete the actions associated with the transition.  Note that&#10; the parameters may include resources, the responsibility for&#10; which is normally transferred to the automaton.&#10;&#10; @note If this command returns ERETRY, any resource included in&#10; the params was not accepted by the automaton, and the caller must&#10; dispose of it.  For SUCCESS and for all non-ERETRY error returns,&#10; the automaton accepts resource parameters and is responsible for&#10; releasing them.&#10;&#10; @return The result of the signal operation.  If ERETRY, the&#10; automaton is busy, but the event may be re-signaled later.  For&#10; all other returns, the event should not be re-signalled. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonEvent_e" ref="0x40484240"/>
              <typename><typedef-ref name="LcpAutomatonEvent_e" ref="0x40482068"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="evt" ref="0x40487be0" loc="101:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonEvent_e" ref="0x40484240"/>
              <typename><typedef-ref name="LcpAutomatonEvent_e" ref="0x40482068"/></typename>
            </type-tag>
          </variable>
          <variable name="params" ref="0x40487dc8" loc="102:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerDown" ref="0x40492b88" loc="118:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to upper layers that the&#10; automaton is leaving the Opened state.</short>
          <long> Raised by the automaton to indicate to upper layers that the&#10; automaton is leaving the Opened state.&#10;&#10; Normally, upper layers should respond by invoking the down()&#10; command on themselves.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x40487660" loc="81:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Administratively disable the automaton.</short>
          <long> Administratively disable the automaton.&#10;&#10; @return SUCCESS if automaton transition succeeded.  ERETRY if the&#10; automaton is busy, and the attempt should repeated. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerStarted" ref="0x404910f8" loc="123:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="120:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Starting state and the lower layer is&#10; needed.</short>
          <long> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Starting state and the lower layer is&#10; needed. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transitionCompleted" ref="0x4048ad38" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised upon completion of the transition actions associated with&#10; an automaton event.</short>
          <long> Raised upon completion of the transition actions associated with&#10; an automaton event.&#10;&#10; @param state The resulting state of the automaton.  May be the&#10; same as the previous state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonState_e" ref="0x404787f8"/>
              <typename><typedef-ref name="LcpAutomatonState_e" ref="0x40485ed8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x4048abe0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonState_e" ref="0x404787f8"/>
              <typename><typedef-ref name="LcpAutomatonState_e" ref="0x40485ed8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="up" ref="0x40488738" loc="58:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Externally indicate that the layer is ready.</short>
          <long> Externally indicate that the layer is ready.&#10;&#10; This command is normally invoked only by the Ppp daemon when&#10; bringing up LCP, and by an LCP automaton when a lower layer is&#10; ready to carry packets. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Led" loc="41:/opt/tinyos-2.x/tos/interfaces/Led.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <short> An interface to control a single LED.</short>
        <long> An interface to control a single LED.&#10;&#10; Provides the ability to turn on, turn off, and toggle an LED.&#10;&#10; Implementations of this interface are provided by the LedC&#10; component, both as positional names (Led0) and by color (Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="toggle" ref="0x4047f878" loc="53:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Toggle the LED.</short>
          <long> Toggle the LED. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x40480ad8" loc="43:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Turn the LED on.</short>
          <long> Turn the LED on. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40480ea8" loc="46:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Turn the LED off.</short>
          <long> Turn the LED off. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4047f410" loc="50:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Turn the LED on or off, depending on parameter.</short>
          <long> Turn the LED on or off, depending on parameter.&#10; @param turn_on if TRUE, turn LED on; otherwise turn LED off *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="turn_on" ref="0x4047f2b8" loc="50:/opt/tinyos-2.x/tos/interfaces/Led.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x4047ae98" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppIpv6" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <short> Interface supporting RFC5072 IPv6-over-PPP using the OSIAN/TinyOS&#10; PPP daemon.</short>
        <long> Interface supporting RFC5072 IPv6-over-PPP using the OSIAN/TinyOS&#10; PPP daemon.&#10;&#10; This interface is intended as a bridge between the PPP daemon and a&#10; specific implementation of IPv6, such as blip or OIP.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="transmit" ref="0x4048d678" loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Transmit data to the remote end.</short>
          <long> Transmit data to the remote end.&#10;&#10; @param message Pointer to a sequence of octets to be transmitted.&#10;&#10; @param len The number of bytes to transmit.&#10;&#10; @return SUCCESS iff a frame could be allocated and the message&#10; transmitted. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x4048d350" loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4048d518" loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkUp" ref="0x40498010" loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Signal that the PPP link has come up *</short>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x40498bb8" loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Signal that a message has been received over the PPP link.</short>
          <long> Signal that a message has been received over the PPP link.&#10;&#10; @param message Sequence of octets received, after all&#10; PPP-relevant framing has been removed.&#10;&#10; @param len Number of octets received.&#10;&#10; @return SUCCESS if the recipient has successfully processed the&#10; message.  Non-SUCCESS values may be used for purposes as defined&#10; by PppProtocol.process(). *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x40498890" loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40498a58" loc="88:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localIid" ref="0x4048f810" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Return the negotiated IID for the local (TinyOS) end of the PPP&#10; link.</short>
          <long> Return the negotiated IID for the local (TinyOS) end of the PPP&#10; link.&#10;&#10; @return Pointer to configured IID; null pointer if the link is&#10; not up. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="ppp_ipv6cp_iid_t" ref="0x4048f0c8"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref name="ppp_ipv6cp_iid_t" ref="0x4047ec90"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remoteIid" ref="0x4048fd98" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Return the negotiated IID for the remote (PC) end of the PPP&#10; link.</short>
          <long> Return the negotiated IID for the remote (PC) end of the PPP&#10; link.&#10;&#10; @return Pointer to configured remote IID; null pointer if the&#10; link is not up. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="ppp_ipv6cp_iid_t" ref="0x4048f0c8"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref name="ppp_ipv6cp_iid_t" ref="0x4047ec90"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="linkIsUp" ref="0x4048db70" loc="69:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> </short>
          <long> @return TRUE iff the LCP automaton is in a link-up state. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="linkDown" ref="0x404983f0" loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Signal that the PPP link has gone down *</short>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x4047de20" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4047dcc8" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x4047cc18" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4047cac0" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4047d5e0" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4047c3e0" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404a45b0" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404a8710" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404a85b8" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404a1d20" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404aa380" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404aa228" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404aaa48" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404aa8f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404a8010" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404ec090" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404ec478" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x404e18e8" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404ecc48" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404e1ca8" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404ec850" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x404e11a8" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404e1538" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40559980" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40559980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40559e30" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x405625f0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40559980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405622c0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40562490" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40559980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4056cc40" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4056cc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40566520" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40568210" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40567378" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40567030" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40567218" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40568b60" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40566e98" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40566968" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405686a0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405692b0" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40569158" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40567d60" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40567a18" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40567c00" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40569948" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405697f0" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40569e18" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40581a68" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40581a68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40581bd0" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40589eb0" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4057cb58" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x40589868" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40589518" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          </variable>
          <variable name="dt" ref="0x40589708" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40589010" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x40588368" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4057c218" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4057c0c0" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40581bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4057c6f8" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x4058aab0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058aab0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405a0188" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405a0030" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40592cf8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40592918" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x405a0960" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40592010" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058aab0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405a10c8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405a0598" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405a1c20" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40592550" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058aab0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405923f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058aab0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405a1490" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405a1840" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x4058ca80" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058ca80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405961c0" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40596068" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40599d18" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40599010" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058ca80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405970f8" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405965d0" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40599938" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40597c50" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40599550" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058ca80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405993f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4058ca80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405974c0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40597870" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x405c1560" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c1560"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405bdcf8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405bdba0" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405be7b8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405be3d8" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405c1a58" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c1560"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405beb70" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405bb138" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405bd7a0" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405be010" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c1560"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405c1e40" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c1560"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405bd010" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405bd3c0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40433350" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4040f470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4035ae88" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4043bbc0" loc="63:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4043a038" loc="69:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4043a4b8" loc="74:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4043ad28" loc="85:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x404412f8" loc="113:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40439a38" loc="102:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40441be8" loc="134:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4043a8e0" loc="79:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40441740" loc="119:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40439eb8" loc="108:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4043b798" loc="58:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404395f0" loc="96:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404391c8" loc="91:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40440380" loc="149:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40440228" loc="149:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40420a98" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4061e4e0" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4061e4e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4061e648" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061e648"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4061eb30" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4061e648"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x4062e570" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x4062e070" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x4062e970" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4035b888" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4035bda0" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406d94d0" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406d9010" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x406c8a48" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406c8550" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x406c7010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x406d65c8" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406d65c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x406d6a98" loc="58:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x406d3340" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406d65c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x406d3010" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x406d31e0" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406d65c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406e3538" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406d1c00" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406d1600" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406e30c8" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406e3c30" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x406da5c8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406e0d90" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x406da010" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x406da238" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x406da458" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406ed930" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406daee8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x406ed0f0" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x406ed2f8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x406ed550" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x406ed7b8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x406de7f0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406de010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x406de238" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x406de460" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x406de680" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406dd8e8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406dd360" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406dd010" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x406dd200" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x406f4b70" loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAdlarOn" ref="0x406e5d98" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns ADLAR (ADC left adjust result) status&#10; </short>
          <long>&#10; Returns ADLAR (ADC left adjust result) status&#10; @returns TRUE if ADLAR is on.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x406f2010" loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x406f3e78" loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x406f3010" loc="148:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x406eae90" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the ADC channel&#10; </short>
          <long>&#10; Sets the ADC channel&#10; @param mux New channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mux" ref="0x406ead38" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x406f7c40" loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdlar" ref="0x406e58f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; </short>
          <long>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; @param adlarOn TRUE turns on ADLAR, FALSE turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adlarOn" ref="0x406e5798" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x406f64c0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x406f3928" loc="159:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406f24b8" loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x406f6070" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRef" ref="0x406e47e8" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current reference voltage&#10; </short>
          <long>&#10; Returns the current reference voltage&#10; @returns the current reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x406f6918" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x406f6dc8" loc="125:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x406f42a8" loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x406f3480" loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406e5330" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current ADC channel&#10; </short>
          <long>&#10; Returns the current ADC channel&#10; @return Current channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x406f7330" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40423658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40423a00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x406f71d8" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40423658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40423a00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRef" ref="0x406e4380" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the reference voltage&#10; </short>
          <long>&#10; Sets the reference voltage&#10; @param ref New reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ref" ref="0x406e4228" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x406e4ce0" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40423658"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40423a00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x406f4770" loc="136:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x406f77e0" loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406f2c08" loc="182:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406f2ab0" loc="182:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x406ebe88" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406e83e0" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4073b458" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4073ba30" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x407391a8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x40739b90" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4073dc40" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x407396b8" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4074e1a8" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4074c4e8" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4074c9e8" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40746840" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4074a1f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407466e8" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4074a1f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407474c8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40747b88" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4074a1f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40747a30" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x4074a1f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40746158" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x4074a1f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x4078c4d8" loc="62:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407a84c0" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407a84c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407a8628" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a8628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x407a8c40" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a8628"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407a8ae8" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407a8628"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x408be138" loc="68:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408bfc98" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x408bf888" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x408bf320" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x408d21a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408bcda0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408d2cf8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x408d1138" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408d2560" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x408d1aa8" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x408d1950" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x408d2930" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x408d1ec8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x408d1558" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40915378" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40917de8" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40915030" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40915210" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40911010" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40912bd0" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40912db0" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40912670" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40914058" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40915ec0" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40914d48" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409149f0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40914be8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4090cba0" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090ca48" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x409295a0" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40929448" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40928558" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409281f8" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409283d8" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4092abc0" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4092a228" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40929ec0" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4092a0c8" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x408f0eb0" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
              <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408f0968" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x408f0b48" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408f0d28" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x409393b8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40939260" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40939eb0" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40939d58" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40937950" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409377f8" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4091e648" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x408ef068"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4091e4f0" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40924010" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40925e70" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40926ee0" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x409255c8" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40925470" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x409228f8" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40922590" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40922798" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40924bf8" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40924890" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40924a98" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x408ef2c8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40920010" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40923ea0" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40920b48" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40920818" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x409209e8" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404e4df8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x409234c0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40923368" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4091f370" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x408ef068"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4091f010" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4091f210" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x408ef068"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x4091fbe8" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x408ef068"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40932e88" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40932b48" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40932d28" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4092da18" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4092d6b8" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4092d898" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4092d158" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4092fb38" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4092f9e0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4092c820" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4092c4c8" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4092c6c0" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x4096ed28" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096e998" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x4096ebc8" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x40971a80" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x4096e388" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4096e010" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x40919bb0"/>
                <typename><typedef-ref name="message_t" ref="0x40917950"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x4096e228" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40990c98" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4098b1a8" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40989368" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x4098bf18" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x409786b8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x4098f408" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x4098e520" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4098e3c8" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x4098f930" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40978de8" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40978c90" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x4098ea28" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x4098fe90" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40976798" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40976d60" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40976188" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40976030" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x409944c0" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40994368" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x40993640" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x40993e28" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40993cd0" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40991570" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40991418" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a27940" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a275f0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a277e0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40a45cf0" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a45b98" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a44530" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a441e0" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a443d0" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40a45158" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40a423c8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a44e58" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a42068" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a42260" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40a456e0" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a467f0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a462a0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a46490" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a46688" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a55a70" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a55918" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a51378" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a51010" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40a51218" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40a669e8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40a661a8" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40a64010" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a65e80" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40a656d8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40a6a8e0" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40a6ad20" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40a665e8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40a66de8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40a65328" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a651d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40a65aa8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40357010" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40357918" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40357450" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MultiLed" loc="41:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <short> An interface to control a series of LEDs.</short>
        <long> An interface to control a series of LEDs.&#10;&#10; Allows use of a series of LEDs as a visual binary register.  Bit i&#10; of the value is a 1 iff LED i is on.&#10;&#10; This interface is generically implemented by the LedC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40b19ca0" loc="60:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.set() function for the specified LED.</short>
          <long> Invoke the Led.set() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0&#10; @param turn_on if TRUE, turn LED on; otherwise turn it off *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40b19950" loc="60:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="turn_on" ref="0x40b19b40" loc="60:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40b182d0" loc="64:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.toggle() function for the specified LED.</short>
          <long> Invoke the Led.toggle() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40b18178" loc="64:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b1b3e0" loc="44:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Read the value represented by the on status of the LEDs.</short>
          <long> Read the value represented by the on status of the LEDs. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x40b1bea8" loc="51:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.on() function for the specified LED.</short>
          <long> Invoke the Led.on() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40b1bd50" loc="51:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b1b948" loc="47:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Set the LEDs to represent the given value.</short>
          <long> Set the LEDs to represent the given value. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40b1b7f0" loc="47:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40b194b0" loc="55:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.off() function for the specified LED.</short>
          <long> Invoke the Led.off() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40b19358" loc="55:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocol" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <short> Basic interface used by the PPP infrastructure to connect to an&#10; arbitrary protocol.</short>
        <long> Basic interface used by the PPP infrastructure to connect to an&#10; arbitrary protocol.&#10;&#10; Components that provide this interface should generally define an&#10; enumeration value named Protocol in their specification, so that&#10; applications can wire the interface into the PppC Protocols&#10; subsystem using the correct protocol value.  See&#10; LinkControlProtocolC for a canonical example.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getProtocol" ref="0x40b22168" loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
          <short> Return the protocol code for this protocol.</short>
          <long> Return the protocol code for this protocol.&#10;&#10; This is primarily used to detect unrecognized protocols: a&#10; default implementation is defined that returns protocol 0, which&#10; is an illegal protocol value.  Upon detection of this situation,&#10; the PppC component delegates handling to a module that implements&#10; PppProtocolReject.&#10;&#10; @return A non-zero value for a registered protocol; zero if the&#10; protocol is unknown to the system. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="process" ref="0x40b22ba0" loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
          <short> Process an incoming packet with the given information payload.</short>
          <long> Process an incoming packet with the given information payload.&#10;&#10; The packet memory is owned by the PppC component to which this&#10; protocol has been wired.  Normally, that memory is released for&#10; re-use upon return of this command.  There are cases where the&#10; protocol requires continued access to the data after this command&#10; completes (for example, to await completion of a PPP&#10; transmission).  The called component must invoke the&#10; Ppp.holdInputFrame() command during this command if it requires&#10; continued access to the input buffer.&#10;&#10; @param information A pointer to the start of the information&#10; field for the message.&#10;&#10; @param information_length The number of octets in the information&#10; field.  This may incorporate padding; the protocol must determine&#10; this.&#10;&#10; @return SUCCESS if packet was processed.  ERETRY if the system is&#10; busy but the packet might be processable again later.  Other errors&#10; indicate the packet should not be re-processed. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="information" ref="0x40b227e0" loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="information_length" ref="0x40b22a40" loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rejectedByPeer" ref="0x40b21b58" loc="94:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
          <short> Invoked to inform protocol that the peer rejected it.</short>
          <long> Invoked to inform protocol that the peer rejected it.&#10;&#10; Poor, sad, lonely protocol.&#10;&#10; @param data If not null, this begins the start of the information&#10; field from the message that caused the peer to reject the&#10; protocol.  If null, this is being invoked by the engine after the&#10; link has been reset, indicating that the protocol may re-enable&#10; itself.&#10;&#10; @param data_end Points past the end of whatever portion of the&#10; rejected message was returned by the peer.  Null if data is null.&#10;&#10; @return SUCCESS, please. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b21790" loc="94:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="data_end" ref="0x40b219f8" loc="95:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HdlcUart" loc="50:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <short> Provide basic UART-related functions required for the HdlcFramingC&#10; infrastructure.</short>
        <long> Provide basic UART-related functions required for the HdlcFramingC&#10; infrastructure.&#10;&#10; The HDLC framing infrastructure needs the ability to send blocks of&#10; characters, and to receive characters one-by-one as soon as they&#10; arrive.  The processing done on each received character is fairly&#10; complex.&#10;&#10; The UartStream interface's send command and receiveByte interface&#10; technically meet these needs.  However, both are async operations.&#10; At high serial data rates and when serving as a bridge for a&#10; high-data-rate radio interface, interrupt-driven reception causes&#10; dropped packets.  DMA-based reception can work around this, but the&#10; lack of an a-priori length for received messages makes the&#10; translation to a per-byte reception event complex.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40b1f390" loc="55:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Send len bytes from the given address over the UART.</short>
          <long> Send len bytes from the given address over the UART.&#10;&#10; This command is essentially forwarded to UartStream.send. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40b1f030" loc="55:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b1f230" loc="56:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40b436d8" loc="73:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Notification of a newly received byte.</short>
          <long> Notification of a newly received byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40b43580" loc="73:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b1f9a0" loc="60:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Notification of the result of the most recent send that returned&#10; SUCCESS.</short>
          <long> Notification of the result of the most recent send that returned&#10; SUCCESS. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b1f848" loc="60:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="uartError" ref="0x40b43010" loc="69:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Notification of an error detected in serial processing.</short>
          <long> Notification of an error detected in serial processing.&#10;&#10; The event is raised once for each detected character drop, with&#10; an error value of ENOMEM.  It is raised with the error value&#10; SUCCESS when the infrastructure recovers from dropped characters&#10; and subsequent data is known to be good.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b1fe50" loc="69:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetSetOptions" loc="37:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
        <short> Interface to help with configuring the options associated with a&#10; component.</short>
        <long> Interface to help with configuring the options associated with a&#10; component.  Rather like the GetSet interface, but slightly&#10; different to handle options expressed as a structure.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
        <typedef name="type_t" ref="0x40b42b00" loc="37:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
          <interfacedef-ref qname="GetSetOptions"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b42b00"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b3b5e0" loc="47:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
          <short> Get the current option configuration.</short>
          <long> Get the current option configuration.&#10;&#10; @return A copy of the currently configured options. *</long>
        </documentation>
        <interfacedef-ref qname="GetSetOptions"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b42b00"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b3b188" loc="42:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
          <short> Configure a subsystem.</short>
          <long> Configure a subsystem.&#10;&#10; @param options The proposed options&#10; @return SUCCESS if options are acceptable; EINVAL otherwise. *</long>
        </documentation>
        <interfacedef-ref qname="GetSetOptions"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b42b00"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="options" ref="0x40b3b030" loc="42:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b42b00"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ppp" loc="40:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <short> Core functions provided by the PPP infrastructure: specifically,&#10; management of the internal buffers used for outgoing and incoming&#10; messages.</short>
        <long> Core functions provided by the PPP infrastructure: specifically,&#10; management of the internal buffers used for outgoing and incoming&#10; messages.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="fixOutputFrameLength" ref="0x40b3f4b8" loc="81:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Mark the maximum length of the frame.</short>
          <long> Mark the maximum length of the frame.&#10;&#10; frame_end must lie within the frame identified by the given key.&#10;&#10; This may release memory for use in other output frames. *</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x40b3f0f8" loc="81:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
          </variable>
          <variable name="frame_end" ref="0x40b3f358" loc="81:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="outputFrameTransmitted" ref="0x40b3ed10" loc="112:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Indication that transmission of an output message has been&#10; resolved.</short>
          <long> Indication that transmission of an output message has been&#10; resolved.  The caller may read the message contents until the&#10; event returns.&#10;&#10; @param key The key that identifies the frame that was transmitted&#10; @param result The disposition of the transmission *</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40b3e9a0" loc="112:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x40b3ebb0" loc="113:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendOutputFrame" ref="0x40b3fb60" loc="97:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Transmit an output frame.</short>
          <long> Transmit an output frame.&#10;&#10; @TODO@ Auto-fix length of buffer&#10;&#10; The frame will be submitted for transmission.  If this command&#10; returns SUCCESS, transmission will continue in the background and&#10; its completion will be indicated by the outputFrameTransmitted&#10; event.  With any other return value the transmission failed.&#10;&#10; The caller is not permitted to modify the memory of this frame&#10; after invoking this command.  If this command returns SUCCESS,&#10; the caller may hold on to the frame_end value until the&#10; subsequent outputFrameTransmitted event is signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40b3fa08" loc="97:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releaseOutputFrame" ref="0x40b3e460" loc="104:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Cancel transmission of an output frame.</short>
          <long> Cancel transmission of an output frame.&#10;&#10; The caller is not permitted to access the memory of this frame&#10; after invoking this command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40b3e308" loc="104:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOutputFrame" ref="0x40b40718" loc="71:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Obtain storage for an outbound message.</short>
          <long> Obtain storage for an outbound message.&#10;&#10; The frame is initialized to hold a message associated with the&#10; given protocol.  It is the callers responsibility to fill in the&#10; remainder of the message, then to invoke either sendOutputFrame&#10; if the message is to be transmitted or releaseOutputFrame if the&#10; message is to be dropped.&#10;&#10; It is implementation-defined whether multiple output frames are&#10; available for use.  If no output frames are available, this&#10; command will return a null pointer.&#10;&#10; @return A pointer to the information field of the output message,&#10; or a null pointer if no output buffers are available.&#10; &#10; @param protocol The protocol to which the message will belong.&#10;&#10; @param frame_endp Secondary output value specyfing the address at&#10; which the frame ends.  Attempts to store at or beyond this&#10; address result in undefined behavior.&#10;&#10; @param inhibit_compression Indicate that, for this protocol, all&#10; non-default compression should be inhibited: in particular this&#10; means the protocol will always require two octets, and the&#10; address and control fields will be present.  Required for LCP.&#10;&#10; @param keyp Where to store the key that must be used to identify&#10; this output frame to the other output-related commands.  Assigned&#10; only if this command returns a non-null pointer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="protocol" ref="0x40b20e18" loc="71:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="frame_endp" ref="0x40b400c8" loc="72:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="inhibit_compression" ref="0x40b40340" loc="73:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="keyp" ref="0x40b40588" loc="74:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolCodeSupport" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <short> Most PPP control protocols are modeled on RFC1661's Link Control&#10; Protocol, and use a packet format comprising:&#10; - A one-octet Code field&#10; - A one-octet Identifier field&#10; - A two-octet Length field&#10; - A data field of varying length.</short>
        <long> Most PPP control protocols are modeled on RFC1661's Link Control&#10; Protocol, and use a packet format comprising:&#10; - A one-octet Code field&#10; - A one-octet Identifier field&#10; - A two-octet Length field&#10; - A data field of varying length.&#10;&#10; The code determines the specific format of the data field and how&#10; it should be interpreted.  This interface allows an application to&#10; determine which codes will be supported by only wiring in the ones&#10; that are necessary.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCode" ref="0x40b31500" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
          <short> Return the code for this handler.</short>
          <long> Return the code for this handler.&#10;&#10; This is primarily used to detect unrecognized codes: a default&#10; implementation is defined that returns code 0, which is an&#10; illegal code value.  Upon detection of this situation, the&#10; control protocol will generate a Code-Reject message. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="invoke" ref="0x40b569a8" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
          <short> Invoke some code-specific operation.</short>
          <long> Invoke some code-specific operation.&#10;&#10; Generally it involves building and transmitting a message.  If&#10; so, the key for detection completion of that message should be&#10; returned.&#10;&#10; @param param A code-specific structure, if needed to pass external information&#10;&#10; @param keyp A destination into which the output frame key should&#10; be provided if invocation of this handler results in the&#10; transmission of a message. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b56600" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="keyp" ref="0x40b56848" loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="process" ref="0x40b56178" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
          <short> Process an incoming packet with the given identifer and data&#10; region.</short>
          <long> Process an incoming packet with the given identifer and data&#10; region. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="identifier" ref="0x40b31a90" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b31cd0" loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="data_end" ref="0x40b56010" loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolReject" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
        <short> Allow custom reaction to unrecognized protocols.</short>
        <long> Allow custom reaction to unrecognized protocols.&#10;&#10; If a Link Control Protocol component is available, its&#10; Protocol-Reject message can be used to inform the remote that a&#10; protocol is unrecognized.  Other PPP components may chose to just&#10; drop the message.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <function command="" provided="0" name="process" ref="0x40b54730" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
          <short> Do something when a message with an unrecognized protocol has been received.</short>
          <long> Do something when a message with an unrecognized protocol has been received.&#10;&#10; @param protocol The protocol value from the PPP message&#10;&#10; @param information The start of the information field from the&#10; message&#10;&#10; @param length The number of octets in the information field,&#10; including any subsequent padding&#10;</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolReject"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="protocol" ref="0x40b54160" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="information" ref="0x40b543e0" loc="52:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b545c8" loc="53:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppRejectedProtocol" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
        <short> Support to inform the PPP primary engine that one of the&#10; registered protocols was rejected by the peer.</short>
        <long> Support to inform the PPP primary engine that one of the&#10; registered protocols was rejected by the peer.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="rejected" ref="0x40b44f00" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
          <short> Inform main engine that a ProtocolReject message was received.</short>
          <long> Inform main engine that a ProtocolReject message was received.&#10;&#10; @param protocol The protocol value from the rejected message&#10;&#10; @param data The information field of the rejected message&#10;&#10; @param data_end First byte past the end of whatever portion of&#10; the original message could be returned.&#10;&#10; @return The result of informing the protocol that it has been&#10; rejected (see PppProtocol.rejectedByPeer). *</long>
        </documentation>
        <interfacedef-ref qname="PppRejectedProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="protocol" ref="0x40b448f0" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b44b30" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="data_end" ref="0x40b44d98" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FragmentPool" loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <short> Support for a memory pool that fragments a large block into&#10; arbitrarily sized smaller blocks based on need.</short>
        <long> Support for a memory pool that fragments a large block into&#10; arbitrarily sized smaller blocks based on need.&#10;&#10; The use case is buffer management for arbitrarily-sized messages,&#10; such as HDLC frames received.  A client requests a block of memory,&#10; fills part of it, then returns the remainder to the pool.  It may&#10; then request a new block, while the newly received message is&#10; processed.  Ultimately, the fragment is released back to the pool.&#10; The largest available fragment is returned for each request.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40b5a810" loc="110:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Release the fragment at the given address.</short>
          <long> Release the fragment at the given address.&#10;&#10; @param start The address returned as start from a previous&#10; request that has not been released.&#10;&#10; @return SUCCESS if the fragment was freed.  EINVAL if the start&#10; address does not correspond to a fragment.  EALREADY if the&#10; fragment had already been released. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="start" ref="0x40b5a6b8" loc="110:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="slotCount" ref="0x40b5c688" loc="51:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Number of slots for the pool&#10;&#10; This imposes an upper limit on the number of fragments allowed.</short>
          <long> Number of slots for the pool&#10;&#10; This imposes an upper limit on the number of fragments allowed. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="available" ref="0x40b5aec0" loc="120:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Notification that a new fragment is available.</short>
          <long> Notification that a new fragment is available.&#10;&#10; Clients that require a minimum buffer length in order to function&#10; may link to this event to be notified when a candidate is&#10; created.&#10;&#10; @param length The number of bytes in the newly released&#10; fragment. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x40b5ad68" loc="120:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40b5b1d0" loc="75:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Get the longest available fragment in the pool.</short>
          <long> Get the longest available fragment in the pool.&#10;&#10; @note No error checking is done on the pointers passed to this&#10; method.  You must provide addresses for both the start and the&#10; end fragment pointer.&#10;&#10; @param start Pointer to where the start of the fragment should be&#10; written.  The address will be 16-bit aligned.  The stored value&#10; is valid only when this function returns SUCCESS.&#10;&#10; @param end Pointer to where the end of the fragment should be&#10; written.  This is the offset at which writing is no longer&#10; permitted.  The stored value is valid only when this function&#10; returns SUCCESS.&#10;&#10; @param minimum_size Minimum size, in bytes, that is useful to&#10; the caller.  If the largest available fragment is not at least&#10; this size, returns ENOMEM.&#10;&#10; @return SUCCESS if a fragment is available.  ENOMEM if no&#10; fragments are available.  start and end are updated only if this&#10; returns SUCCESS. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="start" ref="0x40b5cbd0" loc="75:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="end" ref="0x40b5ce00" loc="76:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="minimum_size" ref="0x40b5b068" loc="77:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="poolSize" ref="0x40b5c268" loc="46:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Size of the pool, in bytes *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="freeze" ref="0x40b5bd90" loc="99:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Release part of a previously allocated fragment.</short>
          <long> Release part of a previously allocated fragment.&#10;&#10; Note that a lack of available slots may prevent the fragment from&#10; being split, so there is no guarantee that the remainder of the&#10; fragment is available for re-use.  If it is, available() will be&#10; signaled.  If it is not, the entire fragment remains allocated&#10; until it is released.&#10;&#10; @param start Pointer to the fragment start.  Must be a value&#10; previously returned by request but which has not been released or&#10; frozen.&#10;&#10; @param end Pointer to the first byte of the released portion of&#10; the fragment.&#10;&#10; @return SUCCESS in absence of an error, whether or not the&#10; remainder of the fragment could be made available.  EINVAL if the&#10; provided start does not correspond to a fragment, or if the end&#10; is outside the fragment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="start" ref="0x40b5ba00" loc="99:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="end" ref="0x40b5bc30" loc="100:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HdlcFraming" loc="39:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <short> Interface to support RFC1662-conformant HDLC-like framing of&#10; packets for the Point-to-Point Protocol.</short>
        <long> Interface to support RFC1662-conformant HDLC-like framing of&#10; packets for the Point-to-Point Protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="receivedFrame" ref="0x40b60898" loc="94:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Indicate that a frame has been successfully received.</short>
          <long> Indicate that a frame has been successfully received.&#10;&#10; This event is signalled by a task, not within the UART interrupt&#10; handler.  The signal is asynchronous to any receivedDelimiter()&#10; and receptionError() events.  Regardless of the number of frames&#10; received, a subsequent receivedFrame() event shall not occur&#10; until after the releaseReceivedFrame() command releases the&#10; buffer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b60570" loc="94:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b60738" loc="95:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedDelimiter" ref="0x40b5e7d0" loc="120:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Notification that a flag sequence byte has been received.</short>
          <long> Notification that a flag sequence byte has been received.&#10;&#10; @warning This event is signalled while processing the UART&#10; interrupt.  Act quickly and return.&#10;&#10; It is guaranteed that this event will be signaled prior to the&#10; receivedFrame event. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendFrame" ref="0x40b61178" loc="65:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Initiate transmission of a frame of data.</short>
          <long> Initiate transmission of a frame of data.&#10;&#10; This command starts the state machine and begins to transmit the&#10; provided data.  RFC1662-required delimeters, HDLC address and&#10; control fields, the payload with transparency conversions, and&#10; the 16-bit CRC are all added as the frame is transmitted.&#10;&#10; If this command returns SUCCESS, the sendDone event will be&#10; signaled to indicate the ultimate success/failure of the&#10; transmission.  The pointer passed to this command will be&#10; provided in the event, so components may more easily detect&#10; completion of transmissions they initiated.&#10;&#10; @param data Pointer to a block of data that is to be transmitted.&#10;&#10; @param len Number of octets in the data block.&#10;&#10; @param inhibit_accomp If TRUE, send the address and control&#10; fields even if the implementing component is configured to&#10; suppress them.&#10;&#10; @return SUCCESS if the frame transmission has begun.  EBUSY if&#10; the system is already transmitting a frame.  Other errors if the&#10; underlying UART is unable to transmit data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b66bc8" loc="65:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b66d90" loc="66:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="inhibit_accomp" ref="0x40b61010" loc="67:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b61ee0" loc="81:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Notification that the attempt to transmit a frame of data has&#10; completed.</short>
          <long> Notification that the attempt to transmit a frame of data has&#10; completed.&#10;&#10; @note This event is raised by the HdlcFramingC task.&#10;&#10; @param data The original data pointer provided to sendFrame.&#10;&#10; @param len The original frame length provided to sendFrame.&#10;&#10; @param err The disposition of the transmission: SUCCESS if&#10; succeeded, other values indicating failure in the state machine&#10; or underlying serial transport. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b619c0" loc="81:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b61b88" loc="82:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="err" ref="0x40b61d78" loc="83:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releaseReceivedFrame" ref="0x40b5e168" loc="111:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Inform the framer that it can reclaim space used by the given&#10; frame.</short>
          <long> Inform the framer that it can reclaim space used by the given&#10; frame.&#10;&#10; Each received frame must be released before the next frame will&#10; be signalled.&#10;&#10; It is guaranteed that the next receivedFrame() signal will not&#10; occur during this call.  This allows the caller to release state&#10; after this command without having to worry that the state was&#10; overwritten by the next frame.&#10;&#10; @param data Pointer to the start of a received frame, as provided&#10; through the most recent receiveFrame() event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x40b5e010" loc="111:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receptionError" ref="0x40b5eec0" loc="133:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Notification that an error occurred during frame reception.</short>
          <long> Notification that an error occurred during frame reception.&#10;&#10; Note that a reception error does not release the received buffer.&#10; The system will resynchronize on the next frame delimiter.&#10;&#10; @warning This event is signalled while processing the UART&#10; interrupt.  Act quickly and return.&#10;&#10; It is guaranteed that this event will signaled prior to the&#10; receivedDelimiter event if an unexpected delimiter is the cause&#10; of the error. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="HdlcError_e" ref="0x40b261e8"/>
              <typename><typedef-ref name="HdlcError_e" ref="0x40b25650"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="code" ref="0x40b5ed68" loc="133:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="HdlcError_e" ref="0x40b261e8"/>
              <typename><typedef-ref name="HdlcError_e" ref="0x40b25650"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FragmentPoolStorage" loc="43:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <short> Provide the core configuration information for a specific pool.</short>
        <long> Provide the core configuration information for a specific pool.&#10;&#10; This interface allows each pool to have a different buffer size and&#10; number of available slots.  On software initialization, the overall&#10; pool manager collects the basic information for each pool and&#10; initializes the data structures.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="slotCount" ref="0x40bc7a18" loc="57:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Number of slots for the pool *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="slots" ref="0x40bc75e8" loc="54:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Pointer to the array of slots for the pool *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="FragmentPoolSlot_t" ref="0x40ba8060"/>
              <typename><typedef-ref name="FragmentPoolSlot_t" ref="0x40ba8590"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="id" ref="0x40bca898" loc="45:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> The identifier for the pool; debug use only *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="fragment_pool_id_t" ref="0x40babd20"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="poolSize" ref="0x40bc7138" loc="51:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Size of the pool, in bytess *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pool" ref="0x40bcace0" loc="48:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Address of the start of the pool *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolOption" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <short> Operations that should be supported for each option that can be&#10; configured through an LCP-style automaton negotiation.</short>
        <long> Operations that should be supported for each option that can be&#10; configured through an LCP-style automaton negotiation.&#10;&#10; @note We currently do not support options that can appear multiple&#10; times in a single request.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <function command="" provided="0" name="considerRequest" ref="0x40c5e710" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Determine whether the proposed remote value is acceptable to the&#10; protocol.</short>
          <long> Determine whether the proposed remote value is acceptable to the&#10; protocol.&#10; @return PppControlProtocolCode_Configure{Ack,Nak,Reject},&#10; depending on whether the option value specified at dp is&#10; acceptable to this end of the link. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40c5e380" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40c5e5b0" loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="appendRequest" ref="0x40c5d080" loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Add a proposed local value to a message.</short>
          <long> Add a proposed local value to a message.  The option type and&#10; length fields are already incorporated; only the data portion is&#10; to be stored. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40c5ecb0" loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40c5eee0" loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNegotiable" ref="0x40c60d28" loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Set whether the local value of the option should be negotiated,&#10; based on protocol activity.</short>
          <long> Set whether the local value of the option should be negotiated,&#10; based on protocol activity.&#10;&#10; Option negotiation is set to FALSE upon receipt of a&#10; Configure-Reject message identifying the option, and upon a&#10; Reject return from considerRequest.  It is set to TRUE upon&#10; receipt of a non-Reject return from considerRequest. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="is_negotiable" ref="0x40c60bd0" loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="processNakValue" ref="0x40c858b8" loc="138:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="128:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Process a proposed alternative local value.</short>
          <long> Process a proposed alternative local value.&#10;&#10; This operation is invoked when the remote sends a Configure-Nak&#10; in response to local's Configure-Request.  Generally, the&#10; response should be to replace the original local value with the&#10; value proposed by the peer, or to mark the option non-negotiable.&#10;&#10; @param dp Start of the option value.&#10;&#10; @param dpe First octet past option value. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40c85528" loc="138:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40c85758" loc="139:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRemote" ref="0x40c83228" loc="152:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="141:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Set (reset) the option's remote value.</short>
          <long> Set (reset) the option's remote value.&#10;&#10; The set operation is invoked on each option present in a&#10; transmitted Configure-Ack message (i.e., the remote node&#10; requested the value).  This is done after transmission.  The&#10; reset operation is invoked upon receipt of a Configure-Request.&#10;&#10; @param dp Start of the option value.  If passed as a null&#10; pointer, option is reset to its default.&#10;&#10; @param dpe First octet past option value. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40c85e80" loc="152:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40c830c8" loc="153:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40c5c588" loc="112:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Completely reset the option prior to a new negotiation sequence.</short>
          <long> Completely reset the option prior to a new negotiation sequence.&#10;&#10; This brings things back to their power-up default, and is&#10; executed when the link goes down.  It re-enables options for&#10; negotiation, and restores default proposed local and remote&#10; values. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocal" ref="0x40c5ce70" loc="125:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Set (reset) the option's local value.</short>
          <long> Set (reset) the option's local value.&#10;&#10; The set operation is invoked on each option present in a received&#10; Configure-Ack message (i.e., this node requested the value).  The&#10; reset operation is invoked prior to transmission of a&#10; Configure-Request (need permission for value).&#10;&#10; @param dp Start of the option value.  If passed as a null&#10; pointer, option is reset to its default.&#10;&#10; @param dpe First octet past option value. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40c5cae0" loc="125:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40c5cd10" loc="126:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="appendNakValue" ref="0x40c5ddc8" loc="101:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Add an alternative suggestion to a Nak message.</short>
          <long> Add an alternative suggestion to a Nak message.  The option type&#10; and length fields are already reserved; only the data portion is&#10; to be stored.&#10;&#10; If the option cannot express an acceptable alternative within the&#10; buffer indicated by dp to dpe, the command should return a null&#10; pointer.  Otherwise, the command should return a pointer just&#10; past the last octet of its proposed alternative.&#10;&#10; @param sp The value in the Configure-Request message, in case&#10; that's useful when proposing an alternative&#10;&#10; @param spe Indidates the end of the requested option value&#10;&#10; @param dp Where the proposed alternative should be stored&#10;&#10; @param dpe The limit up to which the proposed alternative may be&#10; written. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sp" ref="0x40c5d5d0" loc="101:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="spe" ref="0x40c5d800" loc="102:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dp" ref="0x40c5da08" loc="103:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40c5dc38" loc="104:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40c60038" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Return the option type code for this option within its protocol.</short>
          <long> Return the option type code for this option within its protocol.&#10;&#10; This is primarily used to detect unrecognized options: a default&#10; implementation is defined that returns option 0, which is an&#10; illegal option value.  Upon detection of this situation, the&#10; configuration processing implementation will generate a&#10; Configure-Reject message. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNegotiable" ref="0x40c605e8" loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Return TRUE iff the option should be added to outgoing&#10; Configure-Request messages.</short>
          <long> Return TRUE iff the option should be added to outgoing&#10; Configure-Request messages.&#10;&#10; If the option is negotiable, appendRequest will invoked to append&#10; the proposed local value to the outgoing request message.&#10;&#10; @note Negotiability of remote values for options is indicated by&#10; the return value of considerRequest. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolCodeCoordinator" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
        <short> Common support for all protocols that use code-based handlers.</short>
        <long> Common support for all protocols that use code-based handlers.&#10;&#10; The set of codes recognized by each protocol is different, but the&#10; process of identifying the code and dispatching to the appropriate&#10; handler is the same.  Similarly, most such protocols produce an&#10; error response via a Code-Reject packet when an unrecognized code&#10; is encountered.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="rejectPacket" ref="0x40c7e0a0" loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
          <short> Generate the appropriate reject packet for an unrecognized input.</short>
          <long> Generate the appropriate reject packet for an unrecognized input.&#10;&#10; @param rejected_protocol Normally zero, indicating a Code-Reject&#10; packet should be produced.  If non-zero, represents an&#10; unrecognized protocol, and generates a Protocol-Reject packet.&#10; This should only be non-zero when invoked from&#10; LinkControlProtocol.&#10;&#10; @param ip pointer to the start of the rejected packet information field&#10;&#10; @param ipe pointer to the first octet following the rejected&#10; packet's information field&#10;&#10; @param keyp where to store the HDLC transmission frame key for&#10; the transmitted packet.  Passing a null pointer indicates the&#10; frame key is not saved (meaning nobody needs to know when the&#10; transmission completes).&#10;</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rejected_protocol" ref="0x40c7f868" loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="ip" ref="0x40c7fa90" loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ipe" ref="0x40c7fcc0" loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keyp" ref="0x40c7ff08" loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40437a98"/></typename>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dispatch" ref="0x40c7f170" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
          <short> Extract the code information from an information field and&#10; dispatch it to the appropriate handler.</short>
          <long> Extract the code information from an information field and&#10; dispatch it to the appropriate handler.&#10;&#10; If the code is not recognized, this produces a Code-Reject packet&#10; in the given protocol.&#10;&#10; @param information the information section of a PPP packet&#10;&#10; @param information_length the number of octets in the information section&#10;&#10; @return The result of invoking the&#10; PppProtocolCodeSupport.process() command for the appropriate&#10; handler (or of submitting the Code-Reject packet)&#10;</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="information" ref="0x40c82d30" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="information_length" ref="0x40c7f010" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppConfigure" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <short> Provide facility to set a complete set of options for a given&#10; protocol.</short>
        <long> Provide facility to set a complete set of options for a given&#10; protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="resetOptions" ref="0x40cdc138" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
          <short> Completely reset all options prior to a new negotiation sequence.</short>
          <long> Completely reset all options prior to a new negotiation sequence.&#10;&#10; This brings things back to their power-up default, and is&#10; executed when the link goes down.  This includes default proposed&#10; local and remote values, as well as resetting whether the option&#10; is negotiable. *</long>
        </documentation>
        <interfacedef-ref qname="PppConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalOptions" ref="0x40cdcc78" loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
          <short> Set (reset) the local value for a protocol's options.</short>
          <long> Set (reset) the local value for a protocol's options.&#10;&#10; This is invoked to set options by passing an encoded option set&#10; extracted from a received Configure-Ack; to convey proposed&#10; alternatives from a Configure-Nak; and to disable negotiation&#10; from a Configure-Reject.  If the code is for Configure-Ack, the&#10; content of this set must match the previously transmitted&#10; Configure-Request.&#10;&#10; This is invoked with null pointers to reset the local values&#10; prior to transmission of a Configure-Request.&#10;&#10; @param code The message type from which the options were received.&#10; @param dp Start of the encoded option sequence; null for reset&#10; @param dpe End of the encoded option sequence; null for reset *</long>
        </documentation>
        <interfacedef-ref qname="PppConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="code" ref="0x40cdc6b8" loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="dp" ref="0x40cdc8e0" loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cdcb10" loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRemoteOptions" ref="0x40cdb9d8" loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
          <short> Set (reset) the remote value for a protocol's options.</short>
          <long> Set (reset) the remote value for a protocol's options.&#10;&#10; This is invoked to set options by passing an encoded option set&#10; extracted from a transmitted Configure-Ack (equivalently, an&#10; accepted received Configure-Request).&#10;&#10; This is invoked with null pointers to reset the remote values&#10; upon receipt of a Configure-Request.&#10;&#10; @param dp Start of the encoded option sequence&#10; @param dpe End of the encoded option sequence *</long>
        </documentation>
        <interfacedef-ref qname="PppConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40cdb648" loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cdb878" loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x40e9a168" loc="49:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40e9a010" loc="49:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
