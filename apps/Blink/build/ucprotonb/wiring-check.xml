<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="62:BlinkAppC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40ab7840"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40450188"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40450188"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40447a08"/></to>
    </wire>
    <wire loc="64:BlinkAppC.nc">
      <from><interface-ref name="Timer0" scoped="" ref="0x40abfc08"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4044a770"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4044a770"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40acf020"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:BlinkAppC.nc">
      <from><interface-ref name="Timer1" scoped="" ref="0x40abd010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b525c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b525c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40acf020"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:BlinkAppC.nc">
      <from><interface-ref name="Timer2" scoped="" ref="0x40aba3a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b4f350"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b4f350"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x40acf020"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:BlinkAppC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40ab85c8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40a86820"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a86820"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40a83d80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40a37c98"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40a33760"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409f05e0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408f2010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40879240"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40bb4e00"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40447da0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40357840"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40357840"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40421188"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40aa9400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40448630"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40448630"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40452a48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40aa9808"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40454ec0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40483960"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x4044e648"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a80830"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40451238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x4044e648"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x40452e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045b0a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4045b0a8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40471e00"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40451608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40453770"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40453770"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40492010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="RF212Init" scoped="" ref="0x404519d0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045c718"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4045c718"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406c3a20"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <from><interface-ref name="BoardInit" scoped="" ref="0x40451d98"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406a38b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045b4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e1d0f0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045b4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40809d50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045b4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d7fac8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045b4b0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406db898"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4046f628"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x4045b4b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x4046f9d8"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x4045b860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x4046fda0"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x40463248"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4046f260"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404835b0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x4049a468"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40494a38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40494a38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x404a42c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x40490a28"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x404a01b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x404a01b8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x404a6298"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4049abc0"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x40493c88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x40493c88"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x405d1ea8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x40491680"/></from>
      <to><interface-ref name="Hold" scoped="" ref="0x405cb760"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x405cb760"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x406955a8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x404a5500"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x404adb58"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x404adb58"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x404abe28"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x404a6298"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x404ab558"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a5f08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404ab240"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x404ad520"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x404ab870"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x404a42c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x404ef308"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x404ed3c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40587d40"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40587d40"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40bb1180"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x404eda70"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x405c0898"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x405c0898"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40bb1cc8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x404efa00"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x404eba88"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x404eba88"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x4055f050"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x404ede68"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></to>
    </wire>
    <wire loc="290:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x404ec1d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x40567a60"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x4055d218"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x404f8c08"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x404f8c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4055dbf0"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x404f7670"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x404f7670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x40568660"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x404f60a0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x404f60a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x40567060"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x404f6a98"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x404f6a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40433098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40a31218"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40433098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4081b2c8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40433098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4071c010"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x40433098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4055bdc8"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x40512670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40505b98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x4050c210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x405152f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x4051dc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x404f9750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40509ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x404fc2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x40503a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4050a0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x404f03d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x40507210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4050f8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40513210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40510750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4050ece8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404fa2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x404ff930"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x405112f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x404fedc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40504670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x4050cc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40515ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x404f8210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x404fcce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x405024b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4050aa98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404f0dc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x405014b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40507c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40513c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x405050a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4050d750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x405168e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4051d210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404face8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x404fe3d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x405094b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x404fd830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x405030a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4050b670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40514750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053d068"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x404f3940"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x40508750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x40502ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40538f28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40511ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4050e2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405347a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x40506670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052d690"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404fb830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40519498"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x40501f28"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40532dc0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x405c0490"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40bb18c0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40bb0218"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x405c0d48"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40bb0640"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40bb2170"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40bb0c38"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x405d1ea8"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40619888"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Write" scoped="" ref="0x405ca228"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x406955a8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x405cac38"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x406955a8"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x405e6750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4066e3b0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x405d6d08"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4062c4f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4062c4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cab010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x405df2f0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40634030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40634030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc7228"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x405e94b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4063eac8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4063eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d15c08"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x405f3ce8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40684b68"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x405d2a98"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4061e988"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4061e988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bf9010"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x405ea0a0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4063f790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4063f790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d187f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40619888"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c22de8"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x405da4b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x406224f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x406224f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c62d70"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x405e4c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4063c170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4063c170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca6010"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x405ed210"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40645c88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40645c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cee0b0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x405c6750"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40621968"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40621968"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bd6a88"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x405cfce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x406295d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x406295d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1ac08"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x405d82f0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40631170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40631170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c5cc08"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x405e2a98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4063be48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4063be48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca1010"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x405e72f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4064e7d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4064e7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d10a88"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x405f4830"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40678b68"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x405e1ea8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40636d30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40636d30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cccde0"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x405d3670"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4061f6b0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4061f6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bfe9e8"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x405ddc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40627250"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40627250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c3fa88"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x405f53d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4066cb68"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x405db0a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40623228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40623228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c65938"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x405e5750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4062ce48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4062ce48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40caa9e8"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x405dfce8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40634988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40634988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc6c08"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x405e9ea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4063d4f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4063d4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d136c0"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x405d14b0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4061d330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4061d330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bf89e8"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x405d08e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4062a250"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4062a250"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1d7f8"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x405daea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40622e48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40622e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c607f8"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x405e3670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4063cac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4063cac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca59e8"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x405edc08"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406446b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406446b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ceda88"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x405d5210"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40620330"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40620330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c01538"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x405ce750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40629f28"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40629f28"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c186c0"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x405d8ce8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40631ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40631ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c5a6c0"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x405e7ce8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4064d170"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4064d170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d0e538"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x405d6210"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4062db00"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4062db00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c81538"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x405e08e0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x406356b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x406356b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc97f8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x405eaa98"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4063e170"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4063e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d16228"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x405f32f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406743b0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x405d20a0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4061e030"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4061e030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bfb538"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x405dc670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40627ba8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40627ba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c3d538"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x405ec670"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40641dc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40641dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cf0de8"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x405dba98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40623b80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40623b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c633b0"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x405e4210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4062b7d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4062b7d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca8538"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x405de750"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40645330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40645330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40cc46c0"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x405e88e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4063de48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4063de48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40d110b0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x405c9cf0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40621010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40621010"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bd7080"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x405cf2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4062aba8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4062aba8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c1b228"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x405d98e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406337d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406337d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c5d228"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x405e20a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4063b4f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4063b4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ca3538"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x405f5dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4067a3b0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x405e14b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x406363d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x406363d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40ccd418"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x405d7750"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406304f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406304f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c580b0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x405d5c08"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40620c88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40620c88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40bff010"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x405dd210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40628890"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40628890"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40c400b0"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x406c2c28"/></from>
      <to><interface-ref name="SELN" scoped="" ref="0x406c9110"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="SELN" scoped="" ref="0x406c9110"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x405094b0"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x406c3e40"/></from>
      <to><interface-ref name="SpiResource" scoped="" ref="0x406c9b30"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x406c9b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x404a42c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x406c25a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x406c82a0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x406c82a0"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x404ad520"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x406c1690"/></from>
      <to><interface-ref name="SLP_TR" scoped="" ref="0x406c8918"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="SLP_TR" scoped="" ref="0x406c8918"/></from>
      <to><interface-ref name="PortG2" scoped="" ref="0x40511ce8"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x406c00b0"/></from>
      <to><interface-ref name="RSTN" scoped="" ref="0x406c73c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="RSTN" scoped="" ref="0x406c73c0"/></from>
      <to><interface-ref name="PortG5" scoped="" ref="0x4051dc08"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x406bf010"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x407d07d0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x407d07d0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x407dae88"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406c6198"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x407774c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x407774c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40d7ff00"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="IRQ" scoped="" ref="0x406d64d0"/></from>
      <to><interface-ref name="IRQ" scoped="" ref="0x407b8010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x406e2ba0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406d0b40"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x406d0b40"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406dd940"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x407b8e08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x406d0b40"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="Interrupt" scoped="" ref="0x407b8720"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x407a7500"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x407b76a8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40793a50"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40767360"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406ec8a8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406ec8a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406dbcd0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x406ebe70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fc078"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406fc078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40714350"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40702a88"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4071e010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40709750"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40712460"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40709750"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x4070f830"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40709750"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40722bd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4071c400"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40d7d930"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fc078"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40d7a958"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40709750"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x407a7500"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40792e70"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x407923a0"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x407a18b8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407e4978"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407efe60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407f60e0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407f4c48"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407f4c48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40808198"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40806338"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x408035c8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408035c8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408115c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x40816d18"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x4081e238"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407fe9b0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x4080d6a8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407fe9b0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40824ab0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407fe9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40822e48"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4081b6b8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x4087a098"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408846f8"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/ucprotonb/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x408846f8"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x407a7500"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x4087a758"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40884d30"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucprotonb/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40884d30"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x405dd210"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40876980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40886370"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40886370"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408f23a8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x40874440"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x40879d30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408f23a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40916de8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4089ee18"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x408b6180"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x408b0148"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x408bf850"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4089d248"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408b68c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408be308"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408bfee8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x408c3140"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x408b6be8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408f2010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40916a50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40909e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408be840"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x408f6430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408f1288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x408f6ae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f2c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40909978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40a5f208"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408f1288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409b7bc8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408f2c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409b7808"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x409b63f8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40909978"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40913260"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40909e80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409b53f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40909e80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409c7c58"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40909e80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409b68e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4090e778"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x409b6db8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x409105b8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40928970"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x409d0040"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40925548"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409d22a8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409d22a8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409f4010"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x409c73d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x409d2728"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x409d2728"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x409f4900"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x409517a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x40934a18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40952010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x4094e428"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x409d4670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x409d4aa8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x409d5588"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x409f4480"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x409f4480"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x409f0d30"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x409f4900"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x409ef170"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x409f4010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409f0918"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a0aee8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409f3450"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x409efa08"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40a188f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40a188f8"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40a34110"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x409efe40"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40a18e08"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40a18e08"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40a34640"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40a0a2b0"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40a17330"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40a17330"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40a34b58"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40a16a18"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40a32628"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40a16010"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40a33bb0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40a16520"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40a32110"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a315e8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40454ec0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a31d28"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a31d28"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a75780"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40a86820"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40a76d00"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x408f1288"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40a75438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x408f2c68"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40909978"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40a767a8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a74a18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x409d22a8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x40a72398"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40a80830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a83a38"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40a9e110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40a82060"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40a82060"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x405e2a98"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40a9eaf8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40a82a48"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40a82a48"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x405e20a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40a9d580"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40a814a0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40a814a0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x405e08e0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x40a9c010"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x40a81e88"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x40a81e88"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x405df2f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x404219c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40428668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4042ee60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x40acf020"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b34210"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40b13010"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40aca280"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40aca280"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e26dd8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40b595a0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b06c60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40e23b60"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e28470"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e28470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e1d528"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e24918"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ae6010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ae6010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ae45c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40e1bf20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406fc078"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40e18010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40709750"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ae2870"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406ec8a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40b129a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b56798"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pSpiC" loc="40:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
        <short>&#10; HPL implementation of the Spi bus for a ST M25P chip connected to a&#10; TI MSP430.</short>
        <long>&#10; HPL implementation of the Spi bus for a ST M25P chip connected to a&#10; TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.SpiMaster" loc="89(Atm128SpiC.SpiMaster):/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128SpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="RF212OffC" loc="1:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <configuration/>
    </component>
    <component qname="RF212OffP" loc="3:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <documentation loc="144:/opt/tinyos-2.x/tos/platforms/ucprotonb/RadioConfig.h">
        <short>&#10; This is the value of the CCA_THRES register that controls the&#10; energy levels used for clear channel assesment&#10;</short>
      </documentation>
      <module/>
    </component>
    <component qname="HplRF212C" loc="26:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplRF212C.Alarm62khz32C" loc="37(HplRF212C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplRF212C.Alarm62khz32C.AtmegaCompareP" loc="35(HplRF212C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplRF212P" loc="26:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212P.nc">
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.x/tos/platforms/ucprotonb/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40471060"/>
            <typename><typedef-ref name="TMcu" ref="0x40471410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40471060"/>
            <typename><typedef-ref name="TMcu" ref="0x40471410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="BoardInitC" loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/BoardInitC.nc">
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos-2.x/tos/platforms/ucprotonb/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="BlinkC" loc="50:BlinkC.nc" safe="">
      <documentation loc="43:BlinkC.nc">
        <short>&#10; Implementation for Blink application.</short>
        <long>&#10; Implementation for Blink application.  Toggle the red LED when a&#10; Timer fires.&#10;*</long>
      </documentation>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer0" loc="44(BlinkAppC.Timer0):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <value cst="I:3">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BlinkAppC.Timer1" loc="44(BlinkAppC.Timer1):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="BlinkAppC.Timer2" loc="44(BlinkAppC.Timer2):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc" abstract="" safe="">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x4051a8a8" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4051aad0" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4051acf8" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40588c38" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x40593a88" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405f1b08" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405f1d20" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405ee010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405f9f08" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405f6148" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405f6370" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x405f6560" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x406483d0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x406485f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40648820" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40648a10" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.x/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x406ea218" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406ea218"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406ea648" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406ea648"/></type-var>
        </typedef>
        <constant name="mode" ref="0x406ea838" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406de8a8" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406de8a8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40774d58" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40774d58"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407711b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407711b8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x407713a8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x407715b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407e5b90" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407e5b90"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407e0010" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407e0010"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x407ed488" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x407ed488"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x407ed8e8" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x407ed8e8"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x407edb50" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x407edb50"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x407ec010" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x407ec010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x407ec278" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x407ec700" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x407ec700"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40ae8980" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40ae8980"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40ae8de0" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40ae8de0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40add058" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40add058"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40add4c8" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40add4c8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40add730" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b076d8" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b076d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40b33290" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40b33290"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40b33470" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40450e28" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40450e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40448050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40450188" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40450188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40450360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40448630" loc="37:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40448630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40448808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40454ec0" loc="39:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40454ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4044e0c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4044e1a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4044e280"/>
        <function-ref name="actualMicro" scoped="" ref="0x4044e360"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4044e440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x4044e648" loc="40:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x4044e648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4044e820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RF212Init" ref="0x404519d0" loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RF212Init" scoped="" ref="0x404519d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40451ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40452a48" loc="39:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40452a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40452c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40451608" loc="45:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40451608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404517e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiSSN" ref="0x4045f330" loc="48:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiSSN" scoped="" ref="0x4045f330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045f508"/>
        <function-ref name="isInput" scoped="" ref="0x4045f5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4045f6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4045f7a8"/>
        <function-ref name="get" scoped="" ref="0x4045f888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4045f968"/>
        <function-ref name="set" scoped="" ref="0x4045fa48"/>
        <function-ref name="clr" scoped="" ref="0x4045fb28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioCS" ref="0x4045fd30" loc="49:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCS" scoped="" ref="0x4045fd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4045ff08"/>
        <function-ref name="isInput" scoped="" ref="0x40459010"/>
        <function-ref name="toggle" scoped="" ref="0x404590f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404591d0"/>
        <function-ref name="get" scoped="" ref="0x404592b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40459390"/>
        <function-ref name="set" scoped="" ref="0x40459470"/>
        <function-ref name="clr" scoped="" ref="0x40459550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40451238" loc="44:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40451238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40451410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x40452e38" loc="43:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x40452e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40451050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BoardInit" ref="0x40451d98" loc="47:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BoardInit" scoped="" ref="0x40451d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045b0a8" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045b0a8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045b280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x4045b860" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x4045b860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045ba38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x4045b4b0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x4045b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045b688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x4046fda0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x4046fda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40478010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40471e00" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40471e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x4046f9d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x4046f9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046fbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4046f260" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4046f260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046f438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x4046f628" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x4046f628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4046f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404835b0" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404835b0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40483788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40483960" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40483960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40483b38"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40483c18"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40483cf8"/>
        <function-ref name="actualMicro" scoped="" ref="0x40483dd8"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40483eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x40463248" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x40463248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40463420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40453770" loc="36:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40453770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40453948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x40490a28" loc="40:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x40490a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x40490c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4049abc0" loc="38:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4049abc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049ad98"/>
        <function-ref name="isInput" scoped="" ref="0x4049ae78"/>
        <function-ref name="toggle" scoped="" ref="0x40491010"/>
        <function-ref name="isOutput" scoped="" ref="0x404910f0"/>
        <function-ref name="get" scoped="" ref="0x404911d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404912b0"/>
        <function-ref name="set" scoped="" ref="0x40491390"/>
        <function-ref name="clr" scoped="" ref="0x40491470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x4049a468" loc="37:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x4049a468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4049a640"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4049a720"/>
        <function-ref name="request" scoped="" ref="0x4049a800"/>
        <function-ref name="granted" scoped="" ref="0x4049a8e0"/>
        <function-ref name="isOwner" scoped="" ref="0x4049a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40492010" loc="36:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40492010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404921e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hold" ref="0x40491680" loc="39:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x40491680"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40491858"/>
        <function-ref name="isInput" scoped="" ref="0x40491938"/>
        <function-ref name="toggle" scoped="" ref="0x40491a18"/>
        <function-ref name="isOutput" scoped="" ref="0x40491af8"/>
        <function-ref name="get" scoped="" ref="0x40491bd8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40491cb8"/>
        <function-ref name="set" scoped="" ref="0x40491d98"/>
        <function-ref name="clr" scoped="" ref="0x40491e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x404a5500" loc="44:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <component-ref qname="HplStm25pSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x404a5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404a56d8"/>
        <function-ref name="sendDone" scoped="" ref="0x404a57b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x404a01b8" loc="43:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <component-ref qname="HplStm25pSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x404a01b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x404a0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40494a38" loc="42:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pSpiC.nc">
      <component-ref qname="HplStm25pSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40494a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40494c10"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40494cf0"/>
        <function-ref name="request" scoped="" ref="0x40494dd0"/>
        <function-ref name="granted" scoped="" ref="0x40494eb0"/>
        <function-ref name="isOwner" scoped="" ref="0x404a0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x404adb58" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x404adb58"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404add30"/>
        <function-ref name="sendDone" scoped="" ref="0x404ade10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x404a6298" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x404a6298"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x404a6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a5f08" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a5f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x404ad520" loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x404ad520"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x404ad6f8"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x404ad7d8"/>
        <function-ref name="splitRead" scoped="" ref="0x404ad8b8"/>
        <function-ref name="write" scoped="" ref="0x404ad998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x404a42c8" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x404a42c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404a44a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404a4580"/>
        <function-ref name="request" scoped="" ref="0x404a4660"/>
        <function-ref name="granted" scoped="" ref="0x404a4740"/>
        <function-ref name="isOwner" scoped="" ref="0x404a4820"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x404ec1d0" loc="290:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x404ec1d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404ec3a8"/>
        <function-ref name="runTask" scoped="" ref="0x404ec488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x404abe28" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x404abe28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404ef050"/>
        <function-ref name="sendDone" scoped="" ref="0x404ef130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x404ed3c8" loc="99:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x404ed3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404ed5b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404ed690"/>
        <function-ref name="request" scoped="" ref="0x404ed770"/>
        <function-ref name="granted" scoped="" ref="0x404ed850"/>
        <function-ref name="isOwner" scoped="" ref="0x404ed930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x404ab558" loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x404ab558"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x404ab730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404ab240" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404ab240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ab418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x404efa00" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x404efa00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x404efbd8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x404ed0f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x404efd98"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x404ed1d0"/>
        <function-ref name="initMaster" scoped="" ref="0x404ee010"/>
        <function-ref name="setMasterBit" scoped="" ref="0x404ee0f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x404ee1d0"/>
        <function-ref name="read" scoped="" ref="0x404ee2b0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x404ee390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x404ee470"/>
        <function-ref name="setClock" scoped="" ref="0x404ee550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x404ee630"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x404ee710"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x404ee870"/>
        <function-ref name="setDataOrder" scoped="" ref="0x404ee950"/>
        <function-ref name="write" scoped="" ref="0x404eea30"/>
        <function-ref name="enableSpi" scoped="" ref="0x404eeb10"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x404eebf0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x404eecd0"/>
        <function-ref name="getClock" scoped="" ref="0x404eedb0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x404eee90"/>
        <function-ref name="sleep" scoped="" ref="0x404efcb8"/>
        <function-ref name="dataReady" scoped="" ref="0x404efe78"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x404ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x404ab870" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x404ab870"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x404aba48"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x404abb28"/>
        <function-ref name="splitRead" scoped="" ref="0x404abc08"/>
        <function-ref name="write" scoped="" ref="0x404abce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x404ef308" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x404ef308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404ef4f0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404ef5d0"/>
        <function-ref name="request" scoped="" ref="0x404ef6b0"/>
        <function-ref name="granted" scoped="" ref="0x404ef790"/>
        <function-ref name="isOwner" scoped="" ref="0x404ef870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x404eda70" loc="100:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x404eda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x404edc48"/>
        <function-ref name="userId" scoped="" ref="0x404edd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x404ede68" loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x404ede68"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x404ec050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x404eba88" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x404eba88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x404ebc60"/>
        <function-ref name="sleep" scoped="" ref="0x404f30f0"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x404ebe20"/>
        <function-ref name="dataReady" scoped="" ref="0x404f31d0"/>
        <function-ref name="initMaster" scoped="" ref="0x404f4010"/>
        <function-ref name="setMasterBit" scoped="" ref="0x404f40f0"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x404f41d0"/>
        <function-ref name="read" scoped="" ref="0x404f42b0"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x404f4390"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x404f4470"/>
        <function-ref name="setClock" scoped="" ref="0x404f4550"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x404f4630"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x404f4710"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x404f4870"/>
        <function-ref name="setDataOrder" scoped="" ref="0x404f4950"/>
        <function-ref name="write" scoped="" ref="0x404f4a30"/>
        <function-ref name="enableSpi" scoped="" ref="0x404f4b10"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x404f4bf0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x404f4cd0"/>
        <function-ref name="getClock" scoped="" ref="0x404f4db0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x404f4e90"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x404ebd40"/>
        <function-ref name="setClockPhase" scoped="" ref="0x404ebf00"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x404f3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x40512670" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x40512670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512a48"/>
        <function-ref name="isInput" scoped="" ref="0x40512b28"/>
        <function-ref name="toggle" scoped="" ref="0x40512c08"/>
        <function-ref name="isOutput" scoped="" ref="0x40512ce8"/>
        <function-ref name="get" scoped="" ref="0x40512dc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512ea8"/>
        <function-ref name="set" scoped="" ref="0x40511010"/>
        <function-ref name="clr" scoped="" ref="0x405110f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40505b98" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40505b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505d70"/>
        <function-ref name="isInput" scoped="" ref="0x40505e50"/>
        <function-ref name="toggle" scoped="" ref="0x40504010"/>
        <function-ref name="isOutput" scoped="" ref="0x405040f0"/>
        <function-ref name="get" scoped="" ref="0x405041d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405042b0"/>
        <function-ref name="set" scoped="" ref="0x40504390"/>
        <function-ref name="clr" scoped="" ref="0x40504470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x4050c210" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x4050c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c688"/>
        <function-ref name="get" scoped="" ref="0x4050c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c848"/>
        <function-ref name="set" scoped="" ref="0x4050c928"/>
        <function-ref name="clr" scoped="" ref="0x4050ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x405152f0" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x405152f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405154c8"/>
        <function-ref name="isInput" scoped="" ref="0x405155a8"/>
        <function-ref name="toggle" scoped="" ref="0x40515688"/>
        <function-ref name="isOutput" scoped="" ref="0x40515768"/>
        <function-ref name="get" scoped="" ref="0x40515848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515928"/>
        <function-ref name="set" scoped="" ref="0x40515a08"/>
        <function-ref name="clr" scoped="" ref="0x40515ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x4051dc08" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x4051dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4051dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4051b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4051b0f0"/>
        <function-ref name="get" scoped="" ref="0x4051b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051b2b0"/>
        <function-ref name="set" scoped="" ref="0x4051b390"/>
        <function-ref name="clr" scoped="" ref="0x4051b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x404f9750" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x404f9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f9928"/>
        <function-ref name="isInput" scoped="" ref="0x404f9a08"/>
        <function-ref name="toggle" scoped="" ref="0x404f9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f9bc8"/>
        <function-ref name="get" scoped="" ref="0x404f9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9d88"/>
        <function-ref name="set" scoped="" ref="0x404f9e68"/>
        <function-ref name="clr" scoped="" ref="0x404f8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40509ea8" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40509ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405160c0"/>
        <function-ref name="isInput" scoped="" ref="0x405161a0"/>
        <function-ref name="toggle" scoped="" ref="0x40516280"/>
        <function-ref name="isOutput" scoped="" ref="0x40516360"/>
        <function-ref name="get" scoped="" ref="0x40516440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40516520"/>
        <function-ref name="set" scoped="" ref="0x40516600"/>
        <function-ref name="clr" scoped="" ref="0x405166e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x404f8c08" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x404f8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f8de0"/>
        <function-ref name="isInput" scoped="" ref="0x404f8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x404f7010"/>
        <function-ref name="isOutput" scoped="" ref="0x404f70f0"/>
        <function-ref name="get" scoped="" ref="0x404f71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f72b0"/>
        <function-ref name="set" scoped="" ref="0x404f7390"/>
        <function-ref name="clr" scoped="" ref="0x404f7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x404fc2f0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x404fc2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fc5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fc688"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc768"/>
        <function-ref name="get" scoped="" ref="0x404fc848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc928"/>
        <function-ref name="set" scoped="" ref="0x404fca08"/>
        <function-ref name="clr" scoped="" ref="0x404fcae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x40503a98" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x40503a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503c70"/>
        <function-ref name="isInput" scoped="" ref="0x40503d50"/>
        <function-ref name="toggle" scoped="" ref="0x40503e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40503f10"/>
        <function-ref name="get" scoped="" ref="0x40502010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405020f0"/>
        <function-ref name="set" scoped="" ref="0x405021d0"/>
        <function-ref name="clr" scoped="" ref="0x405022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4050a0a0" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4050a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a278"/>
        <function-ref name="isInput" scoped="" ref="0x4050a358"/>
        <function-ref name="toggle" scoped="" ref="0x4050a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a518"/>
        <function-ref name="get" scoped="" ref="0x4050a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a6d8"/>
        <function-ref name="set" scoped="" ref="0x4050a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4050a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x404f03d0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x404f03d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f05a8"/>
        <function-ref name="isInput" scoped="" ref="0x404f0688"/>
        <function-ref name="toggle" scoped="" ref="0x404f0768"/>
        <function-ref name="isOutput" scoped="" ref="0x404f0848"/>
        <function-ref name="get" scoped="" ref="0x404f0928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0a08"/>
        <function-ref name="set" scoped="" ref="0x404f0ae8"/>
        <function-ref name="clr" scoped="" ref="0x404f0bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x404f6a98" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x404f6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6c70"/>
        <function-ref name="isInput" scoped="" ref="0x404f6d50"/>
        <function-ref name="toggle" scoped="" ref="0x404f6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6f10"/>
        <function-ref name="get" scoped="" ref="0x40501010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405010f0"/>
        <function-ref name="set" scoped="" ref="0x405011d0"/>
        <function-ref name="clr" scoped="" ref="0x405012b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x40507210" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x40507210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405073e8"/>
        <function-ref name="isInput" scoped="" ref="0x405074c8"/>
        <function-ref name="toggle" scoped="" ref="0x405075a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40507688"/>
        <function-ref name="get" scoped="" ref="0x40507768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507848"/>
        <function-ref name="set" scoped="" ref="0x40507928"/>
        <function-ref name="clr" scoped="" ref="0x40507a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4050f8e0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4050f8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050fab8"/>
        <function-ref name="isInput" scoped="" ref="0x4050fb98"/>
        <function-ref name="toggle" scoped="" ref="0x4050fc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4050fd58"/>
        <function-ref name="get" scoped="" ref="0x4050fe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050ff18"/>
        <function-ref name="set" scoped="" ref="0x4050e010"/>
        <function-ref name="clr" scoped="" ref="0x4050e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40513210" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40513210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405133e8"/>
        <function-ref name="isInput" scoped="" ref="0x405134c8"/>
        <function-ref name="toggle" scoped="" ref="0x405135a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40513688"/>
        <function-ref name="get" scoped="" ref="0x40513768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513848"/>
        <function-ref name="set" scoped="" ref="0x40513928"/>
        <function-ref name="clr" scoped="" ref="0x40513a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40510750" loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40510750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510928"/>
        <function-ref name="isInput" scoped="" ref="0x40510a08"/>
        <function-ref name="toggle" scoped="" ref="0x40510ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40510bc8"/>
        <function-ref name="get" scoped="" ref="0x40510ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510d88"/>
        <function-ref name="set" scoped="" ref="0x40510e68"/>
        <function-ref name="clr" scoped="" ref="0x4051d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4050ece8" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4050ece8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050eec0"/>
        <function-ref name="isInput" scoped="" ref="0x4050d010"/>
        <function-ref name="toggle" scoped="" ref="0x4050d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d1d0"/>
        <function-ref name="get" scoped="" ref="0x4050d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d390"/>
        <function-ref name="set" scoped="" ref="0x4050d470"/>
        <function-ref name="clr" scoped="" ref="0x4050d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404fa2f0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404fa2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fa4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fa5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fa688"/>
        <function-ref name="isOutput" scoped="" ref="0x404fa768"/>
        <function-ref name="get" scoped="" ref="0x404fa848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fa928"/>
        <function-ref name="set" scoped="" ref="0x404faa08"/>
        <function-ref name="clr" scoped="" ref="0x404faae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x404ff930" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x404ff930"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ffb08"/>
        <function-ref name="isInput" scoped="" ref="0x404ffbe8"/>
        <function-ref name="toggle" scoped="" ref="0x404ffcc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404ffda8"/>
        <function-ref name="get" scoped="" ref="0x404ffe88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fe010"/>
        <function-ref name="set" scoped="" ref="0x404fe0f0"/>
        <function-ref name="clr" scoped="" ref="0x404fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x405112f0" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x405112f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405114c8"/>
        <function-ref name="isInput" scoped="" ref="0x405115a8"/>
        <function-ref name="toggle" scoped="" ref="0x40511688"/>
        <function-ref name="isOutput" scoped="" ref="0x40511768"/>
        <function-ref name="get" scoped="" ref="0x40511848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511928"/>
        <function-ref name="set" scoped="" ref="0x40511a08"/>
        <function-ref name="clr" scoped="" ref="0x40511ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x404fedc8" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x404fedc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd010"/>
        <function-ref name="isInput" scoped="" ref="0x404fd0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404fd1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd2b0"/>
        <function-ref name="get" scoped="" ref="0x404fd390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd470"/>
        <function-ref name="set" scoped="" ref="0x404fd550"/>
        <function-ref name="clr" scoped="" ref="0x404fd630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40504670" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40504670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504848"/>
        <function-ref name="isInput" scoped="" ref="0x40504928"/>
        <function-ref name="toggle" scoped="" ref="0x40504a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40504ae8"/>
        <function-ref name="get" scoped="" ref="0x40504bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504ca8"/>
        <function-ref name="set" scoped="" ref="0x40504d88"/>
        <function-ref name="clr" scoped="" ref="0x40504e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x4050cc08" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x4050cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4050cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b0f0"/>
        <function-ref name="get" scoped="" ref="0x4050b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b2b0"/>
        <function-ref name="set" scoped="" ref="0x4050b390"/>
        <function-ref name="clr" scoped="" ref="0x4050b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40515ce8" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40515ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40515ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40514010"/>
        <function-ref name="toggle" scoped="" ref="0x405140f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405141d0"/>
        <function-ref name="get" scoped="" ref="0x405142b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40514390"/>
        <function-ref name="set" scoped="" ref="0x40514470"/>
        <function-ref name="clr" scoped="" ref="0x40514550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x404f8210" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x404f8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f83e8"/>
        <function-ref name="isInput" scoped="" ref="0x404f84c8"/>
        <function-ref name="toggle" scoped="" ref="0x404f85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f8688"/>
        <function-ref name="get" scoped="" ref="0x404f8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f8848"/>
        <function-ref name="set" scoped="" ref="0x404f8928"/>
        <function-ref name="clr" scoped="" ref="0x404f8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x404f7670" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x404f7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7848"/>
        <function-ref name="isInput" scoped="" ref="0x404f7928"/>
        <function-ref name="toggle" scoped="" ref="0x404f7a08"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7ae8"/>
        <function-ref name="get" scoped="" ref="0x404f7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f7ca8"/>
        <function-ref name="set" scoped="" ref="0x404f7d88"/>
        <function-ref name="clr" scoped="" ref="0x404f7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x404fcce8" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x404fcce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fcec0"/>
        <function-ref name="isInput" scoped="" ref="0x40508010"/>
        <function-ref name="toggle" scoped="" ref="0x405080f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405081d0"/>
        <function-ref name="get" scoped="" ref="0x405082b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508390"/>
        <function-ref name="set" scoped="" ref="0x40508470"/>
        <function-ref name="clr" scoped="" ref="0x40508550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x405024b0" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x405024b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502688"/>
        <function-ref name="isInput" scoped="" ref="0x40502768"/>
        <function-ref name="toggle" scoped="" ref="0x40502848"/>
        <function-ref name="isOutput" scoped="" ref="0x40502928"/>
        <function-ref name="get" scoped="" ref="0x40502a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502ae8"/>
        <function-ref name="set" scoped="" ref="0x40502bc8"/>
        <function-ref name="clr" scoped="" ref="0x40502ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4050aa98" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4050aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ac70"/>
        <function-ref name="isInput" scoped="" ref="0x4050ad50"/>
        <function-ref name="toggle" scoped="" ref="0x4050ae30"/>
        <function-ref name="isOutput" scoped="" ref="0x4050af10"/>
        <function-ref name="get" scoped="" ref="0x40509010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405090f0"/>
        <function-ref name="set" scoped="" ref="0x405091d0"/>
        <function-ref name="clr" scoped="" ref="0x405092b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404f0dc8" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404f0dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fb010"/>
        <function-ref name="isInput" scoped="" ref="0x404fb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404fb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fb2b0"/>
        <function-ref name="get" scoped="" ref="0x404fb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fb470"/>
        <function-ref name="set" scoped="" ref="0x404fb550"/>
        <function-ref name="clr" scoped="" ref="0x404fb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x405014b0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x405014b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501708"/>
        <function-ref name="isInput" scoped="" ref="0x405017e8"/>
        <function-ref name="toggle" scoped="" ref="0x405018c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405019a8"/>
        <function-ref name="get" scoped="" ref="0x40501a88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40501b68"/>
        <function-ref name="set" scoped="" ref="0x40501c48"/>
        <function-ref name="clr" scoped="" ref="0x40501d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40507c08" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40507c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507de0"/>
        <function-ref name="isInput" scoped="" ref="0x40507ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40506010"/>
        <function-ref name="isOutput" scoped="" ref="0x405060f0"/>
        <function-ref name="get" scoped="" ref="0x405061d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405062b0"/>
        <function-ref name="set" scoped="" ref="0x40506390"/>
        <function-ref name="clr" scoped="" ref="0x40506470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40513c08" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40513c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513de0"/>
        <function-ref name="isInput" scoped="" ref="0x40513ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40512010"/>
        <function-ref name="isOutput" scoped="" ref="0x405120f0"/>
        <function-ref name="get" scoped="" ref="0x405121d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405122b0"/>
        <function-ref name="set" scoped="" ref="0x40512390"/>
        <function-ref name="clr" scoped="" ref="0x40512470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x405050a0" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x405050a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505378"/>
        <function-ref name="isInput" scoped="" ref="0x40505458"/>
        <function-ref name="toggle" scoped="" ref="0x40505538"/>
        <function-ref name="isOutput" scoped="" ref="0x40505618"/>
        <function-ref name="get" scoped="" ref="0x405056f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405057d8"/>
        <function-ref name="set" scoped="" ref="0x405058b8"/>
        <function-ref name="clr" scoped="" ref="0x40505998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4050d750" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4050d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d928"/>
        <function-ref name="isInput" scoped="" ref="0x4050da08"/>
        <function-ref name="toggle" scoped="" ref="0x4050dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050dbc8"/>
        <function-ref name="get" scoped="" ref="0x4050dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050dd88"/>
        <function-ref name="set" scoped="" ref="0x4050de68"/>
        <function-ref name="clr" scoped="" ref="0x4050c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x405168e0" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x405168e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40516b98"/>
        <function-ref name="toggle" scoped="" ref="0x40516c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40516d58"/>
        <function-ref name="get" scoped="" ref="0x40516e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40516f18"/>
        <function-ref name="set" scoped="" ref="0x40515010"/>
        <function-ref name="clr" scoped="" ref="0x405150f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4051d210" loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4051d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4051d4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4051d5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d688"/>
        <function-ref name="get" scoped="" ref="0x4051d768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d848"/>
        <function-ref name="set" scoped="" ref="0x4051d928"/>
        <function-ref name="clr" scoped="" ref="0x4051da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404face8" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404face8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404faec0"/>
        <function-ref name="isInput" scoped="" ref="0x404f9010"/>
        <function-ref name="toggle" scoped="" ref="0x404f90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404f91d0"/>
        <function-ref name="get" scoped="" ref="0x404f92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f9390"/>
        <function-ref name="set" scoped="" ref="0x404f9470"/>
        <function-ref name="clr" scoped="" ref="0x404f9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x404fe3d0" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x404fe3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fe5a8"/>
        <function-ref name="isInput" scoped="" ref="0x404fe688"/>
        <function-ref name="toggle" scoped="" ref="0x404fe768"/>
        <function-ref name="isOutput" scoped="" ref="0x404fe848"/>
        <function-ref name="get" scoped="" ref="0x404fe928"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fea08"/>
        <function-ref name="set" scoped="" ref="0x404feae8"/>
        <function-ref name="clr" scoped="" ref="0x404febc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x405094b0" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x405094b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509688"/>
        <function-ref name="isInput" scoped="" ref="0x40509768"/>
        <function-ref name="toggle" scoped="" ref="0x40509848"/>
        <function-ref name="isOutput" scoped="" ref="0x40509928"/>
        <function-ref name="get" scoped="" ref="0x40509a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509ae8"/>
        <function-ref name="set" scoped="" ref="0x40509bc8"/>
        <function-ref name="clr" scoped="" ref="0x40509ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x404fd830" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x404fd830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fda08"/>
        <function-ref name="isInput" scoped="" ref="0x404fdae8"/>
        <function-ref name="toggle" scoped="" ref="0x404fdbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fdca8"/>
        <function-ref name="get" scoped="" ref="0x404fdd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fde68"/>
        <function-ref name="set" scoped="" ref="0x404fc010"/>
        <function-ref name="clr" scoped="" ref="0x404fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x405030a0" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x405030a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40503278"/>
        <function-ref name="isInput" scoped="" ref="0x40503358"/>
        <function-ref name="toggle" scoped="" ref="0x40503438"/>
        <function-ref name="isOutput" scoped="" ref="0x40503518"/>
        <function-ref name="get" scoped="" ref="0x405035f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405036d8"/>
        <function-ref name="set" scoped="" ref="0x405037b8"/>
        <function-ref name="clr" scoped="" ref="0x40503898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4050b670" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4050b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b848"/>
        <function-ref name="isInput" scoped="" ref="0x4050b928"/>
        <function-ref name="toggle" scoped="" ref="0x4050ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bae8"/>
        <function-ref name="get" scoped="" ref="0x4050bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bca8"/>
        <function-ref name="set" scoped="" ref="0x4050bd88"/>
        <function-ref name="clr" scoped="" ref="0x4050be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40514750" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40514750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40514928"/>
        <function-ref name="isInput" scoped="" ref="0x40514a08"/>
        <function-ref name="toggle" scoped="" ref="0x40514ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40514bc8"/>
        <function-ref name="get" scoped="" ref="0x40514ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40514d88"/>
        <function-ref name="set" scoped="" ref="0x40514e68"/>
        <function-ref name="clr" scoped="" ref="0x40513010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x404f3940" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x404f3940"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f3b18"/>
        <function-ref name="isInput" scoped="" ref="0x404f3bf8"/>
        <function-ref name="toggle" scoped="" ref="0x404f3cd8"/>
        <function-ref name="isOutput" scoped="" ref="0x404f3db8"/>
        <function-ref name="get" scoped="" ref="0x404f3e98"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f0010"/>
        <function-ref name="set" scoped="" ref="0x404f00f0"/>
        <function-ref name="clr" scoped="" ref="0x404f01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x404f60a0" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x404f60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f6278"/>
        <function-ref name="isInput" scoped="" ref="0x404f6358"/>
        <function-ref name="toggle" scoped="" ref="0x404f6438"/>
        <function-ref name="isOutput" scoped="" ref="0x404f6518"/>
        <function-ref name="get" scoped="" ref="0x404f65f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f66d8"/>
        <function-ref name="set" scoped="" ref="0x404f67b8"/>
        <function-ref name="clr" scoped="" ref="0x404f6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x40508750" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x40508750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508928"/>
        <function-ref name="isInput" scoped="" ref="0x40508a08"/>
        <function-ref name="toggle" scoped="" ref="0x40508ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40508bc8"/>
        <function-ref name="get" scoped="" ref="0x40508ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508d88"/>
        <function-ref name="set" scoped="" ref="0x40508e68"/>
        <function-ref name="clr" scoped="" ref="0x40507010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x40502ea8" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x40502ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4050f1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4050f280"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f360"/>
        <function-ref name="get" scoped="" ref="0x4050f440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f520"/>
        <function-ref name="set" scoped="" ref="0x4050f600"/>
        <function-ref name="clr" scoped="" ref="0x4050f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40511ce8" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40511ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40510010"/>
        <function-ref name="toggle" scoped="" ref="0x405100f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405101d0"/>
        <function-ref name="get" scoped="" ref="0x405102b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510390"/>
        <function-ref name="set" scoped="" ref="0x40510470"/>
        <function-ref name="clr" scoped="" ref="0x40510550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4050e2f0" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4050e2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050e5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050e688"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e768"/>
        <function-ref name="get" scoped="" ref="0x4050e848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e928"/>
        <function-ref name="set" scoped="" ref="0x4050ea08"/>
        <function-ref name="clr" scoped="" ref="0x4050eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x40506670" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x40506670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506848"/>
        <function-ref name="isInput" scoped="" ref="0x40506928"/>
        <function-ref name="toggle" scoped="" ref="0x40506a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40506ae8"/>
        <function-ref name="get" scoped="" ref="0x40506bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40506ca8"/>
        <function-ref name="set" scoped="" ref="0x40506d88"/>
        <function-ref name="clr" scoped="" ref="0x40506e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404fb830" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404fb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fba08"/>
        <function-ref name="isInput" scoped="" ref="0x404fbae8"/>
        <function-ref name="toggle" scoped="" ref="0x404fbbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fbca8"/>
        <function-ref name="get" scoped="" ref="0x404fbd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fbe68"/>
        <function-ref name="set" scoped="" ref="0x404fa010"/>
        <function-ref name="clr" scoped="" ref="0x404fa0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x40501f28" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x40501f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404ff110"/>
        <function-ref name="isInput" scoped="" ref="0x404ff1f0"/>
        <function-ref name="toggle" scoped="" ref="0x404ff2d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404ff3b0"/>
        <function-ref name="get" scoped="" ref="0x404ff490"/>
        <function-ref name="makeOutput" scoped="" ref="0x404ff570"/>
        <function-ref name="set" scoped="" ref="0x404ff650"/>
        <function-ref name="clr" scoped="" ref="0x404ff730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40519498" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40519498"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519680"/>
        <function-ref name="isInput" scoped="" ref="0x40519760"/>
        <function-ref name="toggle" scoped="" ref="0x40519840"/>
        <function-ref name="isOutput" scoped="" ref="0x40519920"/>
        <function-ref name="get" scoped="" ref="0x40519a00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519ae0"/>
        <function-ref name="set" scoped="" ref="0x40519bc0"/>
        <function-ref name="clr" scoped="" ref="0x40519ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40532dc0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40532dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40531010"/>
        <function-ref name="isInput" scoped="" ref="0x405310f0"/>
        <function-ref name="toggle" scoped="" ref="0x405311d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405312b0"/>
        <function-ref name="get" scoped="" ref="0x40531390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40531470"/>
        <function-ref name="set" scoped="" ref="0x40531550"/>
        <function-ref name="clr" scoped="" ref="0x40531630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4052d690" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4052d690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052d878"/>
        <function-ref name="isInput" scoped="" ref="0x4052d958"/>
        <function-ref name="toggle" scoped="" ref="0x4052da38"/>
        <function-ref name="isOutput" scoped="" ref="0x4052db18"/>
        <function-ref name="get" scoped="" ref="0x4052dbf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052dcd8"/>
        <function-ref name="set" scoped="" ref="0x4052ddb8"/>
        <function-ref name="clr" scoped="" ref="0x4052de98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40538f28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40538f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40537120"/>
        <function-ref name="isInput" scoped="" ref="0x40537200"/>
        <function-ref name="toggle" scoped="" ref="0x405372e0"/>
        <function-ref name="isOutput" scoped="" ref="0x405373c0"/>
        <function-ref name="get" scoped="" ref="0x405374a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40537580"/>
        <function-ref name="set" scoped="" ref="0x40537660"/>
        <function-ref name="clr" scoped="" ref="0x40537740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405347a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405347a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40534990"/>
        <function-ref name="isInput" scoped="" ref="0x40534a70"/>
        <function-ref name="toggle" scoped="" ref="0x40534b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40534c30"/>
        <function-ref name="get" scoped="" ref="0x40534d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40534df0"/>
        <function-ref name="set" scoped="" ref="0x40534ed0"/>
        <function-ref name="clr" scoped="" ref="0x40533010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4053d068" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4053d068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053d250"/>
        <function-ref name="isInput" scoped="" ref="0x4053d330"/>
        <function-ref name="toggle" scoped="" ref="0x4053d410"/>
        <function-ref name="isOutput" scoped="" ref="0x4053d4f0"/>
        <function-ref name="get" scoped="" ref="0x4053d5d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053d6b0"/>
        <function-ref name="set" scoped="" ref="0x4053d790"/>
        <function-ref name="clr" scoped="" ref="0x4053d870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4053a8a0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4053a8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053aa88"/>
        <function-ref name="isInput" scoped="" ref="0x4053ab68"/>
        <function-ref name="toggle" scoped="" ref="0x4053ac48"/>
        <function-ref name="isOutput" scoped="" ref="0x4053ad28"/>
        <function-ref name="get" scoped="" ref="0x4053ae08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053aee8"/>
        <function-ref name="set" scoped="" ref="0x40547010"/>
        <function-ref name="clr" scoped="" ref="0x405470f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x40567060" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x40567060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40567238"/>
        <function-ref name="isInput" scoped="" ref="0x40567318"/>
        <function-ref name="toggle" scoped="" ref="0x405673f8"/>
        <function-ref name="isOutput" scoped="" ref="0x405674d8"/>
        <function-ref name="get" scoped="" ref="0x405675b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40567698"/>
        <function-ref name="set" scoped="" ref="0x40567778"/>
        <function-ref name="clr" scoped="" ref="0x40567858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4055bdc8" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4055bdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4055d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x4055dbf0" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4055dbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055ddc8"/>
        <function-ref name="isInput" scoped="" ref="0x4055dea8"/>
        <function-ref name="toggle" scoped="" ref="0x40568010"/>
        <function-ref name="isOutput" scoped="" ref="0x405680f0"/>
        <function-ref name="get" scoped="" ref="0x405681d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405682b0"/>
        <function-ref name="set" scoped="" ref="0x40568390"/>
        <function-ref name="clr" scoped="" ref="0x40568470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4055d218" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4055d218"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055d3f0"/>
        <function-ref name="isInput" scoped="" ref="0x4055d4d0"/>
        <function-ref name="toggle" scoped="" ref="0x4055d5b0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055d690"/>
        <function-ref name="get" scoped="" ref="0x4055d770"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055d850"/>
        <function-ref name="set" scoped="" ref="0x4055d930"/>
        <function-ref name="clr" scoped="" ref="0x4055da10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x4055b908" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4055b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4055bae0"/>
        <function-ref name="stop" scoped="" ref="0x4055bbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x40567a60" loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x40567a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40567c38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x4055f050" loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x4055f050"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x4055f228"/>
        <function-ref name="sleep" scoped="" ref="0x4055e630"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x4055f3e8"/>
        <function-ref name="dataReady" scoped="" ref="0x4055e710"/>
        <function-ref name="initMaster" scoped="" ref="0x4055f5a8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x4055f688"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x4055f768"/>
        <function-ref name="read" scoped="" ref="0x4055f848"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x4055f928"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x4055fa08"/>
        <function-ref name="setClock" scoped="" ref="0x4055fae8"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x4055fbc8"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x4055fca8"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x4055fe08"/>
        <function-ref name="setDataOrder" scoped="" ref="0x4055fee8"/>
        <function-ref name="write" scoped="" ref="0x4055e010"/>
        <function-ref name="enableSpi" scoped="" ref="0x4055e0f0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x4055e1d0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x4055e2b0"/>
        <function-ref name="getClock" scoped="" ref="0x4055e390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x4055e470"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x4055f308"/>
        <function-ref name="setClockPhase" scoped="" ref="0x4055f4c8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x4055e550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x40568660" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x40568660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40568838"/>
        <function-ref name="isInput" scoped="" ref="0x40568918"/>
        <function-ref name="toggle" scoped="" ref="0x405689f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40568ad8"/>
        <function-ref name="get" scoped="" ref="0x40568bb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40568c98"/>
        <function-ref name="set" scoped="" ref="0x40568d78"/>
        <function-ref name="clr" scoped="" ref="0x40568e58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x40433098" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40433098"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40433270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40435078" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40435078"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403503d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403503d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40435250"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40435330"/>
        <function-ref name="led1On" scoped="" ref="0x40435410"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404354f0"/>
        <function-ref name="led3Off" scoped="" ref="0x404355d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404356b0"/>
        <function-ref name="get" scoped="" ref="0x40435790"/>
        <function-ref name="led1Off" scoped="" ref="0x40435870"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40435950"/>
        <function-ref name="led3On" scoped="" ref="0x40435a30"/>
        <function-ref name="led4Off" scoped="" ref="0x40435b10"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40435bf0"/>
        <function-ref name="led0On" scoped="" ref="0x40435cd0"/>
        <function-ref name="led2Off" scoped="" ref="0x40435e30"/>
        <function-ref name="led2On" scoped="" ref="0x40435f10"/>
        <function-ref name="led4On" scoped="" ref="0x40434010"/>
        <function-ref name="set" scoped="" ref="0x404340f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4042ee60" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4042ee60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40437050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40437b20" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40437b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40437cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x405c0490" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x405c0490"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x405c0678"/>
        <function-ref name="immediateRequested" scoped="" ref="0x405c0758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x405c0d48" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x405c0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x405bf010"/>
        <function-ref name="configure" scoped="" ref="0x405bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40587d40" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40587d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40587f28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x405c0018"/>
        <function-ref name="request" scoped="" ref="0x405c00f8"/>
        <function-ref name="granted" scoped="" ref="0x405c01d8"/>
        <function-ref name="isOwner" scoped="" ref="0x405c02b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x405c0898" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x405c0898"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x405c0a70"/>
        <function-ref name="userId" scoped="" ref="0x405c0b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bb4e00" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bb4e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bb2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40bb2170" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40bb2170"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40bb2348"/>
        <function-ref name="isEmpty" scoped="" ref="0x40bb2428"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40bb2508"/>
        <function-ref name="dequeue" scoped="" ref="0x40bb25e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40bb18c0" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40bb18c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40bb1aa8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40bb1b88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40bb0218" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40bb0218"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40bb0400"/>
        <function-ref name="configure" scoped="" ref="0x40bb04e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40bb0640" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40bb0640"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40bb0818"/>
        <function-ref name="isEmpty" scoped="" ref="0x40bb08f8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40bb09d8"/>
        <function-ref name="dequeue" scoped="" ref="0x40bb0ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40bb1180" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40bb1180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bb1368"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bb1448"/>
        <function-ref name="request" scoped="" ref="0x40bb1528"/>
        <function-ref name="granted" scoped="" ref="0x40bb1608"/>
        <function-ref name="isOwner" scoped="" ref="0x40bb16e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40bb1cc8" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40bb1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40bb1ea0"/>
        <function-ref name="userId" scoped="" ref="0x40bb0010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40bb0c38" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40bb0c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bb0e10"/>
        <function-ref name="runTask" scoped="" ref="0x40bb0ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x40493c88" loc="42:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x40493c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40493e60"/>
        <function-ref name="isInput" scoped="" ref="0x405cb010"/>
        <function-ref name="toggle" scoped="" ref="0x405cb0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405cb1d0"/>
        <function-ref name="get" scoped="" ref="0x405cb2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cb390"/>
        <function-ref name="set" scoped="" ref="0x405cb470"/>
        <function-ref name="clr" scoped="" ref="0x405cb550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x405cb760" loc="43:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x405cb760"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cb938"/>
        <function-ref name="isInput" scoped="" ref="0x405cba18"/>
        <function-ref name="toggle" scoped="" ref="0x405cbaf8"/>
        <function-ref name="isOutput" scoped="" ref="0x405cbbd8"/>
        <function-ref name="get" scoped="" ref="0x405cbcb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cbd98"/>
        <function-ref name="set" scoped="" ref="0x405cbe78"/>
        <function-ref name="clr" scoped="" ref="0x405ca010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Write" ref="0x405ca228" loc="44:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Write" scoped="" ref="0x405ca228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ca400"/>
        <function-ref name="isInput" scoped="" ref="0x405ca4e0"/>
        <function-ref name="toggle" scoped="" ref="0x405ca5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x405ca6a0"/>
        <function-ref name="get" scoped="" ref="0x405ca780"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ca860"/>
        <function-ref name="set" scoped="" ref="0x405ca940"/>
        <function-ref name="clr" scoped="" ref="0x405caa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x405cac38" loc="45:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x405cac38"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cae10"/>
        <function-ref name="isInput" scoped="" ref="0x405caef0"/>
        <function-ref name="toggle" scoped="" ref="0x405c9010"/>
        <function-ref name="isOutput" scoped="" ref="0x405c90f0"/>
        <function-ref name="get" scoped="" ref="0x405c91d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c92b0"/>
        <function-ref name="set" scoped="" ref="0x405c9390"/>
        <function-ref name="clr" scoped="" ref="0x405c9470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x405e6750" loc="98:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x405e6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e6b28"/>
        <function-ref name="isInput" scoped="" ref="0x405e6c08"/>
        <function-ref name="toggle" scoped="" ref="0x405e6ce8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e6dc8"/>
        <function-ref name="get" scoped="" ref="0x405e6ea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f5010"/>
        <function-ref name="set" scoped="" ref="0x405f50f0"/>
        <function-ref name="clr" scoped="" ref="0x405f51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x405d6d08" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x405d6d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d6ee0"/>
        <function-ref name="isInput" scoped="" ref="0x405e5010"/>
        <function-ref name="toggle" scoped="" ref="0x405e50f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e51d0"/>
        <function-ref name="get" scoped="" ref="0x405e52b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e5390"/>
        <function-ref name="set" scoped="" ref="0x405e5470"/>
        <function-ref name="clr" scoped="" ref="0x405e5550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x405df2f0" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x405df2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405df4c8"/>
        <function-ref name="isInput" scoped="" ref="0x405df5a8"/>
        <function-ref name="toggle" scoped="" ref="0x405df688"/>
        <function-ref name="isOutput" scoped="" ref="0x405df768"/>
        <function-ref name="get" scoped="" ref="0x405df848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405df928"/>
        <function-ref name="set" scoped="" ref="0x405dfa08"/>
        <function-ref name="clr" scoped="" ref="0x405dfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x405e94b0" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x405e94b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e9688"/>
        <function-ref name="isInput" scoped="" ref="0x405e9768"/>
        <function-ref name="toggle" scoped="" ref="0x405e9848"/>
        <function-ref name="isOutput" scoped="" ref="0x405e9928"/>
        <function-ref name="get" scoped="" ref="0x405e9a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e9ae8"/>
        <function-ref name="set" scoped="" ref="0x405e9bc8"/>
        <function-ref name="clr" scoped="" ref="0x405e9ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x405f3ce8" loc="103:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x405f3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x405f2010"/>
        <function-ref name="toggle" scoped="" ref="0x405f20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405f21d0"/>
        <function-ref name="get" scoped="" ref="0x405f22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f2390"/>
        <function-ref name="set" scoped="" ref="0x405f2470"/>
        <function-ref name="clr" scoped="" ref="0x405f2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x405d2a98" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x405d2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d2c70"/>
        <function-ref name="isInput" scoped="" ref="0x405d2d50"/>
        <function-ref name="toggle" scoped="" ref="0x405d2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x405d2f10"/>
        <function-ref name="get" scoped="" ref="0x405d1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d10f0"/>
        <function-ref name="set" scoped="" ref="0x405d11d0"/>
        <function-ref name="clr" scoped="" ref="0x405d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x405ea0a0" loc="90:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x405ea0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ea278"/>
        <function-ref name="isInput" scoped="" ref="0x405ea358"/>
        <function-ref name="toggle" scoped="" ref="0x405ea438"/>
        <function-ref name="isOutput" scoped="" ref="0x405ea518"/>
        <function-ref name="get" scoped="" ref="0x405ea5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ea6d8"/>
        <function-ref name="set" scoped="" ref="0x405ea7b8"/>
        <function-ref name="clr" scoped="" ref="0x405ea898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x405d1ea8" loc="53:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x405d1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d00c0"/>
        <function-ref name="isInput" scoped="" ref="0x405d01a0"/>
        <function-ref name="toggle" scoped="" ref="0x405d0280"/>
        <function-ref name="isOutput" scoped="" ref="0x405d0360"/>
        <function-ref name="get" scoped="" ref="0x405d0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d0520"/>
        <function-ref name="set" scoped="" ref="0x405d0600"/>
        <function-ref name="clr" scoped="" ref="0x405d06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x405da4b0" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x405da4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405da688"/>
        <function-ref name="isInput" scoped="" ref="0x405da768"/>
        <function-ref name="toggle" scoped="" ref="0x405da848"/>
        <function-ref name="isOutput" scoped="" ref="0x405da928"/>
        <function-ref name="get" scoped="" ref="0x405daa08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405daae8"/>
        <function-ref name="set" scoped="" ref="0x405dabc8"/>
        <function-ref name="clr" scoped="" ref="0x405daca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x405e4c08" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x405e4c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e4de0"/>
        <function-ref name="isInput" scoped="" ref="0x405e4ec0"/>
        <function-ref name="toggle" scoped="" ref="0x405e3010"/>
        <function-ref name="isOutput" scoped="" ref="0x405e30f0"/>
        <function-ref name="get" scoped="" ref="0x405e31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e32b0"/>
        <function-ref name="set" scoped="" ref="0x405e3390"/>
        <function-ref name="clr" scoped="" ref="0x405e3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x405ed210" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x405ed210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ed3e8"/>
        <function-ref name="isInput" scoped="" ref="0x405ed4c8"/>
        <function-ref name="toggle" scoped="" ref="0x405ed5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405ed688"/>
        <function-ref name="get" scoped="" ref="0x405ed768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ed848"/>
        <function-ref name="set" scoped="" ref="0x405ed928"/>
        <function-ref name="clr" scoped="" ref="0x405eda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x405c6750" loc="45:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x405c6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c6928"/>
        <function-ref name="isInput" scoped="" ref="0x405c6a08"/>
        <function-ref name="toggle" scoped="" ref="0x405c6ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405c6bc8"/>
        <function-ref name="get" scoped="" ref="0x405c6ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c6d88"/>
        <function-ref name="set" scoped="" ref="0x405c6e68"/>
        <function-ref name="clr" scoped="" ref="0x405d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x405cfce8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x405cfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cfec0"/>
        <function-ref name="isInput" scoped="" ref="0x405ce010"/>
        <function-ref name="toggle" scoped="" ref="0x405ce0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405ce1d0"/>
        <function-ref name="get" scoped="" ref="0x405ce2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ce390"/>
        <function-ref name="set" scoped="" ref="0x405ce470"/>
        <function-ref name="clr" scoped="" ref="0x405ce550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x405d82f0" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x405d82f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d84c8"/>
        <function-ref name="isInput" scoped="" ref="0x405d85a8"/>
        <function-ref name="toggle" scoped="" ref="0x405d8688"/>
        <function-ref name="isOutput" scoped="" ref="0x405d8768"/>
        <function-ref name="get" scoped="" ref="0x405d8848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d8928"/>
        <function-ref name="set" scoped="" ref="0x405d8a08"/>
        <function-ref name="clr" scoped="" ref="0x405d8ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x405e2a98" loc="78:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x405e2a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e2c70"/>
        <function-ref name="isInput" scoped="" ref="0x405e2d50"/>
        <function-ref name="toggle" scoped="" ref="0x405e2e30"/>
        <function-ref name="isOutput" scoped="" ref="0x405e2f10"/>
        <function-ref name="get" scoped="" ref="0x405e1010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e10f0"/>
        <function-ref name="set" scoped="" ref="0x405e11d0"/>
        <function-ref name="clr" scoped="" ref="0x405e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x405e72f0" loc="95:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x405e72f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e74c8"/>
        <function-ref name="isInput" scoped="" ref="0x405e75a8"/>
        <function-ref name="toggle" scoped="" ref="0x405e7688"/>
        <function-ref name="isOutput" scoped="" ref="0x405e7768"/>
        <function-ref name="get" scoped="" ref="0x405e7848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e7928"/>
        <function-ref name="set" scoped="" ref="0x405e7a08"/>
        <function-ref name="clr" scoped="" ref="0x405e7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x405f4830" loc="101:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x405f4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f4a08"/>
        <function-ref name="isInput" scoped="" ref="0x405f4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x405f4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f4ca8"/>
        <function-ref name="get" scoped="" ref="0x405f4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4e68"/>
        <function-ref name="set" scoped="" ref="0x405f3010"/>
        <function-ref name="clr" scoped="" ref="0x405f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x405e1ea8" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x405e1ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e00c0"/>
        <function-ref name="isInput" scoped="" ref="0x405e01a0"/>
        <function-ref name="toggle" scoped="" ref="0x405e0280"/>
        <function-ref name="isOutput" scoped="" ref="0x405e0360"/>
        <function-ref name="get" scoped="" ref="0x405e0440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e0520"/>
        <function-ref name="set" scoped="" ref="0x405e0600"/>
        <function-ref name="clr" scoped="" ref="0x405e06e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x405d3670" loc="48:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x405d3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d3848"/>
        <function-ref name="isInput" scoped="" ref="0x405d3928"/>
        <function-ref name="toggle" scoped="" ref="0x405d3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x405d3ae8"/>
        <function-ref name="get" scoped="" ref="0x405d3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d3ca8"/>
        <function-ref name="set" scoped="" ref="0x405d3d88"/>
        <function-ref name="clr" scoped="" ref="0x405d3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x405ddc08" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x405ddc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ddde0"/>
        <function-ref name="isInput" scoped="" ref="0x405ddec0"/>
        <function-ref name="toggle" scoped="" ref="0x405dc010"/>
        <function-ref name="isOutput" scoped="" ref="0x405dc0f0"/>
        <function-ref name="get" scoped="" ref="0x405dc1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dc2b0"/>
        <function-ref name="set" scoped="" ref="0x405dc390"/>
        <function-ref name="clr" scoped="" ref="0x405dc470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x405f53d0" loc="99:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x405f53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f55a8"/>
        <function-ref name="isInput" scoped="" ref="0x405f5688"/>
        <function-ref name="toggle" scoped="" ref="0x405f5768"/>
        <function-ref name="isOutput" scoped="" ref="0x405f5848"/>
        <function-ref name="get" scoped="" ref="0x405f5928"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f5a08"/>
        <function-ref name="set" scoped="" ref="0x405f5ae8"/>
        <function-ref name="clr" scoped="" ref="0x405f5bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x405db0a0" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x405db0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405db278"/>
        <function-ref name="isInput" scoped="" ref="0x405db358"/>
        <function-ref name="toggle" scoped="" ref="0x405db438"/>
        <function-ref name="isOutput" scoped="" ref="0x405db518"/>
        <function-ref name="get" scoped="" ref="0x405db5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405db6d8"/>
        <function-ref name="set" scoped="" ref="0x405db7b8"/>
        <function-ref name="clr" scoped="" ref="0x405db898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x405e5750" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x405e5750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e5928"/>
        <function-ref name="isInput" scoped="" ref="0x405e5a08"/>
        <function-ref name="toggle" scoped="" ref="0x405e5ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e5bc8"/>
        <function-ref name="get" scoped="" ref="0x405e5ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e5d88"/>
        <function-ref name="set" scoped="" ref="0x405e5e68"/>
        <function-ref name="clr" scoped="" ref="0x405e4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x405dfce8" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x405dfce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dfec0"/>
        <function-ref name="isInput" scoped="" ref="0x405de010"/>
        <function-ref name="toggle" scoped="" ref="0x405de0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405de1d0"/>
        <function-ref name="get" scoped="" ref="0x405de2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405de390"/>
        <function-ref name="set" scoped="" ref="0x405de470"/>
        <function-ref name="clr" scoped="" ref="0x405de550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x405e9ea8" loc="93:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x405e9ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e80c0"/>
        <function-ref name="isInput" scoped="" ref="0x405e81a0"/>
        <function-ref name="toggle" scoped="" ref="0x405e8280"/>
        <function-ref name="isOutput" scoped="" ref="0x405e8360"/>
        <function-ref name="get" scoped="" ref="0x405e8440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e8520"/>
        <function-ref name="set" scoped="" ref="0x405e8600"/>
        <function-ref name="clr" scoped="" ref="0x405e86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x405d14b0" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x405d14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d1688"/>
        <function-ref name="isInput" scoped="" ref="0x405d1768"/>
        <function-ref name="toggle" scoped="" ref="0x405d1848"/>
        <function-ref name="isOutput" scoped="" ref="0x405d1928"/>
        <function-ref name="get" scoped="" ref="0x405d1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d1ae8"/>
        <function-ref name="set" scoped="" ref="0x405d1bc8"/>
        <function-ref name="clr" scoped="" ref="0x405d1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x405d08e0" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x405d08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x405d0b98"/>
        <function-ref name="toggle" scoped="" ref="0x405d0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x405d0d58"/>
        <function-ref name="get" scoped="" ref="0x405d0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d0f18"/>
        <function-ref name="set" scoped="" ref="0x405cf010"/>
        <function-ref name="clr" scoped="" ref="0x405cf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x405daea8" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x405daea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d90c0"/>
        <function-ref name="isInput" scoped="" ref="0x405d91a0"/>
        <function-ref name="toggle" scoped="" ref="0x405d9280"/>
        <function-ref name="isOutput" scoped="" ref="0x405d9360"/>
        <function-ref name="get" scoped="" ref="0x405d9440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d9520"/>
        <function-ref name="set" scoped="" ref="0x405d9600"/>
        <function-ref name="clr" scoped="" ref="0x405d96e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x405e3670" loc="76:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x405e3670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e3848"/>
        <function-ref name="isInput" scoped="" ref="0x405e3928"/>
        <function-ref name="toggle" scoped="" ref="0x405e3a08"/>
        <function-ref name="isOutput" scoped="" ref="0x405e3ae8"/>
        <function-ref name="get" scoped="" ref="0x405e3bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e3ca8"/>
        <function-ref name="set" scoped="" ref="0x405e3d88"/>
        <function-ref name="clr" scoped="" ref="0x405e3e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x405edc08" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x405edc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405edde0"/>
        <function-ref name="isInput" scoped="" ref="0x405edec0"/>
        <function-ref name="toggle" scoped="" ref="0x405ec010"/>
        <function-ref name="isOutput" scoped="" ref="0x405ec0f0"/>
        <function-ref name="get" scoped="" ref="0x405ec1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ec2b0"/>
        <function-ref name="set" scoped="" ref="0x405ec390"/>
        <function-ref name="clr" scoped="" ref="0x405ec470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x405d5210" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x405d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d53e8"/>
        <function-ref name="isInput" scoped="" ref="0x405d54c8"/>
        <function-ref name="toggle" scoped="" ref="0x405d55a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d5688"/>
        <function-ref name="get" scoped="" ref="0x405d5768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d5848"/>
        <function-ref name="set" scoped="" ref="0x405d5928"/>
        <function-ref name="clr" scoped="" ref="0x405d5a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x405ce750" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x405ce750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ce9a8"/>
        <function-ref name="isInput" scoped="" ref="0x405cea88"/>
        <function-ref name="toggle" scoped="" ref="0x405ceb68"/>
        <function-ref name="isOutput" scoped="" ref="0x405cec48"/>
        <function-ref name="get" scoped="" ref="0x405ced28"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cee08"/>
        <function-ref name="set" scoped="" ref="0x405ceee8"/>
        <function-ref name="clr" scoped="" ref="0x405dd010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x405d8ce8" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x405d8ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d8ec0"/>
        <function-ref name="isInput" scoped="" ref="0x405d7010"/>
        <function-ref name="toggle" scoped="" ref="0x405d70f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405d71d0"/>
        <function-ref name="get" scoped="" ref="0x405d72b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d7390"/>
        <function-ref name="set" scoped="" ref="0x405d7470"/>
        <function-ref name="clr" scoped="" ref="0x405d7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x405e7ce8" loc="96:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x405e7ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e7ec0"/>
        <function-ref name="isInput" scoped="" ref="0x405e6010"/>
        <function-ref name="toggle" scoped="" ref="0x405e60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e61d0"/>
        <function-ref name="get" scoped="" ref="0x405e62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e6390"/>
        <function-ref name="set" scoped="" ref="0x405e6470"/>
        <function-ref name="clr" scoped="" ref="0x405e6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x405d6210" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x405d6210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d64e8"/>
        <function-ref name="isInput" scoped="" ref="0x405d65c8"/>
        <function-ref name="toggle" scoped="" ref="0x405d66a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d6788"/>
        <function-ref name="get" scoped="" ref="0x405d6868"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d6948"/>
        <function-ref name="set" scoped="" ref="0x405d6a28"/>
        <function-ref name="clr" scoped="" ref="0x405d6b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x405e08e0" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x405e08e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e0ab8"/>
        <function-ref name="isInput" scoped="" ref="0x405e0b98"/>
        <function-ref name="toggle" scoped="" ref="0x405e0c78"/>
        <function-ref name="isOutput" scoped="" ref="0x405e0d58"/>
        <function-ref name="get" scoped="" ref="0x405e0e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e0f18"/>
        <function-ref name="set" scoped="" ref="0x405df010"/>
        <function-ref name="clr" scoped="" ref="0x405df0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x405eaa98" loc="91:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x405eaa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405eac70"/>
        <function-ref name="isInput" scoped="" ref="0x405ead50"/>
        <function-ref name="toggle" scoped="" ref="0x405eae30"/>
        <function-ref name="isOutput" scoped="" ref="0x405eaf10"/>
        <function-ref name="get" scoped="" ref="0x405e9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e90f0"/>
        <function-ref name="set" scoped="" ref="0x405e91d0"/>
        <function-ref name="clr" scoped="" ref="0x405e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x405f32f0" loc="102:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x405f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f34c8"/>
        <function-ref name="isInput" scoped="" ref="0x405f35a8"/>
        <function-ref name="toggle" scoped="" ref="0x405f3688"/>
        <function-ref name="isOutput" scoped="" ref="0x405f3768"/>
        <function-ref name="get" scoped="" ref="0x405f3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f3928"/>
        <function-ref name="set" scoped="" ref="0x405f3a08"/>
        <function-ref name="clr" scoped="" ref="0x405f3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x405d20a0" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x405d20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d2278"/>
        <function-ref name="isInput" scoped="" ref="0x405d2358"/>
        <function-ref name="toggle" scoped="" ref="0x405d2438"/>
        <function-ref name="isOutput" scoped="" ref="0x405d2518"/>
        <function-ref name="get" scoped="" ref="0x405d25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d26d8"/>
        <function-ref name="set" scoped="" ref="0x405d27b8"/>
        <function-ref name="clr" scoped="" ref="0x405d2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x405dc670" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x405dc670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dc848"/>
        <function-ref name="isInput" scoped="" ref="0x405dc928"/>
        <function-ref name="toggle" scoped="" ref="0x405dca08"/>
        <function-ref name="isOutput" scoped="" ref="0x405dcae8"/>
        <function-ref name="get" scoped="" ref="0x405dcbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dcca8"/>
        <function-ref name="set" scoped="" ref="0x405dcd88"/>
        <function-ref name="clr" scoped="" ref="0x405dce68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x405ec670" loc="89:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x405ec670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ec848"/>
        <function-ref name="isInput" scoped="" ref="0x405ec928"/>
        <function-ref name="toggle" scoped="" ref="0x405eca08"/>
        <function-ref name="isOutput" scoped="" ref="0x405ecae8"/>
        <function-ref name="get" scoped="" ref="0x405ecbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ecca8"/>
        <function-ref name="set" scoped="" ref="0x405ecd88"/>
        <function-ref name="clr" scoped="" ref="0x405ece68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x405dba98" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x405dba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dbc70"/>
        <function-ref name="isInput" scoped="" ref="0x405dbd50"/>
        <function-ref name="toggle" scoped="" ref="0x405dbe30"/>
        <function-ref name="isOutput" scoped="" ref="0x405dbf10"/>
        <function-ref name="get" scoped="" ref="0x405da010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405da0f0"/>
        <function-ref name="set" scoped="" ref="0x405da1d0"/>
        <function-ref name="clr" scoped="" ref="0x405da2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x405e4210" loc="74:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x405e4210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e43e8"/>
        <function-ref name="isInput" scoped="" ref="0x405e44c8"/>
        <function-ref name="toggle" scoped="" ref="0x405e45a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e4688"/>
        <function-ref name="get" scoped="" ref="0x405e4768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e4848"/>
        <function-ref name="set" scoped="" ref="0x405e4928"/>
        <function-ref name="clr" scoped="" ref="0x405e4a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x405de750" loc="85:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x405de750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405de928"/>
        <function-ref name="isInput" scoped="" ref="0x405dea08"/>
        <function-ref name="toggle" scoped="" ref="0x405deae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405debc8"/>
        <function-ref name="get" scoped="" ref="0x405deca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ded88"/>
        <function-ref name="set" scoped="" ref="0x405dee68"/>
        <function-ref name="clr" scoped="" ref="0x405ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x405e88e0" loc="94:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x405e88e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e8ab8"/>
        <function-ref name="isInput" scoped="" ref="0x405e8b98"/>
        <function-ref name="toggle" scoped="" ref="0x405e8c78"/>
        <function-ref name="isOutput" scoped="" ref="0x405e8d58"/>
        <function-ref name="get" scoped="" ref="0x405e8e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e8f18"/>
        <function-ref name="set" scoped="" ref="0x405e7010"/>
        <function-ref name="clr" scoped="" ref="0x405e70f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x405c9cf0" loc="44:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x405c9cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c9ec8"/>
        <function-ref name="isInput" scoped="" ref="0x405c6010"/>
        <function-ref name="toggle" scoped="" ref="0x405c60f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405c61d0"/>
        <function-ref name="get" scoped="" ref="0x405c62b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c6390"/>
        <function-ref name="set" scoped="" ref="0x405c6470"/>
        <function-ref name="clr" scoped="" ref="0x405c6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x405cf2f0" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x405cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cf4c8"/>
        <function-ref name="isInput" scoped="" ref="0x405cf5a8"/>
        <function-ref name="toggle" scoped="" ref="0x405cf688"/>
        <function-ref name="isOutput" scoped="" ref="0x405cf768"/>
        <function-ref name="get" scoped="" ref="0x405cf848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cf928"/>
        <function-ref name="set" scoped="" ref="0x405cfa08"/>
        <function-ref name="clr" scoped="" ref="0x405cfae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x405d98e0" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x405d98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d9ab8"/>
        <function-ref name="isInput" scoped="" ref="0x405d9b98"/>
        <function-ref name="toggle" scoped="" ref="0x405d9c78"/>
        <function-ref name="isOutput" scoped="" ref="0x405d9d58"/>
        <function-ref name="get" scoped="" ref="0x405d9e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d9f18"/>
        <function-ref name="set" scoped="" ref="0x405d8010"/>
        <function-ref name="clr" scoped="" ref="0x405d80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x405e20a0" loc="77:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x405e20a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e2278"/>
        <function-ref name="isInput" scoped="" ref="0x405e2358"/>
        <function-ref name="toggle" scoped="" ref="0x405e2438"/>
        <function-ref name="isOutput" scoped="" ref="0x405e2518"/>
        <function-ref name="get" scoped="" ref="0x405e25f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e26d8"/>
        <function-ref name="set" scoped="" ref="0x405e27b8"/>
        <function-ref name="clr" scoped="" ref="0x405e2898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x405f5dc8" loc="100:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x405f5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f4010"/>
        <function-ref name="isInput" scoped="" ref="0x405f40f0"/>
        <function-ref name="toggle" scoped="" ref="0x405f41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405f42b0"/>
        <function-ref name="get" scoped="" ref="0x405f4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4470"/>
        <function-ref name="set" scoped="" ref="0x405f4550"/>
        <function-ref name="clr" scoped="" ref="0x405f4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x405e14b0" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x405e14b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e1688"/>
        <function-ref name="isInput" scoped="" ref="0x405e1768"/>
        <function-ref name="toggle" scoped="" ref="0x405e1848"/>
        <function-ref name="isOutput" scoped="" ref="0x405e1928"/>
        <function-ref name="get" scoped="" ref="0x405e1a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e1ae8"/>
        <function-ref name="set" scoped="" ref="0x405e1bc8"/>
        <function-ref name="clr" scoped="" ref="0x405e1ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x405d7750" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x405d7750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d7928"/>
        <function-ref name="isInput" scoped="" ref="0x405d7a08"/>
        <function-ref name="toggle" scoped="" ref="0x405d7ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d7bc8"/>
        <function-ref name="get" scoped="" ref="0x405d7ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d7d88"/>
        <function-ref name="set" scoped="" ref="0x405d7e68"/>
        <function-ref name="clr" scoped="" ref="0x405d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x405d5c08" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x405d5c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d5de0"/>
        <function-ref name="isInput" scoped="" ref="0x405d5ec0"/>
        <function-ref name="toggle" scoped="" ref="0x405d3010"/>
        <function-ref name="isOutput" scoped="" ref="0x405d30f0"/>
        <function-ref name="get" scoped="" ref="0x405d31d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d32b0"/>
        <function-ref name="set" scoped="" ref="0x405d3390"/>
        <function-ref name="clr" scoped="" ref="0x405d3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x405dd210" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x405dd210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dd3e8"/>
        <function-ref name="isInput" scoped="" ref="0x405dd4c8"/>
        <function-ref name="toggle" scoped="" ref="0x405dd5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405dd688"/>
        <function-ref name="get" scoped="" ref="0x405dd768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dd848"/>
        <function-ref name="set" scoped="" ref="0x405dd928"/>
        <function-ref name="clr" scoped="" ref="0x405dda08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40620330" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40620330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40620508"/>
        <function-ref name="isInput" scoped="" ref="0x406205e8"/>
        <function-ref name="toggle" scoped="" ref="0x406206c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406207a8"/>
        <function-ref name="get" scoped="" ref="0x40620888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40620968"/>
        <function-ref name="set" scoped="" ref="0x40620a48"/>
        <function-ref name="clr" scoped="" ref="0x40620b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4061e030" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4061e030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061e208"/>
        <function-ref name="isInput" scoped="" ref="0x4061e2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4061e3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4061e4a8"/>
        <function-ref name="get" scoped="" ref="0x4061e588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061e668"/>
        <function-ref name="set" scoped="" ref="0x4061e748"/>
        <function-ref name="clr" scoped="" ref="0x4061e828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40621010" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40621010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406211e8"/>
        <function-ref name="isInput" scoped="" ref="0x406212c8"/>
        <function-ref name="toggle" scoped="" ref="0x406213a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40621488"/>
        <function-ref name="get" scoped="" ref="0x40621568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40621648"/>
        <function-ref name="set" scoped="" ref="0x40621728"/>
        <function-ref name="clr" scoped="" ref="0x40621808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40620c88" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40620c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40620e60"/>
        <function-ref name="isInput" scoped="" ref="0x4061f010"/>
        <function-ref name="toggle" scoped="" ref="0x4061f0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4061f1d0"/>
        <function-ref name="get" scoped="" ref="0x4061f2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061f390"/>
        <function-ref name="set" scoped="" ref="0x4061f470"/>
        <function-ref name="clr" scoped="" ref="0x4061f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4061e988" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4061e988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061eb60"/>
        <function-ref name="isInput" scoped="" ref="0x4061ec40"/>
        <function-ref name="toggle" scoped="" ref="0x4061ed20"/>
        <function-ref name="isOutput" scoped="" ref="0x4061ee00"/>
        <function-ref name="get" scoped="" ref="0x4061eee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061d010"/>
        <function-ref name="set" scoped="" ref="0x4061d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4061d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40621968" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40621968"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40621b40"/>
        <function-ref name="isInput" scoped="" ref="0x40621c20"/>
        <function-ref name="toggle" scoped="" ref="0x40621d00"/>
        <function-ref name="isOutput" scoped="" ref="0x40621de0"/>
        <function-ref name="get" scoped="" ref="0x40621ec0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40620010"/>
        <function-ref name="set" scoped="" ref="0x406200f0"/>
        <function-ref name="clr" scoped="" ref="0x406201d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4061f6b0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4061f6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061f888"/>
        <function-ref name="isInput" scoped="" ref="0x4061f968"/>
        <function-ref name="toggle" scoped="" ref="0x4061fa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4061fb28"/>
        <function-ref name="get" scoped="" ref="0x4061fc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061fce8"/>
        <function-ref name="set" scoped="" ref="0x4061fdc8"/>
        <function-ref name="clr" scoped="" ref="0x4061fea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4061d330" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4061d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4061d508"/>
        <function-ref name="isInput" scoped="" ref="0x4061d5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4061d6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4061d7a8"/>
        <function-ref name="get" scoped="" ref="0x4061d888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4061d968"/>
        <function-ref name="set" scoped="" ref="0x4061da48"/>
        <function-ref name="clr" scoped="" ref="0x4061db28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bd7080" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bd7080"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bd7258"/>
        <function-ref name="isInput" scoped="" ref="0x40bd7338"/>
        <function-ref name="toggle" scoped="" ref="0x40bd7418"/>
        <function-ref name="isOutput" scoped="" ref="0x40bd74f8"/>
        <function-ref name="get" scoped="" ref="0x40bd75d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bd76b8"/>
        <function-ref name="set" scoped="" ref="0x40bd7798"/>
        <function-ref name="clr" scoped="" ref="0x40bd7878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bd6a88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bd6a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bd6c60"/>
        <function-ref name="isInput" scoped="" ref="0x40bd6d40"/>
        <function-ref name="toggle" scoped="" ref="0x40bd6e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40bd6f00"/>
        <function-ref name="get" scoped="" ref="0x40c02010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c020f0"/>
        <function-ref name="set" scoped="" ref="0x40c021d0"/>
        <function-ref name="clr" scoped="" ref="0x40c022b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c01538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c01538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c01710"/>
        <function-ref name="isInput" scoped="" ref="0x40c017f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c018d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c019b0"/>
        <function-ref name="get" scoped="" ref="0x40c01a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c01b70"/>
        <function-ref name="set" scoped="" ref="0x40c01c50"/>
        <function-ref name="clr" scoped="" ref="0x40c01d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bff010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bff010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bff1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bff2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bff3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bff488"/>
        <function-ref name="get" scoped="" ref="0x40bff568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bff648"/>
        <function-ref name="set" scoped="" ref="0x40bff728"/>
        <function-ref name="clr" scoped="" ref="0x40bff808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bfe9e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bfe9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bfebc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bfeca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bfed80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bfee60"/>
        <function-ref name="get" scoped="" ref="0x40bfc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bfc0f0"/>
        <function-ref name="set" scoped="" ref="0x40bfc1d0"/>
        <function-ref name="clr" scoped="" ref="0x40bfc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bfb538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bfb538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bfb710"/>
        <function-ref name="isInput" scoped="" ref="0x40bfb7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40bfb8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40bfb9b0"/>
        <function-ref name="get" scoped="" ref="0x40bfba90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bfbb70"/>
        <function-ref name="set" scoped="" ref="0x40bfbc50"/>
        <function-ref name="clr" scoped="" ref="0x40bfbd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bf9010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bf9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bf91e8"/>
        <function-ref name="isInput" scoped="" ref="0x40bf92c8"/>
        <function-ref name="toggle" scoped="" ref="0x40bf93a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bf9488"/>
        <function-ref name="get" scoped="" ref="0x40bf9568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bf9648"/>
        <function-ref name="set" scoped="" ref="0x40bf9728"/>
        <function-ref name="clr" scoped="" ref="0x40bf9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40bf89e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40bf89e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bf8bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40bf8ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40bf8d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40bf8e60"/>
        <function-ref name="get" scoped="" ref="0x40bf7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bf70f0"/>
        <function-ref name="set" scoped="" ref="0x40bf71d0"/>
        <function-ref name="clr" scoped="" ref="0x40bf72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4062aba8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4062aba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062ad80"/>
        <function-ref name="isInput" scoped="" ref="0x4062ae60"/>
        <function-ref name="toggle" scoped="" ref="0x40629010"/>
        <function-ref name="isOutput" scoped="" ref="0x406290f0"/>
        <function-ref name="get" scoped="" ref="0x406291d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406292b0"/>
        <function-ref name="set" scoped="" ref="0x40629390"/>
        <function-ref name="clr" scoped="" ref="0x40629470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40628890" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40628890"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628a68"/>
        <function-ref name="isInput" scoped="" ref="0x40628b48"/>
        <function-ref name="toggle" scoped="" ref="0x40628c28"/>
        <function-ref name="isOutput" scoped="" ref="0x40628d08"/>
        <function-ref name="get" scoped="" ref="0x40628de8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40628ec8"/>
        <function-ref name="set" scoped="" ref="0x40627010"/>
        <function-ref name="clr" scoped="" ref="0x406270f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40619888" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40619888"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40619a60"/>
        <function-ref name="isInput" scoped="" ref="0x40619b40"/>
        <function-ref name="toggle" scoped="" ref="0x40619c20"/>
        <function-ref name="isOutput" scoped="" ref="0x40619d00"/>
        <function-ref name="get" scoped="" ref="0x40619de0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40619ec0"/>
        <function-ref name="set" scoped="" ref="0x4062a010"/>
        <function-ref name="clr" scoped="" ref="0x4062a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x406295d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x406295d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406297a8"/>
        <function-ref name="isInput" scoped="" ref="0x40629888"/>
        <function-ref name="toggle" scoped="" ref="0x40629968"/>
        <function-ref name="isOutput" scoped="" ref="0x40629a48"/>
        <function-ref name="get" scoped="" ref="0x40629b28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40629c08"/>
        <function-ref name="set" scoped="" ref="0x40629ce8"/>
        <function-ref name="clr" scoped="" ref="0x40629dc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40627250" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40627250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40627428"/>
        <function-ref name="isInput" scoped="" ref="0x40627508"/>
        <function-ref name="toggle" scoped="" ref="0x406275e8"/>
        <function-ref name="isOutput" scoped="" ref="0x406276c8"/>
        <function-ref name="get" scoped="" ref="0x406277a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40627888"/>
        <function-ref name="set" scoped="" ref="0x40627968"/>
        <function-ref name="clr" scoped="" ref="0x40627a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4062a250" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4062a250"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062a428"/>
        <function-ref name="isInput" scoped="" ref="0x4062a508"/>
        <function-ref name="toggle" scoped="" ref="0x4062a5e8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062a6c8"/>
        <function-ref name="get" scoped="" ref="0x4062a7a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062a888"/>
        <function-ref name="set" scoped="" ref="0x4062a968"/>
        <function-ref name="clr" scoped="" ref="0x4062aa48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40629f28" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40629f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628110"/>
        <function-ref name="isInput" scoped="" ref="0x406281f0"/>
        <function-ref name="toggle" scoped="" ref="0x406282d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406283b0"/>
        <function-ref name="get" scoped="" ref="0x40628490"/>
        <function-ref name="makeOutput" scoped="" ref="0x40628570"/>
        <function-ref name="set" scoped="" ref="0x40628650"/>
        <function-ref name="clr" scoped="" ref="0x40628730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40627ba8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40627ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40627d80"/>
        <function-ref name="isInput" scoped="" ref="0x40627e60"/>
        <function-ref name="toggle" scoped="" ref="0x40626010"/>
        <function-ref name="isOutput" scoped="" ref="0x406260f0"/>
        <function-ref name="get" scoped="" ref="0x406261d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406262b0"/>
        <function-ref name="set" scoped="" ref="0x40626390"/>
        <function-ref name="clr" scoped="" ref="0x40626470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c22de8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c22de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1e010"/>
        <function-ref name="isInput" scoped="" ref="0x40c1e0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c1e1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1e2b0"/>
        <function-ref name="get" scoped="" ref="0x40c1e390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1e470"/>
        <function-ref name="set" scoped="" ref="0x40c1e550"/>
        <function-ref name="clr" scoped="" ref="0x40c1e630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1d7f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1d7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1d9d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c1dab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c1db90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1dc70"/>
        <function-ref name="get" scoped="" ref="0x40c1dd50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1de30"/>
        <function-ref name="set" scoped="" ref="0x40c1df10"/>
        <function-ref name="clr" scoped="" ref="0x40c1c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1b228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1b228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1b400"/>
        <function-ref name="isInput" scoped="" ref="0x40c1b4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c1b5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c1b6a0"/>
        <function-ref name="get" scoped="" ref="0x40c1b780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c1b860"/>
        <function-ref name="set" scoped="" ref="0x40c1b940"/>
        <function-ref name="clr" scoped="" ref="0x40c1ba20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c1ac08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c1ac08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c1ade0"/>
        <function-ref name="isInput" scoped="" ref="0x40c1aec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c19010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c190f0"/>
        <function-ref name="get" scoped="" ref="0x40c191d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c192b0"/>
        <function-ref name="set" scoped="" ref="0x40c19390"/>
        <function-ref name="clr" scoped="" ref="0x40c19470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c186c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c186c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c18898"/>
        <function-ref name="isInput" scoped="" ref="0x40c18978"/>
        <function-ref name="toggle" scoped="" ref="0x40c18a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c18b38"/>
        <function-ref name="get" scoped="" ref="0x40c18c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c18cf8"/>
        <function-ref name="set" scoped="" ref="0x40c18dd8"/>
        <function-ref name="clr" scoped="" ref="0x40c18eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c400b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c400b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c40288"/>
        <function-ref name="isInput" scoped="" ref="0x40c40368"/>
        <function-ref name="toggle" scoped="" ref="0x40c40448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c40528"/>
        <function-ref name="get" scoped="" ref="0x40c40608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c406e8"/>
        <function-ref name="set" scoped="" ref="0x40c407c8"/>
        <function-ref name="clr" scoped="" ref="0x40c408a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c3fa88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c3fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c3fc60"/>
        <function-ref name="isInput" scoped="" ref="0x40c3fd40"/>
        <function-ref name="toggle" scoped="" ref="0x40c3fe20"/>
        <function-ref name="isOutput" scoped="" ref="0x40c3ff00"/>
        <function-ref name="get" scoped="" ref="0x40c3e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c3e0f0"/>
        <function-ref name="set" scoped="" ref="0x40c3e1d0"/>
        <function-ref name="clr" scoped="" ref="0x40c3e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c3d538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c3d538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c3d710"/>
        <function-ref name="isInput" scoped="" ref="0x40c3d7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c3d8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c3d9b0"/>
        <function-ref name="get" scoped="" ref="0x40c3da90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c3db70"/>
        <function-ref name="set" scoped="" ref="0x40c3dc50"/>
        <function-ref name="clr" scoped="" ref="0x40c3dd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x406224f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x406224f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406226c8"/>
        <function-ref name="isInput" scoped="" ref="0x406227a8"/>
        <function-ref name="toggle" scoped="" ref="0x40622888"/>
        <function-ref name="isOutput" scoped="" ref="0x40622968"/>
        <function-ref name="get" scoped="" ref="0x40622a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40622b28"/>
        <function-ref name="set" scoped="" ref="0x40622c08"/>
        <function-ref name="clr" scoped="" ref="0x40622ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40631170" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40631170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40631348"/>
        <function-ref name="isInput" scoped="" ref="0x40631428"/>
        <function-ref name="toggle" scoped="" ref="0x40631508"/>
        <function-ref name="isOutput" scoped="" ref="0x406315e8"/>
        <function-ref name="get" scoped="" ref="0x406316c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406317a8"/>
        <function-ref name="set" scoped="" ref="0x40631888"/>
        <function-ref name="clr" scoped="" ref="0x40631968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40623228" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40623228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40623400"/>
        <function-ref name="isInput" scoped="" ref="0x406234e0"/>
        <function-ref name="toggle" scoped="" ref="0x406235c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406236a0"/>
        <function-ref name="get" scoped="" ref="0x40623780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40623860"/>
        <function-ref name="set" scoped="" ref="0x40623940"/>
        <function-ref name="clr" scoped="" ref="0x40623a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40622e48" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40622e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40633050"/>
        <function-ref name="isInput" scoped="" ref="0x40633130"/>
        <function-ref name="toggle" scoped="" ref="0x40633210"/>
        <function-ref name="isOutput" scoped="" ref="0x406332f0"/>
        <function-ref name="get" scoped="" ref="0x406333d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406334b0"/>
        <function-ref name="set" scoped="" ref="0x40633590"/>
        <function-ref name="clr" scoped="" ref="0x40633670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40631ac8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40631ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40631ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40631d80"/>
        <function-ref name="toggle" scoped="" ref="0x40631e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40630010"/>
        <function-ref name="get" scoped="" ref="0x406300f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406301d0"/>
        <function-ref name="set" scoped="" ref="0x406302b0"/>
        <function-ref name="clr" scoped="" ref="0x40630390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40623b80" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40623b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40623d58"/>
        <function-ref name="isInput" scoped="" ref="0x40623e38"/>
        <function-ref name="toggle" scoped="" ref="0x40623f18"/>
        <function-ref name="isOutput" scoped="" ref="0x40622010"/>
        <function-ref name="get" scoped="" ref="0x406220f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406221d0"/>
        <function-ref name="set" scoped="" ref="0x406222b0"/>
        <function-ref name="clr" scoped="" ref="0x40622390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406337d0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406337d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406339a8"/>
        <function-ref name="isInput" scoped="" ref="0x40633a88"/>
        <function-ref name="toggle" scoped="" ref="0x40633b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40633c48"/>
        <function-ref name="get" scoped="" ref="0x40633d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40633e08"/>
        <function-ref name="set" scoped="" ref="0x40633ee8"/>
        <function-ref name="clr" scoped="" ref="0x40631010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406304f0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406304f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406306c8"/>
        <function-ref name="isInput" scoped="" ref="0x406307a8"/>
        <function-ref name="toggle" scoped="" ref="0x40630888"/>
        <function-ref name="isOutput" scoped="" ref="0x40630968"/>
        <function-ref name="get" scoped="" ref="0x40630a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40630b28"/>
        <function-ref name="set" scoped="" ref="0x40630c08"/>
        <function-ref name="clr" scoped="" ref="0x40630ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c65938" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c65938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c65b10"/>
        <function-ref name="isInput" scoped="" ref="0x40c65bf0"/>
        <function-ref name="toggle" scoped="" ref="0x40c65cd0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c65db0"/>
        <function-ref name="get" scoped="" ref="0x40c65e90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c64010"/>
        <function-ref name="set" scoped="" ref="0x40c640f0"/>
        <function-ref name="clr" scoped="" ref="0x40c641d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c633b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c633b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c63588"/>
        <function-ref name="isInput" scoped="" ref="0x40c63668"/>
        <function-ref name="toggle" scoped="" ref="0x40c63748"/>
        <function-ref name="isOutput" scoped="" ref="0x40c63828"/>
        <function-ref name="get" scoped="" ref="0x40c63908"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c639e8"/>
        <function-ref name="set" scoped="" ref="0x40c63ac8"/>
        <function-ref name="clr" scoped="" ref="0x40c63ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c62d70" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c62d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c61010"/>
        <function-ref name="isInput" scoped="" ref="0x40c610f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c611d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c612b0"/>
        <function-ref name="get" scoped="" ref="0x40c61390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c61470"/>
        <function-ref name="set" scoped="" ref="0x40c61550"/>
        <function-ref name="clr" scoped="" ref="0x40c61630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c607f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c607f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c609d0"/>
        <function-ref name="isInput" scoped="" ref="0x40c60ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40c60b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40c60c70"/>
        <function-ref name="get" scoped="" ref="0x40c60d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c60e30"/>
        <function-ref name="set" scoped="" ref="0x40c60f10"/>
        <function-ref name="clr" scoped="" ref="0x40c5e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c5d228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c5d228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5d400"/>
        <function-ref name="isInput" scoped="" ref="0x40c5d4e0"/>
        <function-ref name="toggle" scoped="" ref="0x40c5d5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5d6a0"/>
        <function-ref name="get" scoped="" ref="0x40c5d780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5d860"/>
        <function-ref name="set" scoped="" ref="0x40c5d940"/>
        <function-ref name="clr" scoped="" ref="0x40c5da20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c5cc08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c5cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5cde0"/>
        <function-ref name="isInput" scoped="" ref="0x40c5cec0"/>
        <function-ref name="toggle" scoped="" ref="0x40c5b010"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5b0f0"/>
        <function-ref name="get" scoped="" ref="0x40c5b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5b2b0"/>
        <function-ref name="set" scoped="" ref="0x40c5b390"/>
        <function-ref name="clr" scoped="" ref="0x40c5b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c5a6c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c5a6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c5a898"/>
        <function-ref name="isInput" scoped="" ref="0x40c5a978"/>
        <function-ref name="toggle" scoped="" ref="0x40c5aa58"/>
        <function-ref name="isOutput" scoped="" ref="0x40c5ab38"/>
        <function-ref name="get" scoped="" ref="0x40c5ac18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c5acf8"/>
        <function-ref name="set" scoped="" ref="0x40c5add8"/>
        <function-ref name="clr" scoped="" ref="0x40c5aeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c580b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c580b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c58288"/>
        <function-ref name="isInput" scoped="" ref="0x40c58368"/>
        <function-ref name="toggle" scoped="" ref="0x40c58448"/>
        <function-ref name="isOutput" scoped="" ref="0x40c58528"/>
        <function-ref name="get" scoped="" ref="0x40c58608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c586e8"/>
        <function-ref name="set" scoped="" ref="0x40c587c8"/>
        <function-ref name="clr" scoped="" ref="0x40c588a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4062ce48" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4062ce48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062b050"/>
        <function-ref name="isInput" scoped="" ref="0x4062b130"/>
        <function-ref name="toggle" scoped="" ref="0x4062b210"/>
        <function-ref name="isOutput" scoped="" ref="0x4062b2f0"/>
        <function-ref name="get" scoped="" ref="0x4062b3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062b4b0"/>
        <function-ref name="set" scoped="" ref="0x4062b590"/>
        <function-ref name="clr" scoped="" ref="0x4062b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4063cac8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4063cac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063cca0"/>
        <function-ref name="isInput" scoped="" ref="0x4063cd80"/>
        <function-ref name="toggle" scoped="" ref="0x4063ce60"/>
        <function-ref name="isOutput" scoped="" ref="0x4063b010"/>
        <function-ref name="get" scoped="" ref="0x4063b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063b1d0"/>
        <function-ref name="set" scoped="" ref="0x4063b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4063b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4062db00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4062db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062dcd8"/>
        <function-ref name="isInput" scoped="" ref="0x4062ddb8"/>
        <function-ref name="toggle" scoped="" ref="0x4062de98"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c010"/>
        <function-ref name="get" scoped="" ref="0x4062c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c1d0"/>
        <function-ref name="set" scoped="" ref="0x4062c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4062c390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4062b7d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4062b7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062b9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4062ba88"/>
        <function-ref name="toggle" scoped="" ref="0x4062bb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4062bc48"/>
        <function-ref name="get" scoped="" ref="0x4062bd28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062be08"/>
        <function-ref name="set" scoped="" ref="0x4062bee8"/>
        <function-ref name="clr" scoped="" ref="0x4063c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4063b4f0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4063b4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063b6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4063b7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4063b888"/>
        <function-ref name="isOutput" scoped="" ref="0x4063b968"/>
        <function-ref name="get" scoped="" ref="0x4063ba48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063bb28"/>
        <function-ref name="set" scoped="" ref="0x4063bc08"/>
        <function-ref name="clr" scoped="" ref="0x4063bce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4062c4f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4062c4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4062c7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4062c888"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c968"/>
        <function-ref name="get" scoped="" ref="0x4062ca48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062cb28"/>
        <function-ref name="set" scoped="" ref="0x4062cc08"/>
        <function-ref name="clr" scoped="" ref="0x4062cce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4063c170" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4063c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063c348"/>
        <function-ref name="isInput" scoped="" ref="0x4063c428"/>
        <function-ref name="toggle" scoped="" ref="0x4063c508"/>
        <function-ref name="isOutput" scoped="" ref="0x4063c5e8"/>
        <function-ref name="get" scoped="" ref="0x4063c6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063c7a8"/>
        <function-ref name="set" scoped="" ref="0x4063c888"/>
        <function-ref name="clr" scoped="" ref="0x4063c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4063be48" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4063be48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063a050"/>
        <function-ref name="isInput" scoped="" ref="0x4063a130"/>
        <function-ref name="toggle" scoped="" ref="0x4063a210"/>
        <function-ref name="isOutput" scoped="" ref="0x4063a2f0"/>
        <function-ref name="get" scoped="" ref="0x4063a3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063a4b0"/>
        <function-ref name="set" scoped="" ref="0x4063a590"/>
        <function-ref name="clr" scoped="" ref="0x4063a670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40c81538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40c81538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c81710"/>
        <function-ref name="isInput" scoped="" ref="0x40c817f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c818d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c819b0"/>
        <function-ref name="get" scoped="" ref="0x40c81a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c81b70"/>
        <function-ref name="set" scoped="" ref="0x40c81c50"/>
        <function-ref name="clr" scoped="" ref="0x40c81d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cab010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cab010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cab1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40cab2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40cab3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40cab488"/>
        <function-ref name="get" scoped="" ref="0x40cab568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cab648"/>
        <function-ref name="set" scoped="" ref="0x40cab728"/>
        <function-ref name="clr" scoped="" ref="0x40cab808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40caa9e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40caa9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40caabc0"/>
        <function-ref name="isInput" scoped="" ref="0x40caaca0"/>
        <function-ref name="toggle" scoped="" ref="0x40caad80"/>
        <function-ref name="isOutput" scoped="" ref="0x40caae60"/>
        <function-ref name="get" scoped="" ref="0x40ca9010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca90f0"/>
        <function-ref name="set" scoped="" ref="0x40ca91d0"/>
        <function-ref name="clr" scoped="" ref="0x40ca92b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca8538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca8710"/>
        <function-ref name="isInput" scoped="" ref="0x40ca87f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ca88d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca89b0"/>
        <function-ref name="get" scoped="" ref="0x40ca8a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca8b70"/>
        <function-ref name="set" scoped="" ref="0x40ca8c50"/>
        <function-ref name="clr" scoped="" ref="0x40ca8d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca6010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca61e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ca62c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ca63a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca6488"/>
        <function-ref name="get" scoped="" ref="0x40ca6568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca6648"/>
        <function-ref name="set" scoped="" ref="0x40ca6728"/>
        <function-ref name="clr" scoped="" ref="0x40ca6808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca59e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca59e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca5bc0"/>
        <function-ref name="isInput" scoped="" ref="0x40ca5ca0"/>
        <function-ref name="toggle" scoped="" ref="0x40ca5d80"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca5e60"/>
        <function-ref name="get" scoped="" ref="0x40ca4010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca40f0"/>
        <function-ref name="set" scoped="" ref="0x40ca41d0"/>
        <function-ref name="clr" scoped="" ref="0x40ca42b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca3538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca3538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca3710"/>
        <function-ref name="isInput" scoped="" ref="0x40ca37f0"/>
        <function-ref name="toggle" scoped="" ref="0x40ca38d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca39b0"/>
        <function-ref name="get" scoped="" ref="0x40ca3a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca3b70"/>
        <function-ref name="set" scoped="" ref="0x40ca3c50"/>
        <function-ref name="clr" scoped="" ref="0x40ca3d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ca1010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ca1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ca11e8"/>
        <function-ref name="isInput" scoped="" ref="0x40ca12c8"/>
        <function-ref name="toggle" scoped="" ref="0x40ca13a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40ca1488"/>
        <function-ref name="get" scoped="" ref="0x40ca1568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ca1648"/>
        <function-ref name="set" scoped="" ref="0x40ca1728"/>
        <function-ref name="clr" scoped="" ref="0x40ca1808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x406356b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x406356b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40635888"/>
        <function-ref name="isInput" scoped="" ref="0x40635968"/>
        <function-ref name="toggle" scoped="" ref="0x40635a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40635b28"/>
        <function-ref name="get" scoped="" ref="0x40635c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40635ce8"/>
        <function-ref name="set" scoped="" ref="0x40635dc8"/>
        <function-ref name="clr" scoped="" ref="0x40635ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40645330" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40645330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40645508"/>
        <function-ref name="isInput" scoped="" ref="0x406455e8"/>
        <function-ref name="toggle" scoped="" ref="0x406456c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406457a8"/>
        <function-ref name="get" scoped="" ref="0x40645888"/>
        <function-ref name="makeOutput" scoped="" ref="0x40645968"/>
        <function-ref name="set" scoped="" ref="0x40645a48"/>
        <function-ref name="clr" scoped="" ref="0x40645b28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x406363d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x406363d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406365b0"/>
        <function-ref name="isInput" scoped="" ref="0x40636690"/>
        <function-ref name="toggle" scoped="" ref="0x40636770"/>
        <function-ref name="isOutput" scoped="" ref="0x40636850"/>
        <function-ref name="get" scoped="" ref="0x40636930"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636a10"/>
        <function-ref name="set" scoped="" ref="0x40636af0"/>
        <function-ref name="clr" scoped="" ref="0x40636bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40634030" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40634030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40634208"/>
        <function-ref name="isInput" scoped="" ref="0x406342e8"/>
        <function-ref name="toggle" scoped="" ref="0x406343c8"/>
        <function-ref name="isOutput" scoped="" ref="0x406344a8"/>
        <function-ref name="get" scoped="" ref="0x40634588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40634668"/>
        <function-ref name="set" scoped="" ref="0x40634748"/>
        <function-ref name="clr" scoped="" ref="0x40634828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40645c88" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40645c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40645e60"/>
        <function-ref name="isInput" scoped="" ref="0x40644010"/>
        <function-ref name="toggle" scoped="" ref="0x406440f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406441d0"/>
        <function-ref name="get" scoped="" ref="0x406442b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40644390"/>
        <function-ref name="set" scoped="" ref="0x40644470"/>
        <function-ref name="clr" scoped="" ref="0x40644550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40636d30" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40636d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40636f08"/>
        <function-ref name="isInput" scoped="" ref="0x40635010"/>
        <function-ref name="toggle" scoped="" ref="0x406350f0"/>
        <function-ref name="isOutput" scoped="" ref="0x406351d0"/>
        <function-ref name="get" scoped="" ref="0x406352b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40635390"/>
        <function-ref name="set" scoped="" ref="0x40635470"/>
        <function-ref name="clr" scoped="" ref="0x40635550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40634988" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40634988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40634b60"/>
        <function-ref name="isInput" scoped="" ref="0x40634c40"/>
        <function-ref name="toggle" scoped="" ref="0x40634d20"/>
        <function-ref name="isOutput" scoped="" ref="0x40634e00"/>
        <function-ref name="get" scoped="" ref="0x40634ee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40645010"/>
        <function-ref name="set" scoped="" ref="0x406450f0"/>
        <function-ref name="clr" scoped="" ref="0x406451d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406446b0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406446b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40644888"/>
        <function-ref name="isInput" scoped="" ref="0x40644968"/>
        <function-ref name="toggle" scoped="" ref="0x40644a48"/>
        <function-ref name="isOutput" scoped="" ref="0x40644b28"/>
        <function-ref name="get" scoped="" ref="0x40644c08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40644ce8"/>
        <function-ref name="set" scoped="" ref="0x40644dc8"/>
        <function-ref name="clr" scoped="" ref="0x40644ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ccd418" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ccd418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40ccd5f0"/>
        <function-ref name="isInput" scoped="" ref="0x40ccd6d0"/>
        <function-ref name="toggle" scoped="" ref="0x40ccd7b0"/>
        <function-ref name="isOutput" scoped="" ref="0x40ccd890"/>
        <function-ref name="get" scoped="" ref="0x40ccd970"/>
        <function-ref name="makeOutput" scoped="" ref="0x40ccda50"/>
        <function-ref name="set" scoped="" ref="0x40ccdb30"/>
        <function-ref name="clr" scoped="" ref="0x40ccdc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cccde0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cccde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cca010"/>
        <function-ref name="isInput" scoped="" ref="0x40cca0f0"/>
        <function-ref name="toggle" scoped="" ref="0x40cca1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cca2b0"/>
        <function-ref name="get" scoped="" ref="0x40cca390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cca470"/>
        <function-ref name="set" scoped="" ref="0x40cca550"/>
        <function-ref name="clr" scoped="" ref="0x40cca630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc97f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc97f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc99d0"/>
        <function-ref name="isInput" scoped="" ref="0x40cc9ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40cc9b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc9c70"/>
        <function-ref name="get" scoped="" ref="0x40cc9d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc9e30"/>
        <function-ref name="set" scoped="" ref="0x40cc9f10"/>
        <function-ref name="clr" scoped="" ref="0x40cc8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc7228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc7228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc7400"/>
        <function-ref name="isInput" scoped="" ref="0x40cc74e0"/>
        <function-ref name="toggle" scoped="" ref="0x40cc75c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc76a0"/>
        <function-ref name="get" scoped="" ref="0x40cc7780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc7860"/>
        <function-ref name="set" scoped="" ref="0x40cc7940"/>
        <function-ref name="clr" scoped="" ref="0x40cc7a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc6c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc6c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc6de0"/>
        <function-ref name="isInput" scoped="" ref="0x40cc6ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40cc5010"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc50f0"/>
        <function-ref name="get" scoped="" ref="0x40cc51d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc52b0"/>
        <function-ref name="set" scoped="" ref="0x40cc5390"/>
        <function-ref name="clr" scoped="" ref="0x40cc5470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cc46c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cc46c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cc4898"/>
        <function-ref name="isInput" scoped="" ref="0x40cc4978"/>
        <function-ref name="toggle" scoped="" ref="0x40cc4a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40cc4b38"/>
        <function-ref name="get" scoped="" ref="0x40cc4c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cc4cf8"/>
        <function-ref name="set" scoped="" ref="0x40cc4dd8"/>
        <function-ref name="clr" scoped="" ref="0x40cc4eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cee0b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cee0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cee288"/>
        <function-ref name="isInput" scoped="" ref="0x40cee368"/>
        <function-ref name="toggle" scoped="" ref="0x40cee448"/>
        <function-ref name="isOutput" scoped="" ref="0x40cee528"/>
        <function-ref name="get" scoped="" ref="0x40cee608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cee6e8"/>
        <function-ref name="set" scoped="" ref="0x40cee7c8"/>
        <function-ref name="clr" scoped="" ref="0x40cee8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40ceda88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40ceda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40cedc60"/>
        <function-ref name="isInput" scoped="" ref="0x40cedd40"/>
        <function-ref name="toggle" scoped="" ref="0x40cede20"/>
        <function-ref name="isOutput" scoped="" ref="0x40cedf00"/>
        <function-ref name="get" scoped="" ref="0x40cec010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40cec0f0"/>
        <function-ref name="set" scoped="" ref="0x40cec1d0"/>
        <function-ref name="clr" scoped="" ref="0x40cec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4063e170" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4063e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063e348"/>
        <function-ref name="isInput" scoped="" ref="0x4063e428"/>
        <function-ref name="toggle" scoped="" ref="0x4063e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4063e5e8"/>
        <function-ref name="get" scoped="" ref="0x4063e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063e7a8"/>
        <function-ref name="set" scoped="" ref="0x4063e888"/>
        <function-ref name="clr" scoped="" ref="0x4063e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4063de48" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4063de48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064e050"/>
        <function-ref name="isInput" scoped="" ref="0x4064e130"/>
        <function-ref name="toggle" scoped="" ref="0x4064e210"/>
        <function-ref name="isOutput" scoped="" ref="0x4064e2f0"/>
        <function-ref name="get" scoped="" ref="0x4064e3d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064e4b0"/>
        <function-ref name="set" scoped="" ref="0x4064e590"/>
        <function-ref name="clr" scoped="" ref="0x4064e670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40641dc8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40641dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063f010"/>
        <function-ref name="isInput" scoped="" ref="0x4063f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4063f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063f2b0"/>
        <function-ref name="get" scoped="" ref="0x4063f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063f470"/>
        <function-ref name="set" scoped="" ref="0x4063f550"/>
        <function-ref name="clr" scoped="" ref="0x4063f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4063eac8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4063eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4063ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4063ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4063d010"/>
        <function-ref name="get" scoped="" ref="0x4063d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063d1d0"/>
        <function-ref name="set" scoped="" ref="0x4063d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4063d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4064e7d0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4064e7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4064ea88"/>
        <function-ref name="toggle" scoped="" ref="0x4064eb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4064ec48"/>
        <function-ref name="get" scoped="" ref="0x4064ed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064ee08"/>
        <function-ref name="set" scoped="" ref="0x4064eee8"/>
        <function-ref name="clr" scoped="" ref="0x4064d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4063f790" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4063f790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063f968"/>
        <function-ref name="isInput" scoped="" ref="0x4063fa48"/>
        <function-ref name="toggle" scoped="" ref="0x4063fb28"/>
        <function-ref name="isOutput" scoped="" ref="0x4063fc08"/>
        <function-ref name="get" scoped="" ref="0x4063fce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063fdc8"/>
        <function-ref name="set" scoped="" ref="0x4063fea8"/>
        <function-ref name="clr" scoped="" ref="0x4063e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4063d4f0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4063d4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063d6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4063d7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4063d888"/>
        <function-ref name="isOutput" scoped="" ref="0x4063d968"/>
        <function-ref name="get" scoped="" ref="0x4063da48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063db28"/>
        <function-ref name="set" scoped="" ref="0x4063dc08"/>
        <function-ref name="clr" scoped="" ref="0x4063dce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4064d170" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4064d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064d348"/>
        <function-ref name="isInput" scoped="" ref="0x4064d428"/>
        <function-ref name="toggle" scoped="" ref="0x4064d508"/>
        <function-ref name="isOutput" scoped="" ref="0x4064d5e8"/>
        <function-ref name="get" scoped="" ref="0x4064d6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064d7a8"/>
        <function-ref name="set" scoped="" ref="0x4064d888"/>
        <function-ref name="clr" scoped="" ref="0x4064d968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40cf0de8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40cf0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d19010"/>
        <function-ref name="isInput" scoped="" ref="0x40d190f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d191d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d192b0"/>
        <function-ref name="get" scoped="" ref="0x40d19390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d19470"/>
        <function-ref name="set" scoped="" ref="0x40d19550"/>
        <function-ref name="clr" scoped="" ref="0x40d19630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d187f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d187f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d189d0"/>
        <function-ref name="isInput" scoped="" ref="0x40d18ab0"/>
        <function-ref name="toggle" scoped="" ref="0x40d18b90"/>
        <function-ref name="isOutput" scoped="" ref="0x40d18c70"/>
        <function-ref name="get" scoped="" ref="0x40d18d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d18e30"/>
        <function-ref name="set" scoped="" ref="0x40d18f10"/>
        <function-ref name="clr" scoped="" ref="0x40d17010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d16228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d16228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d16400"/>
        <function-ref name="isInput" scoped="" ref="0x40d164e0"/>
        <function-ref name="toggle" scoped="" ref="0x40d165c0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d166a0"/>
        <function-ref name="get" scoped="" ref="0x40d16780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d16860"/>
        <function-ref name="set" scoped="" ref="0x40d16940"/>
        <function-ref name="clr" scoped="" ref="0x40d16a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d15c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d15c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d15de0"/>
        <function-ref name="isInput" scoped="" ref="0x40d15ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40d14010"/>
        <function-ref name="isOutput" scoped="" ref="0x40d140f0"/>
        <function-ref name="get" scoped="" ref="0x40d141d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d142b0"/>
        <function-ref name="set" scoped="" ref="0x40d14390"/>
        <function-ref name="clr" scoped="" ref="0x40d14470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d136c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d136c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d13898"/>
        <function-ref name="isInput" scoped="" ref="0x40d13978"/>
        <function-ref name="toggle" scoped="" ref="0x40d13a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40d13b38"/>
        <function-ref name="get" scoped="" ref="0x40d13c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d13cf8"/>
        <function-ref name="set" scoped="" ref="0x40d13dd8"/>
        <function-ref name="clr" scoped="" ref="0x40d13eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d110b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d110b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d11288"/>
        <function-ref name="isInput" scoped="" ref="0x40d11368"/>
        <function-ref name="toggle" scoped="" ref="0x40d11448"/>
        <function-ref name="isOutput" scoped="" ref="0x40d11528"/>
        <function-ref name="get" scoped="" ref="0x40d11608"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d116e8"/>
        <function-ref name="set" scoped="" ref="0x40d117c8"/>
        <function-ref name="clr" scoped="" ref="0x40d118a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d10a88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d10a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d10c60"/>
        <function-ref name="isInput" scoped="" ref="0x40d10d40"/>
        <function-ref name="toggle" scoped="" ref="0x40d10e20"/>
        <function-ref name="isOutput" scoped="" ref="0x40d10f00"/>
        <function-ref name="get" scoped="" ref="0x40d0f010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d0f0f0"/>
        <function-ref name="set" scoped="" ref="0x40d0f1d0"/>
        <function-ref name="clr" scoped="" ref="0x40d0f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40d0e538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40d0e538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40d0e710"/>
        <function-ref name="isInput" scoped="" ref="0x40d0e7f0"/>
        <function-ref name="toggle" scoped="" ref="0x40d0e8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40d0e9b0"/>
        <function-ref name="get" scoped="" ref="0x40d0ea90"/>
        <function-ref name="makeOutput" scoped="" ref="0x40d0eb70"/>
        <function-ref name="set" scoped="" ref="0x40d0ec50"/>
        <function-ref name="clr" scoped="" ref="0x40d0ed30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4064a2d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4064a2d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064a4a8"/>
        <function-ref name="isInput" scoped="" ref="0x4064a588"/>
        <function-ref name="toggle" scoped="" ref="0x4064a668"/>
        <function-ref name="isOutput" scoped="" ref="0x4064a748"/>
        <function-ref name="get" scoped="" ref="0x4064a828"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064a908"/>
        <function-ref name="set" scoped="" ref="0x4064a9e8"/>
        <function-ref name="clr" scoped="" ref="0x4064aac8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4065fa88" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4065fa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065fc60"/>
        <function-ref name="isInput" scoped="" ref="0x4065fd40"/>
        <function-ref name="toggle" scoped="" ref="0x4065fe20"/>
        <function-ref name="isOutput" scoped="" ref="0x4065ff00"/>
        <function-ref name="get" scoped="" ref="0x4065e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065e0f0"/>
        <function-ref name="set" scoped="" ref="0x4065e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4065e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4065b280" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4065b280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4065b458"/>
        <function-ref name="isInput" scoped="" ref="0x4065b538"/>
        <function-ref name="toggle" scoped="" ref="0x4065b618"/>
        <function-ref name="isOutput" scoped="" ref="0x4065b6f8"/>
        <function-ref name="get" scoped="" ref="0x4065b7d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4065b8b8"/>
        <function-ref name="set" scoped="" ref="0x4065b998"/>
        <function-ref name="clr" scoped="" ref="0x4065ba78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40659a30" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40659a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40659c08"/>
        <function-ref name="isInput" scoped="" ref="0x40659ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40659dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40659ea8"/>
        <function-ref name="get" scoped="" ref="0x40658010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406580f0"/>
        <function-ref name="set" scoped="" ref="0x406581d0"/>
        <function-ref name="clr" scoped="" ref="0x406582b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40667280" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40667280"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40667458"/>
        <function-ref name="isInput" scoped="" ref="0x40667538"/>
        <function-ref name="toggle" scoped="" ref="0x40667618"/>
        <function-ref name="isOutput" scoped="" ref="0x406676f8"/>
        <function-ref name="get" scoped="" ref="0x406677d8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406678b8"/>
        <function-ref name="set" scoped="" ref="0x40667998"/>
        <function-ref name="clr" scoped="" ref="0x40667a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40665a30" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40665a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40665c08"/>
        <function-ref name="isInput" scoped="" ref="0x40665ce8"/>
        <function-ref name="toggle" scoped="" ref="0x40665dc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40665ea8"/>
        <function-ref name="get" scoped="" ref="0x40664010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406640f0"/>
        <function-ref name="set" scoped="" ref="0x406641d0"/>
        <function-ref name="clr" scoped="" ref="0x406642b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406623b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406623b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40662588"/>
        <function-ref name="isInput" scoped="" ref="0x40662668"/>
        <function-ref name="toggle" scoped="" ref="0x40662748"/>
        <function-ref name="isOutput" scoped="" ref="0x40662828"/>
        <function-ref name="get" scoped="" ref="0x40662908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406629e8"/>
        <function-ref name="set" scoped="" ref="0x40662ac8"/>
        <function-ref name="clr" scoped="" ref="0x40662ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40671b68" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40671b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40671d40"/>
        <function-ref name="isInput" scoped="" ref="0x40671e20"/>
        <function-ref name="toggle" scoped="" ref="0x40671f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40670010"/>
        <function-ref name="get" scoped="" ref="0x406700f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406701d0"/>
        <function-ref name="set" scoped="" ref="0x406702b0"/>
        <function-ref name="clr" scoped="" ref="0x40670390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4066e3b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4066e3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066e588"/>
        <function-ref name="isInput" scoped="" ref="0x4066e668"/>
        <function-ref name="toggle" scoped="" ref="0x4066e748"/>
        <function-ref name="isOutput" scoped="" ref="0x4066e828"/>
        <function-ref name="get" scoped="" ref="0x4066e908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066e9e8"/>
        <function-ref name="set" scoped="" ref="0x4066eac8"/>
        <function-ref name="clr" scoped="" ref="0x4066eba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4066cb68" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4066cb68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066cd40"/>
        <function-ref name="isInput" scoped="" ref="0x4066ce20"/>
        <function-ref name="toggle" scoped="" ref="0x4066cf00"/>
        <function-ref name="isOutput" scoped="" ref="0x4066a010"/>
        <function-ref name="get" scoped="" ref="0x4066a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066a1d0"/>
        <function-ref name="set" scoped="" ref="0x4066a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4066a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4067a3b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4067a3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067a588"/>
        <function-ref name="isInput" scoped="" ref="0x4067a668"/>
        <function-ref name="toggle" scoped="" ref="0x4067a748"/>
        <function-ref name="isOutput" scoped="" ref="0x4067a828"/>
        <function-ref name="get" scoped="" ref="0x4067a908"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067a9e8"/>
        <function-ref name="set" scoped="" ref="0x4067aac8"/>
        <function-ref name="clr" scoped="" ref="0x4067aba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40678b68" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40678b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40678d40"/>
        <function-ref name="isInput" scoped="" ref="0x40678e20"/>
        <function-ref name="toggle" scoped="" ref="0x40678f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40677010"/>
        <function-ref name="get" scoped="" ref="0x406770f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406771d0"/>
        <function-ref name="set" scoped="" ref="0x406772b0"/>
        <function-ref name="clr" scoped="" ref="0x40677390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406743b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406743b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40674588"/>
        <function-ref name="isInput" scoped="" ref="0x40674668"/>
        <function-ref name="toggle" scoped="" ref="0x40674748"/>
        <function-ref name="isOutput" scoped="" ref="0x40674828"/>
        <function-ref name="get" scoped="" ref="0x40674908"/>
        <function-ref name="makeOutput" scoped="" ref="0x406749e8"/>
        <function-ref name="set" scoped="" ref="0x40674ac8"/>
        <function-ref name="clr" scoped="" ref="0x40674ba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40684b68" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40684b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40684d40"/>
        <function-ref name="isInput" scoped="" ref="0x40684e20"/>
        <function-ref name="toggle" scoped="" ref="0x40684f00"/>
        <function-ref name="isOutput" scoped="" ref="0x40683010"/>
        <function-ref name="get" scoped="" ref="0x406830f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406831d0"/>
        <function-ref name="set" scoped="" ref="0x406832b0"/>
        <function-ref name="clr" scoped="" ref="0x40683390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x406955a8" loc="18:/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x406955a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40695780"/>
        <function-ref name="isInput" scoped="" ref="0x40695860"/>
        <function-ref name="toggle" scoped="" ref="0x40695940"/>
        <function-ref name="isOutput" scoped="" ref="0x40695a20"/>
        <function-ref name="get" scoped="" ref="0x40695b00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40695be0"/>
        <function-ref name="set" scoped="" ref="0x40695cc0"/>
        <function-ref name="clr" scoped="" ref="0x40695da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045c718" loc="2:/opt/tinyos-2.x/tos/chips/rf212/RF212OffC.nc">
      <component-ref qname="RF212OffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045c718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x406bf010" loc="10:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x406bf010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x406bf760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSTN" ref="0x406c00b0" loc="9:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x406c00b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c0288"/>
        <function-ref name="isInput" scoped="" ref="0x406c0368"/>
        <function-ref name="toggle" scoped="" ref="0x406c0448"/>
        <function-ref name="isOutput" scoped="" ref="0x406c0528"/>
        <function-ref name="get" scoped="" ref="0x406c0608"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c06e8"/>
        <function-ref name="set" scoped="" ref="0x406c07c8"/>
        <function-ref name="clr" scoped="" ref="0x406c08a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SLP_TR" ref="0x406c1690" loc="8:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x406c1690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c1868"/>
        <function-ref name="isInput" scoped="" ref="0x406c1948"/>
        <function-ref name="toggle" scoped="" ref="0x406c1a28"/>
        <function-ref name="isOutput" scoped="" ref="0x406c1b08"/>
        <function-ref name="get" scoped="" ref="0x406c1be8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c1cc8"/>
        <function-ref name="set" scoped="" ref="0x406c1da8"/>
        <function-ref name="clr" scoped="" ref="0x406c1e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406c3a20" loc="4:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406c3a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406c3bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x406c3e40" loc="5:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x406c3e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406c2050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406c2130"/>
        <function-ref name="request" scoped="" ref="0x406c2210"/>
        <function-ref name="granted" scoped="" ref="0x406c22f0"/>
        <function-ref name="isOwner" scoped="" ref="0x406c23d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SELN" ref="0x406c2c28" loc="7:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x406c2c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c2e00"/>
        <function-ref name="isInput" scoped="" ref="0x406c2ee0"/>
        <function-ref name="toggle" scoped="" ref="0x406c1010"/>
        <function-ref name="isOutput" scoped="" ref="0x406c10f0"/>
        <function-ref name="get" scoped="" ref="0x406c11d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c12b0"/>
        <function-ref name="set" scoped="" ref="0x406c1390"/>
        <function-ref name="clr" scoped="" ref="0x406c1470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FastSpiByte" ref="0x406c25a0" loc="6:/opt/tinyos-2.x/tos/chips/rf212/RF212OffP.nc">
      <component-ref qname="RF212OffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x406c25a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x406c2778"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x406c2858"/>
        <function-ref name="splitRead" scoped="" ref="0x406c2938"/>
        <function-ref name="write" scoped="" ref="0x406c2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RSTN" ref="0x406c73c0" loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSTN" scoped="" ref="0x406c73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c7598"/>
        <function-ref name="isInput" scoped="" ref="0x406c7678"/>
        <function-ref name="toggle" scoped="" ref="0x406c7758"/>
        <function-ref name="isOutput" scoped="" ref="0x406c7838"/>
        <function-ref name="get" scoped="" ref="0x406c7918"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c79f8"/>
        <function-ref name="set" scoped="" ref="0x406c7ad8"/>
        <function-ref name="clr" scoped="" ref="0x406c7bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SLP_TR" ref="0x406c8918" loc="34:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SLP_TR" scoped="" ref="0x406c8918"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c8af0"/>
        <function-ref name="isInput" scoped="" ref="0x406c8bd0"/>
        <function-ref name="toggle" scoped="" ref="0x406c8cb0"/>
        <function-ref name="isOutput" scoped="" ref="0x406c8d90"/>
        <function-ref name="get" scoped="" ref="0x406c8e70"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c7010"/>
        <function-ref name="set" scoped="" ref="0x406c70f0"/>
        <function-ref name="clr" scoped="" ref="0x406c71d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x406c6198" loc="38:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406c6198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="TRadio" ref="0x406b2850"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x406b2af8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406d2640"/>
        <function-ref name="fired" scoped="" ref="0x406c6e00"/>
        <function-ref name="startAt" scoped="" ref="0x406d2300"/>
        <function-ref name="isRunning" scoped="" ref="0x406d2088"/>
        <function-ref name="getAlarm" scoped="" ref="0x406d28b8"/>
        <function-ref name="start" scoped="" ref="0x406c68e8"/>
        <function-ref name="stop" scoped="" ref="0x406c6b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiResource" ref="0x406c9b30" loc="31:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x406c9b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406c9d08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406c9de8"/>
        <function-ref name="request" scoped="" ref="0x406c9ec8"/>
        <function-ref name="granted" scoped="" ref="0x406c8010"/>
        <function-ref name="isOwner" scoped="" ref="0x406c80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SELN" ref="0x406c9110" loc="30:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SELN" scoped="" ref="0x406c9110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406c92e8"/>
        <function-ref name="isInput" scoped="" ref="0x406c93c8"/>
        <function-ref name="toggle" scoped="" ref="0x406c94a8"/>
        <function-ref name="isOutput" scoped="" ref="0x406c9588"/>
        <function-ref name="get" scoped="" ref="0x406c9668"/>
        <function-ref name="makeOutput" scoped="" ref="0x406c9748"/>
        <function-ref name="set" scoped="" ref="0x406c9828"/>
        <function-ref name="clr" scoped="" ref="0x406c9908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x406d64d0" loc="37:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x406d64d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x406d66a8"/>
        <function-ref name="disable" scoped="" ref="0x406d6788"/>
        <function-ref name="captured" scoped="" ref="0x406d6868"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x406d6948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x406c82a0" loc="32:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x406c82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x406c8478"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x406c8558"/>
        <function-ref name="splitRead" scoped="" ref="0x406c8638"/>
        <function-ref name="write" scoped="" ref="0x406c8718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x406e2ba0" loc="39:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212C.nc">
      <component-ref qname="HplRF212C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x406e2ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="TRadio" ref="0x406b2850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406d1200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406d0b40" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406d0b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406df200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406ec8a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406ec8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406dc010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406dc500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406dc288"/>
        <function-ref name="overflow" scoped="" ref="0x406dc778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406db898" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406db898"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406dba70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406dbcd0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406dbcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406eb438"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406eb928"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406eb6b0"/>
        <function-ref name="overflow" scoped="" ref="0x406ebba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x406ebe70" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x406ebe70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407008d8"/>
        <function-ref name="test" scoped="" ref="0x406eec68"/>
        <function-ref name="get" scoped="" ref="0x406ee4d8"/>
        <function-ref name="reset" scoped="" ref="0x406eeee0"/>
        <function-ref name="getMode" scoped="" ref="0x40700b78"/>
        <function-ref name="overflow" scoped="" ref="0x406ee9f0"/>
        <function-ref name="isOn" scoped="" ref="0x40700660"/>
        <function-ref name="set" scoped="" ref="0x406ee750"/>
        <function-ref name="start" scoped="" ref="0x40700170"/>
        <function-ref name="stop" scoped="" ref="0x407003e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406fc078" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406fc078"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406fbab8"/>
        <function-ref name="test" scoped="" ref="0x406fce50"/>
        <function-ref name="get" scoped="" ref="0x406fc6c0"/>
        <function-ref name="reset" scoped="" ref="0x406fb0d8"/>
        <function-ref name="getMode" scoped="" ref="0x406fbd58"/>
        <function-ref name="overflow" scoped="" ref="0x406fcbd8"/>
        <function-ref name="isOn" scoped="" ref="0x406fb840"/>
        <function-ref name="set" scoped="" ref="0x406fc938"/>
        <function-ref name="start" scoped="" ref="0x406fb350"/>
        <function-ref name="stop" scoped="" ref="0x406fb5c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40702a88" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40702a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40717500"/>
        <function-ref name="test" scoped="" ref="0x40707888"/>
        <function-ref name="fired" scoped="" ref="0x40707610"/>
        <function-ref name="get" scoped="" ref="0x407070f8"/>
        <function-ref name="reset" scoped="" ref="0x40707b00"/>
        <function-ref name="getMode" scoped="" ref="0x407177a0"/>
        <function-ref name="isOn" scoped="" ref="0x40717288"/>
        <function-ref name="set" scoped="" ref="0x40707370"/>
        <function-ref name="start" scoped="" ref="0x40707d78"/>
        <function-ref name="stop" scoped="" ref="0x40717010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40709750" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40709750"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40708288"/>
        <function-ref name="test" scoped="" ref="0x406f8560"/>
        <function-ref name="fired" scoped="" ref="0x406f82e8"/>
        <function-ref name="force" scoped="" ref="0x407087a0"/>
        <function-ref name="get" scoped="" ref="0x40709d98"/>
        <function-ref name="reset" scoped="" ref="0x406f87d8"/>
        <function-ref name="getMode" scoped="" ref="0x40708528"/>
        <function-ref name="isOn" scoped="" ref="0x40708010"/>
        <function-ref name="set" scoped="" ref="0x406f8048"/>
        <function-ref name="start" scoped="" ref="0x406f8a50"/>
        <function-ref name="stop" scoped="" ref="0x406f8cc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40712460" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40712460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40710ee0"/>
        <function-ref name="test" scoped="" ref="0x40710288"/>
        <function-ref name="fired" scoped="" ref="0x40710010"/>
        <function-ref name="force" scoped="" ref="0x4070f438"/>
        <function-ref name="get" scoped="" ref="0x40712aa8"/>
        <function-ref name="reset" scoped="" ref="0x40710500"/>
        <function-ref name="getMode" scoped="" ref="0x4070f1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40710c68"/>
        <function-ref name="set" scoped="" ref="0x40712d20"/>
        <function-ref name="start" scoped="" ref="0x40710778"/>
        <function-ref name="stop" scoped="" ref="0x407109f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4071c010" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4071c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4071c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x4070f830" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x4070f830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407222c0"/>
        <function-ref name="test" scoped="" ref="0x4070e628"/>
        <function-ref name="fired" scoped="" ref="0x4070e3b0"/>
        <function-ref name="force" scoped="" ref="0x407227d8"/>
        <function-ref name="get" scoped="" ref="0x4070fe78"/>
        <function-ref name="reset" scoped="" ref="0x4070e8a0"/>
        <function-ref name="getMode" scoped="" ref="0x40722560"/>
        <function-ref name="isOn" scoped="" ref="0x40722048"/>
        <function-ref name="set" scoped="" ref="0x4070e110"/>
        <function-ref name="start" scoped="" ref="0x4070eb18"/>
        <function-ref name="stop" scoped="" ref="0x4070ed90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40714350" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40714350"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40713da8"/>
        <function-ref name="test" scoped="" ref="0x40713150"/>
        <function-ref name="get" scoped="" ref="0x40714998"/>
        <function-ref name="reset" scoped="" ref="0x407133c8"/>
        <function-ref name="getMode" scoped="" ref="0x40712068"/>
        <function-ref name="overflow" scoped="" ref="0x40714eb0"/>
        <function-ref name="isOn" scoped="" ref="0x40713b30"/>
        <function-ref name="set" scoped="" ref="0x40714c10"/>
        <function-ref name="start" scoped="" ref="0x40713640"/>
        <function-ref name="stop" scoped="" ref="0x407138b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4071c400" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4071c400"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4071c5d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4071e010" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4071e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4071da68"/>
        <function-ref name="test" scoped="" ref="0x4071ede8"/>
        <function-ref name="fired" scoped="" ref="0x4071eb70"/>
        <function-ref name="get" scoped="" ref="0x4071e658"/>
        <function-ref name="reset" scoped="" ref="0x4071d088"/>
        <function-ref name="getMode" scoped="" ref="0x4071dd08"/>
        <function-ref name="isOn" scoped="" ref="0x4071d7f0"/>
        <function-ref name="set" scoped="" ref="0x4071e8d0"/>
        <function-ref name="start" scoped="" ref="0x4071d300"/>
        <function-ref name="stop" scoped="" ref="0x4071d578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40722bd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40722bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40720640"/>
        <function-ref name="test" scoped="" ref="0x407219c8"/>
        <function-ref name="fired" scoped="" ref="0x40721750"/>
        <function-ref name="force" scoped="" ref="0x40720b58"/>
        <function-ref name="get" scoped="" ref="0x40721238"/>
        <function-ref name="reset" scoped="" ref="0x40721c40"/>
        <function-ref name="getMode" scoped="" ref="0x407208e0"/>
        <function-ref name="isOn" scoped="" ref="0x407203c8"/>
        <function-ref name="set" scoped="" ref="0x407214b0"/>
        <function-ref name="start" scoped="" ref="0x40721eb8"/>
        <function-ref name="stop" scoped="" ref="0x40720150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x406dd940" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x406dd940"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40767010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40767360" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40767360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40767ab0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40778010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40767d28"/>
        <function-ref name="overflow" scoped="" ref="0x40778288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x407774c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="HplRF212C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x407774c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40796980"/>
        <function-ref name="fired" scoped="" ref="0x40796150"/>
        <function-ref name="startAt" scoped="" ref="0x40796640"/>
        <function-ref name="isRunning" scoped="" ref="0x407963c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40796bf8"/>
        <function-ref name="start" scoped="" ref="0x40777c10"/>
        <function-ref name="stop" scoped="" ref="0x40777eb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40d7a958" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="HplRF212C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40d7a958"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40d78418"/>
        <function-ref name="test" scoped="" ref="0x40d797a0"/>
        <function-ref name="fired" scoped="" ref="0x40d79528"/>
        <function-ref name="force" scoped="" ref="0x40d78930"/>
        <function-ref name="get" scoped="" ref="0x40d79010"/>
        <function-ref name="reset" scoped="" ref="0x40d79a18"/>
        <function-ref name="getMode" scoped="" ref="0x40d786b8"/>
        <function-ref name="isOn" scoped="" ref="0x40d781a0"/>
        <function-ref name="set" scoped="" ref="0x40d79288"/>
        <function-ref name="start" scoped="" ref="0x40d79c90"/>
        <function-ref name="stop" scoped="" ref="0x40d79f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40d7ff00" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="HplRF212C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40d7ff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d7d3e8"/>
        <function-ref name="fired" scoped="" ref="0x40d7eb98"/>
        <function-ref name="startAt" scoped="" ref="0x40d7d0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d7ee10"/>
        <function-ref name="getAlarm" scoped="" ref="0x40d7d660"/>
        <function-ref name="start" scoped="" ref="0x40d7e680"/>
        <function-ref name="stop" scoped="" ref="0x40d7e920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d7fac8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="HplRF212C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d7fac8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d7fca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40d7d930" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="HplRF212C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40d7d930"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40d7a418"/>
        <function-ref name="test" scoped="" ref="0x40d7b7a0"/>
        <function-ref name="get" scoped="" ref="0x40d7b010"/>
        <function-ref name="reset" scoped="" ref="0x40d7ba18"/>
        <function-ref name="getMode" scoped="" ref="0x40d7a6b8"/>
        <function-ref name="overflow" scoped="" ref="0x40d7b528"/>
        <function-ref name="isOn" scoped="" ref="0x40d7a1a0"/>
        <function-ref name="set" scoped="" ref="0x40d7b288"/>
        <function-ref name="start" scoped="" ref="0x40d7bc90"/>
        <function-ref name="stop" scoped="" ref="0x40d7bf08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x407a7500" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x407a7500"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a76d8"/>
        <function-ref name="disable" scoped="" ref="0x407a77b8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407a7898"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407a7978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x407a18b8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x407a18b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x407a1a90"/>
        <function-ref name="fired" scoped="" ref="0x407a1b70"/>
        <function-ref name="disable" scoped="" ref="0x407a1c50"/>
        <function-ref name="isEnabled" scoped="" ref="0x407a1d30"/>
        <function-ref name="reset" scoped="" ref="0x407a1e10"/>
        <function-ref name="setMask" scoped="" ref="0x407a1ef0"/>
        <function-ref name="enable" scoped="" ref="0x407a5010"/>
        <function-ref name="getPins" scoped="" ref="0x407a50f0"/>
        <function-ref name="getMask" scoped="" ref="0x407a51d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x407923a0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x407923a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40792578"/>
        <function-ref name="fired" scoped="" ref="0x40792658"/>
        <function-ref name="disable" scoped="" ref="0x40792738"/>
        <function-ref name="isEnabled" scoped="" ref="0x40792818"/>
        <function-ref name="reset" scoped="" ref="0x407928f8"/>
        <function-ref name="setMask" scoped="" ref="0x407929d8"/>
        <function-ref name="enable" scoped="" ref="0x40792ab8"/>
        <function-ref name="getPins" scoped="" ref="0x40792b98"/>
        <function-ref name="getMask" scoped="" ref="0x40792c78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40792e70" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40792e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407a9070"/>
        <function-ref name="disable" scoped="" ref="0x407a9150"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407a9230"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407a9310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x407b8e08" loc="36:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212P.nc">
      <component-ref qname="HplRF212P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x407b8e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="TRadio" ref="0x406b2850"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407b7468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x407b76a8" loc="37:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212P.nc">
      <component-ref qname="HplRF212P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x407b76a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x407b7880"/>
        <function-ref name="led0Toggle" scoped="" ref="0x407b7960"/>
        <function-ref name="led1On" scoped="" ref="0x407b7a40"/>
        <function-ref name="led1Toggle" scoped="" ref="0x407b7b20"/>
        <function-ref name="led3Off" scoped="" ref="0x407b7c00"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407b7ce0"/>
        <function-ref name="get" scoped="" ref="0x407b7dc0"/>
        <function-ref name="led1Off" scoped="" ref="0x407b7ea0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407b6010"/>
        <function-ref name="led3On" scoped="" ref="0x407b60f0"/>
        <function-ref name="led4Off" scoped="" ref="0x407b61d0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x407b62b0"/>
        <function-ref name="led0On" scoped="" ref="0x407b6390"/>
        <function-ref name="led2Off" scoped="" ref="0x407b64f0"/>
        <function-ref name="led2On" scoped="" ref="0x407b65d0"/>
        <function-ref name="led4On" scoped="" ref="0x407b66b0"/>
        <function-ref name="set" scoped="" ref="0x407b6790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IRQ" ref="0x407b8010" loc="30:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212P.nc">
      <component-ref qname="HplRF212P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IRQ" scoped="" ref="0x407b8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioCapture"/>
      </instance>
      <interface-functions>
        <function-ref name="captureFallingEdge" scoped="" ref="0x407b81e8"/>
        <function-ref name="disable" scoped="" ref="0x407b82c8"/>
        <function-ref name="captured" scoped="" ref="0x407b83a8"/>
        <function-ref name="captureRisingEdge" scoped="" ref="0x407b8488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Interrupt" ref="0x407b8720" loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/chips/rf212/HplRF212P.nc">
      <component-ref qname="HplRF212P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Interrupt" scoped="" ref="0x407b8720"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x407b88f8"/>
        <function-ref name="disable" scoped="" ref="0x407b89d8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x407b8ab8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x407b8b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407936e8" loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407936e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407938c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40793a50" loc="47:/opt/tinyos-2.x/tos/platforms/ucprotonb/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40793a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40793c28"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40793d08"/>
        <function-ref name="led1On" scoped="" ref="0x40793de8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40793ec8"/>
        <function-ref name="led3Off" scoped="" ref="0x407c6010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x407c60f0"/>
        <function-ref name="get" scoped="" ref="0x407c61d0"/>
        <function-ref name="led1Off" scoped="" ref="0x407c62b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407c6390"/>
        <function-ref name="led3On" scoped="" ref="0x407c6470"/>
        <function-ref name="led4Off" scoped="" ref="0x407c6550"/>
        <function-ref name="led4Toggle" scoped="" ref="0x407c6630"/>
        <function-ref name="led0On" scoped="" ref="0x407c6710"/>
        <function-ref name="led2Off" scoped="" ref="0x407c6870"/>
        <function-ref name="led2On" scoped="" ref="0x407c6950"/>
        <function-ref name="led4On" scoped="" ref="0x407c6a30"/>
        <function-ref name="set" scoped="" ref="0x407c6b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x407d07d0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x407d07d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407d0f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x407dae88" loc="53:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x407dae88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407e4600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x407e4978" loc="54:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407e4978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407e20f8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407e25e8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407e2370"/>
        <function-ref name="overflow" scoped="" ref="0x407e2860"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407f60e0" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407f60e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40471060"/>
            <typename><typedef-ref name="TMcu" ref="0x40471410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407f6830"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407f6d20"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407f6aa8"/>
        <function-ref name="overflow" scoped="" ref="0x407f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407efe60" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407efe60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407ee5e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407eead0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407ee858"/>
        <function-ref name="overflow" scoped="" ref="0x407eed48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407f4c48" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407f4c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40471060"/>
            <typename><typedef-ref name="TMcu" ref="0x40471410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4080a3b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4080a8a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4080a628"/>
        <function-ref name="overflow" scoped="" ref="0x4080ab18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40809d50" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40809d50"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40809f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40808198" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40808198"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40471060"/>
            <typename><typedef-ref name="TMcu" ref="0x40471410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408088e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40808dd8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40808b60"/>
        <function-ref name="overflow" scoped="" ref="0x40806068"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40806338" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40806338"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40805d88"/>
        <function-ref name="test" scoped="" ref="0x40805130"/>
        <function-ref name="get" scoped="" ref="0x40806980"/>
        <function-ref name="reset" scoped="" ref="0x408053a8"/>
        <function-ref name="getMode" scoped="" ref="0x40804048"/>
        <function-ref name="overflow" scoped="" ref="0x40806e98"/>
        <function-ref name="isOn" scoped="" ref="0x40805b10"/>
        <function-ref name="set" scoped="" ref="0x40806bf8"/>
        <function-ref name="start" scoped="" ref="0x40805620"/>
        <function-ref name="stop" scoped="" ref="0x40805898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40816d18" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40816d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40813778"/>
        <function-ref name="test" scoped="" ref="0x40814b00"/>
        <function-ref name="fired" scoped="" ref="0x40814888"/>
        <function-ref name="get" scoped="" ref="0x40814370"/>
        <function-ref name="reset" scoped="" ref="0x40814d78"/>
        <function-ref name="getMode" scoped="" ref="0x40813a18"/>
        <function-ref name="isOn" scoped="" ref="0x40813500"/>
        <function-ref name="set" scoped="" ref="0x408145e8"/>
        <function-ref name="start" scoped="" ref="0x40813010"/>
        <function-ref name="stop" scoped="" ref="0x40813288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x408035c8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408035c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407fe048"/>
        <function-ref name="test" scoped="" ref="0x407ff3c8"/>
        <function-ref name="get" scoped="" ref="0x40803c10"/>
        <function-ref name="reset" scoped="" ref="0x407ff640"/>
        <function-ref name="getMode" scoped="" ref="0x407fe2e8"/>
        <function-ref name="overflow" scoped="" ref="0x407ff150"/>
        <function-ref name="isOn" scoped="" ref="0x407ffda8"/>
        <function-ref name="set" scoped="" ref="0x40803e88"/>
        <function-ref name="start" scoped="" ref="0x407ff8b8"/>
        <function-ref name="stop" scoped="" ref="0x407ffb30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407fe9b0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407fe9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40816418"/>
        <function-ref name="test" scoped="" ref="0x408177a0"/>
        <function-ref name="fired" scoped="" ref="0x40817528"/>
        <function-ref name="force" scoped="" ref="0x40816930"/>
        <function-ref name="get" scoped="" ref="0x40817010"/>
        <function-ref name="reset" scoped="" ref="0x40817a18"/>
        <function-ref name="getMode" scoped="" ref="0x408166b8"/>
        <function-ref name="isOn" scoped="" ref="0x408161a0"/>
        <function-ref name="set" scoped="" ref="0x40817288"/>
        <function-ref name="start" scoped="" ref="0x40817c90"/>
        <function-ref name="stop" scoped="" ref="0x40817f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x4080d6a8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x4080d6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408241a0"/>
        <function-ref name="test" scoped="" ref="0x4080c528"/>
        <function-ref name="fired" scoped="" ref="0x4080c2b0"/>
        <function-ref name="force" scoped="" ref="0x408246b8"/>
        <function-ref name="get" scoped="" ref="0x4080dcf0"/>
        <function-ref name="reset" scoped="" ref="0x4080c7a0"/>
        <function-ref name="getMode" scoped="" ref="0x40824440"/>
        <function-ref name="isOn" scoped="" ref="0x4080cf08"/>
        <function-ref name="set" scoped="" ref="0x4080c010"/>
        <function-ref name="start" scoped="" ref="0x4080ca18"/>
        <function-ref name="stop" scoped="" ref="0x4080cc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4081e238" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4081e238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4081cca0"/>
        <function-ref name="test" scoped="" ref="0x4081c048"/>
        <function-ref name="fired" scoped="" ref="0x4081ed98"/>
        <function-ref name="get" scoped="" ref="0x4081e880"/>
        <function-ref name="reset" scoped="" ref="0x4081c2c0"/>
        <function-ref name="getMode" scoped="" ref="0x4081b010"/>
        <function-ref name="isOn" scoped="" ref="0x4081ca28"/>
        <function-ref name="set" scoped="" ref="0x4081eaf8"/>
        <function-ref name="start" scoped="" ref="0x4081c538"/>
        <function-ref name="stop" scoped="" ref="0x4081c7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4081b2c8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4081b2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4081b4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40824ab0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40824ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40822538"/>
        <function-ref name="test" scoped="" ref="0x408238b0"/>
        <function-ref name="fired" scoped="" ref="0x40823638"/>
        <function-ref name="force" scoped="" ref="0x40822a50"/>
        <function-ref name="get" scoped="" ref="0x40823120"/>
        <function-ref name="reset" scoped="" ref="0x40823b28"/>
        <function-ref name="getMode" scoped="" ref="0x408227d8"/>
        <function-ref name="isOn" scoped="" ref="0x408222c0"/>
        <function-ref name="set" scoped="" ref="0x40823398"/>
        <function-ref name="start" scoped="" ref="0x40823da0"/>
        <function-ref name="stop" scoped="" ref="0x40822048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4081b6b8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4081b6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4081b890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40822e48" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40822e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4081f8d8"/>
        <function-ref name="test" scoped="" ref="0x40820c68"/>
        <function-ref name="fired" scoped="" ref="0x408209f0"/>
        <function-ref name="force" scoped="" ref="0x4081fdf0"/>
        <function-ref name="get" scoped="" ref="0x408204d8"/>
        <function-ref name="reset" scoped="" ref="0x40820ee0"/>
        <function-ref name="getMode" scoped="" ref="0x4081fb78"/>
        <function-ref name="isOn" scoped="" ref="0x4081f660"/>
        <function-ref name="set" scoped="" ref="0x40820750"/>
        <function-ref name="start" scoped="" ref="0x4081f170"/>
        <function-ref name="stop" scoped="" ref="0x4081f3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408115c0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408115c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4080d010"/>
        <function-ref name="test" scoped="" ref="0x4080e3a8"/>
        <function-ref name="get" scoped="" ref="0x40811c08"/>
        <function-ref name="reset" scoped="" ref="0x4080e620"/>
        <function-ref name="getMode" scoped="" ref="0x4080d2b0"/>
        <function-ref name="overflow" scoped="" ref="0x4080e130"/>
        <function-ref name="isOn" scoped="" ref="0x4080ed88"/>
        <function-ref name="set" scoped="" ref="0x40811e80"/>
        <function-ref name="start" scoped="" ref="0x4080e898"/>
        <function-ref name="stop" scoped="" ref="0x4080eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406a38b0" loc="3:/opt/tinyos-2.x/tos/platforms/ucprotonb/BoardInitC.nc">
      <component-ref qname="BoardInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406a38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406a3a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x40876980" loc="34:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40876980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40876b58"/>
        <function-ref name="stopDone" scoped="" ref="0x40876c38"/>
        <function-ref name="start" scoped="" ref="0x40876d18"/>
        <function-ref name="stop" scoped="" ref="0x40876df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40879240" loc="37:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40879240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40879418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x40874440" loc="57:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x40874440"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40874618"/>
        <function-ref name="runTask" scoped="" ref="0x408746f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x40879d30" loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x40879d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40879f08"/>
        <function-ref name="runTask" scoped="" ref="0x40875010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x4087a098" loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x4087a098"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4087a270"/>
        <function-ref name="disable" scoped="" ref="0x4087a350"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4087a430"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4087a510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x4087a758" loc="36:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x4087a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4087a930"/>
        <function-ref name="isInput" scoped="" ref="0x4087aa10"/>
        <function-ref name="toggle" scoped="" ref="0x4087aaf0"/>
        <function-ref name="isOutput" scoped="" ref="0x4087abd0"/>
        <function-ref name="get" scoped="" ref="0x4087acb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4087ad90"/>
        <function-ref name="set" scoped="" ref="0x4087ae70"/>
        <function-ref name="clr" scoped="" ref="0x40879010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408846f8" loc="35:/opt/tinyos-2.x/tos/platforms/ucprotonb/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408846f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408848d0"/>
        <function-ref name="disable" scoped="" ref="0x408849b0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40884a90"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40884b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x40884d30" loc="36:/opt/tinyos-2.x/tos/platforms/ucprotonb/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40884d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40884f08"/>
        <function-ref name="isInput" scoped="" ref="0x40883010"/>
        <function-ref name="toggle" scoped="" ref="0x408830f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408831d0"/>
        <function-ref name="get" scoped="" ref="0x408832b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40883390"/>
        <function-ref name="set" scoped="" ref="0x40883470"/>
        <function-ref name="clr" scoped="" ref="0x40883550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40886370" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40886370"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40886548"/>
        <function-ref name="stopDone" scoped="" ref="0x40886628"/>
        <function-ref name="start" scoped="" ref="0x40886708"/>
        <function-ref name="stop" scoped="" ref="0x408867e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4089ee18" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4089ee18"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40880010"/>
        <function-ref name="getPayload" scoped="" ref="0x408800f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408801d0"/>
        <function-ref name="cancel" scoped="" ref="0x408802b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40880390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408b0148" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408b0148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408b0320"/>
        <function-ref name="payloadLength" scoped="" ref="0x408b0400"/>
        <function-ref name="getPayload" scoped="" ref="0x408b04e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b05c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408b06a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4089d248" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4089d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4089d420"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408be840" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408be840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408bea18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408beaf8"/>
        <function-ref name="led1On" scoped="" ref="0x408bebd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408becb8"/>
        <function-ref name="led3Off" scoped="" ref="0x408bed98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408bee78"/>
        <function-ref name="get" scoped="" ref="0x4089c010"/>
        <function-ref name="led1Off" scoped="" ref="0x4089c0f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4089c1d0"/>
        <function-ref name="led3On" scoped="" ref="0x4089c2b0"/>
        <function-ref name="led4Off" scoped="" ref="0x4089c390"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4089c470"/>
        <function-ref name="led0On" scoped="" ref="0x4089c550"/>
        <function-ref name="led2Off" scoped="" ref="0x4089c6b0"/>
        <function-ref name="led2On" scoped="" ref="0x4089c790"/>
        <function-ref name="led4On" scoped="" ref="0x4089c870"/>
        <function-ref name="set" scoped="" ref="0x4089c950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408be308" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408be308"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408be4e0"/>
        <function-ref name="noAck" scoped="" ref="0x408be5c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408be6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408c3140" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408c3140"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408c3318"/>
        <function-ref name="source" scoped="" ref="0x408c33f8"/>
        <function-ref name="address" scoped="" ref="0x408c34d8"/>
        <function-ref name="destination" scoped="" ref="0x408c35b8"/>
        <function-ref name="setSource" scoped="" ref="0x408c3698"/>
        <function-ref name="setDestination" scoped="" ref="0x408c3778"/>
        <function-ref name="type" scoped="" ref="0x408c3858"/>
        <function-ref name="setType" scoped="" ref="0x408c3938"/>
        <function-ref name="isForMe" scoped="" ref="0x408c3a18"/>
        <function-ref name="setGroup" scoped="" ref="0x408c3af8"/>
        <function-ref name="localGroup" scoped="" ref="0x408c3bd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x408f6430" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x408f6430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f6608"/>
        <function-ref name="getPayload" scoped="" ref="0x408f66e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f67c8"/>
        <function-ref name="cancel" scoped="" ref="0x408f68a8"/>
        <function-ref name="sendDone" scoped="" ref="0x408f6988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x408f6ae8" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x408f6ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f6cc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x408b6180" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x408b6180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408b6368"/>
        <function-ref name="getPayload" scoped="" ref="0x408b6448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408b6528"/>
        <function-ref name="cancel" scoped="" ref="0x408b6608"/>
        <function-ref name="sendDone" scoped="" ref="0x408b66e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x408bf850" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x408bf850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x408bfa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x408bfb08"/>
        <function-ref name="getPayload" scoped="" ref="0x408bfbe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408bfcc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x408bfda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408b68c0" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408b68c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408b6aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x408bfee8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x408bfee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x408f60e0"/>
        <function-ref name="noAck" scoped="" ref="0x408f61c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x408f62a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x408b6be8" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x408b6be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x408b6dc0"/>
        <function-ref name="source" scoped="" ref="0x408b6ea0"/>
        <function-ref name="address" scoped="" ref="0x408bf010"/>
        <function-ref name="destination" scoped="" ref="0x408bf0f0"/>
        <function-ref name="setSource" scoped="" ref="0x408bf1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x408bf2b0"/>
        <function-ref name="type" scoped="" ref="0x408bf390"/>
        <function-ref name="setType" scoped="" ref="0x408bf470"/>
        <function-ref name="isForMe" scoped="" ref="0x408bf550"/>
        <function-ref name="setGroup" scoped="" ref="0x408bf630"/>
        <function-ref name="localGroup" scoped="" ref="0x408bf710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408f23a8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408f23a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408f2580"/>
        <function-ref name="stopDone" scoped="" ref="0x408f2660"/>
        <function-ref name="start" scoped="" ref="0x408f2740"/>
        <function-ref name="stop" scoped="" ref="0x408f2820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x408f1288" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408f1288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40869680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408f1460"/>
        <function-ref name="getPayload" scoped="" ref="0x408f1540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408f1620"/>
        <function-ref name="cancel" scoped="" ref="0x408f1700"/>
        <function-ref name="sendDone" scoped="" ref="0x408f17e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408f2010" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x408f2c68" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408f2c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40869680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408f2e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40909e80" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40909e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408f0070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408f0150"/>
        <function-ref name="led1On" scoped="" ref="0x408f0230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408f0310"/>
        <function-ref name="led3Off" scoped="" ref="0x408f03f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408f04d0"/>
        <function-ref name="get" scoped="" ref="0x408f05b0"/>
        <function-ref name="led1Off" scoped="" ref="0x408f0690"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408f0770"/>
        <function-ref name="led3On" scoped="" ref="0x408f0850"/>
        <function-ref name="led4Off" scoped="" ref="0x408f0930"/>
        <function-ref name="led4Toggle" scoped="" ref="0x408f0a10"/>
        <function-ref name="led0On" scoped="" ref="0x408f0af0"/>
        <function-ref name="led2Off" scoped="" ref="0x408f0c50"/>
        <function-ref name="led2On" scoped="" ref="0x408f0d30"/>
        <function-ref name="led4On" scoped="" ref="0x408f0e10"/>
        <function-ref name="set" scoped="" ref="0x408f0ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40909978" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40909978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40869680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40909b50"/>
        <function-ref name="offset" scoped="" ref="0x40909c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40909d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40916de8" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40916de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40914010"/>
        <function-ref name="stopDone" scoped="" ref="0x409140f0"/>
        <function-ref name="start" scoped="" ref="0x409141d0"/>
        <function-ref name="stop" scoped="" ref="0x409142b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x409517a0" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x409517a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40951978"/>
        <function-ref name="runTask" scoped="" ref="0x40951a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40925548" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40925548"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40925720"/>
        <function-ref name="stop" scoped="" ref="0x40925800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x40934a18" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x40934a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40934bf0"/>
        <function-ref name="runTask" scoped="" ref="0x40934cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40916a50" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40916a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40916c28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40924518" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40924518"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x409246f0"/>
        <function-ref name="flush" scoped="" ref="0x409247d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40952010" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40952010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409521e8"/>
        <function-ref name="runTask" scoped="" ref="0x409522c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40928970" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40928970"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40928b48"/>
        <function-ref name="resetSend" scoped="" ref="0x40928c28"/>
        <function-ref name="dataReceived" scoped="" ref="0x40928d08"/>
        <function-ref name="resetReceive" scoped="" ref="0x40928de8"/>
        <function-ref name="putData" scoped="" ref="0x40928ec8"/>
        <function-ref name="putDone" scoped="" ref="0x40913010"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x409130f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40913260" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40913260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40913438"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40913518"/>
        <function-ref name="led1On" scoped="" ref="0x409135f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409136d8"/>
        <function-ref name="led3Off" scoped="" ref="0x409137b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40913898"/>
        <function-ref name="get" scoped="" ref="0x40913978"/>
        <function-ref name="led1Off" scoped="" ref="0x40913a58"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40913b38"/>
        <function-ref name="led3On" scoped="" ref="0x40913c18"/>
        <function-ref name="led4Off" scoped="" ref="0x40913cf8"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40913dd8"/>
        <function-ref name="led0On" scoped="" ref="0x40913eb8"/>
        <function-ref name="led2Off" scoped="" ref="0x40912090"/>
        <function-ref name="led2On" scoped="" ref="0x40912170"/>
        <function-ref name="led4On" scoped="" ref="0x40912250"/>
        <function-ref name="set" scoped="" ref="0x40912330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x4094e428" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x4094e428"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4094e600"/>
        <function-ref name="runTask" scoped="" ref="0x4094e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x409105b8" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x409105b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40910790"/>
        <function-ref name="nextByte" scoped="" ref="0x40910870"/>
        <function-ref name="startSend" scoped="" ref="0x40910950"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40910a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x4090e778" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4090e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4090e950"/>
        <function-ref name="byteReceived" scoped="" ref="0x4090ea30"/>
        <function-ref name="endPacket" scoped="" ref="0x4090eb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x409d4670" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x409d4670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409d4848"/>
        <function-ref name="runTask" scoped="" ref="0x409d4928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409b7bc8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409b7bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40869680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409b7db0"/>
        <function-ref name="getPayload" scoped="" ref="0x409b7e90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409b6010"/>
        <function-ref name="cancel" scoped="" ref="0x409b60f0"/>
        <function-ref name="sendDone" scoped="" ref="0x409b61d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x409d4aa8" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x409d4aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409d4c80"/>
        <function-ref name="runTask" scoped="" ref="0x409d4d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409b7808" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409b7808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40869680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409b79f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x409b63f8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x409b63f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x40869680"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x409b65e0"/>
        <function-ref name="offset" scoped="" ref="0x409b66c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x409b67a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409b53f0" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409b53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409b55c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409b56a8"/>
        <function-ref name="led1On" scoped="" ref="0x409b5788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409b5868"/>
        <function-ref name="led3Off" scoped="" ref="0x409b5948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409b5a28"/>
        <function-ref name="get" scoped="" ref="0x409b5b08"/>
        <function-ref name="led1Off" scoped="" ref="0x409b5be8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409b5cc8"/>
        <function-ref name="led3On" scoped="" ref="0x409b5da8"/>
        <function-ref name="led4Off" scoped="" ref="0x409b5e88"/>
        <function-ref name="led4Toggle" scoped="" ref="0x409d4010"/>
        <function-ref name="led0On" scoped="" ref="0x409d40f0"/>
        <function-ref name="led2Off" scoped="" ref="0x409d4250"/>
        <function-ref name="led2On" scoped="" ref="0x409d4330"/>
        <function-ref name="led4On" scoped="" ref="0x409d4410"/>
        <function-ref name="set" scoped="" ref="0x409d44f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x409b6db8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x409b6db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x409b5010"/>
        <function-ref name="nextByte" scoped="" ref="0x409b50f0"/>
        <function-ref name="startSend" scoped="" ref="0x409b51d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x409b52b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x409b68e0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409b68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x409b6ab8"/>
        <function-ref name="byteReceived" scoped="" ref="0x409b6b98"/>
        <function-ref name="endPacket" scoped="" ref="0x409b6c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x409c73d0" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x409c73d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c75a8"/>
        <function-ref name="receivedByte" scoped="" ref="0x409c7688"/>
        <function-ref name="receive" scoped="" ref="0x409c7768"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x409c7848"/>
        <function-ref name="receiveDone" scoped="" ref="0x409c7928"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x409c7a08"/>
        <function-ref name="sendDone" scoped="" ref="0x409c7ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x409d0040" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x409d0040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x409d0218"/>
        <function-ref name="resetSend" scoped="" ref="0x409d02f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x409d03d8"/>
        <function-ref name="resetReceive" scoped="" ref="0x409d04b8"/>
        <function-ref name="putData" scoped="" ref="0x409d0598"/>
        <function-ref name="putDone" scoped="" ref="0x409d0678"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x409d0758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409c7c58" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409c7c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409c7e30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409c7f10"/>
        <function-ref name="led1On" scoped="" ref="0x409cf010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409cf0f0"/>
        <function-ref name="led3Off" scoped="" ref="0x409cf1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409cf2b0"/>
        <function-ref name="get" scoped="" ref="0x409cf390"/>
        <function-ref name="led1Off" scoped="" ref="0x409cf470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409cf550"/>
        <function-ref name="led3On" scoped="" ref="0x409cf630"/>
        <function-ref name="led4Off" scoped="" ref="0x409cf710"/>
        <function-ref name="led4Toggle" scoped="" ref="0x409cf7f0"/>
        <function-ref name="led0On" scoped="" ref="0x409cf8d0"/>
        <function-ref name="led2Off" scoped="" ref="0x409cfa30"/>
        <function-ref name="led2On" scoped="" ref="0x409cfb10"/>
        <function-ref name="led4On" scoped="" ref="0x409cfbf0"/>
        <function-ref name="set" scoped="" ref="0x409cfcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x409d5588" loc="42:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x409d5588"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d5760"/>
        <function-ref name="receive" scoped="" ref="0x409d5840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x409d2728" loc="41:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x409d2728"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409d2900"/>
        <function-ref name="receivedByte" scoped="" ref="0x409d29e0"/>
        <function-ref name="receive" scoped="" ref="0x409d2ac0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x409d2ba0"/>
        <function-ref name="receiveDone" scoped="" ref="0x409d2c80"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x409d2d60"/>
        <function-ref name="sendDone" scoped="" ref="0x409d2e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409d22a8" loc="40:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409d22a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409d2480"/>
        <function-ref name="stop" scoped="" ref="0x409d2560"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x409f4480" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x409f4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f4658"/>
        <function-ref name="receive" scoped="" ref="0x409f4738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x409f4900" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x409f4900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f4ad8"/>
        <function-ref name="receivedByte" scoped="" ref="0x409f4bb8"/>
        <function-ref name="receive" scoped="" ref="0x409f4c98"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x409f4d78"/>
        <function-ref name="receiveDone" scoped="" ref="0x409f4e58"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x409f3010"/>
        <function-ref name="sendDone" scoped="" ref="0x409f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x409f3450" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409f3450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x409f3ba0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x409f10a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x409f3e18"/>
        <function-ref name="overflow" scoped="" ref="0x409f1320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409f4010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409f4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409f41e8"/>
        <function-ref name="stop" scoped="" ref="0x409f42c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x409f0d30" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x409f0d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409f0f08"/>
        <function-ref name="receive" scoped="" ref="0x409ef010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x409efa08" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x409efa08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409efbe0"/>
        <function-ref name="stop" scoped="" ref="0x409efcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409f05e0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409f05e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409f07b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x409ef170" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x409ef170"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409ef348"/>
        <function-ref name="receivedByte" scoped="" ref="0x409ef428"/>
        <function-ref name="receive" scoped="" ref="0x409ef508"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x409ef5e8"/>
        <function-ref name="receiveDone" scoped="" ref="0x409ef6c8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x409ef7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x409ef888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a0aee8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a0aee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40473288"/>
            <typename><typedef-ref name="TMicro" ref="0x40473450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a08680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a08b70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a088f8"/>
        <function-ref name="overflow" scoped="" ref="0x40a08de8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40a0a2b0" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40a0a2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a0a488"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a0a568"/>
        <function-ref name="rxDone" scoped="" ref="0x40a0a648"/>
        <function-ref name="txDone" scoped="" ref="0x40a0a728"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a0a808"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a0a8e8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a0a9c8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a0aaa8"/>
        <function-ref name="tx" scoped="" ref="0x40a0ab88"/>
        <function-ref name="rx" scoped="" ref="0x40a0ac68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x409f0918" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x409f0918"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409f0af0"/>
        <function-ref name="stop" scoped="" ref="0x409f0bd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x409efe40" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x409efe40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a0a050"/>
        <function-ref name="stop" scoped="" ref="0x40a0a130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40a17330" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40a17330"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a17508"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a175e8"/>
        <function-ref name="rxDone" scoped="" ref="0x40a176c8"/>
        <function-ref name="txDone" scoped="" ref="0x40a177a8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a17888"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a17968"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a17a48"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a17b28"/>
        <function-ref name="tx" scoped="" ref="0x40a17c08"/>
        <function-ref name="rx" scoped="" ref="0x40a17ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40a16a18" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40a16a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a16bf0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a16cd0"/>
        <function-ref name="rxDone" scoped="" ref="0x40a16db0"/>
        <function-ref name="txDone" scoped="" ref="0x40a16e90"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a37010"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a370f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a371d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a372b0"/>
        <function-ref name="tx" scoped="" ref="0x40a37390"/>
        <function-ref name="rx" scoped="" ref="0x40a37470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40a18e08" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40a18e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a17010"/>
        <function-ref name="stop" scoped="" ref="0x40a170f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40a16010" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40a16010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a161e8"/>
        <function-ref name="stop" scoped="" ref="0x40a162c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40a16520" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40a16520"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a166f8"/>
        <function-ref name="stop" scoped="" ref="0x40a167d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40a188f8" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40a188f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a18ad0"/>
        <function-ref name="stop" scoped="" ref="0x40a18bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40a37c98" loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40a37c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a37e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40a34b58" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40a34b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a34d30"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a34e10"/>
        <function-ref name="rxDone" scoped="" ref="0x40a34ef0"/>
        <function-ref name="txDone" scoped="" ref="0x40a33010"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a330f0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a331d0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a332b0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a33390"/>
        <function-ref name="tx" scoped="" ref="0x40a33470"/>
        <function-ref name="rx" scoped="" ref="0x40a33550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40a31218" loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40a31218"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40a313f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40a33760" loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40a33760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a33938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40a32628" loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40a32628"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a32800"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a328e0"/>
        <function-ref name="rxDone" scoped="" ref="0x40a329c0"/>
        <function-ref name="txDone" scoped="" ref="0x40a32aa0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a32b80"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a32c60"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a32d40"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a32e20"/>
        <function-ref name="tx" scoped="" ref="0x40a32f00"/>
        <function-ref name="rx" scoped="" ref="0x40a31010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40a34640" loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40a34640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a34818"/>
        <function-ref name="stop" scoped="" ref="0x40a348f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40a33bb0" loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40a33bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a33d88"/>
        <function-ref name="stop" scoped="" ref="0x40a33e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40a32110" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40a32110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a322e8"/>
        <function-ref name="stop" scoped="" ref="0x40a323c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40a315e8" loc="126:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a315e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40a317c0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40a318a0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40a31980"/>
        <function-ref name="actualMicro" scoped="" ref="0x40a31a60"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40a31b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a31d28" loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a31d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a31f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40a34110" loc="115:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40a34110"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a342e8"/>
        <function-ref name="stop" scoped="" ref="0x40a343c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40a5f208" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40a5f208"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40a5f3e0"/>
        <function-ref name="offset" scoped="" ref="0x40a5f4c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40a5f5a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40a74e40" loc="47:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40a74e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40a73050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40a76d00" loc="43:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a76d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a76ed8"/>
        <function-ref name="getPayload" scoped="" ref="0x40a75010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a750f0"/>
        <function-ref name="cancel" scoped="" ref="0x40a751d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a752b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40a75438" loc="44:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a75438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a75610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a75780" loc="45:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a75780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a75958"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a75a38"/>
        <function-ref name="led1On" scoped="" ref="0x40a75b18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a75bf8"/>
        <function-ref name="led3Off" scoped="" ref="0x40a75cd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a75db8"/>
        <function-ref name="get" scoped="" ref="0x40a75e98"/>
        <function-ref name="led1Off" scoped="" ref="0x40a74010"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a740f0"/>
        <function-ref name="led3On" scoped="" ref="0x40a741d0"/>
        <function-ref name="led4Off" scoped="" ref="0x40a742b0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40a74390"/>
        <function-ref name="led0On" scoped="" ref="0x40a74470"/>
        <function-ref name="led2Off" scoped="" ref="0x40a745d0"/>
        <function-ref name="led2On" scoped="" ref="0x40a746b0"/>
        <function-ref name="led4On" scoped="" ref="0x40a74790"/>
        <function-ref name="set" scoped="" ref="0x40a74870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x40a72398" loc="61:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x40a72398"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a72570"/>
        <function-ref name="runTask" scoped="" ref="0x40a72650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x40a767a8" loc="38:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40a767a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40a76980"/>
        <function-ref name="offset" scoped="" ref="0x40a76a60"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40a76b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x40a74a18" loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a74a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a74bf0"/>
        <function-ref name="stop" scoped="" ref="0x40a74cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40a86820" loc="42:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a86820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a869f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a86ad8"/>
        <function-ref name="led1On" scoped="" ref="0x40a86bb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a86c98"/>
        <function-ref name="led3Off" scoped="" ref="0x40a86d78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a86e58"/>
        <function-ref name="get" scoped="" ref="0x40a85010"/>
        <function-ref name="led1Off" scoped="" ref="0x40a850f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a851d0"/>
        <function-ref name="led3On" scoped="" ref="0x40a852b0"/>
        <function-ref name="led4Off" scoped="" ref="0x40a85390"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40a85470"/>
        <function-ref name="led0On" scoped="" ref="0x40a85550"/>
        <function-ref name="led2Off" scoped="" ref="0x40a856b0"/>
        <function-ref name="led2On" scoped="" ref="0x40a85790"/>
        <function-ref name="led4On" scoped="" ref="0x40a85870"/>
        <function-ref name="set" scoped="" ref="0x40a85950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40a82060" loc="39:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40a82060"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a82238"/>
        <function-ref name="isInput" scoped="" ref="0x40a82318"/>
        <function-ref name="toggle" scoped="" ref="0x40a823f8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a824d8"/>
        <function-ref name="get" scoped="" ref="0x40a825b8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a82698"/>
        <function-ref name="set" scoped="" ref="0x40a82778"/>
        <function-ref name="clr" scoped="" ref="0x40a82858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x40a81e88" loc="42:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x40a81e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a80070"/>
        <function-ref name="isInput" scoped="" ref="0x40a80150"/>
        <function-ref name="toggle" scoped="" ref="0x40a80230"/>
        <function-ref name="isOutput" scoped="" ref="0x40a80310"/>
        <function-ref name="get" scoped="" ref="0x40a803f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a804d0"/>
        <function-ref name="set" scoped="" ref="0x40a805b0"/>
        <function-ref name="clr" scoped="" ref="0x40a80690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40a82a48" loc="40:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40a82a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a82c20"/>
        <function-ref name="isInput" scoped="" ref="0x40a82d00"/>
        <function-ref name="toggle" scoped="" ref="0x40a82de0"/>
        <function-ref name="isOutput" scoped="" ref="0x40a82ec0"/>
        <function-ref name="get" scoped="" ref="0x40a81010"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a810f0"/>
        <function-ref name="set" scoped="" ref="0x40a811d0"/>
        <function-ref name="clr" scoped="" ref="0x40a812b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40a80830" loc="45:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a80830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a80a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40a814a0" loc="41:/opt/tinyos-2.x/tos/platforms/ucprotonb/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40a814a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a81678"/>
        <function-ref name="isInput" scoped="" ref="0x40a81758"/>
        <function-ref name="toggle" scoped="" ref="0x40a81838"/>
        <function-ref name="isOutput" scoped="" ref="0x40a81918"/>
        <function-ref name="get" scoped="" ref="0x40a819f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a81ad8"/>
        <function-ref name="set" scoped="" ref="0x40a81bb8"/>
        <function-ref name="clr" scoped="" ref="0x40a81c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40a9e110" loc="50:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40a9e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9e2e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a9e3c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a9e4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9e588"/>
        <function-ref name="get" scoped="" ref="0x40a9e668"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9e748"/>
        <function-ref name="set" scoped="" ref="0x40a9e828"/>
        <function-ref name="clr" scoped="" ref="0x40a9e908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x40a9c010" loc="53:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x40a9c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9c1e8"/>
        <function-ref name="isInput" scoped="" ref="0x40a9c2c8"/>
        <function-ref name="toggle" scoped="" ref="0x40a9c3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9c488"/>
        <function-ref name="get" scoped="" ref="0x40a9c568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9c648"/>
        <function-ref name="set" scoped="" ref="0x40a9c728"/>
        <function-ref name="clr" scoped="" ref="0x40a9c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a83a38" loc="46:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a83a38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a83c10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40a9eaf8" loc="51:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40a9eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9ecd0"/>
        <function-ref name="isInput" scoped="" ref="0x40a9edb0"/>
        <function-ref name="toggle" scoped="" ref="0x40a9ee90"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9d010"/>
        <function-ref name="get" scoped="" ref="0x40a9d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9d1d0"/>
        <function-ref name="set" scoped="" ref="0x40a9d2b0"/>
        <function-ref name="clr" scoped="" ref="0x40a9d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40a83d80" loc="47:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a83d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a9f010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a9f0f0"/>
        <function-ref name="led1On" scoped="" ref="0x40a9f1d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a9f2b0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a9f390"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a9f470"/>
        <function-ref name="get" scoped="" ref="0x40a9f550"/>
        <function-ref name="led1Off" scoped="" ref="0x40a9f630"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a9f710"/>
        <function-ref name="led3On" scoped="" ref="0x40a9f7f0"/>
        <function-ref name="led4Off" scoped="" ref="0x40a9f8d0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40a9f9b0"/>
        <function-ref name="led0On" scoped="" ref="0x40a9fa90"/>
        <function-ref name="led2Off" scoped="" ref="0x40a9fbf0"/>
        <function-ref name="led2On" scoped="" ref="0x40a9fcd0"/>
        <function-ref name="led4On" scoped="" ref="0x40a9fdb0"/>
        <function-ref name="set" scoped="" ref="0x40a9fe90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40a9d580" loc="52:/opt/tinyos-2.x/tos/platforms/ucprotonb/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40a9d580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40a9d758"/>
        <function-ref name="isInput" scoped="" ref="0x40a9d838"/>
        <function-ref name="toggle" scoped="" ref="0x40a9d918"/>
        <function-ref name="isOutput" scoped="" ref="0x40a9d9f8"/>
        <function-ref name="get" scoped="" ref="0x40a9dad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40a9dbb8"/>
        <function-ref name="set" scoped="" ref="0x40a9dc98"/>
        <function-ref name="clr" scoped="" ref="0x40a9dd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40aa9808" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40aa9808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aa99e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40447a08" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40447a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40447be0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40aa9400" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40aa9400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aa95d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40447da0" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40447da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40aa9010"/>
        <function-ref name="taskLoop" scoped="" ref="0x40aa90f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40aa91d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4038a010" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4038a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4038a1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4038a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40357840" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40357840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40357a18"/>
        <function-ref name="taskLoop" scoped="" ref="0x40357af8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40357bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x404219c0" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x404219c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40421b98"/>
        <function-ref name="runTask" scoped="" ref="0x40421c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40428668" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40428668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40428840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40421188" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40421188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421360"/>
        <function-ref name="taskLoop" scoped="" ref="0x40421440"/>
        <function-ref name="runNextTask" scoped="" ref="0x40421520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer0" ref="0x40abfc08" loc="52:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer0" scoped="" ref="0x40abfc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40abe730"/>
        <function-ref name="fired" scoped="" ref="0x40ac59b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40abe0f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ac5e60"/>
        <function-ref name="getdt" scoped="" ref="0x40abebe0"/>
        <function-ref name="gett0" scoped="" ref="0x40abe988"/>
        <function-ref name="isRunning" scoped="" ref="0x40ac5c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ac5258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40abe410"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ac54d8"/>
        <function-ref name="stop" scoped="" ref="0x40ac5758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40ab7840" loc="56:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40ab7840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40ab7a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer1" ref="0x40abd010" loc="53:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer1" scoped="" ref="0x40abd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40abcb00"/>
        <function-ref name="fired" scoped="" ref="0x40abdd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40abc4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40abc268"/>
        <function-ref name="getdt" scoped="" ref="0x40aba010"/>
        <function-ref name="gett0" scoped="" ref="0x40abcd58"/>
        <function-ref name="isRunning" scoped="" ref="0x40abc010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40abd638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40abc7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40abd8b8"/>
        <function-ref name="stop" scoped="" ref="0x40abdb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ab85c8" loc="55:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ab85c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ab87a0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ab8880"/>
        <function-ref name="led1On" scoped="" ref="0x40ab8960"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ab8a40"/>
        <function-ref name="led3Off" scoped="" ref="0x40ab8b20"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ab8c00"/>
        <function-ref name="get" scoped="" ref="0x40ab8ce0"/>
        <function-ref name="led1Off" scoped="" ref="0x40ab8dc0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40ab8ea0"/>
        <function-ref name="led3On" scoped="" ref="0x40ab7010"/>
        <function-ref name="led4Off" scoped="" ref="0x40ab70f0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40ab71d0"/>
        <function-ref name="led0On" scoped="" ref="0x40ab72b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40ab7410"/>
        <function-ref name="led2On" scoped="" ref="0x40ab74f0"/>
        <function-ref name="led4On" scoped="" ref="0x40ab75d0"/>
        <function-ref name="set" scoped="" ref="0x40ab76b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer2" ref="0x40aba3a8" loc="54:BlinkC.nc">
      <component-ref qname="BlinkC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer2" scoped="" ref="0x40aba3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ab9e98"/>
        <function-ref name="fired" scoped="" ref="0x40ab9150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ab9858"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ab9600"/>
        <function-ref name="getdt" scoped="" ref="0x40ab8368"/>
        <function-ref name="gett0" scoped="" ref="0x40ab8110"/>
        <function-ref name="isRunning" scoped="" ref="0x40ab93a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40aba9d0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ab9b78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40abac50"/>
        <function-ref name="stop" scoped="" ref="0x40abaed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4044a770" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4044a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b54330"/>
        <function-ref name="fired" scoped="" ref="0x40ad6520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ad6c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ad69d0"/>
        <function-ref name="getdt" scoped="" ref="0x40b547e0"/>
        <function-ref name="gett0" scoped="" ref="0x40b54588"/>
        <function-ref name="isRunning" scoped="" ref="0x40ad6778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4044ad98"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b54010"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ad6048"/>
        <function-ref name="stop" scoped="" ref="0x40ad62c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x40acf020" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x40acf020"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40aceb00"/>
        <function-ref name="fired" scoped="" ref="0x40acfda0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ace4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ace268"/>
        <function-ref name="getdt" scoped="" ref="0x40acd010"/>
        <function-ref name="gett0" scoped="" ref="0x40aced58"/>
        <function-ref name="isRunning" scoped="" ref="0x40ace010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40acf648"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ace7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40acf8c8"/>
        <function-ref name="stop" scoped="" ref="0x40acfb48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40aca280" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40aca280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b08758"/>
        <function-ref name="fired" scoped="" ref="0x40acaee8"/>
        <function-ref name="startAt" scoped="" ref="0x40b08418"/>
        <function-ref name="isRunning" scoped="" ref="0x40b081a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b089d0"/>
        <function-ref name="start" scoped="" ref="0x40aca9d0"/>
        <function-ref name="stop" scoped="" ref="0x40acac70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e28470" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e28470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e27940"/>
        <function-ref name="fired" scoped="" ref="0x40e27110"/>
        <function-ref name="startAt" scoped="" ref="0x40e27600"/>
        <function-ref name="isRunning" scoped="" ref="0x40e27388"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e27bb8"/>
        <function-ref name="start" scoped="" ref="0x40e28bc0"/>
        <function-ref name="stop" scoped="" ref="0x40e28e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40e18010" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40e18010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e16a68"/>
        <function-ref name="test" scoped="" ref="0x40e18de8"/>
        <function-ref name="fired" scoped="" ref="0x40e18b70"/>
        <function-ref name="force" scoped="" ref="0x40e15010"/>
        <function-ref name="get" scoped="" ref="0x40e18658"/>
        <function-ref name="reset" scoped="" ref="0x40e16088"/>
        <function-ref name="getMode" scoped="" ref="0x40e16d08"/>
        <function-ref name="isOn" scoped="" ref="0x40e167f0"/>
        <function-ref name="set" scoped="" ref="0x40e188d0"/>
        <function-ref name="start" scoped="" ref="0x40e16300"/>
        <function-ref name="stop" scoped="" ref="0x40e16578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e1d528" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e1d528"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e1b9d8"/>
        <function-ref name="fired" scoped="" ref="0x40e1b1a8"/>
        <function-ref name="startAt" scoped="" ref="0x40e1b698"/>
        <function-ref name="isRunning" scoped="" ref="0x40e1b420"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e1bc50"/>
        <function-ref name="start" scoped="" ref="0x40e1dc78"/>
        <function-ref name="stop" scoped="" ref="0x40e1df18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e1d0f0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e1d0f0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e1d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40e1bf20" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40e1bf20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e199f0"/>
        <function-ref name="test" scoped="" ref="0x40e1ad10"/>
        <function-ref name="get" scoped="" ref="0x40e1a580"/>
        <function-ref name="reset" scoped="" ref="0x40e19010"/>
        <function-ref name="getMode" scoped="" ref="0x40e19c90"/>
        <function-ref name="overflow" scoped="" ref="0x40e1aa98"/>
        <function-ref name="isOn" scoped="" ref="0x40e19778"/>
        <function-ref name="set" scoped="" ref="0x40e1a7f8"/>
        <function-ref name="start" scoped="" ref="0x40e19288"/>
        <function-ref name="stop" scoped="" ref="0x40e19500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ae6010" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ae6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae6760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ae6c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ae69d8"/>
        <function-ref name="overflow" scoped="" ref="0x40ae6ec8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ae2870" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ae2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae1010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ae1500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ae1288"/>
        <function-ref name="overflow" scoped="" ref="0x40ae1778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ae45c0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ae45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ae4d10"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ae2288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ae2010"/>
        <function-ref name="overflow" scoped="" ref="0x40ae2500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e26dd8" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e26dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e24350"/>
        <function-ref name="fired" scoped="" ref="0x40e25a88"/>
        <function-ref name="startAt" scoped="" ref="0x40e24010"/>
        <function-ref name="isRunning" scoped="" ref="0x40e25d00"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e245c8"/>
        <function-ref name="start" scoped="" ref="0x40e25570"/>
        <function-ref name="stop" scoped="" ref="0x40e25810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40e23b60" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40e23b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40471818"/>
            <typename><typedef-ref name="T62khz" ref="0x404719c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e20068"/>
        <function-ref name="fired" scoped="" ref="0x40e21820"/>
        <function-ref name="startAt" scoped="" ref="0x40e21d10"/>
        <function-ref name="isRunning" scoped="" ref="0x40e21a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e202e0"/>
        <function-ref name="start" scoped="" ref="0x40e21308"/>
        <function-ref name="stop" scoped="" ref="0x40e215a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e24918" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e24918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e23088"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e23578"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e23300"/>
        <function-ref name="overflow" scoped="" ref="0x40e237f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40b129a8" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40b129a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b12b80"/>
        <function-ref name="runTask" scoped="" ref="0x40b12c60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40b13010" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40b13010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b124e0"/>
        <function-ref name="fired" scoped="" ref="0x40b13c78"/>
        <function-ref name="startAt" scoped="" ref="0x40b121a0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b13ef0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40b12758"/>
        <function-ref name="start" scoped="" ref="0x40b13760"/>
        <function-ref name="stop" scoped="" ref="0x40b13a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b06c60" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b06c60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b14790"/>
        <function-ref name="fired" scoped="" ref="0x40b05a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b14150"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b05ed0"/>
        <function-ref name="getdt" scoped="" ref="0x40b14c40"/>
        <function-ref name="gett0" scoped="" ref="0x40b149e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b05c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b052c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b14470"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b05548"/>
        <function-ref name="stop" scoped="" ref="0x40b057c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b56798" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b56798"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b56970"/>
        <function-ref name="runTask" scoped="" ref="0x40b56a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40b595a0" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40b595a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b56098"/>
        <function-ref name="fired" scoped="" ref="0x40b58330"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b58a38"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b587e0"/>
        <function-ref name="getdt" scoped="" ref="0x40b56548"/>
        <function-ref name="gett0" scoped="" ref="0x40b562f0"/>
        <function-ref name="isRunning" scoped="" ref="0x40b58588"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b59bc8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b58d58"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b59e48"/>
        <function-ref name="stop" scoped="" ref="0x40b580d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b34210" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b34210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b35da8"/>
        <function-ref name="fired" scoped="" ref="0x40b35010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b35748"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b354e0"/>
        <function-ref name="getdt" scoped="" ref="0x40b592b0"/>
        <function-ref name="gett0" scoped="" ref="0x40b59048"/>
        <function-ref name="isRunning" scoped="" ref="0x40b35278"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b34848"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b35a78"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b34ad8"/>
        <function-ref name="stop" scoped="" ref="0x40b34d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b525c8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b525c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b500d8"/>
        <function-ref name="fired" scoped="" ref="0x40b51368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b51a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b51818"/>
        <function-ref name="getdt" scoped="" ref="0x40b50588"/>
        <function-ref name="gett0" scoped="" ref="0x40b50330"/>
        <function-ref name="isRunning" scoped="" ref="0x40b515c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b52bf0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b51d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b52e70"/>
        <function-ref name="stop" scoped="" ref="0x40b51110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b4f350" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BlinkAppC.Timer2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b4f350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4046a928"/>
            <typename><typedef-ref name="TMilli" ref="0x4046aaf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b4ee38"/>
        <function-ref name="fired" scoped="" ref="0x40b4e0f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b4e7f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b4e5a0"/>
        <function-ref name="getdt" scoped="" ref="0x40b4c310"/>
        <function-ref name="gett0" scoped="" ref="0x40b4c0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40b4e348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b4f978"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b4eb18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b4fbf8"/>
        <function-ref name="stop" scoped="" ref="0x40b4fe78"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40450ae0" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40449ed8" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x40454c68" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x40454b10" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4044c2a0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4044c8d8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4044c780" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x40454010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4044ce48" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x40454568" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x40457578" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40457960" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x4045adc8" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4045f158" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x404571a8" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x40457d38" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4045a688" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x4045aa18" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x404907f0" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40490698" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4049ba58" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4049b138" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40492b18" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4049b5e8" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4049a168" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4049d368" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x404a0dd0" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4049d010" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4049d200" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4049c9a8" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x4049c228" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x4049c440" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4049c630" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4049c838" loc="83:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x404a2010" loc="62:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404a6e90" loc="62:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x404a2bf8" loc="74:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404a2aa0" loc="74:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x404a2520" loc="68:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x404ad278" loc="81:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404ad120" loc="81:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4035b550" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4035ba68" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x404b9c40" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x404bf308" loc="126:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x404b54b0" loc="117:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x404bf8f0" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x404bf798" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x404b97f0" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x404b4420" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x404b42c8" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x404b76d0" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x404b7578" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x404b84f8" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x404bca10" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x404bc8b8" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x404b7b28" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x404be2c0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x404be168" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x404beb48" loc="136:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x404b4eb0" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x404b4d58" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x404bc480" loc="140:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x404b5a40" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x404b58e8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x404b8a90" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404b8938" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x404b5090" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x404b7f20" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x404b48d0" loc="123:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x404bfd18" loc="129:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x404be6d0" loc="132:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x404bc010" loc="138:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x404b5e78" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x404b8090" loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x404b7088" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404b8f00" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x404bb7b8" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x404bbcb8" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x404378a8" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucprotonb/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40436d18" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4040f0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4055b138" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4055b620" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4043b560" loc="63:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4043b9a8" loc="69:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4043be28" loc="74:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4043a6c0" loc="85:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40438d00" loc="113:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="110:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40438458" loc="102:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40440390" loc="150:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4043a278" loc="79:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40441158" loc="119:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x404388d8" loc="108:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4Off" ref="0x40441a80" loc="129:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn off LED 4.</short>
          <long>&#10; Turn off LED 4. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4Toggle" ref="0x40441ec8" loc="135:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="131:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Toggle LED 4; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 4; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4043b138" loc="58:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40438010" loc="96:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x4043ab40" loc="91:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4On" ref="0x404415d8" loc="124:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Turn on LED 4.</short>
          <long>&#10; Turn on LED 4. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40440a88" loc="165:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40440930" loc="165:/opt/tinyos-2.x/tos/platforms/ucprotonb/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40428490" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x40592138" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40592710" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x4058e3a8" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40594ec8" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40599d20" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40593718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40599bc8" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40593718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x4059c9a8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40599088" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40593718"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4059cf10" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x40593718"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40599638" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x40593718"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406bd3f0" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406bd3f0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406bd558" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406bd558"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x406bdb70" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406bd558"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406bda18" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406bd558"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406d53b8" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406d53b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406d5520" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x406d3810" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406d44d0" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x406d31c8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x406d4e48" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          </variable>
          <variable name="dt" ref="0x406d3068" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x406d4940" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x406d3ca0" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406d5b50" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x406d59f8" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406d5520"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406d4070" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioCapture" loc="46:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="captureFallingEdge" ref="0x406d8910" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x406d62d8" loc="66:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Disable further captures.</short>
          <long>&#10; Disable further captures.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="captured" ref="0x406d8e78" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; @param val The value of the 32kHz timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="time" ref="0x406d8d20" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="captureRisingEdge" ref="0x406d8408" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/GpioCapture.nc">
          <short> &#10; Enable an edge based timer capture event.</short>
          <long> &#10; Enable an edge based timer capture event.&#10;&#10; @return Whether the timer capture has been enabled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406e2310" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406e2310"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406e27f0" loc="61:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406da010" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406da010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x406da178" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da178"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x406da660" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406da178"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x406ec0c8" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x406dab88" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406ec4c8" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x406e7740" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e7740"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x406f7de0" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x406f7c88" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406e4950" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406e7c38" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e7740"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406e4d08" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x406f5210" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x406e4570" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x406f7888" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406e4188" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e7740"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x406e4030" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406e7740"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406f70f8" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406f74a8" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x40708cf0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40708cf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x40702390" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x40702238" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40705ef8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40705b18" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40705210" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40708cf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407032c8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x407027a0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40703e20" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40705750" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40708cf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407055f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40708cf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40703690" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40703a40" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x406fa2f8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fa2f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4070a9a8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4070a850" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4070b518" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4070b138" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x407091a8" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406fa7f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fa2f8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4070b8d0" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4070adb8" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4070a450" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406fad30" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fa2f8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x406fabd8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406fa2f8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4070bc98" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4070a070" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x407a7010" loc="68:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407a8b20" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x407a8710" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x407a81a8" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x407a6a30" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x407a6650" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x407a2590" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x407a29a0" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x407a6de8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x407a1330" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x407a11d8" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x407a21c8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x407a1750" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x407a2dc0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x40877738" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408775e0" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x40876730" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408765d8" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4087bee8" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40877c48" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x408a2698" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x408a2138" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x408a2350" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408a2530" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4089e248" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089fec8" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4089e0c8" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4089f968" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408a1350" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a11f8" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4089f060" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408a1ce8" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408a1ee0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4089dce8" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4089db90" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x408b46c8" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b4570" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408b2648" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b22e8" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408b24c8" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408b5ce8" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x408b5350" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408b5010" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408b51f0" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x408b7088" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
              <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40880b28" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40880d08" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40880ee8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x408c1710" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c15b8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x408c0220" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c00c8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x408c0ca8" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408c0b50" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x408c59e8" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4086b8a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c5890" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x408ae168" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ae010" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x408b1010" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x408b16a8" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408b1550" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x408adbd8" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ad870" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408ada78" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x408aed50" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ae9e8" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x408aebf0" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x4086bb00"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x408aa310" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408aa1b8" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x408aae48" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408aab18" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x408aace8" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x4086b648"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x408ab7c0" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408ab668" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x408c4688" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4086b8a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x408c4328" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x408c4528" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x4086b8a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x408c4f00" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x4086b8a0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x408d2488" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d2148" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408d2328" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x408cf190" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d0d78" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x408cf010" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x408d0818" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x408d1168" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d1010" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x408d1e00" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x408d1aa8" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x408d1ca0" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x409093a0" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40909010" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40909240" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x4090b0c8" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x4090b998" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090b620" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:59" alignment="I:1"><nx_struct-ref name="message_t" ref="0x408a5ea0"/>
                <typename><typedef-ref name="message_t" ref="0x408a3c68"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x4090b838" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x40912c98" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409251a8" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40924368" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40925f18" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x4090d4d8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x4092a158" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40928278" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40928120" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x4092a680" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x4090dc08" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4090dab0" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40928780" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x4092abe0" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40911540" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40911b08" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40914ea8" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40914d50" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40910280" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40910128" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x4090f500" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x4090fce8" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4090fb90" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x4090e3a0" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4090e248" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x409cd280" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x409d0ee0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409cd120" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x409ca680" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x409ca528" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x409cae88" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x409cab38" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409cad28" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x409ccac8" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x409c9d80" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x409c9830" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409c9a20" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409c9c18" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x409ca070" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409cc178" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x409cdb90" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409cdd80" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x409cc010" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x409d8728" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x409d85d0" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x409d5010" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x409d8c58" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x409d8e60" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x409e9850" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x409e9010" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x409e7e38" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409e7ce0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x409e7538" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x409ec720" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x409ecb60" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x409e9450" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x409e9c50" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x409e7188" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409e7030" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x409e7908" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40402cd0" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40357600" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40357138" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40aaa658" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40aaa658"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40ac0f00" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40ac3c00" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40ac1d78" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40ac1a30" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40ac1c18" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x40ac1588" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x40abf888" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40abf358" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x40ac10c8" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x40aaacb0" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40aaab58" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x40ac08e0" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40ac0598" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40ac0780" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40ac3368" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40ac3210" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40ac3838" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
