<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="46:UcminiSensorC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x4044c1c0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404c9060"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404c9060"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40add408"/></to>
    </wire>
    <wire loc="47:UcminiSensorC.nc">
      <from><interface-ref name="TempRead" scoped="" ref="0x40455a40"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d1a5a8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/TemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d1a5a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41090520"/></to>
    </wire>
    <wire loc="48:UcminiSensorC.nc">
      <from><interface-ref name="HumiRead" scoped="" ref="0x4044f748"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d165f8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HumidityC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d165f8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410f2010"/></to>
    </wire>
    <wire loc="49:UcminiSensorC.nc">
      <from><interface-ref name="LightRead" scoped="" ref="0x4044e480"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b05ba0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40b05ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f70998"/></to>
    </wire>
    <wire loc="50:UcminiSensorC.nc">
      <from><interface-ref name="PressRead" scoped="" ref="0x404541a8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d09b38"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d09b38"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ffc0f0"/></to>
    </wire>
    <wire loc="51:UcminiSensorC.nc">
      <from><interface-ref name="Temp2Read" scoped="" ref="0x40454e88"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d08da8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d08da8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4107a3c8"/></to>
    </wire>
    <wire loc="52:UcminiSensorC.nc">
      <from><interface-ref name="ReadRef" scoped="" ref="0x4045f1c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d1dca0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40d1dca0"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x41099440"/></to>
    </wire>
    <wire loc="53:UcminiSensorC.nc">
      <from><interface-ref name="Temp3Read" scoped="" ref="0x40452ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40af75b0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40af75b0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f450c0"/></to>
    </wire>
    <wire loc="54:UcminiSensorC.nc">
      <from><interface-ref name="VoltageRead" scoped="" ref="0x404518b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b12730"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40b12730"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40f40ce8"/></to>
    </wire>
    <wire loc="55:UcminiSensorC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x404a8ee8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x404cbcc0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x404cbcc0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:UcminiSensorC.nc">
      <from><interface-ref name="MeasSend" scoped="" ref="0x4049db60"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d97760"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d97760"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x410ee420"/></to>
    </wire>
    <wire loc="57:UcminiSensorC.nc">
      <from><interface-ref name="CalibSend" scoped="" ref="0x4049d410"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40dde7a8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40dde7a8"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x411003b0"/></to>
    </wire>
    <wire loc="58:UcminiSensorC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4049cd50"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40ddabe0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ddabe0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4090d100"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:UcminiSensorC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x404a3e50"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d97df8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d97df8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090d458"/></to>
    </wire>
    <wire loc="60:UcminiSensorC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404b3138"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4089ba20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4089ba20"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408a2d78"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410d5cf0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41082668"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40d2ded8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41015368"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40c5f468"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fe6eb8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f65d38"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b36040"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40a719f8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40a904c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a49060"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40957010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40901240"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ec8c98"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e9a758"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40add7a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40357b58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40357b58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40421738"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40addd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40fb8968"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40addd68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404c7470"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404c7470"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404d7a48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40adc240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cdc90"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404e6d20"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404d04d8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408bb830"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x404d6238"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x404d04d8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x404d7e38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404dd010"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404dd010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404da1d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x404d6608"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x404cc360"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x404cc360"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x404ccba0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="BatteryWarning" scoped="" ref="0x404d6a00"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404facd0"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404facd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40895b30"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404dd7c8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x406f82d8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404dd418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x407d8ec0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404dd418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40637010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404dd418"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e4bdf8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x404da9c8"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x404dd418"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x404dad78"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x404dd7c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x404d9200"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x404dc568"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x404da600"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404e6970"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x405000b0"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x40508848"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x40508848"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4051bce8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404f73c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x4050da98"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x4050da98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x404f7dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x4056b438"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4051bce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4052a4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40553690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40510a28"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x405170a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x4051f210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40527a08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40553690"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x4050e670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x40522ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x40514210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4051c8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40524ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x405042f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4050b8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x405120a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4051a750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4052b0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40528590"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40553690"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40519c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x4050f210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x40509830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x405290c0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40553690"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40516ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x4051d4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40517a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x4051fc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x4050d0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x4050c4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40514c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4051b2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x405238e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40504ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4050a2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40512a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4052ba98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40511ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40518670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40520750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40527010"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40553690"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x4050fc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x405162f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x405222f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40515750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4051dea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40543c68"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x405244b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x4051e670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40549df0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40507850"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4050cea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x40513670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40529ab8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40553690"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40519210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x405114b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546440"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40502750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405322b8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4050ad68"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053caf8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x40899928"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4057d448"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4057d448"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406cdba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x406cec18"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x405715c0"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x405715c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4057bd48"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x408951a8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408d4b88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x408d4b88"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x4050ad68"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40898590"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4089ba20"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40897780"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x407aae30"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x407aae30"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x407bc5d8"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40577970"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x4051b2f0"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40585438"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4057a330"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4057a330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4069bcc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406a0cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40594f20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40594f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e21b48"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x406c20c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4067c968"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40e1e870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e241c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e241c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e4a270"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40e1f630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40649768"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40649768"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406550c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40e49c70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405be238"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x405be238"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405ce460"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x40e46cb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x405cb6d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x405d29b0"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x405e3110"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405cb6d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x405dc5b8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405cb6d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x405d9920"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x405cb6d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x405d7d28"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x405e04f8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40bc7758"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40a8e010"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x407ff478"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4071eed8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x405e0108"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40639e18"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40637448"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4063d5f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x405be238"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40658380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40639e18"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x4069d658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x406d42b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406cdba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4088e4d8"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x4088d170"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406ddde8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406ddde8"/></from>
      <to><interface-ref name="VoltageMilliVolts" scoped="" ref="0x40856180"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4088dd60"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40876a18"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40876a18"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40ec4170"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4089d4d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40875c88"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40875c88"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40ec33f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="AdcRaw" scoped="" ref="0x40856e70"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406d9c98"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406d9c98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406e4480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="MeasureBridge" scoped="" ref="0x40855b10"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x405222f0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408545f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40857da8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40857da8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406d8848"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40859a88"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406e2940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406d8848"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406df1b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x406ee1b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406ec618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406d8d20"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x406e4480"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407be868"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x406e0958"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x407a7390"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4085d1c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x406df1b8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407a68b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406e2940"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x407db590"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x407a83d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x407a6040"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406e9bd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406e9bd8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406f5b58"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x407a4088"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x407aae30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406fadb0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406f7110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406ee1b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4074e3a0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4074e3a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40e99bf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4078da50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x406ec618"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x406ffdd8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x406fc588"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x406fc588"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40721658"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x406f3648"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cdc90"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x407a39f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x406f56c8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407a2150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4074eee8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4074eee8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e977b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407322a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4074eae0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40e973a8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4078d5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40e97e48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40e96338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4078da50"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40e96760"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e9aa90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40e95c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40eae7f8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407a39f0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x40eaebf0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x407a3de8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40eaef08"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407a2150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40ead5b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407a27e8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x407b3c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407cb0c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407c8010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x407de268"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407ddd88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407ddd88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407d7320"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x407d6558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407ea858"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x407ea858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x407f7878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x407e1010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40801470"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407e6c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x407f2978"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407e6c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x407f0d28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x407e6c28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x407ec100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407ff868"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <from><interface-ref name="calcTask" scoped="" ref="0x4086a328"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x408751e8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40ec48b0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x408755f0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ec4cb8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40ec38b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40890208"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40ec3cd8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40ec5010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40ec12f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x408bb830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408a2a30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x408b7e20"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x408bd010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x408bd010"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x40517a98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x408b6820"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x408bd9f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x408bd9f8"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x405244b0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x408b52e0"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x408bc4a0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x408bc4a0"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40524ea8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x408b5cc8"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x408bce88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x408bce88"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x405238e0"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x408d4550"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408d7d60"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x408d7d60"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408cf9b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408ebeb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408e6330"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x40902098"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x408d4550"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x40902758"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x408d4b88"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408fe980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408e8dd0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x408e8dd0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409573a8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x408fc440"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x40901d30"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409573a8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x4095e630"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4090e710"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4091d180"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4090d458"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4091a850"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4090d100"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4091d8c0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4091c640"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4091aee8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4091dbe8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40957010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4095e298"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40951e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4091cb78"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4095b430"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40956288"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4095bae8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40957c68"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40951978"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40ad6728"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40956288"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a0bbc8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40957c68"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a0b808"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40a2c3f8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40951978"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40970cf0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40951e80"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a2b3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40951e80"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a1c978"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40951e80"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40a2c8e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409742a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40a2cdb8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x40977ef8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x40970468"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40a29ca8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4096ed38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a28d98"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a28d98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a4db00"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a1c0f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a302b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a302b8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a4e490"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x4099dce8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x4097c168"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x4099e578"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x409ba998"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40a2a3d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40a2a808"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40a4d0f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40a4e010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40a4e010"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40a497b0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a4e490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a49bc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a4db00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a49398"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a4ef08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a2ec48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a2ec48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40abf320"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a66a70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a4ef08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40a48510"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40a73c98"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40a73c98"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40a90910"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40a48948"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40a72268"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40a72268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40a90e40"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40a48d80"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40a72760"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40a72760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40a8f390"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40a73088"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40a918c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40a74b50"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40a913a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40a74640"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40a71e48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a8e3e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cdc90"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a8eb20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a8eb20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40abe5f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ab9328"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ab9328"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40adb908"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40ad9b40"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x407ddd88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aeca38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4089ba20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40aec010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40956288"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40aec6f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40957c68"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40951978"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40acb9d8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x40aea218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40420010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40420c70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4035a458"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f450c0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406e4480"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f45c48"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40af2b00"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406e2940"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f45c48"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406df1b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x406ee1b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406ec618"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40f44150"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f40ce8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x406e4480"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f3f8b0"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b0ec58"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406e2940"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f3f8b0"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x406df1b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x406ee1b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x406ec618"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40f3fd88"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40f70998"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b00390"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40b00390"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40b22e18"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c137c8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c12eb8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c12eb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40fe3388"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40c0bb30"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c37010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40c37c68"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x40b244f0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="Light" scoped="" ref="0x40b244f0"/></from>
      <to><interface-ref name="Light" scoped="" ref="0x40b21650"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b15010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40b1fd70"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40b1fd70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40b1d040"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b41e28"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40b41e28"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b5e580"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40b37328"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b3cd78"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b3cd78"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b39db0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40b33920"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40b3b588"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40b3b588"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40c0df10"/></to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <from><interface-ref name="startTimeout" scoped="" ref="0x40b27950"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40b2cb88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40c0df10"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40c08730"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b39db0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b58b30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40b5e580"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b556d0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b58b30"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b4c2f0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40b556d0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b4cae0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubResource" scoped="" ref="0x40b77b38"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b52940"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40b52940"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40f62290"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40b76300"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b97e20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="Atm128I2C" scoped="" ref="0x40b73240"/></from>
      <to><interface-ref name="Atm128I2C" scoped="" ref="0x40bd4d20"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x40b4e1c0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x40b97978"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b4e8d0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b504b0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b504b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f62dd8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40bd3090"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40bcff00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2C" scoped="" ref="0x40bcff00"/></from>
      <to><interface-ref name="I2C" scoped="" ref="0x40bc8010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="ReadDebugLeds" scoped="" ref="0x40bd26d8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bcdc28"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <from><interface-ref name="WriteDebugLeds" scoped="" ref="0x40bd1670"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40bcdc28"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40b500a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40f629d0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40b50b48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40f614d0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40f61990"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40b4f010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40f61db8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40f63090"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40f5e3d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CClk" scoped="" ref="0x40bc7b60"/></from>
      <to><interface-ref name="PortD0" scoped="" ref="0x40511ea8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="I2CData" scoped="" ref="0x40bc6598"/></from>
      <to><interface-ref name="PortD1" scoped="" ref="0x40510a28"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40bc5010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40c08730"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40fbc5e0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40c08de8"/></from>
      <to><interface-ref name="PortF1" scoped="" ref="0x40522ce8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x40fb8010"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x40c08de8"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40fbcd28"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40fb7ad0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40fb7ad0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c11618"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x40fe3ac8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c11a20"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fe3ed0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c39150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x40fe2580"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x40fe2a40"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c39600"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x40fe2e68"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x40fe4220"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x40fdf3d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40ffc0f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ff3010"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40b0c7e0"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40ffcd18"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40ffcd18"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40ff5e88"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40ff5e88"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x40ff0530"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x40fedec0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadDt" scoped="" ref="0x40ff3c38"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40fed220"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadRawPress" scoped="" ref="0x40ff2878"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ff5260"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40ff5260"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410580a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadRawTemp" scoped="" ref="0x40fef780"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ffa590"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40ffa590"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41021298"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <from><interface-ref name="ReadCalib" scoped="" ref="0x40fee3b8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40ff72e8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40ff72e8"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x41028918"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40ff91d8"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c3c228"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41020a88"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x41021ed0"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40c4ad78"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ReadPressure" scoped="" ref="0x40c47dd0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c90668"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ReadTemperature" scoped="" ref="0x40c4ad78"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40c93b68"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ReadCalibration" scoped="" ref="0x40c45eb8"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x40cafdc8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c43010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c3fbc8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c3fbc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41014810"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40c3c228"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c60b20"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40c92800"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40c3e4d8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="ReadTemperature" scoped="" ref="0x40c3e4d8"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40c630c8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40cba2d8"/></from>
      <to><interface-ref name="ReadPressure" scoped="" ref="0x40c426e8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="ReadPressure" scoped="" ref="0x40c426e8"/></from>
      <to><interface-ref name="ReadPressure" scoped="" ref="0x40c63df8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40cb7cb0"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40c3d2a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="ReadCalibration" scoped="" ref="0x40c3d2a8"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40c61bb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40c5cc00"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40ca3428"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40ca3428"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40c9d030"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40c5abb8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c9f340"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c9f340"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c9e8d8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40c5f8a8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ca1010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40ca1010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40c593c8"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40c9fa90"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40c9fa90"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40c0df10"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40c51778"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="210:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x40c68320"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40c9e8d8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b58b30"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40c9d030"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b556d0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40c963a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41013010"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c967b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41013418"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40c96e48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41013ab0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41011010"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40c94328"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41011438"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410156a0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x410109f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40ff6170"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41026628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x41027868"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40c45eb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41057880"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x41058cd8"/></from>
      <to><interface-ref name="ReadPressure" scoped="" ref="0x40c47dd0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40d1e9e0"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x410488c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x410488c8"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="Get" scoped="" ref="0x41079cb0"/></from>
      <to><interface-ref name="Get" scoped="" ref="0x4107b188"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="ReadDt" scoped="" ref="0x41079010"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4107c4a8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="ReadRawTemp" scoped="" ref="0x410459a0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4104ac90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4104ac90"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x41075b60"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <from><interface-ref name="ReadCalib" scoped="" ref="0x41044610"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x410479e0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x410479e0"/></from>
      <to><interface-ref name="ReadRef" scoped="" ref="0x4106e918"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41073360"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x410747f0"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40c4ad78"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x41046890"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4106b628"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x4106d868"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40c45eb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="SetPrecision" scoped="" ref="0x40d1cb30"/></from>
      <to><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x410960a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40c43010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x410972d8"/></from>
      <to><interface-ref name="ReadCalibration" scoped="" ref="0x40c45eb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/sht21/Sht21RawTemperatureC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x41090520"/></from>
      <to><interface-ref name="ReadTemperature" scoped="" ref="0x40d3e290"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ReadHumidity" scoped="" ref="0x40d3d2f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d7c468"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ReadTemperature" scoped="" ref="0x40d3e290"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d3a800"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d85160"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d84838"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d84838"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41081bc0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40d61518"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d80480"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40d7f110"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40d3c450"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Temperature" scoped="" ref="0x40d3c450"/></from>
      <to><interface-ref name="Temperature" scoped="" ref="0x40d372e0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d7bda8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d79500"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d79500"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x410d21b8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="Service" scoped="" ref="0x40d7b188"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40d750a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <from><interface-ref name="ActualRead" scoped="" ref="0x40d75d00"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40d391a0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Humidity" scoped="" ref="0x40d391a0"/></from>
      <to><interface-ref name="Humidity" scoped="" ref="0x40d33010"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d31d10"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40d66330"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40d66330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40d33d00"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40d637f8"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40d637f8"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40d5c4a0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="I2CResource" scoped="" ref="0x40d2d0a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d5e758"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d5e758"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d5dd08"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40d2d7f0"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40d5eea8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <from><interface-ref name="BusPowerManager" scoped="" ref="0x40d5eea8"/></from>
      <to><interface-ref name="BusPowerManager" scoped="" ref="0x40c0df10"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="signalReadDone" scoped="" ref="0x40d49d60"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="192:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <from><interface-ref name="startTimer" scoped="" ref="0x40d422a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d5dd08"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40b58b30"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <from><interface-ref name="I2CPacket" scoped="" ref="0x40d5c4a0"/></from>
      <to><interface-ref name="I2CPacket" scoped="" ref="0x40b556d0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40d82010"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410803a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d82418"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410807b0"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d82ab0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41080e48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4107f338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d81010"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x4107f760"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410829a0"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x4107dc90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40d79c40"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x410d28f8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d77070"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d2d00"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d77708"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x410d13f0"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x410d18b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d77bb8"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x410d1cd8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x410d3050"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x410cf2f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/sht21/Sht21RawHumidityC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x410f2010"/></from>
      <to><interface-ref name="ReadHumidity" scoped="" ref="0x40d3d2f0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40d71f08"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x404c9060"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialStartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40d96358"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x408e8dd0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40de14d0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40de0170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4091c640"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x410eeae8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40db3e48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410ec230"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40db3e48"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40daeda0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40db7598"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x4090e710"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40db7c40"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40db6850"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090d458"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="errorTask" scoped="" ref="0x40db6f28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="126:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <from><interface-ref name="CancelTask" scoped="" ref="0x40de5370"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ddee40"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090d458"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ddd510"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Acks" scoped="" ref="0x40ddc170"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4091c640"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x41100a78"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40db3e48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x410ff150"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40ddaef8"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4090d458"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40dd95a0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></to>
    </wire>
  </wiring>
  <components>
    <component qname="UcminiSensorP" loc="37:UcminiSensorP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <configuration/>
    </component>
    <component qname="BatterySwitchC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <configuration/>
    </component>
    <component qname="BatterySwitchP" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <module/>
    </component>
    <component qname="BatterySwitchC.TimerMilliC" loc="44(BatterySwitchC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <value cst="I:7">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningC.VoltageC" loc="1(BatteryWarningC.VoltageC):/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <configuration/>
    </component>
    <component qname="SingleVoltageC" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SingleVoltageC.AdcReadClientC" loc="21(SingleVoltageC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Andras Biro &#60;bbandi86@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SingleVoltageC.TimerMilliC" loc="44(SingleVoltageC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC" loc="89(VoltageArbiterP.FcfsArbiterC):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:UcminiVoltage.read">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC.Queue" loc="42(VoltageArbiterP.FcfsArbiterC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC.Arbiter" loc="52(VoltageArbiterP.FcfsArbiterC.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageArbiterP.MultiplexedReadC" loc="18(VoltageArbiterP.MultiplexedReadC):/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
        <short>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.</short>
        <long>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MultiplexedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningP" loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-16 21:45:58 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C.UartP" loc="46(Atm128Uart1C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="UcminiSensorC.TimerMilliC" loc="44(UcminiSensorC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.AtmegaTemperatureC" loc="34(UcminiSensorC.AtmegaTemperatureC):/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <instance number="0">
        <component-ref qname="AtmegaTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC" loc="21(UcminiSensorC.AtmegaTemperatureC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaTemperatureP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureP.nc">
      <module/>
    </component>
    <component qname="UcminiSensorC.AtmegaVoltageC" loc="40(UcminiSensorC.AtmegaVoltageC):/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AtmegaVoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC" loc="21(UcminiSensorC.AtmegaVoltageC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaVoltageP" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UcminiSensorC.LightC" loc="35(UcminiSensorC.LightC):/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc">
      <instance number="0">
        <component-ref qname="LightC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.LightC.Bh1750fviRawLightC" loc="36(UcminiSensorC.LightC.Bh1750fviRawLightC):/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc">
      <instance number="0">
        <component-ref qname="Bh1750fviRawLightC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Bh1750fviArbitratedC" loc="36:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <configuration/>
    </component>
    <component qname="Bh1750fviC" loc="35:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <configuration/>
    </component>
    <component qname="Bh1750fviP" loc="35:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <module/>
    </component>
    <component qname="Bh1750fviC.TimerMilliC" loc="44(Bh1750fviC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplBh1750C" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <configuration/>
    </component>
    <component qname="HplBh1750C.I2CBus" loc="43(HplBh1750C.I2CBus):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter" loc="89(Atm128I2CMasterP.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128I2CMasterC.I2CPacket">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Queue" loc="42(Atm128I2CMasterP.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Arbiter.Arbiter" loc="52(Atm128I2CMasterP.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Power" loc="58(Atm128I2CMasterP.Power):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.I2C" loc="40(Atm128I2CMasterP.I2C):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterImplP"/>
      </instance>
      <module/>
    </component>
    <component qname="Atm128I2CMasterP.Master" loc="76(Atm128I2CMasterP.Master):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128I2CMasterPacketP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128I2CBusC" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128I2CBusP" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <documentation loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC" loc="35(I2CBusPowerManagerC.BusPowerManagerC):/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerC"/>
        <arguments>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP" loc="35(I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP):/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <instance number="0">
        <component-ref qname="BusPowerManagerP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC" loc="44(I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Bh1750fviArbitratedC.ArbitratedReadC" loc="23(Bh1750fviArbitratedC.ArbitratedReadC):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Bh1750fviArbitratedC.Arbiter" loc="89(Bh1750fviArbitratedC.Arbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Bh1750fviPressure.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Bh1750fviArbitratedC.Arbiter.Queue" loc="42(Bh1750fviArbitratedC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Bh1750fviArbitratedC.Arbiter.Arbiter" loc="52(Bh1750fviArbitratedC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Bh1750fviArbitratedC.ReadClientP" loc="35(Bh1750fviArbitratedC.ReadClientP):/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <instance number="0">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC" loc="35(UcminiSensorC.PressureC):/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <instance number="0">
        <component-ref qname="PressureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC" loc="35(UcminiSensorC.PressureC.Ms5607PressureC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607PressureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607RawTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607RawArbiterP" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <configuration/>
    </component>
    <component qname="Ms5607C" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <configuration/>
    </component>
    <component qname="Ms5607P" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <module/>
    </component>
    <component qname="HplMs5607C" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <configuration/>
    </component>
    <component qname="HplMs5607C.I2CBus" loc="43(HplMs5607C.I2CBus):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607C.TimerMilliC" loc="44(Ms5607C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607RawArbiterP.FcfsArbiterC" loc="89(Ms5607RawArbiterP.FcfsArbiterC):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Ms5607.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Ms5607RawArbiterP.FcfsArbiterC.Queue" loc="42(Ms5607RawArbiterP.FcfsArbiterC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter" loc="52(Ms5607RawArbiterP.FcfsArbiterC.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.ReadTempClient" loc="35(Ms5607RawArbiterP.ReadTempClient):/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <instance number="1">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.ReadPresClient" loc="35(Ms5607RawArbiterP.ReadPresClient):/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <instance number="2">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Ms5607RawArbiterP.ReadCalibClient" loc="35(Ms5607RawArbiterP.ReadCalibClient):/opt/tinyos-2.x/tos/chips/ms5607/ReadRefClientP.nc">
      <instance number="0">
        <component-ref qname="ReadRefClientP"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC" loc="24(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC):/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ResourceReadC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <instance number="1">
        <component-ref qname="Ms5607CalibrationC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC" loc="24(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC):/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ResourceReadRefC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607RawPressureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC" loc="24(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC):/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ResourceReadC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP" loc="35(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <instance number="0">
        <component-ref qname="Ms5607ConversionPressP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP" loc="37(UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <instance number="0">
        <component-ref qname="Ms5607ConversionDtP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C" loc="35(UcminiSensorC.Temperature1C):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <instance number="0">
        <component-ref qname="Ms5607TemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC" loc="37(UcminiSensorC.Temperature1C.Ms5607RawTemperatureC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <instance number="1">
        <component-ref qname="Ms5607RawTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC" loc="24(UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC):/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ResourceReadC"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC" loc="37(UcminiSensorC.Temperature1C.Ms5607CalibrationC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <instance number="2">
        <component-ref qname="Ms5607CalibrationC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC" loc="24(UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC):/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ResourceReadRefC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP" loc="37(UcminiSensorC.Temperature1C.Ms5607ConversionDtP):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <instance number="1">
        <component-ref qname="Ms5607ConversionDtP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP" loc="35(UcminiSensorC.Temperature1C.Ms5607ConversionTempP):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <instance number="0">
        <component-ref qname="Ms5607ConversionTempP"/>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.Ms5607CalibrationC" loc="37(UcminiSensorC.Ms5607CalibrationC):/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <instance number="0">
        <component-ref qname="Ms5607CalibrationC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC" loc="24(UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC):/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ResourceReadRefC"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.TemperatureC" loc="35(UcminiSensorC.TemperatureC):/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/TemperatureC.nc">
      <instance number="0">
        <component-ref qname="TemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.TemperatureC.Sht21RawTemperatureC" loc="37(UcminiSensorC.TemperatureC.Sht21RawTemperatureC):/opt/tinyos-2.x/tos/chips/sht21/Sht21RawTemperatureC.nc">
      <instance number="0">
        <component-ref qname="Sht21RawTemperatureC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC" loc="36:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <configuration/>
    </component>
    <component qname="Sht21C" loc="35:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <configuration/>
    </component>
    <component qname="Sht21P" loc="36:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <module/>
    </component>
    <component qname="Sht21C.TimerMilliC" loc="44(Sht21C.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="HplSht21C" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <configuration/>
    </component>
    <component qname="HplSht21C.I2CBus" loc="43(HplSht21C.I2CBus):/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="Atm128I2CMasterC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC.ArbitratedTemp" loc="23(Sht21ArbitratedC.ArbitratedTemp):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.TempArbiter" loc="89(Sht21ArbitratedC.TempArbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht21Temperature.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC.TempArbiter.Queue" loc="42(Sht21ArbitratedC.TempArbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.TempArbiter.Arbiter" loc="52(Sht21ArbitratedC.TempArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.TempClient" loc="35(Sht21ArbitratedC.TempClient):/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <instance number="3">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.ArbitratedHumi" loc="23(Sht21ArbitratedC.ArbitratedHumi):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.HumiArbiter" loc="89(Sht21ArbitratedC.HumiArbiter):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:Sht21Humidity.ReadResource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Sht21ArbitratedC.HumiArbiter.Queue" loc="42(Sht21ArbitratedC.HumiArbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.HumiArbiter.Arbiter" loc="52(Sht21ArbitratedC.HumiArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Sht21ArbitratedC.HumiClient" loc="35(Sht21ArbitratedC.HumiClient):/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <instance number="4">
        <component-ref qname="ReadClientP"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.HumidityC" loc="35(UcminiSensorC.HumidityC):/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HumidityC.nc">
      <instance number="0">
        <component-ref qname="HumidityC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.HumidityC.Sht21RawHumidityC" loc="36(UcminiSensorC.HumidityC.Sht21RawHumidityC):/opt/tinyos-2.x/tos/chips/sht21/Sht21RawHumidityC.nc">
      <instance number="0">
        <component-ref qname="Sht21RawHumidityC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SerialStartP" loc="37:/opt/tinyos-2.x/tos/lib/serial/SerialStartP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialStartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Thomas Schmid&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UcminiSensorC.MeasSend" loc="47(UcminiSensorC.MeasSend):/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:10">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.MeasSend.AMQueueEntryP" loc="43(UcminiSensorC.MeasSend.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialAMQueueP" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialAMQueueP.AMQueueImplP" loc="45(SerialAMQueueP.AMQueueImplP):/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AMQueueImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.CalibSend" loc="47(UcminiSensorC.CalibSend):/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SerialAMSenderC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="UcminiSensorC.CalibSend.AMQueueEntryP" loc="43(UcminiSensorC.CalibSend.AMQueueEntryP):/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="AMQueueEntryP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="UcminiSensorC.SerialAMReceiverC" loc="43(UcminiSensorC.SerialAMReceiverC):/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialAMReceiverC"/>
        <arguments>
          <value cst="I:11">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x40525720" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40525948" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40525b70" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.x/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40599e40" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40599e40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405a52c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a52c0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x405a54b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x405a56b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x4063a7b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4063a7b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4063abe8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063abe8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x4063add8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406576d0" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406576d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40657b30" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40657b30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40657d98" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40657d98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40654230" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40654230"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40654498" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40654920" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40654920"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40666470" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40666470"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406668d0" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406668d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40666b38" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40666b38"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40665010" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40665010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40665278" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4068d358" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4068d358"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4069cee8" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4069cee8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x406990f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40723e38" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x407585a0" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x40759ca8" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407d22f8" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407d22f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407d2728" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407d2728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x407bfc80" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x407bfc80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x408744e8" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x408706f0" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MultiplexedReadC" loc="18:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
        <short>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.</short>
        <long>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x4088f3d8" loc="18:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
          <component-ref qname="MultiplexedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x4088f3d8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaTemperatureC" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaVoltageC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LightC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Bh1750fviRawLightC" loc="36:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterC" loc="43:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
        <short>&#10; The basic client abstraction of the I2C on the Atmega128.</short>
        <long>&#10; The basic client abstraction of the I2C on the Atmega128. I2C&#10; device drivers should instantiate one of these to ensure&#10; exclusive access to the I2C bus.&#10;&#10; @author Philip Levis&#10; @date   May 28, 2006&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Atm128I2CMasterImplP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
        <short>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.</short>
        <long>&#10; The configuration that takes the underlying I2C driver on the &#10; Atmega128 and turns it into a shared abstraction.&#10;&#10; @date May 28 2006&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128I2CMasterPacketP" loc="76:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc" abstract="">
      <documentation loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
        <short>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements an interupt driven I2C Master controller &#10; Hardware Abstraction Layer (HAL) to the ATmega128 &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Philip Levis&#10; @author Philipp Sommer, ETH Zurich, sommer@tik.ee.ethz.ch&#10; @author Roland Flury, ETH Zurich, rflury@tik.ee.ethz.ch&#10; @author Thomas Fahrni, ETH Zurich, tfahrni@ee.ethz.ch&#10; @author Richard Huber, ETH Zurich, rihuber@ee.ethz.ch&#10; @author Lars Schor, ETH Zurich, lschor@ee.ethz.ch&#10; @author Andras Biro, University of Szeged&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusPowerManagerC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40c0ae98" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40c070d0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
          <component-ref qname="BusPowerManagerC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="BusPowerManagerP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc" abstract="">
      <parameters>
        <constant name="highIsOn" ref="0x40c06c18" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
        <constant name="initPin" ref="0x40c06e08" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
          <component-ref qname="BusPowerManagerP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ReadClientP" loc="35:/opt/tinyos-2.x/tos/system/ReadClientP.nc" abstract="">
      <parameters>
        <typedef name="type" ref="0x40c385e0" loc="35:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
          <component-ref qname="ReadClientP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="type" scoped="" ref="0x40c385e0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="PressureC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/PressureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607PressureC" loc="35:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607RawTemperatureC" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ReadRefClientP" loc="35:/opt/tinyos-2.x/tos/chips/ms5607/ReadRefClientP.nc" abstract="">
      <parameters>
        <typedef name="type" ref="0x40cb9db0" loc="35:/opt/tinyos-2.x/tos/chips/ms5607/ReadRefClientP.nc">
          <component-ref qname="ReadRefClientP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="type" scoped="" ref="0x40cb9db0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ResourceReadC" loc="24:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40c48c60" loc="24:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
          <component-ref qname="ResourceReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40c48c60"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607CalibrationC" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ResourceReadRefC" loc="24:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x40cc23f0" loc="24:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
          <component-ref qname="ResourceReadRefC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x40cc23f0"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607RawPressureC" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607ConversionPressP" loc="35:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionPressP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607ConversionDtP" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ms5607TemperatureC" loc="35:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ms5607ConversionTempP" loc="35:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionTempP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TemperatureC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/TemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Sht21RawTemperatureC" loc="37:/opt/tinyos-2.x/tos/chips/sht21/Sht21RawTemperatureC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="HumidityC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HumidityC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Sht21RawHumidityC" loc="36:/opt/tinyos-2.x/tos/chips/sht21/Sht21RawHumidityC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="SerialAMSenderC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
        <constant name="AMId" ref="0x40d9c310" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
          <component-ref qname="SerialAMSenderC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="AMQueueEntryP" loc="43:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
        <short>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.</short>
        <long>&#10; Internal AM component that fills in needed packet fields for the &#10; AMSend -> Send transformation.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40d90b38" loc="43:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
          <component-ref qname="AMQueueEntryP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AMQueueImplP" loc="45:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
        <short>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion.</short>
        <long>&#10; An AM send queue that provides a Service Instance pattern for&#10; formatted packets and calls an underlying AMSend in a round-robin&#10; fashion. Used to share L2 bandwidth between different communication&#10; clients.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10;</long>
      </documentation>
      <parameters>
        <constant name="numClients" ref="0x40dad340" loc="45:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
          <component-ref qname="AMQueueImplP"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SerialAMReceiverC" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
        <short>&#10; The virtualized AM reception abstraction.</short>
        <long>&#10; The virtualized AM reception abstraction.&#10;&#10; @author Philip Levis&#10; @date   Jan 16 2006&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <parameters>
        <constant name="amId" ref="0x40ddb4f0" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
          <component-ref qname="SerialAMReceiverC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Timer" ref="0x404a8ee8" loc="53:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404a8ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404ada18"/>
        <function-ref name="fired" scoped="" ref="0x404a7cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404ad3d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x404ad180"/>
        <function-ref name="getdt" scoped="" ref="0x404adec8"/>
        <function-ref name="gett0" scoped="" ref="0x404adc70"/>
        <function-ref name="isRunning" scoped="" ref="0x404a7f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404a7558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404ad6f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x404a77d8"/>
        <function-ref name="stop" scoped="" ref="0x404a7a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CalibSend" ref="0x4049d410" loc="49:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CalibSend" scoped="" ref="0x4049d410"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4049d5e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4049d6c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049d7a8"/>
        <function-ref name="cancel" scoped="" ref="0x4049d888"/>
        <function-ref name="sendDone" scoped="" ref="0x4049d968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x4044c1c0" loc="39:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4044c1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4044c398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x404a3e50" loc="52:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x404a3e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4049e050"/>
        <function-ref name="payloadLength" scoped="" ref="0x4049e130"/>
        <function-ref name="getPayload" scoped="" ref="0x4049e210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049e2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4049e3d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="VoltageRead" ref="0x404518b8" loc="46:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageRead" scoped="" ref="0x404518b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40451ee0"/>
        <function-ref name="readDone" scoped="" ref="0x4045a150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HumiRead" ref="0x4044f748" loc="41:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HumiRead" scoped="" ref="0x4044f748"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4044fd70"/>
        <function-ref name="readDone" scoped="" ref="0x4044e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PressRead" ref="0x404541a8" loc="43:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PressRead" scoped="" ref="0x404541a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404547d0"/>
        <function-ref name="readDone" scoped="" ref="0x40454a28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x4049cd50" loc="51:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4049cd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4046b010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TempRead" ref="0x40455a40" loc="40:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TempRead" scoped="" ref="0x40455a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4044f088"/>
        <function-ref name="readDone" scoped="" ref="0x4044f2e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404b3138" loc="54:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404b3138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404b3310"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404b33f0"/>
        <function-ref name="led1On" scoped="" ref="0x404b34d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404b35b0"/>
        <function-ref name="led3Off" scoped="" ref="0x404b3690"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404b3770"/>
        <function-ref name="get" scoped="" ref="0x404b3850"/>
        <function-ref name="led1Off" scoped="" ref="0x404b3930"/>
        <function-ref name="led3Toggle" scoped="" ref="0x404b3a10"/>
        <function-ref name="led3On" scoped="" ref="0x404b3af0"/>
        <function-ref name="led0On" scoped="" ref="0x404b3bd0"/>
        <function-ref name="led2Off" scoped="" ref="0x404b3cb0"/>
        <function-ref name="led2On" scoped="" ref="0x404b3d90"/>
        <function-ref name="set" scoped="" ref="0x404b3ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRef" ref="0x4045f1c0" loc="47:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x4045f1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4045f7e8"/>
        <function-ref name="readDone" scoped="" ref="0x4045fb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DiagMsg" ref="0x4046eaf0" loc="48:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DiagMsg" scoped="" ref="0x4046eaf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DiagMsg"/>
      </instance>
      <interface-functions>
        <function-ref name="int32s" scoped="" ref="0x4046ecc8"/>
        <function-ref name="str" scoped="" ref="0x4046eda8"/>
        <function-ref name="send" scoped="" ref="0x4046ee88"/>
        <function-ref name="int16" scoped="" ref="0x40458010"/>
        <function-ref name="hex32" scoped="" ref="0x404580f0"/>
        <function-ref name="int32" scoped="" ref="0x404581d0"/>
        <function-ref name="chr" scoped="" ref="0x404582b0"/>
        <function-ref name="uint32s" scoped="" ref="0x40458390"/>
        <function-ref name="real" scoped="" ref="0x40458470"/>
        <function-ref name="hex8" scoped="" ref="0x40458550"/>
        <function-ref name="uint16" scoped="" ref="0x40458630"/>
        <function-ref name="uint64s" scoped="" ref="0x40458710"/>
        <function-ref name="uint32" scoped="" ref="0x404587f0"/>
        <function-ref name="uint8" scoped="" ref="0x40458950"/>
        <function-ref name="hex8s" scoped="" ref="0x40458a30"/>
        <function-ref name="record" scoped="" ref="0x40458b10"/>
        <function-ref name="uint8s" scoped="" ref="0x40458bf0"/>
        <function-ref name="reals" scoped="" ref="0x40458cd0"/>
        <function-ref name="int64" scoped="" ref="0x40458db0"/>
        <function-ref name="uint16s" scoped="" ref="0x40458e90"/>
        <function-ref name="int64s" scoped="" ref="0x4045e010"/>
        <function-ref name="hex16" scoped="" ref="0x4045e0f0"/>
        <function-ref name="uint64" scoped="" ref="0x4045e1d0"/>
        <function-ref name="int16s" scoped="" ref="0x4045e2b0"/>
        <function-ref name="int8" scoped="" ref="0x4045e390"/>
        <function-ref name="hex16s" scoped="" ref="0x4045e570"/>
        <function-ref name="hex32s" scoped="" ref="0x4045e650"/>
        <function-ref name="chrs" scoped="" ref="0x4045e730"/>
        <function-ref name="int8s" scoped="" ref="0x4045e810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasSend" ref="0x4049db60" loc="50:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasSend" scoped="" ref="0x4049db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4049dd38"/>
        <function-ref name="getPayload" scoped="" ref="0x4049de18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4049def8"/>
        <function-ref name="cancel" scoped="" ref="0x4046c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4046c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp2Read" ref="0x40454e88" loc="44:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp2Read" scoped="" ref="0x40454e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404524d8"/>
        <function-ref name="readDone" scoped="" ref="0x40452730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Temp3Read" ref="0x40452ba0" loc="45:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temp3Read" scoped="" ref="0x40452ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x404511e0"/>
        <function-ref name="readDone" scoped="" ref="0x40451438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LightRead" ref="0x4044e480" loc="42:UcminiSensorP.nc">
      <component-ref qname="UcminiSensorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LightRead" scoped="" ref="0x4044e480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4044eaa8"/>
        <function-ref name="readDone" scoped="" ref="0x4044ed00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x404c9c80" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x404c9c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c9e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x404c9060" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404c9060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404c9238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404c7470" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404c7470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404c7648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404cdc90" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404cdc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404cde68"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404d0010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404d00f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404d01d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404d02b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404d04d8" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404d04d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d06b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatteryWarning" ref="0x404d6a00" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatteryWarning" scoped="" ref="0x404d6a00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d6bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404d7a48" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404d7a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d7c20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x404d6608" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x404d6608"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d67e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x404d6238" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x404d6238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d6410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x404d7e38" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x404d7e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d6050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404dd010" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404dd010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404dd1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404dd7c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404dd7c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404dd9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404dd418" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404dd418"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404dd5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x404d9200" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x404d9200"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d93d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404da1d8" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404da1d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404da3b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404dad78" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404dad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404d9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x404da600" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x404da600"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404da7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x404da9c8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x404da9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404daba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404e6970" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404e6970"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404e6b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x404e6d20" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x404e6d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x404e6ef8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x404e5010"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x404e50f0"/>
        <function-ref name="actualMicro" scoped="" ref="0x404e51d0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404e52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x404dc568" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x404dc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404dc740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x404cc360" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x404cc360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404cc538"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x405000b0" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x405000b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40500288"/>
        <function-ref name="isInput" scoped="" ref="0x40500368"/>
        <function-ref name="toggle" scoped="" ref="0x40500448"/>
        <function-ref name="isOutput" scoped="" ref="0x40500528"/>
        <function-ref name="get" scoped="" ref="0x40500608"/>
        <function-ref name="makeOutput" scoped="" ref="0x405006e8"/>
        <function-ref name="set" scoped="" ref="0x405007c8"/>
        <function-ref name="clr" scoped="" ref="0x405008a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x404ccba0" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x404ccba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404ccd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404f73c0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404f73c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404f7598"/>
        <function-ref name="isInput" scoped="" ref="0x404f7678"/>
        <function-ref name="toggle" scoped="" ref="0x404f7758"/>
        <function-ref name="isOutput" scoped="" ref="0x404f7838"/>
        <function-ref name="get" scoped="" ref="0x404f7918"/>
        <function-ref name="makeOutput" scoped="" ref="0x404f79f8"/>
        <function-ref name="set" scoped="" ref="0x404f7ad8"/>
        <function-ref name="clr" scoped="" ref="0x404f7bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x404f7dc8" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x404f7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508010"/>
        <function-ref name="isInput" scoped="" ref="0x405080f0"/>
        <function-ref name="toggle" scoped="" ref="0x405081d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405082b0"/>
        <function-ref name="get" scoped="" ref="0x40508390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508470"/>
        <function-ref name="set" scoped="" ref="0x40508550"/>
        <function-ref name="clr" scoped="" ref="0x40508630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x40508848" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x40508848"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508a20"/>
        <function-ref name="isInput" scoped="" ref="0x40508b00"/>
        <function-ref name="toggle" scoped="" ref="0x40508be0"/>
        <function-ref name="isOutput" scoped="" ref="0x40508cc0"/>
        <function-ref name="get" scoped="" ref="0x40508da0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508e80"/>
        <function-ref name="set" scoped="" ref="0x40507010"/>
        <function-ref name="clr" scoped="" ref="0x405070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4052a4b0" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4052a4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a888"/>
        <function-ref name="isInput" scoped="" ref="0x4052a968"/>
        <function-ref name="toggle" scoped="" ref="0x4052aa48"/>
        <function-ref name="isOutput" scoped="" ref="0x4052ab28"/>
        <function-ref name="get" scoped="" ref="0x4052ac08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052ace8"/>
        <function-ref name="set" scoped="" ref="0x4052adc8"/>
        <function-ref name="clr" scoped="" ref="0x4052aea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40510a28" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40510a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510c00"/>
        <function-ref name="isInput" scoped="" ref="0x40510ce0"/>
        <function-ref name="toggle" scoped="" ref="0x40510dc0"/>
        <function-ref name="isOutput" scoped="" ref="0x40510ea0"/>
        <function-ref name="get" scoped="" ref="0x4051d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d0f0"/>
        <function-ref name="set" scoped="" ref="0x4051d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4051d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x405170a0" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x405170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517278"/>
        <function-ref name="isInput" scoped="" ref="0x40517358"/>
        <function-ref name="toggle" scoped="" ref="0x40517438"/>
        <function-ref name="isOutput" scoped="" ref="0x40517518"/>
        <function-ref name="get" scoped="" ref="0x405175f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405176d8"/>
        <function-ref name="set" scoped="" ref="0x405177b8"/>
        <function-ref name="clr" scoped="" ref="0x40517898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x4051f210" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x4051f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4051f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4051f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4051f688"/>
        <function-ref name="get" scoped="" ref="0x4051f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051f848"/>
        <function-ref name="set" scoped="" ref="0x4051f928"/>
        <function-ref name="clr" scoped="" ref="0x4051fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40527a08" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40527a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40527be0"/>
        <function-ref name="isInput" scoped="" ref="0x40527cc0"/>
        <function-ref name="toggle" scoped="" ref="0x40527da0"/>
        <function-ref name="isOutput" scoped="" ref="0x40527e80"/>
        <function-ref name="get" scoped="" ref="0x40526010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405260f0"/>
        <function-ref name="set" scoped="" ref="0x405261d0"/>
        <function-ref name="clr" scoped="" ref="0x405262b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x4050e670" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x4050e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050e848"/>
        <function-ref name="isInput" scoped="" ref="0x4050e928"/>
        <function-ref name="toggle" scoped="" ref="0x4050ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4050eae8"/>
        <function-ref name="get" scoped="" ref="0x4050ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050eca8"/>
        <function-ref name="set" scoped="" ref="0x4050ed88"/>
        <function-ref name="clr" scoped="" ref="0x4050ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x40522ce8" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x40522ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40520010"/>
        <function-ref name="toggle" scoped="" ref="0x405200f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405201d0"/>
        <function-ref name="get" scoped="" ref="0x405202b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40520390"/>
        <function-ref name="set" scoped="" ref="0x40520470"/>
        <function-ref name="clr" scoped="" ref="0x40520550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x4050da98" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x4050da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4050dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4050de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4050df10"/>
        <function-ref name="get" scoped="" ref="0x4050c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c0f0"/>
        <function-ref name="set" scoped="" ref="0x4050c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4050c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x40514210" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x40514210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405143e8"/>
        <function-ref name="isInput" scoped="" ref="0x405144c8"/>
        <function-ref name="toggle" scoped="" ref="0x405145a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40514688"/>
        <function-ref name="get" scoped="" ref="0x40514768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40514848"/>
        <function-ref name="set" scoped="" ref="0x40514928"/>
        <function-ref name="clr" scoped="" ref="0x40514a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4051c8e0" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4051c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051cab8"/>
        <function-ref name="isInput" scoped="" ref="0x4051cb98"/>
        <function-ref name="toggle" scoped="" ref="0x4051cc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4051cd58"/>
        <function-ref name="get" scoped="" ref="0x4051ce38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051cf18"/>
        <function-ref name="set" scoped="" ref="0x4051b010"/>
        <function-ref name="clr" scoped="" ref="0x4051b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40524ea8" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40524ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405230c0"/>
        <function-ref name="isInput" scoped="" ref="0x405231a0"/>
        <function-ref name="toggle" scoped="" ref="0x40523280"/>
        <function-ref name="isOutput" scoped="" ref="0x40523360"/>
        <function-ref name="get" scoped="" ref="0x40523440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523520"/>
        <function-ref name="set" scoped="" ref="0x40523600"/>
        <function-ref name="clr" scoped="" ref="0x405236e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x405042f0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x405042f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405044c8"/>
        <function-ref name="isInput" scoped="" ref="0x405045a8"/>
        <function-ref name="toggle" scoped="" ref="0x40504688"/>
        <function-ref name="isOutput" scoped="" ref="0x40504768"/>
        <function-ref name="get" scoped="" ref="0x40504848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40504928"/>
        <function-ref name="set" scoped="" ref="0x40504a08"/>
        <function-ref name="clr" scoped="" ref="0x40504ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4050b8e0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4050b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4050bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4050bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bd58"/>
        <function-ref name="get" scoped="" ref="0x4050be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bf18"/>
        <function-ref name="set" scoped="" ref="0x4050a010"/>
        <function-ref name="clr" scoped="" ref="0x4050a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x405120a0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x405120a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512278"/>
        <function-ref name="isInput" scoped="" ref="0x40512358"/>
        <function-ref name="toggle" scoped="" ref="0x40512438"/>
        <function-ref name="isOutput" scoped="" ref="0x40512518"/>
        <function-ref name="get" scoped="" ref="0x405125f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405126d8"/>
        <function-ref name="set" scoped="" ref="0x405127b8"/>
        <function-ref name="clr" scoped="" ref="0x40512898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4051a750" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4051a750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a928"/>
        <function-ref name="isInput" scoped="" ref="0x4051aa08"/>
        <function-ref name="toggle" scoped="" ref="0x4051aae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4051abc8"/>
        <function-ref name="get" scoped="" ref="0x4051aca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051ad88"/>
        <function-ref name="set" scoped="" ref="0x4051ae68"/>
        <function-ref name="clr" scoped="" ref="0x40519010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4052b0a0" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4052b0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052b278"/>
        <function-ref name="isInput" scoped="" ref="0x4052b358"/>
        <function-ref name="toggle" scoped="" ref="0x4052b438"/>
        <function-ref name="isOutput" scoped="" ref="0x4052b518"/>
        <function-ref name="get" scoped="" ref="0x4052b5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052b6d8"/>
        <function-ref name="set" scoped="" ref="0x4052b7b8"/>
        <function-ref name="clr" scoped="" ref="0x4052b898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40528590" loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40528590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40528768"/>
        <function-ref name="isInput" scoped="" ref="0x40528848"/>
        <function-ref name="toggle" scoped="" ref="0x40528928"/>
        <function-ref name="isOutput" scoped="" ref="0x40528a08"/>
        <function-ref name="get" scoped="" ref="0x40528ae8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40528bc8"/>
        <function-ref name="set" scoped="" ref="0x40528ca8"/>
        <function-ref name="clr" scoped="" ref="0x40528d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40519c08" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40519c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519de0"/>
        <function-ref name="isInput" scoped="" ref="0x40519ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40518010"/>
        <function-ref name="isOutput" scoped="" ref="0x405180f0"/>
        <function-ref name="get" scoped="" ref="0x405181d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405182b0"/>
        <function-ref name="set" scoped="" ref="0x40518390"/>
        <function-ref name="clr" scoped="" ref="0x40518470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x4050f210" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x4050f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f688"/>
        <function-ref name="get" scoped="" ref="0x4050f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f848"/>
        <function-ref name="set" scoped="" ref="0x4050f928"/>
        <function-ref name="clr" scoped="" ref="0x4050fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x40509830" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x40509830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509a08"/>
        <function-ref name="isInput" scoped="" ref="0x40509ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40509bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40509ca8"/>
        <function-ref name="get" scoped="" ref="0x40509d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509e68"/>
        <function-ref name="set" scoped="" ref="0x40516010"/>
        <function-ref name="clr" scoped="" ref="0x405160f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x405290c0" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x405290c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529298"/>
        <function-ref name="isInput" scoped="" ref="0x40529378"/>
        <function-ref name="toggle" scoped="" ref="0x40529458"/>
        <function-ref name="isOutput" scoped="" ref="0x40529538"/>
        <function-ref name="get" scoped="" ref="0x40529618"/>
        <function-ref name="makeOutput" scoped="" ref="0x405296f8"/>
        <function-ref name="set" scoped="" ref="0x405297d8"/>
        <function-ref name="clr" scoped="" ref="0x405298b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40516ce8" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40516ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40515010"/>
        <function-ref name="toggle" scoped="" ref="0x405150f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405151d0"/>
        <function-ref name="get" scoped="" ref="0x405152b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515390"/>
        <function-ref name="set" scoped="" ref="0x40515470"/>
        <function-ref name="clr" scoped="" ref="0x40515550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x4051d4b0" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x4051d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d688"/>
        <function-ref name="isInput" scoped="" ref="0x4051d768"/>
        <function-ref name="toggle" scoped="" ref="0x4051d848"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d928"/>
        <function-ref name="get" scoped="" ref="0x4051da08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051dae8"/>
        <function-ref name="set" scoped="" ref="0x4051dbc8"/>
        <function-ref name="clr" scoped="" ref="0x4051dca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40517a98" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40517a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517c70"/>
        <function-ref name="isInput" scoped="" ref="0x40517d50"/>
        <function-ref name="toggle" scoped="" ref="0x40517e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40517f10"/>
        <function-ref name="get" scoped="" ref="0x40524010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405240f0"/>
        <function-ref name="set" scoped="" ref="0x405241d0"/>
        <function-ref name="clr" scoped="" ref="0x405242b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x4051fc08" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x4051fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4051fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4051e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4051e0f0"/>
        <function-ref name="get" scoped="" ref="0x4051e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051e2b0"/>
        <function-ref name="set" scoped="" ref="0x4051e390"/>
        <function-ref name="clr" scoped="" ref="0x4051e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x4050d0a0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x4050d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d278"/>
        <function-ref name="isInput" scoped="" ref="0x4050d358"/>
        <function-ref name="toggle" scoped="" ref="0x4050d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d518"/>
        <function-ref name="get" scoped="" ref="0x4050d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d6d8"/>
        <function-ref name="set" scoped="" ref="0x4050d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4050d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x4050c4b0" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x4050c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c688"/>
        <function-ref name="isInput" scoped="" ref="0x4050c768"/>
        <function-ref name="toggle" scoped="" ref="0x4050c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c928"/>
        <function-ref name="get" scoped="" ref="0x4050ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050cae8"/>
        <function-ref name="set" scoped="" ref="0x4050cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4050cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40514c08" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40514c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40514de0"/>
        <function-ref name="isInput" scoped="" ref="0x40514ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40513010"/>
        <function-ref name="isOutput" scoped="" ref="0x405130f0"/>
        <function-ref name="get" scoped="" ref="0x405131d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405132b0"/>
        <function-ref name="set" scoped="" ref="0x40513390"/>
        <function-ref name="clr" scoped="" ref="0x40513470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4051b2f0" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4051b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4051b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4051b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4051b768"/>
        <function-ref name="get" scoped="" ref="0x4051b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051b928"/>
        <function-ref name="set" scoped="" ref="0x4051ba08"/>
        <function-ref name="clr" scoped="" ref="0x4051bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x405238e0" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x405238e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40523b98"/>
        <function-ref name="toggle" scoped="" ref="0x40523c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40523d58"/>
        <function-ref name="get" scoped="" ref="0x40523e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523f18"/>
        <function-ref name="set" scoped="" ref="0x40522010"/>
        <function-ref name="clr" scoped="" ref="0x405220f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40504ce8" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40504ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40502010"/>
        <function-ref name="toggle" scoped="" ref="0x405020f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405021d0"/>
        <function-ref name="get" scoped="" ref="0x405022b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502390"/>
        <function-ref name="set" scoped="" ref="0x40502470"/>
        <function-ref name="clr" scoped="" ref="0x40502550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4050a2f0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4050a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a548"/>
        <function-ref name="isInput" scoped="" ref="0x4050a628"/>
        <function-ref name="toggle" scoped="" ref="0x4050a708"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a7e8"/>
        <function-ref name="get" scoped="" ref="0x4050a8c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a9a8"/>
        <function-ref name="set" scoped="" ref="0x4050aa88"/>
        <function-ref name="clr" scoped="" ref="0x4050ab68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40512a98" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40512a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512c70"/>
        <function-ref name="isInput" scoped="" ref="0x40512d50"/>
        <function-ref name="toggle" scoped="" ref="0x40512e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40512f10"/>
        <function-ref name="get" scoped="" ref="0x40511010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405110f0"/>
        <function-ref name="set" scoped="" ref="0x405111d0"/>
        <function-ref name="clr" scoped="" ref="0x405112b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4052ba98" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4052ba98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052bc70"/>
        <function-ref name="isInput" scoped="" ref="0x4052bd50"/>
        <function-ref name="toggle" scoped="" ref="0x4052be30"/>
        <function-ref name="isOutput" scoped="" ref="0x4052bf10"/>
        <function-ref name="get" scoped="" ref="0x4052a010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a0f0"/>
        <function-ref name="set" scoped="" ref="0x4052a1d0"/>
        <function-ref name="clr" scoped="" ref="0x4052a2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40511ea8" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40511ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510208"/>
        <function-ref name="isInput" scoped="" ref="0x405102e8"/>
        <function-ref name="toggle" scoped="" ref="0x405103c8"/>
        <function-ref name="isOutput" scoped="" ref="0x405104a8"/>
        <function-ref name="get" scoped="" ref="0x40510588"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510668"/>
        <function-ref name="set" scoped="" ref="0x40510748"/>
        <function-ref name="clr" scoped="" ref="0x40510828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40518670" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40518670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518848"/>
        <function-ref name="isInput" scoped="" ref="0x40518928"/>
        <function-ref name="toggle" scoped="" ref="0x40518a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40518ae8"/>
        <function-ref name="get" scoped="" ref="0x40518bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518ca8"/>
        <function-ref name="set" scoped="" ref="0x40518d88"/>
        <function-ref name="clr" scoped="" ref="0x40518e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40520750" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40520750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40520928"/>
        <function-ref name="isInput" scoped="" ref="0x40520a08"/>
        <function-ref name="toggle" scoped="" ref="0x40520ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40520bc8"/>
        <function-ref name="get" scoped="" ref="0x40520ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40520d88"/>
        <function-ref name="set" scoped="" ref="0x40520e68"/>
        <function-ref name="clr" scoped="" ref="0x4051f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40527010" loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40527010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405271e8"/>
        <function-ref name="isInput" scoped="" ref="0x405272c8"/>
        <function-ref name="toggle" scoped="" ref="0x405273a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40527488"/>
        <function-ref name="get" scoped="" ref="0x40527568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40527648"/>
        <function-ref name="set" scoped="" ref="0x40527728"/>
        <function-ref name="clr" scoped="" ref="0x40527808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x4050fc08" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x4050fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4050fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4050e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4050e0f0"/>
        <function-ref name="get" scoped="" ref="0x4050e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050e2b0"/>
        <function-ref name="set" scoped="" ref="0x4050e390"/>
        <function-ref name="clr" scoped="" ref="0x4050e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x405162f0" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x405162f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405164c8"/>
        <function-ref name="isInput" scoped="" ref="0x405165a8"/>
        <function-ref name="toggle" scoped="" ref="0x40516688"/>
        <function-ref name="isOutput" scoped="" ref="0x40516768"/>
        <function-ref name="get" scoped="" ref="0x40516848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40516928"/>
        <function-ref name="set" scoped="" ref="0x40516a08"/>
        <function-ref name="clr" scoped="" ref="0x40516ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x405222f0" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x405222f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405224c8"/>
        <function-ref name="isInput" scoped="" ref="0x405225a8"/>
        <function-ref name="toggle" scoped="" ref="0x40522688"/>
        <function-ref name="isOutput" scoped="" ref="0x40522768"/>
        <function-ref name="get" scoped="" ref="0x40522848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522928"/>
        <function-ref name="set" scoped="" ref="0x40522a08"/>
        <function-ref name="clr" scoped="" ref="0x40522ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40515750" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40515750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40515928"/>
        <function-ref name="isInput" scoped="" ref="0x40515a08"/>
        <function-ref name="toggle" scoped="" ref="0x40515ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40515bc8"/>
        <function-ref name="get" scoped="" ref="0x40515ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515d88"/>
        <function-ref name="set" scoped="" ref="0x40515e68"/>
        <function-ref name="clr" scoped="" ref="0x40514010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4051dea8" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4051dea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051c0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4051c1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4051c280"/>
        <function-ref name="isOutput" scoped="" ref="0x4051c360"/>
        <function-ref name="get" scoped="" ref="0x4051c440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051c520"/>
        <function-ref name="set" scoped="" ref="0x4051c600"/>
        <function-ref name="clr" scoped="" ref="0x4051c6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x405244b0" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x405244b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524688"/>
        <function-ref name="isInput" scoped="" ref="0x40524768"/>
        <function-ref name="toggle" scoped="" ref="0x40524848"/>
        <function-ref name="isOutput" scoped="" ref="0x40524928"/>
        <function-ref name="get" scoped="" ref="0x40524a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40524ae8"/>
        <function-ref name="set" scoped="" ref="0x40524bc8"/>
        <function-ref name="clr" scoped="" ref="0x40524ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x4051e670" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x4051e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051e848"/>
        <function-ref name="isInput" scoped="" ref="0x4051e928"/>
        <function-ref name="toggle" scoped="" ref="0x4051ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4051eae8"/>
        <function-ref name="get" scoped="" ref="0x4051ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051eca8"/>
        <function-ref name="set" scoped="" ref="0x4051ed88"/>
        <function-ref name="clr" scoped="" ref="0x4051ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40507850" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40507850"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507a28"/>
        <function-ref name="isInput" scoped="" ref="0x40507b08"/>
        <function-ref name="toggle" scoped="" ref="0x40507be8"/>
        <function-ref name="isOutput" scoped="" ref="0x40507cc8"/>
        <function-ref name="get" scoped="" ref="0x40507da8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507e88"/>
        <function-ref name="set" scoped="" ref="0x40504010"/>
        <function-ref name="clr" scoped="" ref="0x405040f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4050cea8" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4050cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4050b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b360"/>
        <function-ref name="get" scoped="" ref="0x4050b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b520"/>
        <function-ref name="set" scoped="" ref="0x4050b600"/>
        <function-ref name="clr" scoped="" ref="0x4050b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x40513670" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x40513670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513848"/>
        <function-ref name="isInput" scoped="" ref="0x40513928"/>
        <function-ref name="toggle" scoped="" ref="0x40513a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40513ae8"/>
        <function-ref name="get" scoped="" ref="0x40513bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513ca8"/>
        <function-ref name="set" scoped="" ref="0x40513d88"/>
        <function-ref name="clr" scoped="" ref="0x40513e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4051bce8" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4051bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051bec0"/>
        <function-ref name="isInput" scoped="" ref="0x4051a010"/>
        <function-ref name="toggle" scoped="" ref="0x4051a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a1d0"/>
        <function-ref name="get" scoped="" ref="0x4051a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a390"/>
        <function-ref name="set" scoped="" ref="0x4051a470"/>
        <function-ref name="clr" scoped="" ref="0x4051a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40529ab8" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40529ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40529c90"/>
        <function-ref name="isInput" scoped="" ref="0x40529d70"/>
        <function-ref name="toggle" scoped="" ref="0x40529e50"/>
        <function-ref name="isOutput" scoped="" ref="0x40528010"/>
        <function-ref name="get" scoped="" ref="0x405280f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405281d0"/>
        <function-ref name="set" scoped="" ref="0x405282b0"/>
        <function-ref name="clr" scoped="" ref="0x40528390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40519210" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40519210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405193e8"/>
        <function-ref name="isInput" scoped="" ref="0x405194c8"/>
        <function-ref name="toggle" scoped="" ref="0x405195a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40519688"/>
        <function-ref name="get" scoped="" ref="0x40519768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519848"/>
        <function-ref name="set" scoped="" ref="0x40519928"/>
        <function-ref name="clr" scoped="" ref="0x40519a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x405114b0" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x405114b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511688"/>
        <function-ref name="isInput" scoped="" ref="0x40511768"/>
        <function-ref name="toggle" scoped="" ref="0x40511848"/>
        <function-ref name="isOutput" scoped="" ref="0x40511928"/>
        <function-ref name="get" scoped="" ref="0x40511a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511ae8"/>
        <function-ref name="set" scoped="" ref="0x40511bc8"/>
        <function-ref name="clr" scoped="" ref="0x40511ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40502750" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40502750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502928"/>
        <function-ref name="isInput" scoped="" ref="0x40502a08"/>
        <function-ref name="toggle" scoped="" ref="0x40502ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40502bc8"/>
        <function-ref name="get" scoped="" ref="0x40502ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502d88"/>
        <function-ref name="set" scoped="" ref="0x40502e68"/>
        <function-ref name="clr" scoped="" ref="0x4050f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4050ad68" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4050ad68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509010"/>
        <function-ref name="isInput" scoped="" ref="0x405090f0"/>
        <function-ref name="toggle" scoped="" ref="0x405091d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405092b0"/>
        <function-ref name="get" scoped="" ref="0x40509390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509470"/>
        <function-ref name="set" scoped="" ref="0x40509550"/>
        <function-ref name="clr" scoped="" ref="0x40509630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405322b8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405322b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405324a0"/>
        <function-ref name="isInput" scoped="" ref="0x40532580"/>
        <function-ref name="toggle" scoped="" ref="0x40532660"/>
        <function-ref name="isOutput" scoped="" ref="0x40532740"/>
        <function-ref name="get" scoped="" ref="0x40532820"/>
        <function-ref name="makeOutput" scoped="" ref="0x40532900"/>
        <function-ref name="set" scoped="" ref="0x405329e0"/>
        <function-ref name="clr" scoped="" ref="0x40532ac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4053caf8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4053caf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053cce0"/>
        <function-ref name="isInput" scoped="" ref="0x4053cdc0"/>
        <function-ref name="toggle" scoped="" ref="0x4053cea0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053b010"/>
        <function-ref name="get" scoped="" ref="0x4053b0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053b1d0"/>
        <function-ref name="set" scoped="" ref="0x4053b2b0"/>
        <function-ref name="clr" scoped="" ref="0x4053b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40546440" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40546440"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546628"/>
        <function-ref name="isInput" scoped="" ref="0x40546708"/>
        <function-ref name="toggle" scoped="" ref="0x405467e8"/>
        <function-ref name="isOutput" scoped="" ref="0x405468c8"/>
        <function-ref name="get" scoped="" ref="0x405469a8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40546a88"/>
        <function-ref name="set" scoped="" ref="0x40546b68"/>
        <function-ref name="clr" scoped="" ref="0x40546c48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40543c68" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40543c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40543e50"/>
        <function-ref name="isInput" scoped="" ref="0x40542010"/>
        <function-ref name="toggle" scoped="" ref="0x405420f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405421d0"/>
        <function-ref name="get" scoped="" ref="0x405422b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40542390"/>
        <function-ref name="set" scoped="" ref="0x40542470"/>
        <function-ref name="clr" scoped="" ref="0x40542550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4054c5c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4054c5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c7b0"/>
        <function-ref name="isInput" scoped="" ref="0x4054c890"/>
        <function-ref name="toggle" scoped="" ref="0x4054c970"/>
        <function-ref name="isOutput" scoped="" ref="0x4054ca50"/>
        <function-ref name="get" scoped="" ref="0x4054cb30"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054cc10"/>
        <function-ref name="set" scoped="" ref="0x4054ccf0"/>
        <function-ref name="clr" scoped="" ref="0x4054cdd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40549df0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40549df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40548010"/>
        <function-ref name="isInput" scoped="" ref="0x405480f0"/>
        <function-ref name="toggle" scoped="" ref="0x405481d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405482b0"/>
        <function-ref name="get" scoped="" ref="0x40548390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40548470"/>
        <function-ref name="set" scoped="" ref="0x40548550"/>
        <function-ref name="clr" scoped="" ref="0x40548630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40553690" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40553690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40553878"/>
        <function-ref name="isInput" scoped="" ref="0x40553958"/>
        <function-ref name="toggle" scoped="" ref="0x40553a38"/>
        <function-ref name="isOutput" scoped="" ref="0x40553b18"/>
        <function-ref name="get" scoped="" ref="0x40553bf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40553cd8"/>
        <function-ref name="set" scoped="" ref="0x40553db8"/>
        <function-ref name="clr" scoped="" ref="0x40553e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x4056b438" loc="18:/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x4056b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b610"/>
        <function-ref name="isInput" scoped="" ref="0x4056b6f0"/>
        <function-ref name="toggle" scoped="" ref="0x4056b7d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4056b8b0"/>
        <function-ref name="get" scoped="" ref="0x4056b990"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056ba70"/>
        <function-ref name="set" scoped="" ref="0x4056bb50"/>
        <function-ref name="clr" scoped="" ref="0x4056bc30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404facd0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <component-ref qname="BatteryWarningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404facd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404faea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x405715c0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <component-ref qname="BatterySwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405715c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40571be8"/>
        <function-ref name="readDone" scoped="" ref="0x40571e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4057bd48" loc="3:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4057bd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405773c0"/>
        <function-ref name="readDone" scoped="" ref="0x40577618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40577970" loc="4:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40577970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40577b48"/>
        <function-ref name="isInput" scoped="" ref="0x40577c28"/>
        <function-ref name="toggle" scoped="" ref="0x40577d08"/>
        <function-ref name="isOutput" scoped="" ref="0x40577de8"/>
        <function-ref name="get" scoped="" ref="0x40577ec8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40585010"/>
        <function-ref name="set" scoped="" ref="0x405850f0"/>
        <function-ref name="clr" scoped="" ref="0x405851d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40585438" loc="5:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40585438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40583010"/>
        <function-ref name="fired" scoped="" ref="0x40584268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40584970"/>
        <function-ref name="isOneShot" scoped="" ref="0x40584718"/>
        <function-ref name="getdt" scoped="" ref="0x405834c0"/>
        <function-ref name="gett0" scoped="" ref="0x40583268"/>
        <function-ref name="isRunning" scoped="" ref="0x405844c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40585a60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40584c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x40585ce0"/>
        <function-ref name="stop" scoped="" ref="0x40584010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4057a330" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BatterySwitchC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4057a330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40579e38"/>
        <function-ref name="fired" scoped="" ref="0x405790f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405797f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x405795a0"/>
        <function-ref name="getdt" scoped="" ref="0x406d1310"/>
        <function-ref name="gett0" scoped="" ref="0x406d10b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40579348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4057a958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40579b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x4057abd8"/>
        <function-ref name="stop" scoped="" ref="0x4057ae58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x4058ce90" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x4058ce90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40587988"/>
        <function-ref name="fired" scoped="" ref="0x40588c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40587348"/>
        <function-ref name="isOneShot" scoped="" ref="0x405870f0"/>
        <function-ref name="getdt" scoped="" ref="0x40587e38"/>
        <function-ref name="gett0" scoped="" ref="0x40587be0"/>
        <function-ref name="isRunning" scoped="" ref="0x40588e88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405884d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40587668"/>
        <function-ref name="startOneShot" scoped="" ref="0x40588758"/>
        <function-ref name="stop" scoped="" ref="0x405889d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40594f20" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40594f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4067d3e8"/>
        <function-ref name="fired" scoped="" ref="0x40593ba0"/>
        <function-ref name="startAt" scoped="" ref="0x4067d0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40593e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x4067d660"/>
        <function-ref name="start" scoped="" ref="0x40593688"/>
        <function-ref name="stop" scoped="" ref="0x40593928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e241c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e241c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e23670"/>
        <function-ref name="fired" scoped="" ref="0x40e24e28"/>
        <function-ref name="startAt" scoped="" ref="0x40e23330"/>
        <function-ref name="isRunning" scoped="" ref="0x40e230b8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e238e8"/>
        <function-ref name="start" scoped="" ref="0x40e24910"/>
        <function-ref name="stop" scoped="" ref="0x40e24bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x40e46cb8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x40e46cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e44778"/>
        <function-ref name="test" scoped="" ref="0x40e45aa8"/>
        <function-ref name="fired" scoped="" ref="0x40e45830"/>
        <function-ref name="force" scoped="" ref="0x40e44c90"/>
        <function-ref name="get" scoped="" ref="0x40e45318"/>
        <function-ref name="reset" scoped="" ref="0x40e45d20"/>
        <function-ref name="getMode" scoped="" ref="0x40e44a18"/>
        <function-ref name="isOn" scoped="" ref="0x40e44500"/>
        <function-ref name="set" scoped="" ref="0x40e45590"/>
        <function-ref name="start" scoped="" ref="0x40e44010"/>
        <function-ref name="stop" scoped="" ref="0x40e44288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e4a270" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e4a270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e49728"/>
        <function-ref name="fired" scoped="" ref="0x40e4aed8"/>
        <function-ref name="startAt" scoped="" ref="0x40e493e8"/>
        <function-ref name="isRunning" scoped="" ref="0x40e49170"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e499a0"/>
        <function-ref name="start" scoped="" ref="0x40e4a9c0"/>
        <function-ref name="stop" scoped="" ref="0x40e4ac60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e4bdf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e4bdf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e4a010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40e49c70" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40e49c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40e46778"/>
        <function-ref name="test" scoped="" ref="0x40e47a78"/>
        <function-ref name="get" scoped="" ref="0x40e472e8"/>
        <function-ref name="reset" scoped="" ref="0x40e47cf0"/>
        <function-ref name="getMode" scoped="" ref="0x40e46a18"/>
        <function-ref name="overflow" scoped="" ref="0x40e47800"/>
        <function-ref name="isOn" scoped="" ref="0x40e46500"/>
        <function-ref name="set" scoped="" ref="0x40e47560"/>
        <function-ref name="start" scoped="" ref="0x40e46010"/>
        <function-ref name="stop" scoped="" ref="0x40e46288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405be238" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405be238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405ccca0"/>
        <function-ref name="test" scoped="" ref="0x405cc048"/>
        <function-ref name="get" scoped="" ref="0x405be880"/>
        <function-ref name="reset" scoped="" ref="0x405cc2c0"/>
        <function-ref name="getMode" scoped="" ref="0x405cb010"/>
        <function-ref name="overflow" scoped="" ref="0x405bed98"/>
        <function-ref name="isOn" scoped="" ref="0x405cca28"/>
        <function-ref name="set" scoped="" ref="0x405beaf8"/>
        <function-ref name="start" scoped="" ref="0x405cc538"/>
        <function-ref name="stop" scoped="" ref="0x405cc7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405d29b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405d29b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c6418"/>
        <function-ref name="test" scoped="" ref="0x405c77a0"/>
        <function-ref name="fired" scoped="" ref="0x405c7528"/>
        <function-ref name="get" scoped="" ref="0x405c7010"/>
        <function-ref name="reset" scoped="" ref="0x405c7a18"/>
        <function-ref name="getMode" scoped="" ref="0x405c66b8"/>
        <function-ref name="isOn" scoped="" ref="0x405c61a0"/>
        <function-ref name="set" scoped="" ref="0x405c7288"/>
        <function-ref name="start" scoped="" ref="0x405c7c90"/>
        <function-ref name="stop" scoped="" ref="0x405c7f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x405cb6d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x405cb6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405c81a0"/>
        <function-ref name="test" scoped="" ref="0x405ca528"/>
        <function-ref name="fired" scoped="" ref="0x405ca2b0"/>
        <function-ref name="force" scoped="" ref="0x405c86b8"/>
        <function-ref name="get" scoped="" ref="0x405cbd20"/>
        <function-ref name="reset" scoped="" ref="0x405ca7a0"/>
        <function-ref name="getMode" scoped="" ref="0x405c8440"/>
        <function-ref name="isOn" scoped="" ref="0x405caf08"/>
        <function-ref name="set" scoped="" ref="0x405ca010"/>
        <function-ref name="start" scoped="" ref="0x405caa18"/>
        <function-ref name="stop" scoped="" ref="0x405cac90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x405dc5b8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x405dc5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405d9010"/>
        <function-ref name="test" scoped="" ref="0x405db3a8"/>
        <function-ref name="fired" scoped="" ref="0x405db130"/>
        <function-ref name="force" scoped="" ref="0x405d9528"/>
        <function-ref name="get" scoped="" ref="0x405dcc00"/>
        <function-ref name="reset" scoped="" ref="0x405db620"/>
        <function-ref name="getMode" scoped="" ref="0x405d92b0"/>
        <function-ref name="isOn" scoped="" ref="0x405dbd88"/>
        <function-ref name="set" scoped="" ref="0x405dce78"/>
        <function-ref name="start" scoped="" ref="0x405db898"/>
        <function-ref name="stop" scoped="" ref="0x405dbb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x405e0108" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x405e0108"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x405e02e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x405d9920" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x405d9920"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405d7418"/>
        <function-ref name="test" scoped="" ref="0x405d87a0"/>
        <function-ref name="fired" scoped="" ref="0x405d8528"/>
        <function-ref name="force" scoped="" ref="0x405d7930"/>
        <function-ref name="get" scoped="" ref="0x405d8010"/>
        <function-ref name="reset" scoped="" ref="0x405d8a18"/>
        <function-ref name="getMode" scoped="" ref="0x405d76b8"/>
        <function-ref name="isOn" scoped="" ref="0x405d71a0"/>
        <function-ref name="set" scoped="" ref="0x405d8288"/>
        <function-ref name="start" scoped="" ref="0x405d8c90"/>
        <function-ref name="stop" scoped="" ref="0x405d8f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x405ce460" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x405ce460"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405ddee0"/>
        <function-ref name="test" scoped="" ref="0x405dd288"/>
        <function-ref name="get" scoped="" ref="0x405ceaa8"/>
        <function-ref name="reset" scoped="" ref="0x405dd500"/>
        <function-ref name="getMode" scoped="" ref="0x405dc1c0"/>
        <function-ref name="overflow" scoped="" ref="0x405dd010"/>
        <function-ref name="isOn" scoped="" ref="0x405ddc68"/>
        <function-ref name="set" scoped="" ref="0x405ced20"/>
        <function-ref name="start" scoped="" ref="0x405dd778"/>
        <function-ref name="stop" scoped="" ref="0x405dd9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x405e04f8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x405e04f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x405e06d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x405e3110" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x405e3110"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405e1b80"/>
        <function-ref name="test" scoped="" ref="0x405e3ee8"/>
        <function-ref name="fired" scoped="" ref="0x405e3c70"/>
        <function-ref name="get" scoped="" ref="0x405e3758"/>
        <function-ref name="reset" scoped="" ref="0x405e11a0"/>
        <function-ref name="getMode" scoped="" ref="0x405e1e20"/>
        <function-ref name="isOn" scoped="" ref="0x405e1908"/>
        <function-ref name="set" scoped="" ref="0x405e39d0"/>
        <function-ref name="start" scoped="" ref="0x405e1418"/>
        <function-ref name="stop" scoped="" ref="0x405e1690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x405d7d28" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x405d7d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x405e47b0"/>
        <function-ref name="test" scoped="" ref="0x405e5b20"/>
        <function-ref name="fired" scoped="" ref="0x405e58a8"/>
        <function-ref name="force" scoped="" ref="0x405e4cc8"/>
        <function-ref name="get" scoped="" ref="0x405e5390"/>
        <function-ref name="reset" scoped="" ref="0x405e5d98"/>
        <function-ref name="getMode" scoped="" ref="0x405e4a50"/>
        <function-ref name="isOn" scoped="" ref="0x405e4538"/>
        <function-ref name="set" scoped="" ref="0x405e5608"/>
        <function-ref name="start" scoped="" ref="0x405e4048"/>
        <function-ref name="stop" scoped="" ref="0x405e42c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x404336b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x404336b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40433888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40440958" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40440958"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x403503d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x403503d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40440b30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40440c10"/>
        <function-ref name="led1On" scoped="" ref="0x40440cf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40440dd0"/>
        <function-ref name="led3Off" scoped="" ref="0x40440eb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40436010"/>
        <function-ref name="get" scoped="" ref="0x404360f0"/>
        <function-ref name="led1Off" scoped="" ref="0x404361d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x404362b0"/>
        <function-ref name="led3On" scoped="" ref="0x40436390"/>
        <function-ref name="led0On" scoped="" ref="0x40436470"/>
        <function-ref name="led2Off" scoped="" ref="0x40436550"/>
        <function-ref name="led2On" scoped="" ref="0x40436630"/>
        <function-ref name="set" scoped="" ref="0x40436790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4035a458" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035a458"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035a630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40434148" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40434148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40434320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40639e18" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40639e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4063b590"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4063ba80"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4063b808"/>
        <function-ref name="overflow" scoped="" ref="0x4063bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40637010" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40637010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406371e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40637448" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40637448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40637b98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4063d0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40637e10"/>
        <function-ref name="overflow" scoped="" ref="0x4063d320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4063d5f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4063d5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4064c068"/>
        <function-ref name="test" scoped="" ref="0x4064d3e8"/>
        <function-ref name="get" scoped="" ref="0x4063dc38"/>
        <function-ref name="reset" scoped="" ref="0x4064d660"/>
        <function-ref name="getMode" scoped="" ref="0x4064c308"/>
        <function-ref name="overflow" scoped="" ref="0x4064d170"/>
        <function-ref name="isOn" scoped="" ref="0x4064ddc8"/>
        <function-ref name="set" scoped="" ref="0x4063deb0"/>
        <function-ref name="start" scoped="" ref="0x4064d8d8"/>
        <function-ref name="stop" scoped="" ref="0x4064db50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40649768" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40649768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40649eb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406463c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40646150"/>
        <function-ref name="overflow" scoped="" ref="0x40646640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40658380" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40658380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40658ad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40668010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40658d48"/>
        <function-ref name="overflow" scoped="" ref="0x40668288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406550c0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406550c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40655810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40655d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40655a88"/>
        <function-ref name="overflow" scoped="" ref="0x40658010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e21b48" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e21b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e1f068"/>
        <function-ref name="fired" scoped="" ref="0x40e20820"/>
        <function-ref name="startAt" scoped="" ref="0x40e20d10"/>
        <function-ref name="isRunning" scoped="" ref="0x40e20a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e1f2e0"/>
        <function-ref name="start" scoped="" ref="0x40e20308"/>
        <function-ref name="stop" scoped="" ref="0x40e205a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40e1e870" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40e1e870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x40482818"/>
            <typename><typedef-ref name="T62khz" ref="0x404829c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e1dd58"/>
        <function-ref name="fired" scoped="" ref="0x40e1d528"/>
        <function-ref name="startAt" scoped="" ref="0x40e1da18"/>
        <function-ref name="isRunning" scoped="" ref="0x40e1d7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e4d010"/>
        <function-ref name="start" scoped="" ref="0x40e1d010"/>
        <function-ref name="stop" scoped="" ref="0x40e1d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40e1f630" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40e1f630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e1fd80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40e1e288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40e1e010"/>
        <function-ref name="overflow" scoped="" ref="0x40e1e500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x4069d658" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x4069d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4069d830"/>
        <function-ref name="runTask" scoped="" ref="0x4069d910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406a0cc8" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406a0cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4069d190"/>
        <function-ref name="fired" scoped="" ref="0x4069e950"/>
        <function-ref name="startAt" scoped="" ref="0x4069ee40"/>
        <function-ref name="isRunning" scoped="" ref="0x4069ebc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x4069d408"/>
        <function-ref name="start" scoped="" ref="0x4069e438"/>
        <function-ref name="stop" scoped="" ref="0x4069e6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4067c968" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4067c968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406a04c8"/>
        <function-ref name="fired" scoped="" ref="0x4068e768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4068ee70"/>
        <function-ref name="isOneShot" scoped="" ref="0x4068ec18"/>
        <function-ref name="getdt" scoped="" ref="0x406a0978"/>
        <function-ref name="gett0" scoped="" ref="0x406a0720"/>
        <function-ref name="isRunning" scoped="" ref="0x4068e9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4068e010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406a01a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x4068e290"/>
        <function-ref name="stop" scoped="" ref="0x4068e510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x406d42b8" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x406d42b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406d4490"/>
        <function-ref name="runTask" scoped="" ref="0x406d4570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x406c20c0" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x406c20c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c1ba8"/>
        <function-ref name="fired" scoped="" ref="0x406c2e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c1568"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c1310"/>
        <function-ref name="getdt" scoped="" ref="0x406d4068"/>
        <function-ref name="gett0" scoped="" ref="0x406c1e00"/>
        <function-ref name="isRunning" scoped="" ref="0x406c10b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406c26e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c1888"/>
        <function-ref name="startOneShot" scoped="" ref="0x406c2968"/>
        <function-ref name="stop" scoped="" ref="0x406c2be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4069bcc8" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4069bcc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406c48d8"/>
        <function-ref name="fired" scoped="" ref="0x406c5ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406c4278"/>
        <function-ref name="isOneShot" scoped="" ref="0x406c4010"/>
        <function-ref name="getdt" scoped="" ref="0x406c4da8"/>
        <function-ref name="gett0" scoped="" ref="0x406c4b40"/>
        <function-ref name="isRunning" scoped="" ref="0x406c5d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406c5350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406c45a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406c55e0"/>
        <function-ref name="stop" scoped="" ref="0x406c5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4057d448" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <component-ref qname="BatteryWarningC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4057d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4057da70"/>
        <function-ref name="readDone" scoped="" ref="0x4057dcc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406cdba0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <component-ref qname="VoltageArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406cdba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406dd1e0"/>
        <function-ref name="readDone" scoped="" ref="0x406dd438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406ddde8" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <component-ref qname="SingleVoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406ddde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406da448"/>
        <function-ref name="readDone" scoped="" ref="0x406da6a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406d8d20" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406d8d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406d8ef8"/>
        <function-ref name="configure" scoped="" ref="0x40859010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406d9c98" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406d9c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406d82e8"/>
        <function-ref name="readDone" scoped="" ref="0x406d8540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x406d8848" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406d8848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x406d8a20"/>
        <function-ref name="getChannel" scoped="" ref="0x406d8b00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406d8be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x406e4480" loc="19:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x406e4480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406e4aa8"/>
        <function-ref name="readDone" scoped="" ref="0x406e4d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x406e0958" loc="20:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x406e0958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x406e2010"/>
        <function-ref name="readDone" scoped="" ref="0x406e2288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x406e2940" loc="23:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x406e2940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x406e2b18"/>
        <function-ref name="getChannel" scoped="" ref="0x406e2bf8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x406e2cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x406df1b8" loc="24:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406df1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406df390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406df470"/>
        <function-ref name="request" scoped="" ref="0x406df550"/>
        <function-ref name="granted" scoped="" ref="0x406df630"/>
        <function-ref name="isOwner" scoped="" ref="0x406df710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x406ec618" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x406ec618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x406ec7f0"/>
        <function-ref name="configure" scoped="" ref="0x406ec8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x406fadb0" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406fadb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406ec010"/>
        <function-ref name="dataReady" scoped="" ref="0x406ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x406e9bd8" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406e9bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406e9db0"/>
        <function-ref name="cancel" scoped="" ref="0x406e9e90"/>
        <function-ref name="dataReady" scoped="" ref="0x406ed010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x406ee1b8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x406ee1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x406ee390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x406ee470"/>
        <function-ref name="request" scoped="" ref="0x406ee550"/>
        <function-ref name="granted" scoped="" ref="0x406ee630"/>
        <function-ref name="isOwner" scoped="" ref="0x406ee710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x406f82d8" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x406f82d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406f84b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x406f7110" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x406f7110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406f72e8"/>
        <function-ref name="dataReady" scoped="" ref="0x406f73c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x406f5b58" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x406f5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x406f5d30"/>
        <function-ref name="cancel" scoped="" ref="0x406f5e10"/>
        <function-ref name="dataReady" scoped="" ref="0x406f5ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x406ffdd8" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x406ffdd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x406f6010"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x406f60f0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x406f61d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x406f62b0"/>
        <function-ref name="setChannel" scoped="" ref="0x406f6390"/>
        <function-ref name="enableAdc" scoped="" ref="0x406f6470"/>
        <function-ref name="setAdlar" scoped="" ref="0x406f6550"/>
        <function-ref name="enableInterruption" scoped="" ref="0x406f6630"/>
        <function-ref name="isComplete" scoped="" ref="0x406f6710"/>
        <function-ref name="cancel" scoped="" ref="0x406f67f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x406f68d0"/>
        <function-ref name="getRef" scoped="" ref="0x406f69b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x406f6a90"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x406f6bf0"/>
        <function-ref name="startConversion" scoped="" ref="0x406f6cd0"/>
        <function-ref name="isStarted" scoped="" ref="0x406f6db0"/>
        <function-ref name="getChannel" scoped="" ref="0x406f6e90"/>
        <function-ref name="setAdcsra" scoped="" ref="0x406f3010"/>
        <function-ref name="setRef" scoped="" ref="0x406f30f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x406f31d0"/>
        <function-ref name="setContinuous" scoped="" ref="0x406f32b0"/>
        <function-ref name="getValue" scoped="" ref="0x406f3390"/>
        <function-ref name="dataReady" scoped="" ref="0x406f3470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x406f56c8" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x406f56c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x406f58a0"/>
        <function-ref name="stop" scoped="" ref="0x406f5980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x406f3648" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x406f3648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x406f3820"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x406f3900"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x406f39e0"/>
        <function-ref name="actualMicro" scoped="" ref="0x406f3ac0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x406f3ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x406fc588" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x406fc588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x406fc760"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x406fc840"/>
        <function-ref name="setPrescaler" scoped="" ref="0x406fc920"/>
        <function-ref name="isEnabled" scoped="" ref="0x406fca00"/>
        <function-ref name="setChannel" scoped="" ref="0x406fcae0"/>
        <function-ref name="enableAdc" scoped="" ref="0x406fcbc0"/>
        <function-ref name="setAdlar" scoped="" ref="0x406fcca0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x406fcd80"/>
        <function-ref name="isComplete" scoped="" ref="0x406fce60"/>
        <function-ref name="cancel" scoped="" ref="0x40722010"/>
        <function-ref name="disableAdc" scoped="" ref="0x407220f0"/>
        <function-ref name="getRef" scoped="" ref="0x407221d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x407222b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40722410"/>
        <function-ref name="startConversion" scoped="" ref="0x407224f0"/>
        <function-ref name="isStarted" scoped="" ref="0x407225d0"/>
        <function-ref name="getChannel" scoped="" ref="0x407226b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40722790"/>
        <function-ref name="setRef" scoped="" ref="0x40722870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40722950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40722a30"/>
        <function-ref name="getValue" scoped="" ref="0x40722b10"/>
        <function-ref name="dataReady" scoped="" ref="0x40722bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4071eed8" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4071eed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407320c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40721658" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40721658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40721830"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x40721910"/>
        <function-ref name="setPrescaler" scoped="" ref="0x407219f0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40721ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x40721bb0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40721c90"/>
        <function-ref name="setAdlar" scoped="" ref="0x40721d70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40721e50"/>
        <function-ref name="isComplete" scoped="" ref="0x4071e010"/>
        <function-ref name="cancel" scoped="" ref="0x4071e0f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x4071e1d0"/>
        <function-ref name="getRef" scoped="" ref="0x4071e2b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x4071e390"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x4071e4f0"/>
        <function-ref name="startConversion" scoped="" ref="0x4071e5d0"/>
        <function-ref name="isStarted" scoped="" ref="0x4071e6b0"/>
        <function-ref name="getChannel" scoped="" ref="0x4071e790"/>
        <function-ref name="setAdcsra" scoped="" ref="0x4071e870"/>
        <function-ref name="setRef" scoped="" ref="0x4071e950"/>
        <function-ref name="getAdcsra" scoped="" ref="0x4071ea30"/>
        <function-ref name="setContinuous" scoped="" ref="0x4071eb10"/>
        <function-ref name="getValue" scoped="" ref="0x4071ebf0"/>
        <function-ref name="dataReady" scoped="" ref="0x4071ecd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407322a8" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407322a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40732480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4074eae0" loc="92:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4074eae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4074ecc8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4074eda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4078da50" loc="96:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4078da50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4078dc38"/>
        <function-ref name="configure" scoped="" ref="0x4078dd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x4074eee8" loc="93:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x4074eee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4078d0e0"/>
        <function-ref name="requested" scoped="" ref="0x4078d1c0"/>
        <function-ref name="granted" scoped="" ref="0x4078d2a0"/>
        <function-ref name="isOwner" scoped="" ref="0x4078d380"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4078d460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4074e3a0" loc="91:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4074e3a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4074e588"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4074e668"/>
        <function-ref name="request" scoped="" ref="0x4074e748"/>
        <function-ref name="granted" scoped="" ref="0x4074e828"/>
        <function-ref name="isOwner" scoped="" ref="0x4074e908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4078d5a0" loc="94:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4078d5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4078d778"/>
        <function-ref name="userId" scoped="" ref="0x4078d858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e9a758" loc="44:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e9a758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e9a930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x40e9aa90" loc="45:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x40e9aa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e9ac68"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e9ad48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e9ae28"/>
        <function-ref name="dequeue" scoped="" ref="0x40e9af08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40e973a8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40e973a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40e97590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e97670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40e96338" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40e96338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40e96520"/>
        <function-ref name="configure" scoped="" ref="0x40e96600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40e96760" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40e96760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40e96938"/>
        <function-ref name="isEmpty" scoped="" ref="0x40e96a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40e96af8"/>
        <function-ref name="dequeue" scoped="" ref="0x40e96bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40e977b0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40e977b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e97988"/>
        <function-ref name="requested" scoped="" ref="0x40e97a68"/>
        <function-ref name="granted" scoped="" ref="0x40e97b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40e97c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40e97d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40e96d18" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40e96d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40e96ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40e95010"/>
        <function-ref name="led1On" scoped="" ref="0x40e950f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40e951d0"/>
        <function-ref name="led3Off" scoped="" ref="0x40e952b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40e95390"/>
        <function-ref name="get" scoped="" ref="0x40e95470"/>
        <function-ref name="led1Off" scoped="" ref="0x40e95550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40e95630"/>
        <function-ref name="led3On" scoped="" ref="0x40e95710"/>
        <function-ref name="led0On" scoped="" ref="0x40e957f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40e958d0"/>
        <function-ref name="led2On" scoped="" ref="0x40e959b0"/>
        <function-ref name="set" scoped="" ref="0x40e95b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40e99bf0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40e99bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40e99dd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40e99eb8"/>
        <function-ref name="request" scoped="" ref="0x40e97010"/>
        <function-ref name="granted" scoped="" ref="0x40e970f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40e971d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40e97e48" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40e97e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40e96050"/>
        <function-ref name="userId" scoped="" ref="0x40e96130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40e95c90" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40e95c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40e95e68"/>
        <function-ref name="runTask" scoped="" ref="0x40e94010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x407a3de8" loc="72:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x407a3de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x407a2010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x407a2150" loc="73:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407a2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407a2328"/>
        <function-ref name="requested" scoped="" ref="0x407a2408"/>
        <function-ref name="granted" scoped="" ref="0x407a24e8"/>
        <function-ref name="isOwner" scoped="" ref="0x407a25c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407a26a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x407a39f0" loc="70:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407a39f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407a3bc8"/>
        <function-ref name="stop" scoped="" ref="0x407a3ca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407a27e8" loc="74:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407a27e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407a29c0"/>
        <function-ref name="userId" scoped="" ref="0x407a2aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40eaebf0" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40eaebf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40eaedc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40eaef08" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40eaef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ead0f0"/>
        <function-ref name="requested" scoped="" ref="0x40ead1d0"/>
        <function-ref name="granted" scoped="" ref="0x40ead2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ead390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ead470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40eae7f8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40eae7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eae9d0"/>
        <function-ref name="stop" scoped="" ref="0x40eaeab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40ead5b0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ead5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ead788"/>
        <function-ref name="userId" scoped="" ref="0x40ead868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x407a4088" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x407a4088"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407a47d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407a83d8" loc="48:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407a83d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407a8a00"/>
        <function-ref name="readDone" scoped="" ref="0x407a8c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x407a7390" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x407a7390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407a79d8"/>
        <function-ref name="readDone" scoped="" ref="0x407a7c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x407a68b8" loc="53:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x407a68b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x407a6a90"/>
        <function-ref name="getChannel" scoped="" ref="0x407a6b70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x407a6c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x407a6040" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x407a6040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x407a6218"/>
        <function-ref name="cancel" scoped="" ref="0x407a62f8"/>
        <function-ref name="dataReady" scoped="" ref="0x407a63d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x407b3c70" loc="104:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x407b3c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407b3e48"/>
        <function-ref name="runTask" scoped="" ref="0x407b3f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x407aae30" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x407aae30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407bd590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x407bc5d8" loc="53:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x407bc5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x407bcd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x407cb0c0" loc="54:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407cb0c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407cb810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407cbd00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407cba88"/>
        <function-ref name="overflow" scoped="" ref="0x407ca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x407de268" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x407de268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407de9b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407deea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407dec30"/>
        <function-ref name="overflow" scoped="" ref="0x407dd150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407c8010" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407c8760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407c8c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407c89d8"/>
        <function-ref name="overflow" scoped="" ref="0x407c8ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407ddd88" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407ddd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407da4e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407da9d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407da760"/>
        <function-ref name="overflow" scoped="" ref="0x407dac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x407d8ec0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x407d8ec0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x403507d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x403507d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x407d70c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407d7320" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407d7320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x407d7a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x407d6010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x407d7ce8"/>
        <function-ref name="overflow" scoped="" ref="0x407d6288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x407d6558" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x407d6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407eb010"/>
        <function-ref name="test" scoped="" ref="0x407d5350"/>
        <function-ref name="get" scoped="" ref="0x407d6ba0"/>
        <function-ref name="reset" scoped="" ref="0x407d55c8"/>
        <function-ref name="getMode" scoped="" ref="0x407eb2b0"/>
        <function-ref name="overflow" scoped="" ref="0x407d50d8"/>
        <function-ref name="isOn" scoped="" ref="0x407d5d30"/>
        <function-ref name="set" scoped="" ref="0x407d6e18"/>
        <function-ref name="start" scoped="" ref="0x407d5840"/>
        <function-ref name="stop" scoped="" ref="0x407d5ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x407e1010" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x407e1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407e0a68"/>
        <function-ref name="test" scoped="" ref="0x407e1de8"/>
        <function-ref name="fired" scoped="" ref="0x407e1b70"/>
        <function-ref name="get" scoped="" ref="0x407e1658"/>
        <function-ref name="reset" scoped="" ref="0x407e0088"/>
        <function-ref name="getMode" scoped="" ref="0x407e0d08"/>
        <function-ref name="isOn" scoped="" ref="0x407e07f0"/>
        <function-ref name="set" scoped="" ref="0x407e18d0"/>
        <function-ref name="start" scoped="" ref="0x407e0300"/>
        <function-ref name="stop" scoped="" ref="0x407e0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x407ea858" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x407ea858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407e62c0"/>
        <function-ref name="test" scoped="" ref="0x407e7648"/>
        <function-ref name="get" scoped="" ref="0x407eaea0"/>
        <function-ref name="reset" scoped="" ref="0x407e78c0"/>
        <function-ref name="getMode" scoped="" ref="0x407e6560"/>
        <function-ref name="overflow" scoped="" ref="0x407e73d0"/>
        <function-ref name="isOn" scoped="" ref="0x407e6048"/>
        <function-ref name="set" scoped="" ref="0x407e7130"/>
        <function-ref name="start" scoped="" ref="0x407e7b38"/>
        <function-ref name="stop" scoped="" ref="0x407e7db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x407e6c28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x407e6c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407e3698"/>
        <function-ref name="test" scoped="" ref="0x407e4a28"/>
        <function-ref name="fired" scoped="" ref="0x407e47b0"/>
        <function-ref name="force" scoped="" ref="0x407e3bb0"/>
        <function-ref name="get" scoped="" ref="0x407e4298"/>
        <function-ref name="reset" scoped="" ref="0x407e4ca0"/>
        <function-ref name="getMode" scoped="" ref="0x407e3938"/>
        <function-ref name="isOn" scoped="" ref="0x407e3420"/>
        <function-ref name="set" scoped="" ref="0x407e4510"/>
        <function-ref name="start" scoped="" ref="0x407e4f18"/>
        <function-ref name="stop" scoped="" ref="0x407e31a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x407f2978" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x407f2978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407f0418"/>
        <function-ref name="test" scoped="" ref="0x407f17a0"/>
        <function-ref name="fired" scoped="" ref="0x407f1528"/>
        <function-ref name="force" scoped="" ref="0x407f0930"/>
        <function-ref name="get" scoped="" ref="0x407f1010"/>
        <function-ref name="reset" scoped="" ref="0x407f1a18"/>
        <function-ref name="getMode" scoped="" ref="0x407f06b8"/>
        <function-ref name="isOn" scoped="" ref="0x407f01a0"/>
        <function-ref name="set" scoped="" ref="0x407f1288"/>
        <function-ref name="start" scoped="" ref="0x407f1c90"/>
        <function-ref name="stop" scoped="" ref="0x407f1f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40801470" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40801470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40800ee0"/>
        <function-ref name="test" scoped="" ref="0x40800288"/>
        <function-ref name="fired" scoped="" ref="0x40800010"/>
        <function-ref name="get" scoped="" ref="0x40801ab8"/>
        <function-ref name="reset" scoped="" ref="0x40800500"/>
        <function-ref name="getMode" scoped="" ref="0x407ff1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40800c68"/>
        <function-ref name="set" scoped="" ref="0x40801d30"/>
        <function-ref name="start" scoped="" ref="0x40800778"/>
        <function-ref name="stop" scoped="" ref="0x408009f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x407ff478" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x407ff478"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407ff650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x407f0d28" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x407f0d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407ed7b0"/>
        <function-ref name="test" scoped="" ref="0x407eeb20"/>
        <function-ref name="fired" scoped="" ref="0x407ee8a8"/>
        <function-ref name="force" scoped="" ref="0x407edcc8"/>
        <function-ref name="get" scoped="" ref="0x407ee390"/>
        <function-ref name="reset" scoped="" ref="0x407eed98"/>
        <function-ref name="getMode" scoped="" ref="0x407eda50"/>
        <function-ref name="isOn" scoped="" ref="0x407ed538"/>
        <function-ref name="set" scoped="" ref="0x407ee608"/>
        <function-ref name="start" scoped="" ref="0x407ed048"/>
        <function-ref name="stop" scoped="" ref="0x407ed2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407ff868" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407ff868"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x407ffa40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x407ec100" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x407ec100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40802b50"/>
        <function-ref name="test" scoped="" ref="0x407eced8"/>
        <function-ref name="fired" scoped="" ref="0x407ecc60"/>
        <function-ref name="force" scoped="" ref="0x40801088"/>
        <function-ref name="get" scoped="" ref="0x407ec748"/>
        <function-ref name="reset" scoped="" ref="0x40802170"/>
        <function-ref name="getMode" scoped="" ref="0x40802df0"/>
        <function-ref name="isOn" scoped="" ref="0x408028d8"/>
        <function-ref name="set" scoped="" ref="0x407ec9c0"/>
        <function-ref name="start" scoped="" ref="0x408023e8"/>
        <function-ref name="stop" scoped="" ref="0x40802660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x407f7878" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x407f7878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x407f22e0"/>
        <function-ref name="test" scoped="" ref="0x407f4668"/>
        <function-ref name="get" scoped="" ref="0x407f7ec0"/>
        <function-ref name="reset" scoped="" ref="0x407f48e0"/>
        <function-ref name="getMode" scoped="" ref="0x407f2580"/>
        <function-ref name="overflow" scoped="" ref="0x407f43f0"/>
        <function-ref name="isOn" scoped="" ref="0x407f2068"/>
        <function-ref name="set" scoped="" ref="0x407f4150"/>
        <function-ref name="start" scoped="" ref="0x407f4b58"/>
        <function-ref name="stop" scoped="" ref="0x407f4dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x407be868" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x407be868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407beea0"/>
        <function-ref name="readDone" scoped="" ref="0x407db130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x407db590" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x407db590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407dbbc8"/>
        <function-ref name="readDone" scoped="" ref="0x407dbe30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4085d1c0" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4085d1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4085d3a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4085d488"/>
        <function-ref name="request" scoped="" ref="0x4085d568"/>
        <function-ref name="granted" scoped="" ref="0x4085d648"/>
        <function-ref name="isOwner" scoped="" ref="0x4085d728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcTask" ref="0x4086a328" loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcTask" scoped="" ref="0x4086a328"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4086a500"/>
        <function-ref name="runTask" scoped="" ref="0x4086a5e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40859a88" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40859a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40859c60"/>
        <function-ref name="getChannel" scoped="" ref="0x40859d40"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40859e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcRaw" ref="0x40856e70" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcRaw" scoped="" ref="0x40856e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408554b8"/>
        <function-ref name="readDone" scoped="" ref="0x40855710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureBridge" ref="0x40855b10" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureBridge" scoped="" ref="0x40855b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40855ce8"/>
        <function-ref name="isInput" scoped="" ref="0x40855dc8"/>
        <function-ref name="toggle" scoped="" ref="0x40855ea8"/>
        <function-ref name="isOutput" scoped="" ref="0x40854010"/>
        <function-ref name="get" scoped="" ref="0x408540f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408541d0"/>
        <function-ref name="set" scoped="" ref="0x408542b0"/>
        <function-ref name="clr" scoped="" ref="0x40854390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageMilliVolts" ref="0x40856180" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageMilliVolts" scoped="" ref="0x40856180"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408567a8"/>
        <function-ref name="readDone" scoped="" ref="0x40856a00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x408545f8" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408545f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4086b110"/>
        <function-ref name="fired" scoped="" ref="0x408533a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40853ab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40853858"/>
        <function-ref name="getdt" scoped="" ref="0x4086b5c0"/>
        <function-ref name="gett0" scoped="" ref="0x4086b368"/>
        <function-ref name="isRunning" scoped="" ref="0x40853600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40854c20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40853dd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40854ea0"/>
        <function-ref name="stop" scoped="" ref="0x40853150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40857da8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SingleVoltageC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40857da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408788a8"/>
        <function-ref name="fired" scoped="" ref="0x40860b38"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40878268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40878010"/>
        <function-ref name="getdt" scoped="" ref="0x40878d58"/>
        <function-ref name="gett0" scoped="" ref="0x40878b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40860d90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408603e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40878588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40860660"/>
        <function-ref name="stop" scoped="" ref="0x408608e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x408751e8" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x408751e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x408753d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408754b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40890208" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40890208"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x408903f0"/>
        <function-ref name="configure" scoped="" ref="0x408904d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x408755f0" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x408755f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408757c8"/>
        <function-ref name="requested" scoped="" ref="0x408758a8"/>
        <function-ref name="granted" scoped="" ref="0x40875988"/>
        <function-ref name="isOwner" scoped="" ref="0x40875a68"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40875b48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40876a18" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40876a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40876c00"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40876ce0"/>
        <function-ref name="request" scoped="" ref="0x40876dc0"/>
        <function-ref name="granted" scoped="" ref="0x40876ea0"/>
        <function-ref name="isOwner" scoped="" ref="0x40875010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40875c88" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40875c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40875e60"/>
        <function-ref name="userId" scoped="" ref="0x40890010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ec8c98" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ec8c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ec8e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40ec5010" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40ec5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ec51e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ec52c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ec53a8"/>
        <function-ref name="dequeue" scoped="" ref="0x40ec5488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40ec48b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40ec48b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40ec4a98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ec4b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40ec38b0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40ec38b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40ec3a98"/>
        <function-ref name="configure" scoped="" ref="0x40ec3b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40ec3cd8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40ec3cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40ec3eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x40ec2010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40ec20f0"/>
        <function-ref name="dequeue" scoped="" ref="0x40ec21d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40ec4cb8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40ec4cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ec4e90"/>
        <function-ref name="requested" scoped="" ref="0x40ec3010"/>
        <function-ref name="granted" scoped="" ref="0x40ec30f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ec31d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40ec32b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40ec2310" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40ec2310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40ec24e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40ec25c8"/>
        <function-ref name="led1On" scoped="" ref="0x40ec26a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40ec2788"/>
        <function-ref name="led3Off" scoped="" ref="0x40ec2868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40ec2948"/>
        <function-ref name="get" scoped="" ref="0x40ec2a28"/>
        <function-ref name="led1Off" scoped="" ref="0x40ec2b08"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40ec2be8"/>
        <function-ref name="led3On" scoped="" ref="0x40ec2cc8"/>
        <function-ref name="led0On" scoped="" ref="0x40ec2da8"/>
        <function-ref name="led2Off" scoped="" ref="0x40ec2e88"/>
        <function-ref name="led2On" scoped="" ref="0x40ec1010"/>
        <function-ref name="set" scoped="" ref="0x40ec1170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40ec4170" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40ec4170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ec4358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ec4438"/>
        <function-ref name="request" scoped="" ref="0x40ec4518"/>
        <function-ref name="granted" scoped="" ref="0x40ec45f8"/>
        <function-ref name="isOwner" scoped="" ref="0x40ec46d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40ec33f0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40ec33f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40ec35c8"/>
        <function-ref name="userId" scoped="" ref="0x40ec36a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40ec12f0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40ec12f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ec14c8"/>
        <function-ref name="runTask" scoped="" ref="0x40ec15a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4088e4d8" loc="19:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4088e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088eb10"/>
        <function-ref name="readDone" scoped="" ref="0x4088ed78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x4088d170" loc="21:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x4088d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4088d798"/>
        <function-ref name="readDone" scoped="" ref="0x4088d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4088dd60" loc="22:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4088dd60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4089d010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4089d0f0"/>
        <function-ref name="request" scoped="" ref="0x4089d1d0"/>
        <function-ref name="granted" scoped="" ref="0x4089d2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x4089d390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x4089d4d0" loc="23:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4089d4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4089d6a8"/>
        <function-ref name="userId" scoped="" ref="0x4089d788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40897780" loc="12:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40897780"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40897ed0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40895b30" loc="14:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40895b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40895d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x40899928" loc="10:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x40899928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40898010"/>
        <function-ref name="readDone" scoped="" ref="0x40898268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x406cec18" loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x406cec18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40899258"/>
        <function-ref name="readDone" scoped="" ref="0x408994b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40898590" loc="11:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40898590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40898768"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40898848"/>
        <function-ref name="led1On" scoped="" ref="0x40898928"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40898a08"/>
        <function-ref name="led3Off" scoped="" ref="0x40898ae8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40898bc8"/>
        <function-ref name="get" scoped="" ref="0x40898ca8"/>
        <function-ref name="led1Off" scoped="" ref="0x40898d88"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40898e68"/>
        <function-ref name="led3On" scoped="" ref="0x40897010"/>
        <function-ref name="led0On" scoped="" ref="0x408970f0"/>
        <function-ref name="led2Off" scoped="" ref="0x408971d0"/>
        <function-ref name="led2On" scoped="" ref="0x408972b0"/>
        <function-ref name="set" scoped="" ref="0x40897410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x408951a8" loc="13:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x408951a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40895380"/>
        <function-ref name="isInput" scoped="" ref="0x40895460"/>
        <function-ref name="toggle" scoped="" ref="0x40895540"/>
        <function-ref name="isOutput" scoped="" ref="0x40895620"/>
        <function-ref name="get" scoped="" ref="0x40895700"/>
        <function-ref name="makeOutput" scoped="" ref="0x408957e0"/>
        <function-ref name="set" scoped="" ref="0x408958c0"/>
        <function-ref name="clr" scoped="" ref="0x408959a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4089ba20" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4089ba20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4089bbf8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4089bcd8"/>
        <function-ref name="led1On" scoped="" ref="0x4089bdb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4089be98"/>
        <function-ref name="led3Off" scoped="" ref="0x408a5010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408a50f0"/>
        <function-ref name="get" scoped="" ref="0x408a51d0"/>
        <function-ref name="led1Off" scoped="" ref="0x408a52b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408a5390"/>
        <function-ref name="led3On" scoped="" ref="0x408a5470"/>
        <function-ref name="led0On" scoped="" ref="0x408a5550"/>
        <function-ref name="led2Off" scoped="" ref="0x408a5630"/>
        <function-ref name="led2On" scoped="" ref="0x408a5710"/>
        <function-ref name="set" scoped="" ref="0x408a5870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x408bd010" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x408bd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bd1e8"/>
        <function-ref name="isInput" scoped="" ref="0x408bd2c8"/>
        <function-ref name="toggle" scoped="" ref="0x408bd3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x408bd488"/>
        <function-ref name="get" scoped="" ref="0x408bd568"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bd648"/>
        <function-ref name="set" scoped="" ref="0x408bd728"/>
        <function-ref name="clr" scoped="" ref="0x408bd808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x408bce88" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x408bce88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bb070"/>
        <function-ref name="isInput" scoped="" ref="0x408bb150"/>
        <function-ref name="toggle" scoped="" ref="0x408bb230"/>
        <function-ref name="isOutput" scoped="" ref="0x408bb310"/>
        <function-ref name="get" scoped="" ref="0x408bb3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bb4d0"/>
        <function-ref name="set" scoped="" ref="0x408bb5b0"/>
        <function-ref name="clr" scoped="" ref="0x408bb690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x408bd9f8" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x408bd9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bdbd0"/>
        <function-ref name="isInput" scoped="" ref="0x408bdcb0"/>
        <function-ref name="toggle" scoped="" ref="0x408bdd90"/>
        <function-ref name="isOutput" scoped="" ref="0x408bde70"/>
        <function-ref name="get" scoped="" ref="0x408bc010"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bc0f0"/>
        <function-ref name="set" scoped="" ref="0x408bc1d0"/>
        <function-ref name="clr" scoped="" ref="0x408bc2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x408bb830" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408bb830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408bba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x408bc4a0" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x408bc4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408bc678"/>
        <function-ref name="isInput" scoped="" ref="0x408bc758"/>
        <function-ref name="toggle" scoped="" ref="0x408bc838"/>
        <function-ref name="isOutput" scoped="" ref="0x408bc918"/>
        <function-ref name="get" scoped="" ref="0x408bc9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x408bcad8"/>
        <function-ref name="set" scoped="" ref="0x408bcbb8"/>
        <function-ref name="clr" scoped="" ref="0x408bcc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x408b7e20" loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x408b7e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b6010"/>
        <function-ref name="isInput" scoped="" ref="0x408b60f0"/>
        <function-ref name="toggle" scoped="" ref="0x408b61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b62b0"/>
        <function-ref name="get" scoped="" ref="0x408b6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b6470"/>
        <function-ref name="set" scoped="" ref="0x408b6550"/>
        <function-ref name="clr" scoped="" ref="0x408b6630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x408b5cc8" loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x408b5cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b5ea0"/>
        <function-ref name="isInput" scoped="" ref="0x408b4010"/>
        <function-ref name="toggle" scoped="" ref="0x408b40f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b41d0"/>
        <function-ref name="get" scoped="" ref="0x408b42b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b4390"/>
        <function-ref name="set" scoped="" ref="0x408b4470"/>
        <function-ref name="clr" scoped="" ref="0x408b4550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408a2a30" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408a2a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a2c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x408b6820" loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x408b6820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b69f8"/>
        <function-ref name="isInput" scoped="" ref="0x408b6ad8"/>
        <function-ref name="toggle" scoped="" ref="0x408b6bb8"/>
        <function-ref name="isOutput" scoped="" ref="0x408b6c98"/>
        <function-ref name="get" scoped="" ref="0x408b6d78"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b6e58"/>
        <function-ref name="set" scoped="" ref="0x408b5010"/>
        <function-ref name="clr" scoped="" ref="0x408b50f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x408a2d78" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408a2d78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408b7010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408b70f0"/>
        <function-ref name="led1On" scoped="" ref="0x408b71d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408b72b0"/>
        <function-ref name="led3Off" scoped="" ref="0x408b7390"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408b7470"/>
        <function-ref name="get" scoped="" ref="0x408b7550"/>
        <function-ref name="led1Off" scoped="" ref="0x408b7630"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408b7710"/>
        <function-ref name="led3On" scoped="" ref="0x408b77f0"/>
        <function-ref name="led0On" scoped="" ref="0x408b78d0"/>
        <function-ref name="led2Off" scoped="" ref="0x408b79b0"/>
        <function-ref name="led2On" scoped="" ref="0x408b7a90"/>
        <function-ref name="set" scoped="" ref="0x408b7bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x408b52e0" loc="52:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x408b52e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b54b8"/>
        <function-ref name="isInput" scoped="" ref="0x408b5598"/>
        <function-ref name="toggle" scoped="" ref="0x408b5678"/>
        <function-ref name="isOutput" scoped="" ref="0x408b5758"/>
        <function-ref name="get" scoped="" ref="0x408b5838"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b5918"/>
        <function-ref name="set" scoped="" ref="0x408b59f8"/>
        <function-ref name="clr" scoped="" ref="0x408b5ad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408d4550" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408d4550"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408d4728"/>
        <function-ref name="disable" scoped="" ref="0x408d4808"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408d48e8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408d49c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x408d4b88" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x408d4b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408d4d60"/>
        <function-ref name="isInput" scoped="" ref="0x408d4e40"/>
        <function-ref name="toggle" scoped="" ref="0x408d4f20"/>
        <function-ref name="isOutput" scoped="" ref="0x408d7018"/>
        <function-ref name="get" scoped="" ref="0x408d70f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x408d71d8"/>
        <function-ref name="set" scoped="" ref="0x408d72b8"/>
        <function-ref name="clr" scoped="" ref="0x408d7398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408d7d60" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408d7d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408d1010"/>
        <function-ref name="disable" scoped="" ref="0x408d10f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408d11d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x408e6330" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408e6330"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408e6508"/>
        <function-ref name="fired" scoped="" ref="0x408e65e8"/>
        <function-ref name="disable" scoped="" ref="0x408e66c8"/>
        <function-ref name="isEnabled" scoped="" ref="0x408e67a8"/>
        <function-ref name="reset" scoped="" ref="0x408e6888"/>
        <function-ref name="setMask" scoped="" ref="0x408e6968"/>
        <function-ref name="enable" scoped="" ref="0x408e6a48"/>
        <function-ref name="getPins" scoped="" ref="0x408e6b28"/>
        <function-ref name="getMask" scoped="" ref="0x408e6c08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x408ebeb8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x408ebeb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x408cf0c0"/>
        <function-ref name="fired" scoped="" ref="0x408cf1a0"/>
        <function-ref name="disable" scoped="" ref="0x408cf280"/>
        <function-ref name="isEnabled" scoped="" ref="0x408cf360"/>
        <function-ref name="reset" scoped="" ref="0x408cf440"/>
        <function-ref name="setMask" scoped="" ref="0x408cf520"/>
        <function-ref name="enable" scoped="" ref="0x408cf600"/>
        <function-ref name="getPins" scoped="" ref="0x408cf6e0"/>
        <function-ref name="getMask" scoped="" ref="0x408cf7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x408cf9b8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x408cf9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x408cfba0"/>
        <function-ref name="disable" scoped="" ref="0x408cfc80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x408cfd60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x408cfe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x408fe980" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408fe980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x408feb58"/>
        <function-ref name="stopDone" scoped="" ref="0x408fec38"/>
        <function-ref name="start" scoped="" ref="0x408fed18"/>
        <function-ref name="stop" scoped="" ref="0x408fedf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40901240" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40901240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40901418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x408fc440" loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x408fc440"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408fc618"/>
        <function-ref name="runTask" scoped="" ref="0x408fc6f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x40901d30" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x40901d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40901f08"/>
        <function-ref name="runTask" scoped="" ref="0x408fd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x40902098" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x40902098"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40902270"/>
        <function-ref name="disable" scoped="" ref="0x40902350"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40902430"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40902510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x40902758" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x40902758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40902930"/>
        <function-ref name="isInput" scoped="" ref="0x40902a10"/>
        <function-ref name="toggle" scoped="" ref="0x40902af0"/>
        <function-ref name="isOutput" scoped="" ref="0x40902bd0"/>
        <function-ref name="get" scoped="" ref="0x40902cb0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40902d90"/>
        <function-ref name="set" scoped="" ref="0x40902e70"/>
        <function-ref name="clr" scoped="" ref="0x40901010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x408e8dd0" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x408e8dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4090e010"/>
        <function-ref name="stopDone" scoped="" ref="0x4090e0f0"/>
        <function-ref name="start" scoped="" ref="0x4090e1d0"/>
        <function-ref name="stop" scoped="" ref="0x4090e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4090e710" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4090e710"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4090e8e8"/>
        <function-ref name="getPayload" scoped="" ref="0x4090e9c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090eaa8"/>
        <function-ref name="cancel" scoped="" ref="0x4090eb88"/>
        <function-ref name="sendDone" scoped="" ref="0x4090ec68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4090d458" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4090d458"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4090d630"/>
        <function-ref name="payloadLength" scoped="" ref="0x4090d710"/>
        <function-ref name="getPayload" scoped="" ref="0x4090d7f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4090d8d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4090d9b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4090d100" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4090d100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4090d2d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4091cb78" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4091cb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4091cd50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4091ce30"/>
        <function-ref name="led1On" scoped="" ref="0x4091cf10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4090b010"/>
        <function-ref name="led3Off" scoped="" ref="0x4090b0f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4090b1d0"/>
        <function-ref name="get" scoped="" ref="0x4090b2b0"/>
        <function-ref name="led1Off" scoped="" ref="0x4090b390"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4090b470"/>
        <function-ref name="led3On" scoped="" ref="0x4090b550"/>
        <function-ref name="led0On" scoped="" ref="0x4090b630"/>
        <function-ref name="led2Off" scoped="" ref="0x4090b710"/>
        <function-ref name="led2On" scoped="" ref="0x4090b7f0"/>
        <function-ref name="set" scoped="" ref="0x4090b950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4091c640" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4091c640"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4091c818"/>
        <function-ref name="noAck" scoped="" ref="0x4091c8f8"/>
        <function-ref name="wasAcked" scoped="" ref="0x4091c9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x409203b8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x409203b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40920590"/>
        <function-ref name="source" scoped="" ref="0x40920670"/>
        <function-ref name="address" scoped="" ref="0x40920750"/>
        <function-ref name="destination" scoped="" ref="0x40920830"/>
        <function-ref name="setSource" scoped="" ref="0x40920910"/>
        <function-ref name="setDestination" scoped="" ref="0x409209f0"/>
        <function-ref name="type" scoped="" ref="0x40920ad0"/>
        <function-ref name="setType" scoped="" ref="0x40920bb0"/>
        <function-ref name="isForMe" scoped="" ref="0x40920c90"/>
        <function-ref name="setGroup" scoped="" ref="0x40920d70"/>
        <function-ref name="localGroup" scoped="" ref="0x40920e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4095b430" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4095b430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095b608"/>
        <function-ref name="getPayload" scoped="" ref="0x4095b6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4095b7c8"/>
        <function-ref name="cancel" scoped="" ref="0x4095b8a8"/>
        <function-ref name="sendDone" scoped="" ref="0x4095b988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4095bae8" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4095bae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4095bcc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4091d180" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4091d180"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4091d368"/>
        <function-ref name="getPayload" scoped="" ref="0x4091d448"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091d528"/>
        <function-ref name="cancel" scoped="" ref="0x4091d608"/>
        <function-ref name="sendDone" scoped="" ref="0x4091d6e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4091a850" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4091a850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4091aa28"/>
        <function-ref name="payloadLength" scoped="" ref="0x4091ab08"/>
        <function-ref name="getPayload" scoped="" ref="0x4091abe8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4091acc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4091ada8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4091d8c0" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4091d8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4091daa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4091aee8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4091aee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4095b0e0"/>
        <function-ref name="noAck" scoped="" ref="0x4095b1c0"/>
        <function-ref name="wasAcked" scoped="" ref="0x4095b2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4091dbe8" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4091dbe8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4091ddc0"/>
        <function-ref name="source" scoped="" ref="0x4091dea0"/>
        <function-ref name="address" scoped="" ref="0x4091a010"/>
        <function-ref name="destination" scoped="" ref="0x4091a0f0"/>
        <function-ref name="setSource" scoped="" ref="0x4091a1d0"/>
        <function-ref name="setDestination" scoped="" ref="0x4091a2b0"/>
        <function-ref name="type" scoped="" ref="0x4091a390"/>
        <function-ref name="setType" scoped="" ref="0x4091a470"/>
        <function-ref name="isForMe" scoped="" ref="0x4091a550"/>
        <function-ref name="setGroup" scoped="" ref="0x4091a630"/>
        <function-ref name="localGroup" scoped="" ref="0x4091a710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409573a8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409573a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40957580"/>
        <function-ref name="stopDone" scoped="" ref="0x40957660"/>
        <function-ref name="start" scoped="" ref="0x40957740"/>
        <function-ref name="stop" scoped="" ref="0x40957820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40956288" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40956288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4048aeb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40956460"/>
        <function-ref name="getPayload" scoped="" ref="0x40956540"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40956620"/>
        <function-ref name="cancel" scoped="" ref="0x40956700"/>
        <function-ref name="sendDone" scoped="" ref="0x409567e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40957010" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40957010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409571e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40957c68" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40957c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4048aeb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40957e40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40951e80" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40951e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40955070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40955150"/>
        <function-ref name="led1On" scoped="" ref="0x40955230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40955310"/>
        <function-ref name="led3Off" scoped="" ref="0x409553f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409554d0"/>
        <function-ref name="get" scoped="" ref="0x409555b0"/>
        <function-ref name="led1Off" scoped="" ref="0x40955690"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40955770"/>
        <function-ref name="led3On" scoped="" ref="0x40955850"/>
        <function-ref name="led0On" scoped="" ref="0x40955930"/>
        <function-ref name="led2Off" scoped="" ref="0x40955a10"/>
        <function-ref name="led2On" scoped="" ref="0x40955af0"/>
        <function-ref name="set" scoped="" ref="0x40955c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40951978" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40951978"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4048aeb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40951b50"/>
        <function-ref name="offset" scoped="" ref="0x40951c30"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40951d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x4095e630" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x4095e630"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4095e808"/>
        <function-ref name="stopDone" scoped="" ref="0x4095e8e8"/>
        <function-ref name="start" scoped="" ref="0x4095e9c8"/>
        <function-ref name="stop" scoped="" ref="0x4095eaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x4099dce8" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x4099dce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4099dec0"/>
        <function-ref name="runTask" scoped="" ref="0x4099c010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4096ed38" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4096ed38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4096ef10"/>
        <function-ref name="stop" scoped="" ref="0x40976010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x4097c168" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x4097c168"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4097c340"/>
        <function-ref name="runTask" scoped="" ref="0x4097c420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4095e298" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4095e298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4095e470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x40976d10" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x40976d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x40976ee8"/>
        <function-ref name="flush" scoped="" ref="0x4096f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x4099e578" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x4099e578"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4099e750"/>
        <function-ref name="runTask" scoped="" ref="0x4099e830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x40970468" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40970468"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40970640"/>
        <function-ref name="resetSend" scoped="" ref="0x40970720"/>
        <function-ref name="dataReceived" scoped="" ref="0x40970800"/>
        <function-ref name="resetReceive" scoped="" ref="0x409708e0"/>
        <function-ref name="putData" scoped="" ref="0x409709c0"/>
        <function-ref name="putDone" scoped="" ref="0x40970aa0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40970b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40970cf0" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40970cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40970ec8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40979010"/>
        <function-ref name="led1On" scoped="" ref="0x409790f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409791d0"/>
        <function-ref name="led3Off" scoped="" ref="0x409792b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40979390"/>
        <function-ref name="get" scoped="" ref="0x40979470"/>
        <function-ref name="led1Off" scoped="" ref="0x40979550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40979630"/>
        <function-ref name="led3On" scoped="" ref="0x40979710"/>
        <function-ref name="led0On" scoped="" ref="0x409797f0"/>
        <function-ref name="led2Off" scoped="" ref="0x409798d0"/>
        <function-ref name="led2On" scoped="" ref="0x409799b0"/>
        <function-ref name="set" scoped="" ref="0x40979b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x409ba998" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x409ba998"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409bab70"/>
        <function-ref name="runTask" scoped="" ref="0x409bac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x40977ef8" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40977ef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4097a0e0"/>
        <function-ref name="nextByte" scoped="" ref="0x4097a1c0"/>
        <function-ref name="startSend" scoped="" ref="0x4097a2a0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4097a380"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x409742a8" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409742a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40974480"/>
        <function-ref name="byteReceived" scoped="" ref="0x40974560"/>
        <function-ref name="endPacket" scoped="" ref="0x40974640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40a2a3d0" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40a2a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a2a5a8"/>
        <function-ref name="runTask" scoped="" ref="0x40a2a688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a0bbc8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a0bbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4048aeb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a0bdb0"/>
        <function-ref name="getPayload" scoped="" ref="0x40a0be90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a2c010"/>
        <function-ref name="cancel" scoped="" ref="0x40a2c0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a2c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40a2a808" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40a2a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a2a9e0"/>
        <function-ref name="runTask" scoped="" ref="0x40a2aac0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a0b808" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a0b808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4048aeb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a0b9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40a2c3f8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40a2c3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x4048aeb0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40a2c5e0"/>
        <function-ref name="offset" scoped="" ref="0x40a2c6c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40a2c7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a2b3f0" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a2b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a2b5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a2b6a8"/>
        <function-ref name="led1On" scoped="" ref="0x40a2b788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a2b868"/>
        <function-ref name="led3Off" scoped="" ref="0x40a2b948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a2ba28"/>
        <function-ref name="get" scoped="" ref="0x40a2bb08"/>
        <function-ref name="led1Off" scoped="" ref="0x40a2bbe8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a2bcc8"/>
        <function-ref name="led3On" scoped="" ref="0x40a2bda8"/>
        <function-ref name="led0On" scoped="" ref="0x40a2be88"/>
        <function-ref name="led2Off" scoped="" ref="0x40a2a010"/>
        <function-ref name="led2On" scoped="" ref="0x40a2a0f0"/>
        <function-ref name="set" scoped="" ref="0x40a2a250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40a2cdb8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40a2cdb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40a2b010"/>
        <function-ref name="nextByte" scoped="" ref="0x40a2b0f0"/>
        <function-ref name="startSend" scoped="" ref="0x40a2b1d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40a2b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40a2c8e0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40a2c8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40a2cab8"/>
        <function-ref name="byteReceived" scoped="" ref="0x40a2cb98"/>
        <function-ref name="endPacket" scoped="" ref="0x40a2cc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40a1c0f0" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a1c0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a1c2c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a1c3a8"/>
        <function-ref name="receive" scoped="" ref="0x40a1c488"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a1c568"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a1c648"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a1c728"/>
        <function-ref name="sendDone" scoped="" ref="0x40a1c808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40a29ca8" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40a29ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40a29e80"/>
        <function-ref name="resetSend" scoped="" ref="0x40a25010"/>
        <function-ref name="dataReceived" scoped="" ref="0x40a250f0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40a251d0"/>
        <function-ref name="putData" scoped="" ref="0x40a252b0"/>
        <function-ref name="putDone" scoped="" ref="0x40a25390"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40a25470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a1c978" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a1c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a1cb50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a1cc30"/>
        <function-ref name="led1On" scoped="" ref="0x40a1cd10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a1cdf0"/>
        <function-ref name="led3Off" scoped="" ref="0x40a1ced0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a24010"/>
        <function-ref name="get" scoped="" ref="0x40a240f0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a241d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a242b0"/>
        <function-ref name="led3On" scoped="" ref="0x40a24390"/>
        <function-ref name="led0On" scoped="" ref="0x40a24470"/>
        <function-ref name="led2Off" scoped="" ref="0x40a24550"/>
        <function-ref name="led2On" scoped="" ref="0x40a24630"/>
        <function-ref name="set" scoped="" ref="0x40a24790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40a4d0f0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40a4d0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4d2c8"/>
        <function-ref name="receive" scoped="" ref="0x40a4d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a302b8" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a302b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a30490"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a30570"/>
        <function-ref name="receive" scoped="" ref="0x40a30650"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a30730"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a30810"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a308f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a309d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a28d98" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a28d98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a30010"/>
        <function-ref name="stop" scoped="" ref="0x40a300f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40a4e010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40a4e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4e1e8"/>
        <function-ref name="receive" scoped="" ref="0x40a4e2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a4e490" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a4e490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a4e668"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a4e748"/>
        <function-ref name="receive" scoped="" ref="0x40a4e828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a4e908"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a4e9e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a4eac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40a4eba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a4ef08" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a4ef08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a4b680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a4bb70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a4b8f8"/>
        <function-ref name="overflow" scoped="" ref="0x40a4bde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a4db00" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a4db00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a4dcd8"/>
        <function-ref name="stop" scoped="" ref="0x40a4ddb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40a497b0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40a497b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a49988"/>
        <function-ref name="receive" scoped="" ref="0x40a49a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40a48510" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40a48510"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a486e8"/>
        <function-ref name="stop" scoped="" ref="0x40a487c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a49060" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a49060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a49238"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a49bc8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a49bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a49da0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a49e80"/>
        <function-ref name="receive" scoped="" ref="0x40a48010"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a480f0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a481d0"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a482b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a48390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40a66a70" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a66a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a64200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a646f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a64478"/>
        <function-ref name="overflow" scoped="" ref="0x40a64968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40a48d80" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40a48d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a66010"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a660f0"/>
        <function-ref name="rxDone" scoped="" ref="0x40a661d0"/>
        <function-ref name="txDone" scoped="" ref="0x40a662b0"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a66390"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a66470"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a66550"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a66630"/>
        <function-ref name="tx" scoped="" ref="0x40a66710"/>
        <function-ref name="rx" scoped="" ref="0x40a667f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a49398" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a49398"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a49570"/>
        <function-ref name="stop" scoped="" ref="0x40a49650"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40a48948" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40a48948"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a48b20"/>
        <function-ref name="stop" scoped="" ref="0x40a48c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40a73088" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40a73088"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a73260"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a73340"/>
        <function-ref name="rxDone" scoped="" ref="0x40a73420"/>
        <function-ref name="txDone" scoped="" ref="0x40a73500"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a735e0"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a736c0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a737a0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a73880"/>
        <function-ref name="tx" scoped="" ref="0x40a73960"/>
        <function-ref name="rx" scoped="" ref="0x40a73a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40a72760" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40a72760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a72938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a72a18"/>
        <function-ref name="rxDone" scoped="" ref="0x40a72af8"/>
        <function-ref name="txDone" scoped="" ref="0x40a72bd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a72cb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a72d98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a72e78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a71010"/>
        <function-ref name="tx" scoped="" ref="0x40a710f0"/>
        <function-ref name="rx" scoped="" ref="0x40a711d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40a74b50" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40a74b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a74d28"/>
        <function-ref name="stop" scoped="" ref="0x40a74e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40a73c98" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40a73c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a73e70"/>
        <function-ref name="stop" scoped="" ref="0x40a72010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40a72268" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40a72268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a72440"/>
        <function-ref name="stop" scoped="" ref="0x40a72520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40a74640" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40a74640"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a74818"/>
        <function-ref name="stop" scoped="" ref="0x40a748f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40a719f8" loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40a719f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a71bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40a918c0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40a918c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a91a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a91b78"/>
        <function-ref name="rxDone" scoped="" ref="0x40a91c58"/>
        <function-ref name="txDone" scoped="" ref="0x40a91d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a91e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a91ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a90010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a900f0"/>
        <function-ref name="tx" scoped="" ref="0x40a901d0"/>
        <function-ref name="rx" scoped="" ref="0x40a902b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40a8e010" loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40a8e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40a8e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40a904c0" loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40a904c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a90698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40a8f390" loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40a8f390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40a8f568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40a8f648"/>
        <function-ref name="rxDone" scoped="" ref="0x40a8f728"/>
        <function-ref name="txDone" scoped="" ref="0x40a8f808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40a8f8e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40a8f9c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40a8faa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40a8fb88"/>
        <function-ref name="tx" scoped="" ref="0x40a8fc68"/>
        <function-ref name="rx" scoped="" ref="0x40a8fd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40a913a8" loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40a913a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a91580"/>
        <function-ref name="stop" scoped="" ref="0x40a91660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40a90910" loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40a90910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a90ae8"/>
        <function-ref name="stop" scoped="" ref="0x40a90bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40a90e40" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40a90e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a8f050"/>
        <function-ref name="stop" scoped="" ref="0x40a8f130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40a8e3e0" loc="126:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40a8e3e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40a8e5b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40a8e698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40a8e778"/>
        <function-ref name="actualMicro" scoped="" ref="0x40a8e858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40a8e938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a8eb20" loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a8eb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a8ecf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40a71e48" loc="115:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40a71e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a91050"/>
        <function-ref name="stop" scoped="" ref="0x40a91130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a2ec48" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a2ec48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ac23b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ac28a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ac2628"/>
        <function-ref name="overflow" scoped="" ref="0x40ac2b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40abe5f8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40abe5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40abed48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40abc288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40abc010"/>
        <function-ref name="overflow" scoped="" ref="0x40abc500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40abf320" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40abf320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047a288"/>
            <typename><typedef-ref name="TMicro" ref="0x4047a450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40abfa70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40abe010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40abfce8"/>
        <function-ref name="overflow" scoped="" ref="0x40abe288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40ab9328" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ab9328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ab9a78"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ab8010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ab9cf0"/>
        <function-ref name="overflow" scoped="" ref="0x40ab8288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40ad9b40" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40ad9b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad8308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ad87f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ad8580"/>
        <function-ref name="overflow" scoped="" ref="0x40ad8a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40adb908" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40adb908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40482060"/>
            <typename><typedef-ref name="TMcu" ref="0x40482410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad9068"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ad9558"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ad92e0"/>
        <function-ref name="overflow" scoped="" ref="0x40ad97d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40ad6728" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40ad6728"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40ad6900"/>
        <function-ref name="offset" scoped="" ref="0x40ad69e0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40ad6ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40aec010" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40aec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aec1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40aec2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40aec3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40aec488"/>
        <function-ref name="sendDone" scoped="" ref="0x40aec568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40aec6f0" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40aec6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40aec8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aeca38" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aeca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aecc10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aeccf0"/>
        <function-ref name="led1On" scoped="" ref="0x40aecdd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aeceb0"/>
        <function-ref name="led3Off" scoped="" ref="0x40aeb010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40aeb0f0"/>
        <function-ref name="get" scoped="" ref="0x40aeb1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40aeb2b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40aeb390"/>
        <function-ref name="led3On" scoped="" ref="0x40aeb470"/>
        <function-ref name="led0On" scoped="" ref="0x40aeb550"/>
        <function-ref name="led2Off" scoped="" ref="0x40aeb630"/>
        <function-ref name="led2On" scoped="" ref="0x40aeb710"/>
        <function-ref name="set" scoped="" ref="0x40aeb870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x40aea218" loc="54:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x40aea218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40aea3f0"/>
        <function-ref name="runTask" scoped="" ref="0x40aea4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x40acb9d8" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40acb9d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40acbbb0"/>
        <function-ref name="offset" scoped="" ref="0x40acbc90"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40acbd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40adc240" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40adc240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adc418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40add408" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40add408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40add5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40addd68" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40addd68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adc010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40add7a0" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40add7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40add978"/>
        <function-ref name="taskLoop" scoped="" ref="0x40adda58"/>
        <function-ref name="runNextTask" scoped="" ref="0x40addb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403b2330" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403b2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403b2508"/>
        <function-ref name="runTask" scoped="" ref="0x403b25e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40357b58" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40357b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40357d30"/>
        <function-ref name="taskLoop" scoped="" ref="0x40357e10"/>
        <function-ref name="runNextTask" scoped="" ref="0x40357ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40420010" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40420010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404201e8"/>
        <function-ref name="runTask" scoped="" ref="0x404202c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40420c70" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40420c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40420e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40421738" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40421738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40421910"/>
        <function-ref name="taskLoop" scoped="" ref="0x404219f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40421ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x404cbcc0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="UcminiSensorC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x404cbcc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x404d17c0"/>
        <function-ref name="fired" scoped="" ref="0x404caa50"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x404d1180"/>
        <function-ref name="isOneShot" scoped="" ref="0x404caf00"/>
        <function-ref name="getdt" scoped="" ref="0x404d1c70"/>
        <function-ref name="gett0" scoped="" ref="0x404d1a18"/>
        <function-ref name="isRunning" scoped="" ref="0x404caca8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x404ca2f8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x404d14a0"/>
        <function-ref name="startOneShot" scoped="" ref="0x404ca578"/>
        <function-ref name="stop" scoped="" ref="0x404ca7f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40af75b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40af75b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40af7bd8"/>
        <function-ref name="readDone" scoped="" ref="0x40af7e30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f44150" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f44150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f44328"/>
        <function-ref name="configure" scoped="" ref="0x40f44408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f450c0" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f450c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f456e8"/>
        <function-ref name="readDone" scoped="" ref="0x40f45940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40f45c48" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaTemperatureC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f45c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f45e20"/>
        <function-ref name="getChannel" scoped="" ref="0x40f45f00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f44010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40af2b00" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaTemperatureP.nc">
      <component-ref qname="AtmegaTemperatureP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40af2b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40af2cd8"/>
        <function-ref name="getChannel" scoped="" ref="0x40af2db8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40af2e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b12730" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b12730"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b12d58"/>
        <function-ref name="readDone" scoped="" ref="0x40b11010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f3fd88" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f3fd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f74010"/>
        <function-ref name="configure" scoped="" ref="0x40f740f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f40ce8" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f40ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f3f350"/>
        <function-ref name="readDone" scoped="" ref="0x40f3f5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40f3f8b0" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="UcminiSensorC.AtmegaVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40f3f8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40f3fa88"/>
        <function-ref name="getChannel" scoped="" ref="0x40f3fb68"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40f3fc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x40b0ec58" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/sensors/AtmegaVoltageP.nc">
      <component-ref qname="AtmegaVoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40b0ec58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40b0ee30"/>
        <function-ref name="getChannel" scoped="" ref="0x40b0ef10"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40b0b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b05ba0" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/LightC.nc">
      <component-ref qname="UcminiSensorC.LightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b05ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0d1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40b0d438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40f70998" loc="38:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviRawLightC.nc">
      <component-ref qname="UcminiSensorC.LightC.Bh1750fviRawLightC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40f70998"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40f6f010"/>
        <function-ref name="readDone" scoped="" ref="0x40f6f268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b00390" loc="38:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviArbitratedC.nc">
      <component-ref qname="Bh1750fviArbitratedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b00390"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b009b8"/>
        <function-ref name="readDone" scoped="" ref="0x40b00c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x40b244f0" loc="36:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviC.nc">
      <component-ref qname="Bh1750fviC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x40b244f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b24b18"/>
        <function-ref name="readDone" scoped="" ref="0x40b24d70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Light" ref="0x40b21650" loc="36:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Light" scoped="" ref="0x40b21650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b21c78"/>
        <function-ref name="readDone" scoped="" ref="0x40b21ed0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40b33920" loc="41:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40b33920"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40b33af8"/>
        <function-ref name="requestPower" scoped="" ref="0x40b33bd8"/>
        <function-ref name="powerOff" scoped="" ref="0x40b33cb8"/>
        <function-ref name="configure" scoped="" ref="0x40b33d98"/>
        <function-ref name="releasePower" scoped="" ref="0x40b33e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimeout" ref="0x40b27950" loc="121:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimeout" scoped="" ref="0x40b27950"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b27b28"/>
        <function-ref name="runTask" scoped="" ref="0x40b27c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b36040" loc="42:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b36040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b36218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40b37328" loc="40:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40b37328"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b37500"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b375e0"/>
        <function-ref name="request" scoped="" ref="0x40b376c0"/>
        <function-ref name="granted" scoped="" ref="0x40b377a0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b37880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40b1d040" loc="38:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b1d040"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b1d688"/>
        <function-ref name="writeDone" scoped="" ref="0x40b1c900"/>
        <function-ref name="write" scoped="" ref="0x40b1dca8"/>
        <function-ref name="readDone" scoped="" ref="0x40b1c2e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40b2cb88" loc="102:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40b2cb88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b2cd60"/>
        <function-ref name="runTask" scoped="" ref="0x40b2ce40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40b15010" loc="39:/opt/tinyos-2.x/tos/chips/bh1750fvi/Bh1750fviP.nc">
      <component-ref qname="Bh1750fviP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b15010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b13b00"/>
        <function-ref name="fired" scoped="" ref="0x40b15d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b134c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b13268"/>
        <function-ref name="getdt" scoped="" ref="0x40b37010"/>
        <function-ref name="gett0" scoped="" ref="0x40b13d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40b13010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b15638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b137e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b158b8"/>
        <function-ref name="stop" scoped="" ref="0x40b15b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40b1fd70" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="Bh1750fviC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40b1fd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b428a8"/>
        <function-ref name="fired" scoped="" ref="0x40b43b18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b42268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b42010"/>
        <function-ref name="getdt" scoped="" ref="0x40b42d58"/>
        <function-ref name="gett0" scoped="" ref="0x40b42b00"/>
        <function-ref name="isRunning" scoped="" ref="0x40b43d70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40b433c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b42588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40b43640"/>
        <function-ref name="stop" scoped="" ref="0x40b438c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40b3b588" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <component-ref qname="HplBh1750C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40b3b588"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40b3b760"/>
        <function-ref name="requestPower" scoped="" ref="0x40b3b840"/>
        <function-ref name="powerOff" scoped="" ref="0x40b3b920"/>
        <function-ref name="configure" scoped="" ref="0x40b3ba00"/>
        <function-ref name="releasePower" scoped="" ref="0x40b3bae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b3cd78" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <component-ref qname="HplBh1750C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b3cd78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b3b010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b3b0f0"/>
        <function-ref name="request" scoped="" ref="0x40b3b1d0"/>
        <function-ref name="granted" scoped="" ref="0x40b3b2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b3b390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40b41e28" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/bh1750fvi/HplBh1750C.nc">
      <component-ref qname="HplBh1750C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b41e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b3e488"/>
        <function-ref name="writeDone" scoped="" ref="0x40b3c748"/>
        <function-ref name="write" scoped="" ref="0x40b3eaa8"/>
        <function-ref name="readDone" scoped="" ref="0x40b3c128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b39db0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplBh1750C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b39db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b5e010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b5e0f0"/>
        <function-ref name="request" scoped="" ref="0x40b5e1d0"/>
        <function-ref name="granted" scoped="" ref="0x40b5e2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40b5e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40b5e580" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplBh1750C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b5e580"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b5ebc8"/>
        <function-ref name="writeDone" scoped="" ref="0x40c0ee40"/>
        <function-ref name="write" scoped="" ref="0x40c0e200"/>
        <function-ref name="readDone" scoped="" ref="0x40c0e820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b58b30" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b58b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b58d08"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b58de8"/>
        <function-ref name="request" scoped="" ref="0x40b58ec8"/>
        <function-ref name="granted" scoped="" ref="0x40b55010"/>
        <function-ref name="isOwner" scoped="" ref="0x40b550f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40b556d0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterP.nc">
      <component-ref qname="Atm128I2CMasterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b556d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b55d18"/>
        <function-ref name="writeDone" scoped="" ref="0x40b53010"/>
        <function-ref name="write" scoped="" ref="0x40b54368"/>
        <function-ref name="readDone" scoped="" ref="0x40b54988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40b500a8" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40b500a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40b50290"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b50370"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40b4f010" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40b4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40b4f1f8"/>
        <function-ref name="configure" scoped="" ref="0x40b4f2d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40b504b0" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b504b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b50688"/>
        <function-ref name="requested" scoped="" ref="0x40b50768"/>
        <function-ref name="granted" scoped="" ref="0x40b50848"/>
        <function-ref name="isOwner" scoped="" ref="0x40b50928"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b50a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b52940" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b52940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b52b28"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b52c08"/>
        <function-ref name="request" scoped="" ref="0x40b52ce8"/>
        <function-ref name="granted" scoped="" ref="0x40b52dc8"/>
        <function-ref name="isOwner" scoped="" ref="0x40b52ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40b50b48" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b50b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b50d20"/>
        <function-ref name="userId" scoped="" ref="0x40b50e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f65d38" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f65d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f65f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40f63090" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40f63090"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f63268"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f63348"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f63428"/>
        <function-ref name="dequeue" scoped="" ref="0x40f63508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40f629d0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40f629d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40f62bb8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f62c98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40f61990" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40f61990"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40f61b78"/>
        <function-ref name="configure" scoped="" ref="0x40f61c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40f61db8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40f61db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40f5f010"/>
        <function-ref name="isEmpty" scoped="" ref="0x40f5f0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40f5f1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x40f5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40f62dd8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40f62dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f61010"/>
        <function-ref name="requested" scoped="" ref="0x40f610f0"/>
        <function-ref name="granted" scoped="" ref="0x40f611d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40f612b0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40f61390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f5f3f0" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f5f5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f5f6a8"/>
        <function-ref name="led1On" scoped="" ref="0x40f5f788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f5f868"/>
        <function-ref name="led3Off" scoped="" ref="0x40f5f948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f5fa28"/>
        <function-ref name="get" scoped="" ref="0x40f5fb08"/>
        <function-ref name="led1Off" scoped="" ref="0x40f5fbe8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f5fcc8"/>
        <function-ref name="led3On" scoped="" ref="0x40f5fda8"/>
        <function-ref name="led0On" scoped="" ref="0x40f5fe88"/>
        <function-ref name="led2Off" scoped="" ref="0x40f5e010"/>
        <function-ref name="led2On" scoped="" ref="0x40f5e0f0"/>
        <function-ref name="set" scoped="" ref="0x40f5e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40f62290" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40f62290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40f62478"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40f62558"/>
        <function-ref name="request" scoped="" ref="0x40f62638"/>
        <function-ref name="granted" scoped="" ref="0x40f62718"/>
        <function-ref name="isOwner" scoped="" ref="0x40f627f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40f614d0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40f614d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40f616a8"/>
        <function-ref name="userId" scoped="" ref="0x40f61788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40f5e3d0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128I2CMasterP.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40f5e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f5e5a8"/>
        <function-ref name="runTask" scoped="" ref="0x40f5e688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x40b4e5b8" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x40b4e5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x40b4e790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x40b4e8d0" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40b4e8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b4eaa8"/>
        <function-ref name="requested" scoped="" ref="0x40b4eb88"/>
        <function-ref name="granted" scoped="" ref="0x40b4ec68"/>
        <function-ref name="isOwner" scoped="" ref="0x40b4ed48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40b4ee28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x40b4e1c0" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b4e1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b4e398"/>
        <function-ref name="stop" scoped="" ref="0x40b4e478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40b4d010" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128I2CMasterP.Power"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40b4d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40b4d1e8"/>
        <function-ref name="userId" scoped="" ref="0x40b4d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128I2C" ref="0x40b73240" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40b73240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40b73418"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40b76300" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40b76300"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b76948"/>
        <function-ref name="writeDone" scoped="" ref="0x40b74c50"/>
        <function-ref name="write" scoped="" ref="0x40b74010"/>
        <function-ref name="readDone" scoped="" ref="0x40b74630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b73578" loc="46:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b73578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b73750"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b73830"/>
        <function-ref name="led1On" scoped="" ref="0x40b73910"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b739f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40b73ad0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b73bb0"/>
        <function-ref name="get" scoped="" ref="0x40b73c90"/>
        <function-ref name="led1Off" scoped="" ref="0x40b73d70"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b73e50"/>
        <function-ref name="led3On" scoped="" ref="0x40b72010"/>
        <function-ref name="led0On" scoped="" ref="0x40b720f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b721d0"/>
        <function-ref name="led2On" scoped="" ref="0x40b722b0"/>
        <function-ref name="set" scoped="" ref="0x40b72410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40b4c2f0" loc="41:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40b4c2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b4c4d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b4c5b8"/>
        <function-ref name="request" scoped="" ref="0x40b4c698"/>
        <function-ref name="granted" scoped="" ref="0x40b4c778"/>
        <function-ref name="isOwner" scoped="" ref="0x40b4c858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40b4cae0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b4cae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b71200"/>
        <function-ref name="writeDone" scoped="" ref="0x40b774b8"/>
        <function-ref name="write" scoped="" ref="0x40b71830"/>
        <function-ref name="readDone" scoped="" ref="0x40b71e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubResource" ref="0x40b77b38" loc="43:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterImplP.nc">
      <component-ref qname="Atm128I2CMasterP.I2C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubResource" scoped="" ref="0x40b77b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40b77d20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40b77e00"/>
        <function-ref name="request" scoped="" ref="0x40b77ee0"/>
        <function-ref name="granted" scoped="" ref="0x40b76010"/>
        <function-ref name="isOwner" scoped="" ref="0x40b760f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128I2C" ref="0x40bd4d20" loc="79:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128I2C" scoped="" ref="0x40bd4d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128I2C"/>
      </instance>
      <interface-functions>
        <function-ref name="stop" scoped="" ref="0x40bd4ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2C" ref="0x40bd3090" loc="81:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40bd3090"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40bd3268"/>
        <function-ref name="sendCommand" scoped="" ref="0x40bd3348"/>
        <function-ref name="setStart" scoped="" ref="0x40bd3428"/>
        <function-ref name="status" scoped="" ref="0x40bd3508"/>
        <function-ref name="hasAcks" scoped="" ref="0x40bd35e8"/>
        <function-ref name="isEnabled" scoped="" ref="0x40bd36c8"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40bd37a8"/>
        <function-ref name="read" scoped="" ref="0x40bd3888"/>
        <function-ref name="init" scoped="" ref="0x40bd3968"/>
        <function-ref name="enableAck" scoped="" ref="0x40bd3a48"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40bd3b28"/>
        <function-ref name="hasStart" scoped="" ref="0x40bd3c08"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40bd3ce8"/>
        <function-ref name="commandComplete" scoped="" ref="0x40bd3e48"/>
        <function-ref name="enable" scoped="" ref="0x40bd3f28"/>
        <function-ref name="write" scoped="" ref="0x40bd2018"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40bd20f8"/>
        <function-ref name="off" scoped="" ref="0x40bd21d8"/>
        <function-ref name="setStop" scoped="" ref="0x40bd22b8"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40bd2398"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40bd2478"/>
        <function-ref name="hasStop" scoped="" ref="0x40bd2558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDebugLeds" ref="0x40bd26d8" loc="82:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDebugLeds" scoped="" ref="0x40bd26d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bd28b0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bd2990"/>
        <function-ref name="led1On" scoped="" ref="0x40bd2a70"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bd2b50"/>
        <function-ref name="led3Off" scoped="" ref="0x40bd2c30"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bd2d10"/>
        <function-ref name="get" scoped="" ref="0x40bd2df0"/>
        <function-ref name="led1Off" scoped="" ref="0x40bd2ed0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40bd1010"/>
        <function-ref name="led3On" scoped="" ref="0x40bd10f0"/>
        <function-ref name="led0On" scoped="" ref="0x40bd11d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40bd12b0"/>
        <function-ref name="led2On" scoped="" ref="0x40bd1390"/>
        <function-ref name="set" scoped="" ref="0x40bd14f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="WriteDebugLeds" ref="0x40bd1670" loc="83:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="WriteDebugLeds" scoped="" ref="0x40bd1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bd1848"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bd1928"/>
        <function-ref name="led1On" scoped="" ref="0x40bd1a08"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bd1ae8"/>
        <function-ref name="led3Off" scoped="" ref="0x40bd1bc8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bd1ca8"/>
        <function-ref name="get" scoped="" ref="0x40bd1d88"/>
        <function-ref name="led1Off" scoped="" ref="0x40bd1e68"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40bd0010"/>
        <function-ref name="led3On" scoped="" ref="0x40bd00f0"/>
        <function-ref name="led0On" scoped="" ref="0x40bd01d0"/>
        <function-ref name="led2Off" scoped="" ref="0x40bd02b0"/>
        <function-ref name="led2On" scoped="" ref="0x40bd0390"/>
        <function-ref name="set" scoped="" ref="0x40bd04f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x40b97978" loc="77:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x40b97978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b97b50"/>
        <function-ref name="stop" scoped="" ref="0x40b97c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40b97e20" loc="78:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterPacketP.nc">
      <component-ref qname="Atm128I2CMasterP.Master"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40b97e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b96488"/>
        <function-ref name="writeDone" scoped="" ref="0x40bd4748"/>
        <function-ref name="write" scoped="" ref="0x40b96aa8"/>
        <function-ref name="readDone" scoped="" ref="0x40bd4128"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40bcff00" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusC.nc">
      <component-ref qname="HplAtm128I2CBusC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40bcff00"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40bcc0f0"/>
        <function-ref name="sendCommand" scoped="" ref="0x40bcc1d0"/>
        <function-ref name="setStart" scoped="" ref="0x40bcc2b0"/>
        <function-ref name="status" scoped="" ref="0x40bcc390"/>
        <function-ref name="hasAcks" scoped="" ref="0x40bcc470"/>
        <function-ref name="isEnabled" scoped="" ref="0x40bcc550"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40bcc630"/>
        <function-ref name="read" scoped="" ref="0x40bcc710"/>
        <function-ref name="init" scoped="" ref="0x40bcc7f0"/>
        <function-ref name="enableAck" scoped="" ref="0x40bcc8d0"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40bcc9b0"/>
        <function-ref name="hasStart" scoped="" ref="0x40bcca90"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40bccb70"/>
        <function-ref name="commandComplete" scoped="" ref="0x40bcccd0"/>
        <function-ref name="enable" scoped="" ref="0x40bccdb0"/>
        <function-ref name="write" scoped="" ref="0x40bcce90"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40bcb010"/>
        <function-ref name="off" scoped="" ref="0x40bcb0f0"/>
        <function-ref name="setStop" scoped="" ref="0x40bcb1d0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40bcb2b0"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40bcb390"/>
        <function-ref name="hasStop" scoped="" ref="0x40bcb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2C" ref="0x40bc8010" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2C" scoped="" ref="0x40bc8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128I2CBus"/>
      </instance>
      <interface-functions>
        <function-ref name="readCurrent" scoped="" ref="0x40bc81e8"/>
        <function-ref name="sendCommand" scoped="" ref="0x40bc82c8"/>
        <function-ref name="setStart" scoped="" ref="0x40bc83a8"/>
        <function-ref name="status" scoped="" ref="0x40bc8488"/>
        <function-ref name="hasAcks" scoped="" ref="0x40bc8568"/>
        <function-ref name="isEnabled" scoped="" ref="0x40bc8648"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40bc8728"/>
        <function-ref name="read" scoped="" ref="0x40bc8808"/>
        <function-ref name="init" scoped="" ref="0x40bc88e8"/>
        <function-ref name="enableAck" scoped="" ref="0x40bc89c8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40bc8aa8"/>
        <function-ref name="hasStart" scoped="" ref="0x40bc8b88"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x40bc8c68"/>
        <function-ref name="commandComplete" scoped="" ref="0x40bc8dc8"/>
        <function-ref name="enable" scoped="" ref="0x40bc8ea8"/>
        <function-ref name="write" scoped="" ref="0x40bc7010"/>
        <function-ref name="isRealInterruptPending" scoped="" ref="0x40bc70f0"/>
        <function-ref name="off" scoped="" ref="0x40bc71d0"/>
        <function-ref name="setStop" scoped="" ref="0x40bc72b0"/>
        <function-ref name="setInterruptPending" scoped="" ref="0x40bc7390"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40bc7470"/>
        <function-ref name="hasStop" scoped="" ref="0x40bc7550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40bc7758" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40bc7758"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40bc7930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CClk" ref="0x40bc7b60" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CClk" scoped="" ref="0x40bc7b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc7d38"/>
        <function-ref name="isInput" scoped="" ref="0x40bc7e18"/>
        <function-ref name="toggle" scoped="" ref="0x40bc7ef8"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc6010"/>
        <function-ref name="get" scoped="" ref="0x40bc60f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc61d0"/>
        <function-ref name="set" scoped="" ref="0x40bc62b0"/>
        <function-ref name="clr" scoped="" ref="0x40bc6390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40bc5010" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40bc5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40bc51e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CData" ref="0x40bc6598" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/i2c/HplAtm128I2CBusP.nc">
      <component-ref qname="HplAtm128I2CBusP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CData" scoped="" ref="0x40bc6598"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40bc6770"/>
        <function-ref name="isInput" scoped="" ref="0x40bc6850"/>
        <function-ref name="toggle" scoped="" ref="0x40bc6930"/>
        <function-ref name="isOutput" scoped="" ref="0x40bc6a10"/>
        <function-ref name="get" scoped="" ref="0x40bc6af0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40bc6bd0"/>
        <function-ref name="set" scoped="" ref="0x40bc6cb0"/>
        <function-ref name="clr" scoped="" ref="0x40bc6d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40bcd8c0" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40bcd8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bcda98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x40bcdc28" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40bcdc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40bcde00"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40bcdee0"/>
        <function-ref name="led1On" scoped="" ref="0x40bf4010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40bf40f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40bf41d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40bf42b0"/>
        <function-ref name="get" scoped="" ref="0x40bf4390"/>
        <function-ref name="led1Off" scoped="" ref="0x40bf4470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40bf4550"/>
        <function-ref name="led3On" scoped="" ref="0x40bf4630"/>
        <function-ref name="led0On" scoped="" ref="0x40bf4710"/>
        <function-ref name="led2Off" scoped="" ref="0x40bf47f0"/>
        <function-ref name="led2On" scoped="" ref="0x40bf48d0"/>
        <function-ref name="set" scoped="" ref="0x40bf4a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40c0df10" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/I2CBusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40c0df10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40c0a108"/>
        <function-ref name="requestPower" scoped="" ref="0x40c0a1e8"/>
        <function-ref name="powerOff" scoped="" ref="0x40c0a2c8"/>
        <function-ref name="configure" scoped="" ref="0x40c0a3a8"/>
        <function-ref name="releasePower" scoped="" ref="0x40c0a488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40c08730" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40c08730"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40c08908"/>
        <function-ref name="requestPower" scoped="" ref="0x40c089e8"/>
        <function-ref name="powerOff" scoped="" ref="0x40c08ac8"/>
        <function-ref name="configure" scoped="" ref="0x40c08ba8"/>
        <function-ref name="releasePower" scoped="" ref="0x40c08c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40c08de8" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40c08de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40c15010"/>
        <function-ref name="isInput" scoped="" ref="0x40c150f0"/>
        <function-ref name="toggle" scoped="" ref="0x40c151d0"/>
        <function-ref name="isOutput" scoped="" ref="0x40c152b0"/>
        <function-ref name="get" scoped="" ref="0x40c15390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40c15470"/>
        <function-ref name="set" scoped="" ref="0x40c15550"/>
        <function-ref name="clr" scoped="" ref="0x40c15630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40fbc5e0" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40fbc5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40fbc7b8"/>
        <function-ref name="requestPower" scoped="" ref="0x40fbc898"/>
        <function-ref name="powerOff" scoped="" ref="0x40fbc978"/>
        <function-ref name="configure" scoped="" ref="0x40fbca58"/>
        <function-ref name="releasePower" scoped="" ref="0x40fbcb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fb8968" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fb8968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fb8b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x40fb8010" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x40fb8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40fb81e8"/>
        <function-ref name="isInput" scoped="" ref="0x40fb82c8"/>
        <function-ref name="toggle" scoped="" ref="0x40fb83a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40fb8488"/>
        <function-ref name="get" scoped="" ref="0x40fb8568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40fb8648"/>
        <function-ref name="set" scoped="" ref="0x40fb8728"/>
        <function-ref name="clr" scoped="" ref="0x40fb8808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40fbcd28" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManagerP.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.BusPowerManagerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fbcd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fba8a8"/>
        <function-ref name="fired" scoped="" ref="0x40fbbac8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fba268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fba010"/>
        <function-ref name="getdt" scoped="" ref="0x40fbad58"/>
        <function-ref name="gett0" scoped="" ref="0x40fbab00"/>
        <function-ref name="isRunning" scoped="" ref="0x40fbbd20"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fbb370"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fba588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fbb5f0"/>
        <function-ref name="stop" scoped="" ref="0x40fbb870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40fb7ad0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="I2CBusPowerManagerC.BusPowerManagerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40fb7ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40fb5650"/>
        <function-ref name="fired" scoped="" ref="0x40fb6860"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40fb5010"/>
        <function-ref name="isOneShot" scoped="" ref="0x40fb6d10"/>
        <function-ref name="getdt" scoped="" ref="0x40fb5b00"/>
        <function-ref name="gett0" scoped="" ref="0x40fb58a8"/>
        <function-ref name="isRunning" scoped="" ref="0x40fb6ab8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40fb6108"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40fb5330"/>
        <function-ref name="startOneShot" scoped="" ref="0x40fb6388"/>
        <function-ref name="stop" scoped="" ref="0x40fb6608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40b22e18" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Bh1750fviArbitratedC.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40b22e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c0b468"/>
        <function-ref name="readDone" scoped="" ref="0x40c0b6d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40c0bb30" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Bh1750fviArbitratedC.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40c0bb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c131e0"/>
        <function-ref name="readDone" scoped="" ref="0x40c13448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40c137c8" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Bh1750fviArbitratedC.ArbitratedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c137c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c139b0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c13a90"/>
        <function-ref name="request" scoped="" ref="0x40c13b70"/>
        <function-ref name="granted" scoped="" ref="0x40c13c50"/>
        <function-ref name="isOwner" scoped="" ref="0x40c13d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c11618" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c11618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c11800"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c118e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c39600" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c39600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c397e8"/>
        <function-ref name="configure" scoped="" ref="0x40c398c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40c11a20" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c11a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c11bf8"/>
        <function-ref name="requested" scoped="" ref="0x40c11cd8"/>
        <function-ref name="granted" scoped="" ref="0x40c11db8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c11e98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c39010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c12eb8" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c12eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c110c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c111a0"/>
        <function-ref name="request" scoped="" ref="0x40c11280"/>
        <function-ref name="granted" scoped="" ref="0x40c11360"/>
        <function-ref name="isOwner" scoped="" ref="0x40c11440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c39150" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c39150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c39328"/>
        <function-ref name="userId" scoped="" ref="0x40c39408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40fe6eb8" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40fe6eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fe40c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x40fe4220" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x40fe4220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40fe43f8"/>
        <function-ref name="isEmpty" scoped="" ref="0x40fe44d8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40fe45b8"/>
        <function-ref name="dequeue" scoped="" ref="0x40fe4698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40fe3ac8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40fe3ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40fe3cb0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fe3d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40fe2a40" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40fe2a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40fe2c28"/>
        <function-ref name="configure" scoped="" ref="0x40fe2d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x40fe2e68" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x40fe2e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x40fe0050"/>
        <function-ref name="isEmpty" scoped="" ref="0x40fe0130"/>
        <function-ref name="isEnqueued" scoped="" ref="0x40fe0210"/>
        <function-ref name="dequeue" scoped="" ref="0x40fe02f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40fe3ed0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40fe3ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fe20c0"/>
        <function-ref name="requested" scoped="" ref="0x40fe21a0"/>
        <function-ref name="granted" scoped="" ref="0x40fe2280"/>
        <function-ref name="isOwner" scoped="" ref="0x40fe2360"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40fe2440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40fe0430" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40fe0430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40fe0608"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40fe06e8"/>
        <function-ref name="led1On" scoped="" ref="0x40fe07c8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40fe08a8"/>
        <function-ref name="led3Off" scoped="" ref="0x40fe0988"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40fe0a68"/>
        <function-ref name="get" scoped="" ref="0x40fe0b48"/>
        <function-ref name="led1Off" scoped="" ref="0x40fe0c28"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40fe0d08"/>
        <function-ref name="led3On" scoped="" ref="0x40fe0de8"/>
        <function-ref name="led0On" scoped="" ref="0x40fe0ec8"/>
        <function-ref name="led2Off" scoped="" ref="0x40fdf010"/>
        <function-ref name="led2On" scoped="" ref="0x40fdf0f0"/>
        <function-ref name="set" scoped="" ref="0x40fdf250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40fe3388" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40fe3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40fe3570"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40fe3650"/>
        <function-ref name="request" scoped="" ref="0x40fe3730"/>
        <function-ref name="granted" scoped="" ref="0x40fe3810"/>
        <function-ref name="isOwner" scoped="" ref="0x40fe38f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40fe2580" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40fe2580"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40fe2758"/>
        <function-ref name="userId" scoped="" ref="0x40fe2838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x40fdf3d0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Bh1750fviArbitratedC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x40fdf3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40fdf5a8"/>
        <function-ref name="runTask" scoped="" ref="0x40fdf688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c37010" loc="36:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Bh1750fviArbitratedC.ReadClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c37010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c37648"/>
        <function-ref name="readDone" scoped="" ref="0x40c378b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40c37c68" loc="37:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Bh1750fviArbitratedC.ReadClientP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40c37c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c352c8"/>
        <function-ref name="readDone" scoped="" ref="0x40c35520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d09b38" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d09b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40b0c1e0"/>
        <function-ref name="readDone" scoped="" ref="0x40b0c438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40b0c7e0" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40b0c7e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40b0ce08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ffc0f0" loc="36:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ffc0f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ffc718"/>
        <function-ref name="readDone" scoped="" ref="0x40ffc970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40ffcd18" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607PressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40ffcd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40ffb350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ffa590" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ffa590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ffabb8"/>
        <function-ref name="readDone" scoped="" ref="0x40ffae10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40ff91d8" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40ff91d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40ff9800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPressure" ref="0x40c47dd0" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPressure" scoped="" ref="0x40c47dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c45448"/>
        <function-ref name="readDone" scoped="" ref="0x40c456a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40c4ad78" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40c4ad78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c473c0"/>
        <function-ref name="readDone" scoped="" ref="0x40c47618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadCalibration" ref="0x40c45eb8" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalibration" scoped="" ref="0x40c45eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c44500"/>
        <function-ref name="readDone" scoped="" ref="0x40c44890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c43010" loc="43:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c43010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c431e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c432c8"/>
        <function-ref name="request" scoped="" ref="0x40c433a8"/>
        <function-ref name="granted" scoped="" ref="0x40c43488"/>
        <function-ref name="isOwner" scoped="" ref="0x40c43568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40c43860" loc="45:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40c43860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40c43e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPressure" ref="0x40c426e8" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPressure" scoped="" ref="0x40c426e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c42d10"/>
        <function-ref name="readDone" scoped="" ref="0x40c3e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40c3e4d8" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40c3e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3eb00"/>
        <function-ref name="readDone" scoped="" ref="0x40c3ed58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadCalibration" ref="0x40c3d2a8" loc="42:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalibration" scoped="" ref="0x40c3d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c3d8d0"/>
        <function-ref name="readDone" scoped="" ref="0x40c3dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40c3c228" loc="43:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607C.nc">
      <component-ref qname="Ms5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40c3c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40c3c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40c51778" loc="104:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40c51778"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c51950"/>
        <function-ref name="runTask" scoped="" ref="0x40c51a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadPressure" ref="0x40c63df8" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadPressure" scoped="" ref="0x40c63df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c61448"/>
        <function-ref name="readDone" scoped="" ref="0x40c616a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x40c68320" loc="210:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x40c68320"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40c684f8"/>
        <function-ref name="runTask" scoped="" ref="0x40c685d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40c593c8" loc="48:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40c593c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40c595a0"/>
        <function-ref name="requestPower" scoped="" ref="0x40c59680"/>
        <function-ref name="powerOff" scoped="" ref="0x40c59760"/>
        <function-ref name="configure" scoped="" ref="0x40c59840"/>
        <function-ref name="releasePower" scoped="" ref="0x40c59920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40c5f468" loc="44:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40c5f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40c5f640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40c5abb8" loc="47:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40c5abb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c5ad90"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c5ae70"/>
        <function-ref name="request" scoped="" ref="0x40c59010"/>
        <function-ref name="granted" scoped="" ref="0x40c590f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c591d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40c630c8" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40c630c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c636f0"/>
        <function-ref name="readDone" scoped="" ref="0x40c63948"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadCalibration" ref="0x40c61bb0" loc="42:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalibration" scoped="" ref="0x40c61bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c601f0"/>
        <function-ref name="readDone" scoped="" ref="0x40c60580"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40c60b20" loc="43:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40c60b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40c5f1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40c5cc00" loc="46:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40c5cc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c5b278"/>
        <function-ref name="writeDone" scoped="" ref="0x40c5a4f8"/>
        <function-ref name="write" scoped="" ref="0x40c5b898"/>
        <function-ref name="readDone" scoped="" ref="0x40c5beb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40c5f8a8" loc="45:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607P.nc">
      <component-ref qname="Ms5607P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40c5f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c5c3a8"/>
        <function-ref name="fired" scoped="" ref="0x40c5e648"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c5ed50"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c5eaf8"/>
        <function-ref name="getdt" scoped="" ref="0x40c5c858"/>
        <function-ref name="gett0" scoped="" ref="0x40c5c600"/>
        <function-ref name="isRunning" scoped="" ref="0x40c5e8a0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40c5fed0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c5c088"/>
        <function-ref name="startOneShot" scoped="" ref="0x40c5e170"/>
        <function-ref name="stop" scoped="" ref="0x40c5e3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40c9fa90" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <component-ref qname="HplMs5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40c9fa90"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40c9fc68"/>
        <function-ref name="requestPower" scoped="" ref="0x40c9fd48"/>
        <function-ref name="powerOff" scoped="" ref="0x40c9fe28"/>
        <function-ref name="configure" scoped="" ref="0x40c9ff08"/>
        <function-ref name="releasePower" scoped="" ref="0x40c9e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c9f340" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <component-ref qname="HplMs5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c9f340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c9f518"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c9f5f8"/>
        <function-ref name="request" scoped="" ref="0x40c9f6d8"/>
        <function-ref name="granted" scoped="" ref="0x40c9f7b8"/>
        <function-ref name="isOwner" scoped="" ref="0x40c9f898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40ca3428" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/ms5607/HplMs5607C.nc">
      <component-ref qname="HplMs5607C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40ca3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ca3a70"/>
        <function-ref name="writeDone" scoped="" ref="0x40ca0ce8"/>
        <function-ref name="write" scoped="" ref="0x40ca00a8"/>
        <function-ref name="readDone" scoped="" ref="0x40ca06c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c9e8d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMs5607C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c9e8d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c9eab0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c9eb90"/>
        <function-ref name="request" scoped="" ref="0x40c9ec70"/>
        <function-ref name="granted" scoped="" ref="0x40c9ed50"/>
        <function-ref name="isOwner" scoped="" ref="0x40c9ee30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40c9d030" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplMs5607C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40c9d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c9d678"/>
        <function-ref name="writeDone" scoped="" ref="0x40c9c900"/>
        <function-ref name="write" scoped="" ref="0x40c9dc98"/>
        <function-ref name="readDone" scoped="" ref="0x40c9c2e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ca1010" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="Ms5607C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ca1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c99b00"/>
        <function-ref name="fired" scoped="" ref="0x40ca1d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40c994c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x40c99268"/>
        <function-ref name="getdt" scoped="" ref="0x40c98010"/>
        <function-ref name="gett0" scoped="" ref="0x40c99d58"/>
        <function-ref name="isRunning" scoped="" ref="0x40c99010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ca1638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40c997e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ca18b8"/>
        <function-ref name="stop" scoped="" ref="0x40ca1b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40c963a8" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40c963a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40c96590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c96670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40c94328" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40c94328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40c94510"/>
        <function-ref name="configure" scoped="" ref="0x40c945f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40c967b0" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40c967b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c96988"/>
        <function-ref name="requested" scoped="" ref="0x40c96a68"/>
        <function-ref name="granted" scoped="" ref="0x40c96b48"/>
        <function-ref name="isOwner" scoped="" ref="0x40c96c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40c96d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40c3fbc8" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40c3fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40c3fdb0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40c3fe90"/>
        <function-ref name="request" scoped="" ref="0x40c96010"/>
        <function-ref name="granted" scoped="" ref="0x40c960f0"/>
        <function-ref name="isOwner" scoped="" ref="0x40c961d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40c96e48" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40c96e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40c94050"/>
        <function-ref name="userId" scoped="" ref="0x40c94130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41015368" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41015368"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41015540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410156a0" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410156a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41015878"/>
        <function-ref name="isEmpty" scoped="" ref="0x41015958"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41015a38"/>
        <function-ref name="dequeue" scoped="" ref="0x41015b18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41013010" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41013010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410131f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410132d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41011010" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41011010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410111f8"/>
        <function-ref name="configure" scoped="" ref="0x410112d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41011438" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41011438"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41011610"/>
        <function-ref name="isEmpty" scoped="" ref="0x410116f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410117d0"/>
        <function-ref name="dequeue" scoped="" ref="0x410118b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41013418" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41013418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410135f0"/>
        <function-ref name="requested" scoped="" ref="0x410136d0"/>
        <function-ref name="granted" scoped="" ref="0x410137b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41013890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41013970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410119f0" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410119f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41011bc8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41011ca8"/>
        <function-ref name="led1On" scoped="" ref="0x41011d88"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41011e68"/>
        <function-ref name="led3Off" scoped="" ref="0x41010010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410100f0"/>
        <function-ref name="get" scoped="" ref="0x410101d0"/>
        <function-ref name="led1Off" scoped="" ref="0x410102b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41010390"/>
        <function-ref name="led3On" scoped="" ref="0x41010470"/>
        <function-ref name="led0On" scoped="" ref="0x41010550"/>
        <function-ref name="led2Off" scoped="" ref="0x41010630"/>
        <function-ref name="led2On" scoped="" ref="0x41010710"/>
        <function-ref name="set" scoped="" ref="0x41010870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41014810" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41014810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410149f8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41014ad8"/>
        <function-ref name="request" scoped="" ref="0x41014bb8"/>
        <function-ref name="granted" scoped="" ref="0x41014c98"/>
        <function-ref name="isOwner" scoped="" ref="0x41014d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41013ab0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41013ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41013c88"/>
        <function-ref name="userId" scoped="" ref="0x41013d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410109f0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Ms5607RawArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410109f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41010bc8"/>
        <function-ref name="runTask" scoped="" ref="0x41010ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c93b68" loc="36:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadTempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c93b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c921e0"/>
        <function-ref name="readDone" scoped="" ref="0x40c92448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40c92800" loc="37:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadTempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40c92800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c92e28"/>
        <function-ref name="readDone" scoped="" ref="0x40c91098"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40c90668" loc="36:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadPresClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40c90668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40c90ca0"/>
        <function-ref name="readDone" scoped="" ref="0x40c90f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40cba2d8" loc="37:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadPresClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40cba2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cba900"/>
        <function-ref name="readDone" scoped="" ref="0x40cbab58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x40cafdc8" loc="36:/opt/tinyos-2.x/tos/chips/ms5607/ReadRefClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadCalibClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x40cafdc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cb7448"/>
        <function-ref name="readDone" scoped="" ref="0x40cb77e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40cb7cb0" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/ReadRefClientP.nc">
      <component-ref qname="Ms5607RawArbiterP.ReadCalibClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40cb7cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40cae2e8"/>
        <function-ref name="readDone" scoped="" ref="0x40cae678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41021298" loc="25:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41021298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410218c0"/>
        <function-ref name="readDone" scoped="" ref="0x41021b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x41021ed0" loc="27:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x41021ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41020558"/>
        <function-ref name="readDone" scoped="" ref="0x410207b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41020a88" loc="28:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41020a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41020c60"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41020d40"/>
        <function-ref name="request" scoped="" ref="0x41020e20"/>
        <function-ref name="granted" scoped="" ref="0x41020f00"/>
        <function-ref name="isOwner" scoped="" ref="0x4101f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ff72e8" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ff72e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff7910"/>
        <function-ref name="readDone" scoped="" ref="0x40ff7ca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40ff6170" loc="42:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40ff6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40ff6798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x41027868" loc="27:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x41027868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41027e90"/>
        <function-ref name="readDone" scoped="" ref="0x41026240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x41028918" loc="25:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x41028918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41027010"/>
        <function-ref name="readDone" scoped="" ref="0x410273a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41026628" loc="28:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41026628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41026800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410268e0"/>
        <function-ref name="request" scoped="" ref="0x410269c0"/>
        <function-ref name="granted" scoped="" ref="0x41026aa0"/>
        <function-ref name="isOwner" scoped="" ref="0x41026b80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ff5260" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ff5260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff5888"/>
        <function-ref name="readDone" scoped="" ref="0x40ff5ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40ff5e88" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawPressureC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40ff5e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40ff44d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410580a0" loc="25:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410580a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410586c8"/>
        <function-ref name="readDone" scoped="" ref="0x41058920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x41058cd8" loc="27:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x41058cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41057350"/>
        <function-ref name="readDone" scoped="" ref="0x410575a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41057880" loc="28:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607RawPressureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41057880"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41057a58"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41057b38"/>
        <function-ref name="request" scoped="" ref="0x41057c18"/>
        <function-ref name="granted" scoped="" ref="0x41057cf8"/>
        <function-ref name="isOwner" scoped="" ref="0x41057dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRawPress" ref="0x40ff2878" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRawPress" scoped="" ref="0x40ff2878"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff2ea0"/>
        <function-ref name="readDone" scoped="" ref="0x40ff0110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40ff3010" loc="36:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40ff3010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff3638"/>
        <function-ref name="readDone" scoped="" ref="0x40ff3890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDt" ref="0x40ff3c38" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDt" scoped="" ref="0x40ff3c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40ff2278"/>
        <function-ref name="readDone" scoped="" ref="0x40ff24d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x40ff0530" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionPressP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionPressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x40ff0530"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff0b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadCalib" ref="0x40fee3b8" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalib" scoped="" ref="0x40fee3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fee9e0"/>
        <function-ref name="readDone" scoped="" ref="0x40feed70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40fed220" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40fed220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fed848"/>
        <function-ref name="readDone" scoped="" ref="0x40fedaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRawTemp" ref="0x40fef780" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRawTemp" scoped="" ref="0x40fef780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40fefda8"/>
        <function-ref name="readDone" scoped="" ref="0x40fee010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x40fedec0" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.PressureC.Ms5607PressureC.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x40fedec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41025558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d08da8" loc="36:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d08da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d1e3e0"/>
        <function-ref name="readDone" scoped="" ref="0x40d1e638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40d1e9e0" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607TemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40d1e9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40d1d048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4104ac90" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4104ac90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410482c8"/>
        <function-ref name="readDone" scoped="" ref="0x41048520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x410488c8" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x410488c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x41048ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41075b60" loc="25:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41075b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410741e0"/>
        <function-ref name="readDone" scoped="" ref="0x41074438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x410747f0" loc="27:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x410747f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41074e18"/>
        <function-ref name="readDone" scoped="" ref="0x41073088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41073360" loc="28:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607RawTemperatureC.ResourceReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41073360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41073538"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41073618"/>
        <function-ref name="request" scoped="" ref="0x410736f8"/>
        <function-ref name="granted" scoped="" ref="0x410737d8"/>
        <function-ref name="isOwner" scoped="" ref="0x410738b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410479e0" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410479e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41046048"/>
        <function-ref name="readDone" scoped="" ref="0x410463d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x41046890" loc="42:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x41046890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x41046eb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x4106d868" loc="27:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x4106d868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4106de90"/>
        <function-ref name="readDone" scoped="" ref="0x4106b240"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x4106e918" loc="25:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x4106e918"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4106d010"/>
        <function-ref name="readDone" scoped="" ref="0x4106d3a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x4106b628" loc="28:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4106b628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4106b800"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4106b8e0"/>
        <function-ref name="request" scoped="" ref="0x4106b9c0"/>
        <function-ref name="granted" scoped="" ref="0x4106baa0"/>
        <function-ref name="isOwner" scoped="" ref="0x4106bb80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadCalib" ref="0x41044610" loc="39:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadCalib" scoped="" ref="0x41044610"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41044c38"/>
        <function-ref name="readDone" scoped="" ref="0x4107c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4107c4a8" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4107c4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4107cad0"/>
        <function-ref name="readDone" scoped="" ref="0x4107cd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadRawTemp" ref="0x410459a0" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRawTemp" scoped="" ref="0x410459a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41044010"/>
        <function-ref name="readDone" scoped="" ref="0x41044268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Get" ref="0x4107b188" loc="41:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionDtP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionDtP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x4107b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4107b7c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4107a3c8" loc="36:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4107a3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="short" size="I:2" alignment="I:1">
            <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4107a9f0"/>
        <function-ref name="readDone" scoped="" ref="0x4107ac48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadDt" ref="0x41079010" loc="37:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadDt" scoped="" ref="0x41079010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="long" size="I:4" alignment="I:1">
            <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41079638"/>
        <function-ref name="readDone" scoped="" ref="0x41079890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Get" ref="0x41079cb0" loc="38:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607ConversionTempP.nc">
      <component-ref qname="UcminiSensorC.Temperature1C.Ms5607ConversionTempP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Get" scoped="" ref="0x41079cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Get"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410782f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d1dca0" loc="40:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d1dca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d1c2e8"/>
        <function-ref name="readDone" scoped="" ref="0x40d1c678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SetPrecision" ref="0x40d1cb30" loc="42:/opt/tinyos-2.x/tos/chips/ms5607/Ms5607CalibrationC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SetPrecision" scoped="" ref="0x40d1cb30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Set"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="set" scoped="" ref="0x40d1b1e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x410972d8" loc="27:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x410972d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41097900"/>
        <function-ref name="readDone" scoped="" ref="0x41097c90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadRef" ref="0x41099440" loc="25:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadRef" scoped="" ref="0x41099440"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadRef"/>
        <arguments>
          <type-tag size="I:12" alignment="I:1"><struct-ref ref="0x40448250"/>
            <typename><typedef-ref name="calibration_t" ref="0x40448418"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41099a68"/>
        <function-ref name="readDone" scoped="" ref="0x41099df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x410960a0" loc="28:/opt/tinyos-2.x/tos/chips/ms5607/ResourceReadRefC.nc">
      <component-ref qname="UcminiSensorC.Ms5607CalibrationC.ResourceReadRefC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410960a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41096278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41096358"/>
        <function-ref name="request" scoped="" ref="0x41096438"/>
        <function-ref name="granted" scoped="" ref="0x41096518"/>
        <function-ref name="isOwner" scoped="" ref="0x410965f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d1a5a8" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/TemperatureC.nc">
      <component-ref qname="UcminiSensorC.TemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d1a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d1abd0"/>
        <function-ref name="readDone" scoped="" ref="0x40d1ae28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x41090520" loc="39:/opt/tinyos-2.x/tos/chips/sht21/Sht21RawTemperatureC.nc">
      <component-ref qname="UcminiSensorC.TemperatureC.Sht21RawTemperatureC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x41090520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x41090b48"/>
        <function-ref name="readDone" scoped="" ref="0x41090da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadHumidity" ref="0x40d3d2f0" loc="39:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <component-ref qname="Sht21ArbitratedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadHumidity" scoped="" ref="0x40d3d2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3d918"/>
        <function-ref name="readDone" scoped="" ref="0x40d3db70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadTemperature" ref="0x40d3e290" loc="38:/opt/tinyos-2.x/tos/chips/sht21/Sht21ArbitratedC.nc">
      <component-ref qname="Sht21ArbitratedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadTemperature" scoped="" ref="0x40d3e290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3e8b8"/>
        <function-ref name="readDone" scoped="" ref="0x40d3eb10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40d391a0" loc="37:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40d391a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d397c8"/>
        <function-ref name="readDone" scoped="" ref="0x40d39a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40d3c450" loc="36:/opt/tinyos-2.x/tos/chips/sht21/Sht21C.nc">
      <component-ref qname="Sht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40d3c450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3ca78"/>
        <function-ref name="readDone" scoped="" ref="0x40d3ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalReadDone" ref="0x40d49d60" loc="153:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalReadDone" scoped="" ref="0x40d49d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d48010"/>
        <function-ref name="runTask" scoped="" ref="0x40d480f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startTimer" ref="0x40d422a0" loc="192:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startTimer" scoped="" ref="0x40d422a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40d42478"/>
        <function-ref name="runTask" scoped="" ref="0x40d42558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusPowerManager" ref="0x40d2d7f0" loc="43:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40d2d7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40d2d9c8"/>
        <function-ref name="requestPower" scoped="" ref="0x40d2daa8"/>
        <function-ref name="powerOff" scoped="" ref="0x40d2db88"/>
        <function-ref name="configure" scoped="" ref="0x40d2dc68"/>
        <function-ref name="releasePower" scoped="" ref="0x40d2dd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Humidity" ref="0x40d33010" loc="38:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Humidity" scoped="" ref="0x40d33010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d33638"/>
        <function-ref name="readDone" scoped="" ref="0x40d33890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40d2ded8" loc="44:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40d2ded8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40d2c0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CResource" ref="0x40d2d0a0" loc="42:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CResource" scoped="" ref="0x40d2d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d2d278"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d2d358"/>
        <function-ref name="request" scoped="" ref="0x40d2d438"/>
        <function-ref name="granted" scoped="" ref="0x40d2d518"/>
        <function-ref name="isOwner" scoped="" ref="0x40d2d5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Temperature" ref="0x40d372e0" loc="37:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Temperature" scoped="" ref="0x40d372e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d37908"/>
        <function-ref name="readDone" scoped="" ref="0x40d37b60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="I2CPacket" ref="0x40d33d00" loc="40:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40d33d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d32370"/>
        <function-ref name="writeDone" scoped="" ref="0x40d31630"/>
        <function-ref name="write" scoped="" ref="0x40d32990"/>
        <function-ref name="readDone" scoped="" ref="0x40d31010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x40d31d10" loc="41:/opt/tinyos-2.x/tos/chips/sht21/Sht21P.nc">
      <component-ref qname="Sht21P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d31d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d2e8a8"/>
        <function-ref name="fired" scoped="" ref="0x40d2faa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d2e268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d2e010"/>
        <function-ref name="getdt" scoped="" ref="0x40d2ed58"/>
        <function-ref name="gett0" scoped="" ref="0x40d2eb00"/>
        <function-ref name="isRunning" scoped="" ref="0x40d2fd00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d2f350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d2e588"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d2f5d0"/>
        <function-ref name="stop" scoped="" ref="0x40d2f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40d66330" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="Sht21C.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40d66330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x4047b928"/>
            <typename><typedef-ref name="TMilli" ref="0x4047baf0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40d65e38"/>
        <function-ref name="fired" scoped="" ref="0x40d650f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40d657f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x40d655a0"/>
        <function-ref name="getdt" scoped="" ref="0x40d64310"/>
        <function-ref name="gett0" scoped="" ref="0x40d640b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40d65348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40d66958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40d65b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40d66bd8"/>
        <function-ref name="stop" scoped="" ref="0x40d66e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusPowerManager" ref="0x40d5eea8" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusPowerManager" scoped="" ref="0x40d5eea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusPowerManager"/>
      </instance>
      <interface-functions>
        <function-ref name="powerOn" scoped="" ref="0x40d5d0c0"/>
        <function-ref name="requestPower" scoped="" ref="0x40d5d1a0"/>
        <function-ref name="powerOff" scoped="" ref="0x40d5d280"/>
        <function-ref name="configure" scoped="" ref="0x40d5d360"/>
        <function-ref name="releasePower" scoped="" ref="0x40d5d440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d5e758" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d5e758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d5e930"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d5ea10"/>
        <function-ref name="request" scoped="" ref="0x40d5eaf0"/>
        <function-ref name="granted" scoped="" ref="0x40d5ebd0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d5ecb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40d637f8" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HplSht21C.nc">
      <component-ref qname="HplSht21C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40d637f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d63e40"/>
        <function-ref name="writeDone" scoped="" ref="0x40d5e128"/>
        <function-ref name="write" scoped="" ref="0x40d5f498"/>
        <function-ref name="readDone" scoped="" ref="0x40d5fab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d5dd08" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d5dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d5dee0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d5c010"/>
        <function-ref name="request" scoped="" ref="0x40d5c0f0"/>
        <function-ref name="granted" scoped="" ref="0x40d5c1d0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d5c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="I2CPacket" ref="0x40d5c4a0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2CMasterC.nc">
      <component-ref qname="HplSht21C.I2CBus"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="I2CPacket" scoped="" ref="0x40d5c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="I2CPacket"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref ref="0x40b1e858"/>
            <typename><typedef-ref name="TI2CBasicAddr" ref="0x40b1e9c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d5cae8"/>
        <function-ref name="writeDone" scoped="" ref="0x40d5bd68"/>
        <function-ref name="write" scoped="" ref="0x40d5b128"/>
        <function-ref name="readDone" scoped="" ref="0x40d5b748"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d3a800" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedTemp"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d3a800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d3ae38"/>
        <function-ref name="readDone" scoped="" ref="0x40d610b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40d61518" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedTemp"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40d61518"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d61b50"/>
        <function-ref name="readDone" scoped="" ref="0x40d61db8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d85160" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedTemp"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d85160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d85348"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d85428"/>
        <function-ref name="request" scoped="" ref="0x40d85508"/>
        <function-ref name="granted" scoped="" ref="0x40d855e8"/>
        <function-ref name="isOwner" scoped="" ref="0x40d856c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d82010" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d82010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d821f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d822d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d81010" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d81010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d811f8"/>
        <function-ref name="configure" scoped="" ref="0x40d812d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40d82418" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d82418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d825f0"/>
        <function-ref name="requested" scoped="" ref="0x40d826d0"/>
        <function-ref name="granted" scoped="" ref="0x40d827b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d82890"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d82970"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d84838" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d84838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d84a20"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d84b00"/>
        <function-ref name="request" scoped="" ref="0x40d84be0"/>
        <function-ref name="granted" scoped="" ref="0x40d84cc0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d84da0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d82ab0" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d82ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d82c88"/>
        <function-ref name="userId" scoped="" ref="0x40d82d68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41082668" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41082668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41082840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410829a0" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410829a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41082b78"/>
        <function-ref name="isEmpty" scoped="" ref="0x41082c58"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41082d38"/>
        <function-ref name="dequeue" scoped="" ref="0x41082e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410803a8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410803a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41080590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41080670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4107f338" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4107f338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4107f520"/>
        <function-ref name="configure" scoped="" ref="0x4107f600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x4107f760" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x4107f760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x4107f938"/>
        <function-ref name="isEmpty" scoped="" ref="0x4107fa18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x4107faf8"/>
        <function-ref name="dequeue" scoped="" ref="0x4107fbd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x410807b0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410807b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41080988"/>
        <function-ref name="requested" scoped="" ref="0x41080a68"/>
        <function-ref name="granted" scoped="" ref="0x41080b48"/>
        <function-ref name="isOwner" scoped="" ref="0x41080c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41080d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4107fd18" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4107fd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4107fef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4107d010"/>
        <function-ref name="led1On" scoped="" ref="0x4107d0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4107d1d0"/>
        <function-ref name="led3Off" scoped="" ref="0x4107d2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4107d390"/>
        <function-ref name="get" scoped="" ref="0x4107d470"/>
        <function-ref name="led1Off" scoped="" ref="0x4107d550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4107d630"/>
        <function-ref name="led3On" scoped="" ref="0x4107d710"/>
        <function-ref name="led0On" scoped="" ref="0x4107d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x4107d8d0"/>
        <function-ref name="led2On" scoped="" ref="0x4107d9b0"/>
        <function-ref name="set" scoped="" ref="0x4107db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41081bc0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41081bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41081da8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41081e88"/>
        <function-ref name="request" scoped="" ref="0x41080010"/>
        <function-ref name="granted" scoped="" ref="0x410800f0"/>
        <function-ref name="isOwner" scoped="" ref="0x410801d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41080e48" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41080e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4107f050"/>
        <function-ref name="userId" scoped="" ref="0x4107f130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x4107dc90" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.TempArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x4107dc90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4107de68"/>
        <function-ref name="runTask" scoped="" ref="0x410b7010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d80480" loc="36:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.TempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d80480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d80ab8"/>
        <function-ref name="readDone" scoped="" ref="0x40d80d20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40d7f110" loc="37:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.TempClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40d7f110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d7f738"/>
        <function-ref name="readDone" scoped="" ref="0x40d7f990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d7c468" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedHumi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d7c468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d7caa0"/>
        <function-ref name="readDone" scoped="" ref="0x40d7cd08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x40d7b188" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedHumi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x40d7b188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d7b7c0"/>
        <function-ref name="readDone" scoped="" ref="0x40d7ba28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d7bda8" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="Sht21ArbitratedC.ArbitratedHumi"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d7bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d7a010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d7a0f0"/>
        <function-ref name="request" scoped="" ref="0x40d7a1d0"/>
        <function-ref name="granted" scoped="" ref="0x40d7a2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40d7a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d79c40" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d79c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d79e28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d79f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d77bb8" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d77bb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d77da0"/>
        <function-ref name="configure" scoped="" ref="0x40d77e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x40d77070" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x40d77070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d77248"/>
        <function-ref name="requested" scoped="" ref="0x40d77328"/>
        <function-ref name="granted" scoped="" ref="0x40d77408"/>
        <function-ref name="isOwner" scoped="" ref="0x40d774e8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d775c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d79500" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d79500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d796e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d797c8"/>
        <function-ref name="request" scoped="" ref="0x40d798a8"/>
        <function-ref name="granted" scoped="" ref="0x40d79988"/>
        <function-ref name="isOwner" scoped="" ref="0x40d79a68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d77708" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d77708"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d778e0"/>
        <function-ref name="userId" scoped="" ref="0x40d779c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410d5cf0" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410d5cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410d5ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x410d3050" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x410d3050"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410d3228"/>
        <function-ref name="isEmpty" scoped="" ref="0x410d3308"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410d33e8"/>
        <function-ref name="dequeue" scoped="" ref="0x410d34c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x410d28f8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x410d28f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x410d2ae0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d2bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x410d18b0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x410d18b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x410d1a98"/>
        <function-ref name="configure" scoped="" ref="0x410d1b78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x410d1cd8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x410d1cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x410d1eb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x410d0010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x410d00f0"/>
        <function-ref name="dequeue" scoped="" ref="0x410d01d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x410d2d00" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x410d2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d2ed8"/>
        <function-ref name="requested" scoped="" ref="0x410d1010"/>
        <function-ref name="granted" scoped="" ref="0x410d10f0"/>
        <function-ref name="isOwner" scoped="" ref="0x410d11d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x410d12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410d0310" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410d0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410d04e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410d05c8"/>
        <function-ref name="led1On" scoped="" ref="0x410d06a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410d0788"/>
        <function-ref name="led3Off" scoped="" ref="0x410d0868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410d0948"/>
        <function-ref name="get" scoped="" ref="0x410d0a28"/>
        <function-ref name="led1Off" scoped="" ref="0x410d0b08"/>
        <function-ref name="led3Toggle" scoped="" ref="0x410d0be8"/>
        <function-ref name="led3On" scoped="" ref="0x410d0cc8"/>
        <function-ref name="led0On" scoped="" ref="0x410d0da8"/>
        <function-ref name="led2Off" scoped="" ref="0x410d0e88"/>
        <function-ref name="led2On" scoped="" ref="0x410cf010"/>
        <function-ref name="set" scoped="" ref="0x410cf170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x410d21b8" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x410d21b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x410d23a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x410d2480"/>
        <function-ref name="request" scoped="" ref="0x410d2560"/>
        <function-ref name="granted" scoped="" ref="0x410d2640"/>
        <function-ref name="isOwner" scoped="" ref="0x410d2720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x410d13f0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x410d13f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x410d15c8"/>
        <function-ref name="userId" scoped="" ref="0x410d16a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x410cf2f0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x410cf2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x410cf4c8"/>
        <function-ref name="runTask" scoped="" ref="0x410cf5a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d750a8" loc="36:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d750a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d756e0"/>
        <function-ref name="readDone" scoped="" ref="0x40d75948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActualRead" ref="0x40d75d00" loc="37:/opt/tinyos-2.x/tos/system/ReadClientP.nc">
      <component-ref qname="Sht21ArbitratedC.HumiClient"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActualRead" scoped="" ref="0x40d75d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d74350"/>
        <function-ref name="readDone" scoped="" ref="0x40d745a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40d165f8" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/chips/sht21/HumidityC.nc">
      <component-ref qname="UcminiSensorC.HumidityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40d165f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40d16c20"/>
        <function-ref name="readDone" scoped="" ref="0x40d16e78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x410f2010" loc="38:/opt/tinyos-2.x/tos/chips/sht21/Sht21RawHumidityC.nc">
      <component-ref qname="UcminiSensorC.HumidityC.Sht21RawHumidityC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x410f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x410f2638"/>
        <function-ref name="readDone" scoped="" ref="0x410f2890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x40d71f08" loc="39:/opt/tinyos-2.x/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40d71f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40d960f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40d96358" loc="40:/opt/tinyos-2.x/tos/lib/serial/SerialStartP.nc">
      <component-ref qname="SerialStartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40d96358"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40d96530"/>
        <function-ref name="stopDone" scoped="" ref="0x40d96610"/>
        <function-ref name="start" scoped="" ref="0x40d966f0"/>
        <function-ref name="stop" scoped="" ref="0x40d967d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d97760" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d97760"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d97938"/>
        <function-ref name="getPayload" scoped="" ref="0x40d97a18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d97af8"/>
        <function-ref name="cancel" scoped="" ref="0x40d97bd8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d97cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d97df8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d97df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40de1010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40de10f0"/>
        <function-ref name="getPayload" scoped="" ref="0x40de11d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40de12b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40de1390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40de14d0" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40de14d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40de16a8"/>
        <function-ref name="source" scoped="" ref="0x40de1788"/>
        <function-ref name="address" scoped="" ref="0x40de1868"/>
        <function-ref name="destination" scoped="" ref="0x40de1948"/>
        <function-ref name="setSource" scoped="" ref="0x40de1a28"/>
        <function-ref name="setDestination" scoped="" ref="0x40de1b08"/>
        <function-ref name="type" scoped="" ref="0x40de1be8"/>
        <function-ref name="setType" scoped="" ref="0x40de1cc8"/>
        <function-ref name="isForMe" scoped="" ref="0x40de1da8"/>
        <function-ref name="setGroup" scoped="" ref="0x40de1e88"/>
        <function-ref name="localGroup" scoped="" ref="0x40de0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40de0170" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.MeasSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40de0170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40de0348"/>
        <function-ref name="noAck" scoped="" ref="0x40de0428"/>
        <function-ref name="wasAcked" scoped="" ref="0x40de0508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x410ee420" loc="44:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.MeasSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x410ee420"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410ee5f8"/>
        <function-ref name="getPayload" scoped="" ref="0x410ee6d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410ee7b8"/>
        <function-ref name="cancel" scoped="" ref="0x410ee898"/>
        <function-ref name="sendDone" scoped="" ref="0x410ee978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x410eeae8" loc="46:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.MeasSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x410eeae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410eecc0"/>
        <function-ref name="getPayload" scoped="" ref="0x410eeda0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410eee80"/>
        <function-ref name="cancel" scoped="" ref="0x410ec010"/>
        <function-ref name="sendDone" scoped="" ref="0x410ec0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410ec230" loc="47:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.MeasSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410ec230"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410ec408"/>
        <function-ref name="source" scoped="" ref="0x410ec4e8"/>
        <function-ref name="address" scoped="" ref="0x410ec5c8"/>
        <function-ref name="destination" scoped="" ref="0x410ec6a8"/>
        <function-ref name="setSource" scoped="" ref="0x410ec788"/>
        <function-ref name="setDestination" scoped="" ref="0x410ec868"/>
        <function-ref name="type" scoped="" ref="0x410ec948"/>
        <function-ref name="setType" scoped="" ref="0x410eca28"/>
        <function-ref name="isForMe" scoped="" ref="0x410ecb08"/>
        <function-ref name="setGroup" scoped="" ref="0x410ecbe8"/>
        <function-ref name="localGroup" scoped="" ref="0x410eccc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40db3e48" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialAMQueueP.nc">
      <component-ref qname="SerialAMQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40db3e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db0050"/>
        <function-ref name="getPayload" scoped="" ref="0x40db0130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db0210"/>
        <function-ref name="cancel" scoped="" ref="0x40db02f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40db03d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMSend" ref="0x40db7598" loc="48:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40db7598"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db7780"/>
        <function-ref name="getPayload" scoped="" ref="0x40db7860"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db7940"/>
        <function-ref name="cancel" scoped="" ref="0x40db7a20"/>
        <function-ref name="sendDone" scoped="" ref="0x40db7b00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40daeda0" loc="46:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40daeda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40db7010"/>
        <function-ref name="getPayload" scoped="" ref="0x40db70f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db71d0"/>
        <function-ref name="cancel" scoped="" ref="0x40db72b0"/>
        <function-ref name="sendDone" scoped="" ref="0x40db7390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Packet" ref="0x40db6850" loc="50:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40db6850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db6a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40db6b08"/>
        <function-ref name="getPayload" scoped="" ref="0x40db6be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db6cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db6da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="errorTask" ref="0x40db6f28" loc="169:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="errorTask" scoped="" ref="0x40db6f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40de5110"/>
        <function-ref name="runTask" scoped="" ref="0x40de51f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CancelTask" ref="0x40de5370" loc="126:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CancelTask" scoped="" ref="0x40de5370"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40de5548"/>
        <function-ref name="runTask" scoped="" ref="0x40de5628"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x40db7c40" loc="49:/opt/tinyos-2.x/tos/system/AMQueueImplP.nc">
      <component-ref qname="SerialAMQueueP.AMQueueImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40db7c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40db7e18"/>
        <function-ref name="source" scoped="" ref="0x40db7ef8"/>
        <function-ref name="address" scoped="" ref="0x40db6010"/>
        <function-ref name="destination" scoped="" ref="0x40db60f0"/>
        <function-ref name="setSource" scoped="" ref="0x40db61d0"/>
        <function-ref name="setDestination" scoped="" ref="0x40db62b0"/>
        <function-ref name="type" scoped="" ref="0x40db6390"/>
        <function-ref name="setType" scoped="" ref="0x40db6470"/>
        <function-ref name="isForMe" scoped="" ref="0x40db6550"/>
        <function-ref name="setGroup" scoped="" ref="0x40db6630"/>
        <function-ref name="localGroup" scoped="" ref="0x40db6710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40dde7a8" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40dde7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dde980"/>
        <function-ref name="getPayload" scoped="" ref="0x40ddea60"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ddeb40"/>
        <function-ref name="cancel" scoped="" ref="0x40ddec20"/>
        <function-ref name="sendDone" scoped="" ref="0x40dded00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ddee40" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ddee40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ddd050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ddd130"/>
        <function-ref name="getPayload" scoped="" ref="0x40ddd210"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ddd2f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ddd3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ddd510" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ddd510"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ddd6e8"/>
        <function-ref name="source" scoped="" ref="0x40ddd7c8"/>
        <function-ref name="address" scoped="" ref="0x40ddd8a8"/>
        <function-ref name="destination" scoped="" ref="0x40ddd988"/>
        <function-ref name="setSource" scoped="" ref="0x40ddda68"/>
        <function-ref name="setDestination" scoped="" ref="0x40dddb48"/>
        <function-ref name="type" scoped="" ref="0x40dddc28"/>
        <function-ref name="setType" scoped="" ref="0x40dddd08"/>
        <function-ref name="isForMe" scoped="" ref="0x40dddde8"/>
        <function-ref name="setGroup" scoped="" ref="0x40dddec8"/>
        <function-ref name="localGroup" scoped="" ref="0x40ddc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Acks" ref="0x40ddc170" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialAMSenderC.nc">
      <component-ref qname="UcminiSensorC.CalibSend"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Acks" scoped="" ref="0x40ddc170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ddc348"/>
        <function-ref name="noAck" scoped="" ref="0x40ddc428"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ddc508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x411003b0" loc="44:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.CalibSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x411003b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41100588"/>
        <function-ref name="getPayload" scoped="" ref="0x41100668"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41100748"/>
        <function-ref name="cancel" scoped="" ref="0x41100828"/>
        <function-ref name="sendDone" scoped="" ref="0x41100908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x41100a78" loc="46:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.CalibSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41100a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41100c50"/>
        <function-ref name="getPayload" scoped="" ref="0x41100d30"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41100e10"/>
        <function-ref name="cancel" scoped="" ref="0x41100ef0"/>
        <function-ref name="sendDone" scoped="" ref="0x410ff010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AMPacket" ref="0x410ff150" loc="47:/opt/tinyos-2.x/tos/system/AMQueueEntryP.nc">
      <component-ref qname="UcminiSensorC.CalibSend.AMQueueEntryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x410ff150"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x410ff328"/>
        <function-ref name="source" scoped="" ref="0x410ff408"/>
        <function-ref name="address" scoped="" ref="0x410ff4e8"/>
        <function-ref name="destination" scoped="" ref="0x410ff5c8"/>
        <function-ref name="setSource" scoped="" ref="0x410ff6a8"/>
        <function-ref name="setDestination" scoped="" ref="0x410ff788"/>
        <function-ref name="type" scoped="" ref="0x410ff868"/>
        <function-ref name="setType" scoped="" ref="0x410ff948"/>
        <function-ref name="isForMe" scoped="" ref="0x410ffa28"/>
        <function-ref name="setGroup" scoped="" ref="0x410ffb08"/>
        <function-ref name="localGroup" scoped="" ref="0x410ffbe8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40ddaef8" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="UcminiSensorC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40ddaef8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40dd90e0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40dd91c0"/>
        <function-ref name="getPayload" scoped="" ref="0x40dd92a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40dd9380"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40dd9460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ddabe0" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="UcminiSensorC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ddabe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ddadb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40dd95a0" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialAMReceiverC.nc">
      <component-ref qname="UcminiSensorC.SerialAMReceiverC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40dd95a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40dd9778"/>
        <function-ref name="source" scoped="" ref="0x40dd9858"/>
        <function-ref name="address" scoped="" ref="0x40dd9938"/>
        <function-ref name="destination" scoped="" ref="0x40dd9a18"/>
        <function-ref name="setSource" scoped="" ref="0x40dd9af8"/>
        <function-ref name="setDestination" scoped="" ref="0x40dd9bd8"/>
        <function-ref name="type" scoped="" ref="0x40dd9cb8"/>
        <function-ref name="setType" scoped="" ref="0x40dd9d98"/>
        <function-ref name="isForMe" scoped="" ref="0x40dd9e78"/>
        <function-ref name="setGroup" scoped="" ref="0x40dd6010"/>
        <function-ref name="localGroup" scoped="" ref="0x40dd60f0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4049eaa0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4049eaa0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x404a8250" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x404ab0c8" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x404aa220" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404abec0" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404aa0c0" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x404aba18" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x404a8bc8" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x404a8698" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x404ab558" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x404ac168" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404ac010" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x404aac08" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x404aa8c0" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x404aaaa8" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x404ac800" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x404ac6a8" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404accd0" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40498c40" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x404986e0" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x404988f8" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40498ad8" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404a1a88" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a1728" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404a1908" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404a11c8" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40496b80" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40496a28" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404a0898" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a0540" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x404a0738" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x40450ef8" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x4046b8d8" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4046b780" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x404a52e0" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a5188" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x404a3370" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a3010" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404a31f0" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x404a49a8" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x404a4010" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x404a5c00" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404a5de0" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4044ca20" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4044ca20"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x4044ced0" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x404556b8" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4044ca20"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40455388" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x40455558" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4044ca20"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4046cdd0" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
              <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4046c888" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4046ca68" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4046cc48" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4043bbc0" loc="63:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4043a038" loc="69:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4043a4b8" loc="74:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x4043ad28" loc="85:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x404412f8" loc="113:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40439a38" loc="102:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40441be8" loc="134:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x4043a8e0" loc="79:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40441740" loc="119:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40439eb8" loc="108:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4043b798" loc="58:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404395f0" loc="96:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404391c8" loc="91:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40440380" loc="149:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40440228" loc="149:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadRef" loc="50:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
        <short>&#10; The ReadRef interface is intended for split-phase low-rate or&#10; high-latency reading of large values.</short>
        <long>&#10; The ReadRef interface is intended for split-phase low-rate or&#10; high-latency reading of large values. The type of the value is&#10; given as a template argument. When a value is too large to be&#10; comfortably passed on the stack, the caller should allocate space&#10; for the value and pass the pointer to read(). When the readDone()&#10; comes back, the space will be filled with the new value.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x4045a998" loc="50:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
          <interfacedef-ref qname="ReadRef"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045a998"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40457010" loc="58:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @param 'val_t* ONE val' a pointer to space that will be filled by the value&#10;&#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadRef"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045a998"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4045ae70" loc="58:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045a998"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40457b08" loc="67:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read(). The returned pointer will&#10; be the same as the original pointer passed to read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param 'val_t* ONE val' a pointer to the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadRef"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045a998"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x404577b8" loc="67:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x404579a8" loc="67:/opt/tinyos-2.x/tos/interfaces/ReadRef.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x4045a998"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DiagMsg" loc="43:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <short>&#10; The DiagMsg interface allows messages to be sent back to the base station&#10; containing several values and their type information, like in &#10; &#60;code>printf(...)&#60;/code>.</short>
        <long>&#10; The DiagMsg interface allows messages to be sent back to the base station&#10; containing several values and their type information, like in &#10; &#60;code>printf(...)&#60;/code>. The base station must be connected to a PC using &#10; a serial cable. On the PC a Java application (net.tinyos.util.DiagMsg) &#10; decodes the message and displays its content using the correct type &#10; information. See the implementation for the format of the message.&#10;</long>
      </documentation>
      <function command="" provided="0" name="int32s" ref="0x40468270" loc="81:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
                <type-int cname="long" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40469f00" loc="81:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
                <type-int cname="long" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40468110" loc="81:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="str" ref="0x4046e530" loc="92:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; This is a shorthand method for &#60;code>chrs&#60;/code>&#10;</short>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4046e3d8" loc="92:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="send" ref="0x4046e918" loc="97:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Initiates the sending of the recorded message.</short>
          <long>&#10; Initiates the sending of the recorded message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="int16" ref="0x4045dd38" loc="58:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4045dbe0" loc="58:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="short" size="I:2" alignment="I:1">
              <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex32" ref="0x404632d0" loc="65:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40463178" loc="65:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int32" ref="0x4045bd40" loc="61:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4045bbe8" loc="61:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="long" size="I:4" alignment="I:1">
              <typename><typedef-ref name="int32_t" ref="0x40212500"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="chr" ref="0x40463d00" loc="67:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40463ba8" loc="67:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint32s" ref="0x404689e8" loc="82:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404686a8" loc="82:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40468888" loc="82:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="real" ref="0x404637b0" loc="66:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40463658" loc="66:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-float cname="float" size="I:4" alignment="I:1"></type-float>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex8" ref="0x4045d808" loc="57:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4045d6b0" loc="57:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint16" ref="0x4045b2d0" loc="59:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4045b178" loc="59:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint64s" ref="0x40465060" loc="85:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x40212ea8"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40466d08" loc="85:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint64_t" ref="0x40212ea8"/></typename>
                <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40466ee8" loc="85:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint32" ref="0x40464d50" loc="64:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40464bf8" loc="64:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint8" ref="0x4045d2e0" loc="56:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4045d188" loc="56:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex8s" ref="0x40460488" loc="77:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40460148" loc="77:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40460328" loc="77:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="record" ref="0x40459708" loc="49:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Initiates the recording of a new DiagMsg.</short>
          <long>&#10; Initiates the recording of a new DiagMsg. It returns FALSE if&#10; the component is busy recording or sending another message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="uint8s" ref="0x40462cd8" loc="76:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40462998" loc="76:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40462b78" loc="76:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reals" ref="0x40465870" loc="86:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-float cname="float" size="I:4" alignment="I:1"></type-float>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40465530" loc="86:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-float cname="float" size="I:4" alignment="I:1"></type-float>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40465710" loc="86:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int64" ref="0x404642c0" loc="62:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="long long" size="I:8" alignment="I:1">
              <typename><typedef-ref name="int64_t" ref="0x40212b60"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40464168" loc="62:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="long long" size="I:8" alignment="I:1">
              <typename><typedef-ref name="int64_t" ref="0x40212b60"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint16s" ref="0x40469370" loc="79:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40469030" loc="79:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40469210" loc="79:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int64s" ref="0x404668d0" loc="84:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int64_t" ref="0x40212b60"/></typename>
                <type-int cname="long long" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40466590" loc="84:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int64_t" ref="0x40212b60"/></typename>
                <type-int cname="long long" size="I:8" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40466770" loc="84:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex16" ref="0x4045b810" loc="60:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4045b6b8" loc="60:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="uint64" ref="0x40464808" loc="63:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x40212ea8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404646b0" loc="63:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned long long" unsigned="" size="I:8" alignment="I:1">
              <typename><typedef-ref name="uint64_t" ref="0x40212ea8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int16s" ref="0x40460be8" loc="78:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
                <type-int cname="short" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404608a8" loc="78:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int16_t" ref="0x40039e80"/></typename>
                <type-int cname="short" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40460a88" loc="78:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int8" ref="0x40459ce8" loc="55:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Adds a new value to the end of the message.</short>
          <long>&#10; Adds a new value to the end of the message. If the message &#10; cannot hold more information, then the new value is simply dropped.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40039630"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40459b90" loc="55:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="signed char" size="I:1" alignment="I:1">
              <typename><typedef-ref name="int8_t" ref="0x40039630"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex16s" ref="0x40469ae0" loc="80:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x404697a0" loc="80:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
                <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40469980" loc="80:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hex32s" ref="0x40466170" loc="83:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40468e18" loc="83:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
                <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40466010" loc="83:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="chrs" ref="0x4046e010" loc="87:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40465c38" loc="87:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40465e18" loc="87:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="int8s" ref="0x40462480" loc="75:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
          <short>&#10; Adds an array of values to the end of the message.</short>
          <long>&#10; Adds an array of values to the end of the message. &#10; The maximum length of the array is &#60;code>15&#60;/code>.&#10; If the message cannot hold all elements of the array,&#10; then no value is stored.&#10;</long>
        </documentation>
        <interfacedef-ref qname="DiagMsg"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int8_t" ref="0x40039630"/></typename>
                <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40462140" loc="75:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="int8_t" ref="0x40039630"/></typename>
                <type-int cname="signed char" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40462320" loc="75:/opt/tinyos-2.x/tos/lib/diagmsg/DiagMsg.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x404c9938" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x404cda38" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x404cd8e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x404ce0c8" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x404ce700" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404ce5a8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x404cedc8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x404cec70" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40212848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x404cd338" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x404fd308" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x404fd6f0" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40501b68" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x404fdec0" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40501f28" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x404fdac8" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40501428" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x405017b8" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40595ca0" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40595ca0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40595e08" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x4058e138" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40590d98" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x4058fac8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x4058f778" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          </variable>
          <variable name="dt" ref="0x4058f968" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x4058f270" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x4058e5c8" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40590458" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40590300" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40595e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40590938" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x405ace80" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ace80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405a7568" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405a7410" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405a8090" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405a9c98" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x405a7d40" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a9390" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ace80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405a8448" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405a7978" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405a7010" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a98d0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ace80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405a9778" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405ace80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405a8810" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405a8bc0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x405a3e38" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a3e38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405ad568" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405ad410" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4059e090" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405a0370" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a3e38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4059e448" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405ad978" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x405a0c98" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405ad010" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405a08b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a3e38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405a0758" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405a3e38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4059e810" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4059ebc0" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x405c8c08" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c8c08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405d22b8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405d2160" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x405d5e20" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405d5a40" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405d5138" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c8c08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x405d41f0" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405d26c8" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x405d4d48" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x405d5678" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c8c08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x405d5520" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405c8c08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405d45b8" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405d4968" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40433350" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4040f470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4035ae88" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40420a98" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4063c578" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4063c578"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4063c6e0" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063c6e0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x4063cbc8" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4063c6e0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40639638" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40639138" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40639a38" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4035b888" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4035bda0" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x406e54d0" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x406e5010" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x406e8a48" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x406e8550" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x406e7010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x406e35c8" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406e35c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x406e3a98" loc="58:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x406e0340" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406e35c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x406e0010" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x406e01e0" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x406e35c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x406f0538" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x406f1c00" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x406f1600" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x406f00c8" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x406f0c30" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x406fb5c8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406edd90" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x406fb010" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x406fb238" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x406fb458" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406fa930" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406fbee8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x406fa0f0" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x406fa2f8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x406fa550" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x406fa7b8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x406eb7f0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x406eb010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x406eb238" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x406eb460" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x406eb680" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406e98e8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406e9360" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406e9010" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x406e9200" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40701b70" loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAdlarOn" ref="0x40706d98" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns ADLAR (ADC left adjust result) status&#10; </short>
          <long>&#10; Returns ADLAR (ADC left adjust result) status&#10; @returns TRUE if ADLAR is on.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x406ff010" loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40700e78" loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40700010" loc="148:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x406f7e90" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the ADC channel&#10; </short>
          <long>&#10; Sets the ADC channel&#10; @param mux New channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mux" ref="0x406f7d38" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40704c40" loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdlar" ref="0x407068f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; </short>
          <long>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; @param adlarOn TRUE turns on ADLAR, FALSE turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adlarOn" ref="0x40706798" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x407034c0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40700928" loc="159:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x406ff4b8" loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40703070" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRef" ref="0x407057e8" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current reference voltage&#10; </short>
          <long>&#10; Returns the current reference voltage&#10; @returns the current reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40703918" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40703dc8" loc="125:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x407012a8" loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40700480" loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40706330" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current ADC channel&#10; </short>
          <long>&#10; Returns the current ADC channel&#10; @return Current channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40704330" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40423658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40423a00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x407041d8" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40423658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40423a00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRef" ref="0x40705380" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the reference voltage&#10; </short>
          <long>&#10; Sets the reference voltage&#10; @param ref New reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ref" ref="0x40705228" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40705ce0" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40423658"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40423a00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40701770" loc="136:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407047e0" loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x406ffc08" loc="182:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x406ffab0" loc="182:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x406f8e88" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406f53e0" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4074a458" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4074aa30" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x4075e1a8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x4075eb90" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x4074cc40" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x4075e6b8" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x4075c1a8" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x4075b4e8" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x4075b9e8" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x40754840" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407581f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407546e8" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407581f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407554c8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x40755b88" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407581f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40755a30" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407581f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x40754158" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x407581f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x4079e4d8" loc="62:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x407bb4c0" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x407bb4c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x407bb628" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407bb628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x407bbc40" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407bb628"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x407bbae8" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x407bb628"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x408d4358" loc="68:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408d8ea8" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x408d8a98" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x408d8530" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x408cc3f0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x408cc010" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x408e7010" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x408e7420" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x408cc7a8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x408e7d90" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x408e7c38" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x408ccb78" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x408e61c8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x408e7840" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x408ff738" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408ff5e0" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x408fe730" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x408fe5d8" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40903ee8" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x408ffc48" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4090c9d8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4090c880" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x4091b4f8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4091b3a0" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x4091c010" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4091be28" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40905c50" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404848f8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40905af8" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x409093a8" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40909250" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x4090a2f8" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x4090a990" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4090a838" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40907cf8" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40907990" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40907b98" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40907010" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40909c28" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40909e30" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x40484b58"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x409045f0" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40904498" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x40905170" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40904df8" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x40905010" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404846a0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40906a90" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40906938" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4091f8e8" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404848f8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4091f588" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4091f788" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404848f8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x409201a8" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404848f8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40913488" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40913148" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40913328" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4092d190" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4092fd78" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4092d010" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4092f818" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40930168" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40930010" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40930e00" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40930aa8" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40930ca0" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x409513a0" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40951010" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40951240" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x409530c8" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40953998" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40953620" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:47" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4049a4a0"/>
                <typename><typedef-ref name="message_t" ref="0x40498248"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40953838" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4096e4d0" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4096e998" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x40976b60" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x40976728" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x40973010" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x40973c70" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x40972d60" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40972c08" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x409721a8" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x40973740" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409735e8" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x40970278" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x40972708" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40978d98" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x40977488" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40978788" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40978630" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x40977bc0" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40977a68" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x4097ad30" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x409756c8" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40975570" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x40975d60" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x40975c08" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a22010" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a25bf8" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a25de8" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40a1f410" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a1f2b8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a1fc18" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a1f8c8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a1fab8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40a20850" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40a1daa8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a1d558" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a1d748" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a1d940" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40a20dd8" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a22e70" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a22920" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a22b10" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a22d08" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a2d2b8" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a2d160" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a2db50" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a2d7e8" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40a2d9f0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40a42210" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40a439b0" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40a407e0" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a40688" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40a42ec8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40a43138" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40a43578" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40a43df0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40a42610" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40a42b18" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40a429c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40a402b0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40357010" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40357918" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40357450" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusPowerManager" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
      <function event="" provided="0" name="powerOn" ref="0x40b331f0" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed.</short>
          <long>&#10; This event is called when the bus is powered on and the maximum &#10; specified startup time has elapsed. Implementations should&#10; initialize the chip or go into power down mode.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requestPower" ref="0x40b34888" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Requests to power up this bus.</short>
          <long>&#10; Requests to power up this bus. The bus might be already powered&#10; up, in which case the powerOn event will not come.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="powerOff" ref="0x40b336c8" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.</short>
          <long>&#10; This event is called when there are no outstanding power requests&#10; and the keepalive timeout value has expired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40b343a0" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Sets the startup and keepalive timeout values in milliseconds.</short>
          <long>&#10; Sets the startup and keepalive timeout values in milliseconds.&#10; Only the largest numbers are remembered, as the bus might not&#10; be operational if one of the chips on it is not operational.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="startup" ref="0x40b34010" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="keepalive" ref="0x40b34240" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releasePower" ref="0x40b34d08" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/BusPowerManager.nc">
          <short>&#10; Releases the power up request.</short>
          <long>&#10; Releases the power up request. You must call this command exactly&#10; the same number of times as you have called requestPower. If other&#10; chips still want to keep the power (e.g. a measurement is in&#10; progress), then powerOff will not be called.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusPowerManager"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="I2CPacket" loc="59:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
      <parameters>
        <typedef name="addr_size" ref="0x40b1b5a0" loc="59:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <interfacedef-ref qname="I2CPacket"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="addr_size" scoped="" ref="0x40b1b5a0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40b1a268" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C read operation&#10;&#10; </short>
          <long>&#10; Perform an I2C read operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10;    I2C_ACK_END - ACK the last byte if set. Otherwise NACK last byte. This&#10;                   flag cannot be used with the I2C_STOP flag.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b1ec20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b1bac8" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b1ec20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b1bcc8" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b1bec8" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b1a0f8" loc="76:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="writeDone" ref="0x40b16860" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the write operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the write operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, written&#10; @param 'uint8_t* COUNT(length) data' Pointer to the data buffer written&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b160e0" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b162e0" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b164e0" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b166f0" loc="112:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b18590" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Perform an I2C write operation&#10;&#10; </short>
          <long>&#10; Perform an I2C write operation&#10;&#10; @param flags Flags that may be logical ORed and defined by:&#10;    I2C_START   - The START condition is transmitted at the beginning &#10;                   of the packet if set.&#10;    I2C_STOP    - The STOP condition is transmitted at the end of the &#10;                   packet if set.&#10; @param addr The slave device address. Only used if I2C_START is set.&#10; @param length Length, in bytes, to be read&#10; @param 'uint8_t* COUNT(length) data' A point to a data buffer to read into&#10;&#10; @return SUCCESS if bus available and request accepted. &#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b1ec20"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="flags" ref="0x40b1ad88" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="i2c_flags_t" ref="0x40b1ec20"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b18010" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b18210" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b18420" loc="92:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x40b17790" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
          <short>&#10; Notification that the read operation has completed&#10;&#10; </short>
          <long>&#10; Notification that the read operation has completed&#10;&#10; @param addr The slave device address&#10; @param length Length, in bytes, read&#10; @param 'uint8_t* COUNT(length) data' Pointer to the received data buffer&#10; @param success SUCCESS if transfer completed without error.&#10;</long>
        </documentation>
        <interfacedef-ref qname="I2CPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b17010" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035c340"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40b17210" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402121e8"/></typename>
            </type-int>
          </variable>
          <variable name="length" ref="0x40b17410" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b17620" loc="102:/opt/tinyos-2.x/tos/interfaces/I2CPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128I2C" loc="44:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <short>&#10; An interface for stopping the I2C bus.</short>
        <long>&#10; An interface for stopping the I2C bus. Needed by the resource&#10; reservation system, so that when a client releases you're sure&#10; there's a stop.&#10;&#10; @author Philip Levis&#10;&#10; @version  $Id: Atm128I2C.nc,v 1.4 2006-12-12 18:23:03 vlahan Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="stop" ref="0x40b6aed0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/i2c/Atm128I2C.nc">
        <interfacedef-ref qname="Atm128I2C"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128I2CBus" loc="47:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <short>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.</short>
        <long>&#10; This driver implements direct I2C register access and a blocking master&#10; controller for the ATmega128 via a Hardware Platform Layer (HPL) to its  &#10; two-wire-interface (TWI) hardware subsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Philip Levis&#10;&#10; @version  $Id: HplAtm128I2CBus.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10;</long>
      </documentation>
      <function command="" provided="0" name="readCurrent" ref="0x40b8f708" loc="54:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendCommand" ref="0x40b8fae8" loc="55:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStart" ref="0x40b8e438" loc="60:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b8e2e0" loc="60:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="status" ref="0x40b8f328" loc="52:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasAcks" ref="0x40b8da68" loc="65:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40b8ad20" loc="84:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x40b8b010" loc="67:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40b8de90" loc="67:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x40b89ac8" loc="89:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="init" ref="0x40b93b80" loc="49:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hasExternalPulldown" ref="0x40b93a28" loc="49:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAck" ref="0x40b8d680" loc="64:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enable" ref="0x40b8d528" loc="64:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x40b8b4e8" loc="68:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStart" ref="0x40b8e830" loc="61:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x40b8bdf0" loc="75:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="commandComplete" ref="0x40b8fef0" loc="56:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40b8a920" loc="83:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b8a7c8" loc="83:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x40b896e0" loc="88:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b89588" loc="88:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40039b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRealInterruptPending" ref="0x40b8b988" loc="72:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40b93f10" loc="50:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setStop" ref="0x40b8ed38" loc="62:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b8ebe0" loc="62:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setInterruptPending" ref="0x40b8a420" loc="81:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x40b8a2c8" loc="81:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x40b891a8" loc="85:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasStop" ref="0x40b8d138" loc="63:/opt/tinyos-2.x/tos/chips/atm128/i2c/HplAtm128I2CBus.nc">
        <interfacedef-ref qname="HplAtm128I2CBus"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x4034c6e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Set" loc="49:/opt/tinyos-2.x/tos/interfaces/Set.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Set.nc">
        <short>&#10; The Set interface is intended for synchronous writing of small&#10; values.</short>
        <long>&#10; The Set interface is intended for synchronous writing of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the set() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be stored&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:15 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40c28038" loc="49:/opt/tinyos-2.x/tos/interfaces/Set.nc">
          <interfacedef-ref qname="Set"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c28038"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="set" ref="0x40c285f0" loc="55:/opt/tinyos-2.x/tos/interfaces/Set.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Set.nc">
          <short>&#10; Stores a value of type val_t.</short>
          <long>&#10; Stores a value of type val_t.&#10;&#10; @param val the value to be stored&#10;</long>
        </documentation>
        <interfacedef-ref qname="Set"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c28038"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40c28498" loc="55:/opt/tinyos-2.x/tos/interfaces/Set.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40c28038"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Get" loc="49:/opt/tinyos-2.x/tos/interfaces/Get.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Get.nc">
        <short>&#10; The Get interface is intended for synchronous reading of small&#10; values.</short>
        <long>&#10; The Get interface is intended for synchronous reading of small&#10; values. The type of the value is given as a template&#10; argument. Generally, these values are backed by memory or&#10; computation. Because no error code is included, the get() call must&#10; be guaranteed to succeed.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x40cfcae8" loc="49:/opt/tinyos-2.x/tos/interfaces/Get.nc">
          <interfacedef-ref qname="Get"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40cfcae8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40cf9010" loc="55:/opt/tinyos-2.x/tos/interfaces/Get.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Get.nc">
          <short>&#10; Retrieves a value of type val_t.</short>
          <long>&#10; Retrieves a value of type val_t.&#10;&#10; @return the value itself&#10;</long>
        </documentation>
        <interfacedef-ref qname="Get"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x40cfcae8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
