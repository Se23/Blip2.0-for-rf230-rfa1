<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="42:UDPEchoC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x409a1260"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40458670"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40458670"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x4045a7e8"/></to>
    </wire>
    <wire loc="43:UDPEchoC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409a0010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408f4820"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4090ed78"/></to>
    </wire>
    <wire loc="48:UDPEchoC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x409a1698"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40afd178"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40afd178"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412701a8"/></to>
    </wire>
    <wire loc="51:UDPEchoC.nc">
      <from><interface-ref name="Echo" scoped="" ref="0x4099b368"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x412b3840"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x412b3840"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x412b1cc8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:UDPEchoC.nc">
      <from><interface-ref name="Status" scoped="" ref="0x4099b9a0"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x412b2868"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x412b2868"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x412b1cc8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:UDPEchoC.nc">
      <from><interface-ref name="StatusTimer" scoped="" ref="0x40994d60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40929330"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x40929330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:UDPEchoC.nc">
      <from><interface-ref name="IPStats" scoped="" ref="0x409b1010"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x410749e8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x410749e8"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x41096cb0"/></to>
    </wire>
    <wire loc="59:UDPEchoC.nc">
      <from><interface-ref name="UDPStats" scoped="" ref="0x409b1d28"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x412ad4f8"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x412ad4f8"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x412ec510"/></to>
    </wire>
    <wire loc="66:UDPEchoC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x409ac8f8"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40eb1040"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x40eb1040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40eadb08"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41b03840"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x412ec010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a16890"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a1f040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a2f040"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a3a8b8"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x410bb290"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40f65c90"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eb1c98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x41961ed8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40dee010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4193d010"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418ed750"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40b90e60"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x408aa9f8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x408a64c0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40865250"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40768978"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x406b6860"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x415dfa98"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x4045ab80"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40356840"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40356840"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40420188"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40928160"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x40f65630"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40928160"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40457b10"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40457b10"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045ed48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40928568"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045b3c0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x40489bd8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x4045bb20"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4090b830"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x40463510"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x4045bb20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x40463150"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4045d900"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4045d900"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4047d010"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x404638e0"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40464b08"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x40464b08"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x4049a350"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045dd08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x419f4dc0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045dd08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41019ec0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045dd08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40a592c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4045dd08"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x418118c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x4047d800"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x4045dd08"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x4047dbb0"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x404680c8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x4047c010"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x40466568"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x4047d438"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40489828"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="SpiResource" scoped="" ref="0x404a08f0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x404a30b8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x404a30b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x404b2c20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x4049e040"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x404a37b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x404a37b8"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x404a2bc0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x4049c1c8"/></from>
      <to><interface-ref name="CSN" scoped="" ref="0x404a43c0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x404a43c0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x405d80a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x4049cbd0"/></from>
      <to><interface-ref name="Hold" scoped="" ref="0x404a4dc8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x404a4dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x406a1858"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x404a9dc8"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x404b24d0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiPacket" scoped="" ref="0x404b24d0"/></from>
      <to><interface-ref name="SpiPacket" scoped="" ref="0x404f28e0"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="SpiByte" scoped="" ref="0x404a2bc0"/></from>
      <to><interface-ref name="SpiByte" scoped="" ref="0x404f2010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x404a2840"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x404b9c88"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="FastSpiByte" scoped="" ref="0x404b0e78"/></from>
      <to><interface-ref name="FastSpiByte" scoped="" ref="0x404f2328"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x404b2c20"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x404f2d70"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ResourceArbiter" scoped="" ref="0x404f0de8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4059c570"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4059c570"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x415dde18"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x404fb4d0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x405c7150"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x405c7150"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x415dc9b0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="Spi" scoped="" ref="0x404f1520"/></from>
      <to><interface-ref name="SpiBus" scoped="" ref="0x404f94e0"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SpiBus" scoped="" ref="0x404f94e0"/></from>
      <to><interface-ref name="SPI" scoped="" ref="0x40566550"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x404fb8c8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="290:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <from><interface-ref name="zeroTask" scoped="" ref="0x404fbc20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="Mcu" scoped="" ref="0x4056a010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SS" scoped="" ref="0x4056f718"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40507670"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40507670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="SCK" scoped="" ref="0x4056e110"/></from>
      <to><interface-ref name="PortB1" scoped="" ref="0x405060a0"/></to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x405060a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MOSI" scoped="" ref="0x4056eaf8"/></from>
      <to><interface-ref name="PortB2" scoped="" ref="0x40506a98"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x40506a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="MISO" scoped="" ref="0x4056c580"/></from>
      <to><interface-ref name="PortB3" scoped="" ref="0x405054b0"/></to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x405054b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x41031478"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40f5b2a8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40a02010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x408a4010"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c098"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x4056f338"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x405240a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c128"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40509670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x40511c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x4051ace8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x40521670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c128"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x40508210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x4051b8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x4050fce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x405154b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x4051da98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40501d68"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x4050cc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x405132f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x40518c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x40522210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c128"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x40512750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x404fdce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x405033d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x40524c98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c128"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x40502830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x405160a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40510670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40519750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x40508c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x4050d750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x40515ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x4051c4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x404fe830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x40505ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x4050b670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x40517670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x4050aa98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x40511210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x4051a2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x40522c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c128"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x404fc750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x40503dc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x4051cea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x4050f2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x40516a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x4051d0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x40518210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405428a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x40501370"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x4050c210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x405148e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x40523750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4054c128"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x40513ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40546068"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x4050a0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40533f28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x404fd2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4052beb0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x405049a8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40536700"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4059ccb0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x415dc5a8"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x415dce70"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x405c7600"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x415db2b0"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x415dfdd0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x415db8a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x405d80a0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40624b00"/></to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x405eea98"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406786c0"/></to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x405ed010"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40636790"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40636790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416fd3b0"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x405e7670"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4063e410"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4063e410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41717538"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x405f2750"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40649d68"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40649d68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41734228"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x405fa0a0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4067ce98"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x405dbc08"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40628ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40628ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41651538"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x405f32f0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4064aa80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4064aa80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41738de0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40624b00"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41674418"/></to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x405e2750"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4062c6b0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4062c6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4168c228"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x405ecea8"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406344f0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406344f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f8228"/></to>
    </wire>
    <wire loc="179:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x405f54b0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4064e170"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4064e170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41711538"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x405ce8e0"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x40619b80"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x40619b80"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41602228"/></to>
    </wire>
    <wire loc="149:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x405d7ea8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x406337d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x406337d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4166f228"/></to>
    </wire>
    <wire loc="160:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x405e0670"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4063c330"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4063c330"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416870b0"/></to>
    </wire>
    <wire loc="171:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x405eace8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40644170"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40644170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f30b0"/></to>
    </wire>
    <wire loc="188:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x405f0670"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x40646ac8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x40646ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4172f0b0"/></to>
    </wire>
    <wire loc="194:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x405fcc08"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40682e98"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x405e8210"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4063f090"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4063f090"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4171a010"/></to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x405dc750"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x406297d0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x406297d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416540b0"/></to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x405e5dc8"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406314f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406314f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4166a0b0"/></to>
    </wire>
    <wire loc="192:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x405fd750"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x40676e98"/></to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x405e32f0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4062d3d8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4062d3d8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41693de8"/></to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x405eda08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40635170"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40635170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416fcd70"/></to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x405e60a0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4063ed68"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4063ed68"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41715010"/></to>
    </wire>
    <wire loc="186:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x405f1210"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40647790"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40647790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41733c08"/></to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x405da670"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406274f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406274f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4164f010"/></to>
    </wire>
    <wire loc="147:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x405d8a98"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x406234f0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x406234f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41673de0"/></to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x405e1210"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4062b030"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4062b030"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4168bc08"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x405eb8e0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40634e48"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40634e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f7c08"/></to>
    </wire>
    <wire loc="180:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x405f5ea8"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4064eac8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4064eac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4170f010"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x405dd2f0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4062a4f0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4062a4f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41658c08"/></to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x405d68e0"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x40632170"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x40632170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4166ec08"/></to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x405df0a0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x4063cc88"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x4063cc88"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41686a88"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x405ee0a0"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x406574f0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x406574f0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4172ea88"/></to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x405de4b0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40637dc8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40637dc8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416ff938"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x405e8c08"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x4063f9e8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x4063f9e8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417199e8"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x405f3ce8"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40649410"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40649410"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417367f8"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x405fb670"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4067f6c0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x405db210"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40628170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40628170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41653a88"/></to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x405e4830"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x40631e48"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x40631e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41669a88"/></to>
    </wire>
    <wire loc="182:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x405f48e0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x4064a128"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x4064a128"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41739418"/></to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x405e3ce8"/></from>
      <to><interface-ref name="Pin1" scoped="" ref="0x4062dd30"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin1" scoped="" ref="0x4062dd30"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4168e7f8"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x405ec4b0"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x40635ac8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x40635ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416fa7f8"/></to>
    </wire>
    <wire loc="178:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x405e6a98"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x4063d790"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x4063d790"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417149e8"/></to>
    </wire>
    <wire loc="187:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x405f1c08"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40646170"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40646170"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x417316c0"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x405d1eb0"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x40619228"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x40619228"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41604788"/></to>
    </wire>
    <wire loc="148:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x405d74b0"/></from>
      <to><interface-ref name="Pin2" scoped="" ref="0x40623e48"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin2" scoped="" ref="0x40623e48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416717f8"/></to>
    </wire>
    <wire loc="159:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x405e1c08"/></from>
      <to><interface-ref name="Pin4" scoped="" ref="0x4062b988"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin4" scoped="" ref="0x4062b988"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416896c0"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x405ea2f0"/></from>
      <to><interface-ref name="Pin6" scoped="" ref="0x406457d0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin6" scoped="" ref="0x406457d0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416f56c0"/></to>
    </wire>
    <wire loc="193:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x405fc210"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x406846c0"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x405e9750"/></from>
      <to><interface-ref name="Pin0" scoped="" ref="0x406406f8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin0" scoped="" ref="0x406406f8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4171c538"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x405dfa98"/></from>
      <to><interface-ref name="Pin7" scoped="" ref="0x4063b6b0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin7" scoped="" ref="0x4063b6b0"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x41684538"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x405ddce8"/></from>
      <to><interface-ref name="Pin3" scoped="" ref="0x4062ae48"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin3" scoped="" ref="0x4062ae48"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x416566c0"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x405e53d0"/></from>
      <to><interface-ref name="Pin5" scoped="" ref="0x40632ac8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <from><interface-ref name="Pin5" scoped="" ref="0x40632ac8"/></from>
      <to><interface-ref name="IO" scoped="" ref="0x4166c6c0"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x406c5708"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x406cd758"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x406cd758"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x406c9010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x406c5dc8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x406cdd90"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucbase/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x406cdd90"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x405e53d0"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406b4980"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x406e40e0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x406e40e0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40768d10"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x406c4ab0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x406b3388"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x406c9010"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x406c79b8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x406e7eb8"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x406d5428"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40768d10"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x407933d8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4071c388"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40733be8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4072c9d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4076a310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x407307a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4076b3a8"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40734a90"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4076a9a8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x407377b0"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4076b6d0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40768978"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40793040"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40775840"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x4072b010"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4076aed0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4077bc20"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x407695a0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4077b618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40775338"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x408dcd30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4077bc20"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4080ebc8"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4077b618"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4080e808"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x4083d3f8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40775338"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4078d720"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40775840"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4083b3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40775840"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40847c58"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40775840"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4083d8e0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4078cc30"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x4083ddb8"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x4078fb00"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x407a1e88"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40836040"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x4079d9a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408382a0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x408382a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40868010"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x408473d0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40838720"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40838720"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40868900"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x407cf9d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x407a7d40"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x407d0220"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x407cd610"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x4083a670"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x4083aaa8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40869588"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40868480"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40868480"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x408659a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40868900"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40865db8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40868010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40865588"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40888c48"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40861230"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x408606d0"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x408ad688"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x408ad688"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x408aae48"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40860b08"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x408adb98"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x408adb98"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x408a73a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40888010"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x408ac0b8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x408ac0b8"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x408a78c0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x408ab760"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x408a5390"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x408accc8"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x408a6910"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x408ab268"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x408a6e40"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x408a43e0"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045b3c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408a4b20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x408a4b20"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408e9780"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x408eaca0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4077bc20"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x408e9438"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4077b618"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x40775338"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x408ea748"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x408e8a18"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x408382a0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x408e6398"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4090b830"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4090ea30"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40905110"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x4090d030"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4090d030"/></from>
      <to><interface-ref name="PortD7" scoped="" ref="0x405eace8"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40905af8"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x4090da18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4090da18"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x405ea2f0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40904580"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x4090c4a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4090c4a0"/></from>
      <to><interface-ref name="PortE2" scoped="" ref="0x405e8c08"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x40903010"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x4090ce88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x4090ce88"/></from>
      <to><interface-ref name="PortE3" scoped="" ref="0x405e7670"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x404209c0"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x40427668"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x40437e60"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40ac4cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40ac9cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x409b7f20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x409b7f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x418195a0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x40ae40c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40abd968"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41816380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4181db48"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4181db48"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41811cf8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x418170a0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a69a20"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a69a20"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a84320"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4180f730"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409ff238"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x409ff238"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a11268"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x4180c6e0"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x409fc6d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x409f39b0"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40a05010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409fc6d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40a0e408"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409fc6d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40a0b830"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x409fc6d8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40a09bd0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40a02400"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40a5c128"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a596f8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x40a6e898"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409ff238"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40a985f8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a5c128"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40ac7658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x40b052b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x40b16e78"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x40b23508"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40b18670"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40b14cd8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x40afc2a0"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x40b23e60"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40af8938"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413adb38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40af8938"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4142f210"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x40b19178"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40b14568"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x40afadf0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40b15558"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x412707f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40af8428"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x41270d08"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x40af8938"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x4126f288"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b6dd40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b6dd40"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41096010"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x40b11620"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40b239f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40b1d600"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x40b6b010"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40b6b010"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x40b890c0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x40b8a2e0"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x41074358"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x41074358"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x41096620"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x4129d6a0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40b15558"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4129c500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x4129daf8"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b913f8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40b1db38"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40b21528"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x412a7548"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40b09ae8"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x412a7548"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x4126f8a0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b1c5e8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40b20148"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x412cce20"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x412cce20"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41a16c38"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x412bce80"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40458670"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x412b9210"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x40b34040"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x40b68a80"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x40b89648"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x40b89ba8"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x40b8a2e0"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40b881b0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40b84510"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40b902d8"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40b902d8"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40bd8220"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40b91e00"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40b902d8"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40bd5200"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40bda948"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="ShortAddressConfig" scoped="" ref="0x40bd33e8"/></from>
      <to><interface-ref name="ShortAddressConfig" scoped="" ref="0x40be0db0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="ShortAddressConfig" scoped="" ref="0x40be0db0"/></from>
      <to><interface-ref name="ShortAddressConfig" scoped="" ref="0x40bf8a48"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40be0740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bee788"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40bee788"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40e2be28"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40be0068"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bf34c0"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40bf34c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40e503f0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ShortAddressConfig" scoped="" ref="0x40bf8a48"/></from>
      <to><interface-ref name="ShortAddressConfig" scoped="" ref="0x40c1dac8"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40be9338"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40bff1c0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40bff1c0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40d3e548"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40bea450"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40bfb788"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40bfb788"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40d3e050"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40be9718"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40bf82f8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x40bf82f8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40c71128"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40be31b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40bf3ae0"/></to>
    </wire>
    <wire loc="201:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40bf3ae0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40e30648"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e2be28"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40e509f8"/></to>
    </wire>
    <wire loc="310:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40c134d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40f40098"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x40f40098"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40f614d8"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40bff690"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40d46328"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40bffda0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d082b8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d082b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x418eca80"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40c02888"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x40d1bc28"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40d1bc28"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x418c11e8"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40bde100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40d1cce0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40d1cce0"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x418c22c8"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40bdd178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x40d1b868"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40d1b868"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x418c2de8"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40bf9010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40db4e30"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x40db4e30"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x4190c010"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40bf9b70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d32248"/></to>
    </wire>
    <wire loc="308:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c19010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40f42d10"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x40f42d10"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40f620f0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40e503f0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41963598"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40c017d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40d1c5b0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40d1c5b0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x418c3ac0"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40bdeac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40d1b488"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40d1b488"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x418c2a08"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c07580"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f086f0"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f086f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x419d0288"/></to>
    </wire>
    <wire loc="312:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c0d8a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f70010"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f70010"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ff7b20"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c15bd0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40f73818"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x40f73818"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40f5ec70"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf8f20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ea2150"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x40bfb098"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40d328e0"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40c04010"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x40d19030"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40d19030"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x418c15c8"/></to>
    </wire>
    <wire loc="230:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40c18580"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40e49df8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x40e49df8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4195ea30"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40c04a60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40d1d990"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40d1d990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x418c6ec8"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40e30648"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4192b988"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x40bfbd58"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40d46010"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c08010"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ed8ee8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ed8ee8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x419d59d0"/></to>
    </wire>
    <wire loc="311:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c0e638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f72a80"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f72a80"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f5ded8"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40c046f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x40d19410"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40d19410"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x418c19a8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40c71850"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f42370"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40f42370"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f636f0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c57520"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40db5450"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40db5450"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4190f5c0"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c54ad0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40c945c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c55840"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f086f0"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x40c50dd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f42370"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40c94e78"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40f70a70"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40f70a70"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4101b1f8"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40d18768"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40c3e778"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d19f20"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40d13538"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d18430"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x40d4f528"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d19788"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x40d4f860"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40d0a010"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40d082b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d13a60"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x40d4f030"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40d46670"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40db5450"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d44908"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40d3e050"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d44e00"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40d3e548"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40d44170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40d3e880"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40d4e050"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40daf168"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40daf168"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x419406f0"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40d4e548"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e30330"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e30330"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e2fa18"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40d4e880"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40db3890"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40db3890"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4190ca28"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40db2090"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e30ce0"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e30ce0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4192a040"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40e06428"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x40c20278"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40dafa88"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e02d70"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e02d70"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4192b4b0"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e2e4d8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ea2150"/></to>
    </wire>
    <wire loc="203:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e2f520"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e2a450"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e2a450"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e4f010"/></to>
    </wire>
    <wire loc="204:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e2fa18"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e2a948"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e2a948"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e4f508"/></to>
    </wire>
    <wire loc="205:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e2fd50"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40e2ac60"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40e2ac60"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40e4f840"/></to>
    </wire>
    <wire loc="217:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x40e509f8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40e49010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40e49010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41961900"/></to>
    </wire>
    <wire loc="218:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e4f010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40e495e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40e495e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4195e220"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e4f508"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40e49ae0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40e49ae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4195e718"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40e4f840"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f3dd88"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40f3dd88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x419cf8f8"/></to>
    </wire>
    <wire loc="227:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40e70ab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e6dae0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40e6dae0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4199e768"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40e6f010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40daf640"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40daf640"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41940bc8"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40e70340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40f57820"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40f57820"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40f546a8"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e06010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e9f010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40e9f010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4199ec40"/></to>
    </wire>
    <wire loc="243:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40eae418"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40c1b118"/></to>
    </wire>
    <wire loc="244:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40e9f458"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ea37b8"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40e9f950"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ea3c90"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40e9fd48"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40c945c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="251:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x40ebc050"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40f37448"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40ebd010"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40c945c0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40ebd6c8"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40c24ad0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40ea2678"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40ee1aa0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40ee1aa0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40edd9c8"/></to>
    </wire>
    <wire loc="256:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40ea2b70"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40ee0010"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40ee0010"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40eddec0"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40edceb0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40c1d6f8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40edd9c8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f56010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40f56010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40f54ec0"/></to>
    </wire>
    <wire loc="263:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40eddec0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f564e8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40f564e8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40f533e0"/></to>
    </wire>
    <wire loc="264:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x40edc300"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40f43ee0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40f43ee0"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x40f63288"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f3c690"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f70010"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f3cf08"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f37a10"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x40f3a6b0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40f37448"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x40f23280"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x40f42370"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40f51410"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x40c1d6f8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f54ec0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f4d5b0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40f4d5b0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40f4a4f0"/></to>
    </wire>
    <wire loc="290:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x40f533e0"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f43a90"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40f43a90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40f64d70"/></to>
    </wire>
    <wire loc="291:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40f546a8"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40f4edb8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40f4edb8"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40f4bc40"/></to>
    </wire>
    <wire loc="300:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x40f4bc40"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40f46d48"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40f46d48"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40f64040"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x40f4a4f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f43538"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x40f43538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40f64818"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40f6e5f0"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40c2a8f8"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40f6ee78"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f086f0"/></to>
    </wire>
    <wire loc="314:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40f6b638"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40f37448"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="315:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40f6bcd0"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40f37448"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40f6a418"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x40f37448"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x40c945c0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x41876b38"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41874380"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40c94e78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41873cc8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40ca5010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x418be690"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cfa010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x418c1d20"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40d19788"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x418bf4f0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40d19f20"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x418bf9e8"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40d18430"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x418bfd20"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40d18768"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x40d089f8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x418eb1e8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40d08e00"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x418eb5f0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x418ebab0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40d072e8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x418ebed8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x418eda88"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x418ea4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4190b260"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cfa010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4190b838"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40db2090"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x4193c238"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40dc3430"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x40dc3430"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x40dee3a8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4193c8d0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4193bd40"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4193bd40"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40deedd0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4193d378"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40dafa88"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4193d870"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e06010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x4193dc68"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40e06428"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4192a808"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e2f520"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4192ace0"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e2e4d8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x419264d0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40e2fd50"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x419292e0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41924330"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41924330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x41926c88"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4195d010"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x40e70340"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x4195d788"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40ca5010"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4195dd40"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x40e70ab8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4195c230"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x40e6f010"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x4195caa0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x4195ced8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x4195c668"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4199c0a0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x40e9f458"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4199b458"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40eae418"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4199c598"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40e9f950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4199c990"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x40e9fd48"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x4199b040"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40eb1040"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x4199ba50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x40eaf748"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x40ead248"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40eb5500"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40eb1c98"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40eec528"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40ede378"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40ee0408"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40edc300"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x40ee1328"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x40edd1b0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40ee0800"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40edc718"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40ede010"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40edceb0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40ee1010"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40edee48"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40eecae0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40ede950"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x419cd998"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40f3cf08"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x419ce808"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f3c690"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x419cd120"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40f15f00"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40f15f00"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40f11348"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x419ce1a0"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x40f3a6b0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40f11ce0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a69a20"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f58a50"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40f55858"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40f568e0"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40f537f8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40f56cd8"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40f53c10"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40f554f0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40f51410"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40f57508"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40f54370"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40f57030"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40f55e30"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40f4e010"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x40f4cd90"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x40f4de80"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x40f4ae00"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x40f4c290"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x40f49250"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x40f4ca28"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40f499e8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x40f4da88"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x40f4a9e8"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40f4eaa0"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x40f4b908"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x40f4e5c8"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x40f4b410"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4101b1f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x419f3270"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40f3e468"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40f5f8a8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40ff7b20"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x4105b010"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x40f8ce50"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x40f6e5f0"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40f8b568"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40f6b638"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x40f8bc00"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x40f6bcd0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x40f8a338"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x40f6a418"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x40f8ab40"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x40f6ee78"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x40f5a3d0"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x40ff7b20"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x40f5ae20"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x409f39b0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x40f87280"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x40ca5010"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40f8e900"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40f68dd8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40f68dd8"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x40ff45d8"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40f878c0"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ff30c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40fe7010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40fe6268"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40fe5d88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40fe5d88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41018320"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41017558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x41013858"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41013858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41007878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4100a010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x41034470"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4100ec28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x41003978"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4100ec28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x41000d28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x4100ec28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x41036100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x41031868"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4105b9a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40a5c128"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x419f1c70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x409ff238"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x419efcb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x409fc6d8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41095808"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40458670"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x41095c50"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x40be0740"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x410942f8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x40be9718"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x410949e8"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x40bea450"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x41093010"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40be9338"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x410ccb80"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40be31b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x410cc720"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x412066a8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x412066a8"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x41242408"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x410bc040"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x410ad010"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x410c0e20"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41247360"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41247360"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x41092a40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x412615b0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x412615b0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41a3ac60"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x410c8798"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4124b950"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x4124b950"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41a2f3e8"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x410ca128"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41278468"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41278468"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41a1f3e8"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x410c61a0"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41289928"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x410933e8"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x40b89648"/></to>
    </wire>
    <wire loc="627:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41221a18"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <from><interface-ref name="SubLqi" scoped="" ref="0x412429c8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x412360e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x412360e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c15bd0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <from><interface-ref name="SubRssi" scoped="" ref="0x41241d50"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x41233918"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x41233918"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x40c134d8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41245400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40bee788"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x41239ec0"/></from>
      <to><interface-ref name="SendResource" scoped="" ref="0x40bffda0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x4123a5e0"/></from>
      <to><interface-ref name="Ieee154Notifier" scoped="" ref="0x40bff690"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41239430"/></from>
      <to><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40bf9b70"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x4123a980"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x40bf9010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x41234530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c19010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x41238be8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40bf34c0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x412308e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c07580"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41231d28"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c0d8a0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41238660"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf8f20"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x41245a28"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x40bfb098"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x41237298"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40bf3ae0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x412379b0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x40c18580"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x4123a248"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x40bfbd58"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4122d2a8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c08010"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x412b1cc8"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x412ef9e0"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x412eb040"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40afadf0"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x412eb4b8"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x41302800"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x413ad5f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x413ad5f8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x41450ad0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413074a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x413adb38"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413074a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41300010"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413074a0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4142f210"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4142f210"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x414bb7b0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x41300010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4131e3f8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x413adb38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4144f010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x413007c0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x414efab0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x414efab0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x41af3268"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x41478010"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x414efab0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x412f9098"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x4131f430"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x41304270"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x4131e8b0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x4131b958"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x413007c0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x4131c500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x41315798"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x413aa010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x413aa010"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x4144f428"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x4131a770"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x41313928"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x40b16e78"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x4131bda8"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x412a7548"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x41354a08"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x414c8eb0"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x414c59b8"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40b19178"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x414c41b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x413aa010"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x4150f010"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x4131b588"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x4150f468"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4142f6c8"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4142f6c8"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x414bb2d8"/></to>
    </wire>
    <wire loc="362:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x41370768"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x4144d1a0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x41304270"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x4144d5b8"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x414d98e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4144da60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4143c1c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4143c1c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x4144bce0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x414380a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x414380a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41445220"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40eb1040"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x41445638"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x412f9098"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x41443550"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41443e88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x41441090"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41300010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x41441508"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4142f6c8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x41447030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41436e40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41436e40"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x41441a20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x414402b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x414406e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x41441e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x41440b20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x414b2890"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x41478010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x414bbc88"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x414a50c0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x414a50c0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x414b41b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x414a2e88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x414a2e88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x414b8f00"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4149ec30"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4149ec30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x414b2478"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x40eb1040"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x414b2c88"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x414ac7a0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x413aa010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x414ab4d0"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x413ad5f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x414abf00"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40b19178"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x414b1760"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x414e4278"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x414ae320"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x414e1eb0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x414e1eb0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41b03be8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x414ab9a8"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x412a7548"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x414aa5b0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x414a9c68"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x414a9830"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x414d98e0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x41afae80"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x41af82e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x4129d250"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x41af36b0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x4129d250"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x41531010"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x414eb090"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x414eb090"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x412b1cc8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x415315f8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408f4820"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="ICMPPing" scoped="" ref="0x4152c4e8"/></from>
      <to><interface-ref name="ICMPPing" scoped="" ref="0x41545478"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41533ca0"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40458670"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="ICMPPing" scoped="" ref="0x41545478"/></from>
      <to><interface-ref name="ICMPPing" scoped="" ref="0x41541120"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="IP_ECHO" scoped="" ref="0x4153fa70"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x4129d250"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="PingTimer" scoped="" ref="0x415417b0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x415435a8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x415435a8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x4153fec8"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdC.nc">
      <from><interface-ref name="ShellCommand" scoped="" ref="0x414ec608"/></from>
      <to><interface-ref name="ShellCommand" scoped="" ref="0x4156c5d8"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <from><interface-ref name="ShellCommand" scoped="" ref="0x4156c5d8"/></from>
      <to><interface-ref name="ShellCommand" scoped="" ref="0x41532958"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x414ecb98"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40b19178"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4156b438"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x415a1b20"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x415a1b20"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <from><interface-ref name="RegisterShellCommand" scoped="" ref="0x41ae8998"/></from>
      <to><interface-ref name="RegisterShellCommand" scoped="" ref="0x41533918"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pSpiC" loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
        <short>&#10; HPL implementation of the Spi bus for a ST M25P chip connected to a&#10; TI MSP430.</short>
        <long>&#10; HPL implementation of the Spi bus for a ST M25P chip connected to a&#10; TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <documentation loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
        <short>&#10; The HAL of the SPI bus on the atm128.</short>
        <long>&#10; The HAL of the SPI bus on the atm128.&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiC.nc,v 1.7 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10; @author Joe Polastre&#10; @date   September 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.SpiMaster" loc="89(Atm128SpiC.SpiMaster):/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128SpiP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiC" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
        <short>&#10; Configuration encapsulating the basic SPI HPL for the atm128.</short>
        <long>&#10; Configuration encapsulating the basic SPI HPL for the atm128.&#10;&#10; &#60;pre>&#10; $Id: HplAtm128SpiC.nc,v 1.5 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128SpiP" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc" safe="">
      <documentation loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
        <short>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.</short>
        <long>&#10; Implementation of the SPI bus abstraction for the atm128&#10; microcontroller.&#10;&#10; @author Philip Levis&#10; @author Martin Turon&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter" loc="83(Atm128SpiC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:Atm128SpiC.Resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Queue" loc="42(Atm128SpiC.Arbiter.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128SpiC.Arbiter.Arbiter" loc="49(Atm128SpiC.Arbiter.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC" loc="40:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
        <short>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.</short>
        <long>&#10; Provide GeneralIO interfaces for all of the ATmega128's pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA" loc="40(HplAtm128GeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit0" loc="41(HplAtm128GeneralIOC.PortA.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit1" loc="41(HplAtm128GeneralIOC.PortA.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit2" loc="41(HplAtm128GeneralIOC.PortA.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit3" loc="41(HplAtm128GeneralIOC.PortA.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit4" loc="41(HplAtm128GeneralIOC.PortA.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit5" loc="41(HplAtm128GeneralIOC.PortA.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit6" loc="41(HplAtm128GeneralIOC.PortA.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortA.Bit7" loc="41(HplAtm128GeneralIOC.PortA.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB" loc="40(HplAtm128GeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit0" loc="41(HplAtm128GeneralIOC.PortB.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit1" loc="41(HplAtm128GeneralIOC.PortB.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit2" loc="41(HplAtm128GeneralIOC.PortB.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit3" loc="41(HplAtm128GeneralIOC.PortB.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit4" loc="41(HplAtm128GeneralIOC.PortB.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit5" loc="41(HplAtm128GeneralIOC.PortB.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit6" loc="41(HplAtm128GeneralIOC.PortB.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="14">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortB.Bit7" loc="41(HplAtm128GeneralIOC.PortB.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="15">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC" loc="40(HplAtm128GeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit0" loc="41(HplAtm128GeneralIOC.PortC.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="16">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit1" loc="41(HplAtm128GeneralIOC.PortC.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="17">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit2" loc="41(HplAtm128GeneralIOC.PortC.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="18">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit3" loc="41(HplAtm128GeneralIOC.PortC.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="19">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit4" loc="41(HplAtm128GeneralIOC.PortC.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="20">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit5" loc="41(HplAtm128GeneralIOC.PortC.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="21">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit6" loc="41(HplAtm128GeneralIOC.PortC.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="22">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortC.Bit7" loc="41(HplAtm128GeneralIOC.PortC.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="23">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD" loc="40(HplAtm128GeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit0" loc="41(HplAtm128GeneralIOC.PortD.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="24">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit1" loc="41(HplAtm128GeneralIOC.PortD.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="25">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit2" loc="41(HplAtm128GeneralIOC.PortD.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="26">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit3" loc="41(HplAtm128GeneralIOC.PortD.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="27">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit4" loc="41(HplAtm128GeneralIOC.PortD.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="28">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit5" loc="41(HplAtm128GeneralIOC.PortD.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="29">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit6" loc="41(HplAtm128GeneralIOC.PortD.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="30">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortD.Bit7" loc="41(HplAtm128GeneralIOC.PortD.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="31">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE" loc="40(HplAtm128GeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit0" loc="41(HplAtm128GeneralIOC.PortE.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="32">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit1" loc="41(HplAtm128GeneralIOC.PortE.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="33">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit2" loc="41(HplAtm128GeneralIOC.PortE.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="34">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit3" loc="41(HplAtm128GeneralIOC.PortE.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="35">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit4" loc="41(HplAtm128GeneralIOC.PortE.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="36">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit5" loc="41(HplAtm128GeneralIOC.PortE.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="37">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit6" loc="41(HplAtm128GeneralIOC.PortE.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="38">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortE.Bit7" loc="41(HplAtm128GeneralIOC.PortE.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="39">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF" loc="40(HplAtm128GeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOPortP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit0" loc="41(HplAtm128GeneralIOC.PortF.Bit0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="40">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit1" loc="41(HplAtm128GeneralIOC.PortF.Bit1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="41">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit2" loc="41(HplAtm128GeneralIOC.PortF.Bit2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="42">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit3" loc="41(HplAtm128GeneralIOC.PortF.Bit3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="43">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit4" loc="41(HplAtm128GeneralIOC.PortF.Bit4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="44">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit5" loc="41(HplAtm128GeneralIOC.PortF.Bit5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="45">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit6" loc="41(HplAtm128GeneralIOC.PortF.Bit6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="46">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.PortF.Bit7" loc="41(HplAtm128GeneralIOC.PortF.Bit7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="47">
        <component-ref qname="HplAtm128GeneralIOPinP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F0" loc="42(HplAtm128GeneralIOC.F0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F1" loc="42(HplAtm128GeneralIOC.F1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F2" loc="42(HplAtm128GeneralIOC.F2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F3" loc="42(HplAtm128GeneralIOC.F3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F4" loc="42(HplAtm128GeneralIOC.F4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F5" loc="42(HplAtm128GeneralIOC.F5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F6" loc="42(HplAtm128GeneralIOC.F6):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.F7" loc="42(HplAtm128GeneralIOC.F7):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:7">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G0" loc="42(HplAtm128GeneralIOC.G0):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G1" loc="42(HplAtm128GeneralIOC.G1):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G2" loc="42(HplAtm128GeneralIOC.G2):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G3" loc="42(HplAtm128GeneralIOC.G3):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G4" loc="42(HplAtm128GeneralIOC.G4):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOC.G5" loc="42(HplAtm128GeneralIOC.G5):/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <instance number="13">
        <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos-2.x/tos/platforms/ucbase/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:02 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart0C.UartP" loc="46(Atm128Uart0C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="UDPEchoP" loc="44:UDPEchoP.nc">
      <module/>
    </component>
    <component qname="UDPEchoC.TimerMilliC" loc="44(UDPEchoC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <value cst="I:11">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackC" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
        <short>&#10; Forwarding abstractions for blip IPv6 stack.</short>
        <long>&#10; Forwarding abstractions for blip IPv6 stack.&#10;&#10; Routing protocols can manipulate the forwarding state using the&#10; ForwardingTable interface and receive notifications of forwarding&#10; events using ForwardingEvents.  In particular, the forwarding&#10; events are useful for datapath validation and updating link&#10; estimates.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPAddressC" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="26:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.x/tos/platforms/ucbase/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="BareMessageC" loc="1:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1BarePacketP" loc="1:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1BarePacketP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RFA1RadioC.PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP" loc="35(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningDummyP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40474220"/>
            <typename><typedef-ref name="TMcu" ref="0x404745d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40474220"/>
            <typename><typedef-ref name="TMcu" ref="0x404745d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <documentation loc="23:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
        <short>&#10; &#10;&#10;</short>
      </documentation>
      <configuration/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.x/tos/platforms/ucbase/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucbase/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPDispatchP" loc="41:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <module/>
    </component>
    <component qname="ReadLqiC" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ReadLqiC" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <module/>
    </component>
    <component qname="RFA1Ieee154MessageC" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <configuration/>
    </component>
    <component qname="IPDispatchC.TimerMilliC" loc="44(IPDispatchC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
            <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125f010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125f010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):/opt/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125f010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="ICMPCoreP" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/IPPacketC.nc">
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40931608"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125f010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoDhcpC" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
        <short>&#10; Component for doing compile-time address allocation.</short>
        <long>&#10; Component for doing compile-time address allocation.  Wired by the&#10; stack, sets a static address based on IN6_PREFIX and TOS_NODE_ID on&#10; boot.  Useful for development or of you want to hard-code addresses.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UDPEchoC.Echo" loc="2(UDPEchoC.Echo):/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <module/>
    </component>
    <component qname="UDPEchoC.Status" loc="2(UDPEchoC.Status):/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="1">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @ author Stephen Dawson-Haggerty&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankC" loc="73:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="81:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="44(RPLRoutingEngineC.Routing):/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="41(RPLDAORoutingEngineC.DAORouting):/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):/opt/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125f010"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLOF0P" loc="39:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="UDPShellC.UdpSocketC" loc="2(UDPShellC.UdpSocketC):/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="2">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UDPShellP" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <module/>
    </component>
    <component qname="ICMPPingC" loc="41:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
        <short>&#10; Provide an interface for pinging other motes.</short>
        <long>&#10; Provide an interface for pinging other motes.&#10;&#10; Replying to ICMP echos is built into all motes running blip;&#10; sending requests requires a component like this one.&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ICMPPingP" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <module/>
    </component>
    <component qname="ICMPPingC.TimerMilliC" loc="44(ICMPPingC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RouteCmdP" loc="37:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <module/>
    </component>
    <component qname="RouteCmdC.ShellCommandC" loc="2(RouteCmdC.ShellCommandC):/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <instance number="0">
        <component-ref qname="ShellCommandC"/>
        <arguments>
          <value cst="S:route">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RouteCmdC.ShellCommandC.ShellCommandP" loc="2(RouteCmdC.ShellCommandC.ShellCommandP):/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc">
      <instance number="0">
        <component-ref qname="ShellCommandP"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RouteCmdC.TimerMilliC" loc="44(RouteCmdC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128SpiP" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc" abstract="" safe="">
      <documentation loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
        <short>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.</short>
        <long>&#10; Primitives for accessing the SPI module on ATmega128&#10; microcontroller.  This module assumes the bus has been reserved and&#10; checks that the bus owner is in fact the person using the bus.&#10; SpiPacket provides an asynchronous send interface where the&#10; transmit data length is equal to the receive data length, while&#10; SpiByte provides an interface for sending a single byte&#10; synchronously. SpiByte allows a component to send a few bytes&#10; in a simple fashion: if more than a handful need to be sent,&#10; SpiPacket should be used.&#10;&#10;&#10; &#60;pre>&#10;  $Id: Atm128SpiP.nc,v 1.12 2010-06-29 22:07:43 scipio Exp $&#10; &#60;/pre>&#10;&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x4051e2c0" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x4051e4e8" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x4051e710" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x4059b4c0" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x405a3380" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOPortP" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
        <short>&#10; Generic component to expose a full 8-bit port of GPIO pins.</short>
        <long>&#10; Generic component to expose a full 8-bit port of GPIO pins.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405f9e38" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405f6068" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405f6280" loc="40:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
          <component-ref qname="HplAtm128GeneralIOPortP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HplAtm128GeneralIOPinP" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
        <short>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates).</short>
        <long>&#10; Generic pin access for pins mapped into I/O space (for which the sbi, cbi&#10; instructions give atomic updates). This can be used for ports A-E.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x405ff238" loc="41:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x405ff460" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x405ff688" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x405ff878" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
          <component-ref qname="HplAtm128GeneralIOPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HplAtm128GeneralIOSlowPinP" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
        <short>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used).</short>
        <long>&#10; Generic pin access for pins not mapped into I/O space (for which the&#10; sbi, cbi instructions cannot be used). This can be used for ports F-G.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay &#60;dgay@intel-research.net>&#10;</long>
      </documentation>
      <parameters>
        <constant name="port_addr" ref="0x40654790" loc="42:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x406549b8" loc="43:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40654be0" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="bit" ref="0x40654dd0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
          <component-ref qname="HplAtm128GeneralIOSlowPinP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.x/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="46:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @author Philip Levis &#60;pal@cs.stanford.edu> (maintainer)&#10; @version $Revision: 1.7 $ $Date: 2008-06-23 20:25:15 $&#10;&#10; Modification @ 11/27 (pal): Folded in Alec's reimplementation&#10; from the -devel branch. Fixed bug in RX interrupts, where&#10; they were not enabled on start. Possibly due to alternative&#10; ARC TEP113 implementation that uses UartStream?&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x409cbe40" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409cbe40"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409c72c0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c72c0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x409c74b0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x409c76b8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x40a5aa98" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40a5aa98"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40a5aec8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40a5aec8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40a570d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40a86a20" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40a86a20"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40a86e80" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40a86e80"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40a83168" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40a83168"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40a835d8" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40a835d8"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40a83840" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x40a83cc8" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x40a83cc8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x40a68708" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x40a68708"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x40a68b68" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x40a68b68"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x40a68dd0" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x40a68dd0"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x40a93258" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x40a93258"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x40a934c0" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40abb358" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40abb358"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ac5ee8" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ac5ee8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x40ac20f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningDummyC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningDummyP" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40f0f258" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40f0f258"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40ff22f8" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40ff22f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40ff2728" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40ff2728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4125f010" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125f010"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x4125f230" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4125d508" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4125d508"/></type-var>
        </typedef>
        <constant name="size" ref="0x4125d6f8" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x41248928" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x41248928"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x41248b50" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineP" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x414da870" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ShellCommandC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc" abstract="">
      <parameters>
        <constant name="cmd_name" ref="0x4156e958" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
          <component-ref qname="ShellCommandC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ShellCommandP" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc" abstract="">
      <parameters>
        <constant name="cmd_name" ref="0x415a0d48" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc">
          <component-ref qname="ShellCommandP"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="SoftwareInit" ref="0x40457358" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40457358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40457530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40458670" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40458670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40458848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40457b10" loc="37:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40457b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40457ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4045b3c0" loc="39:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4045b3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4045b598"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4045b678"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4045b758"/>
        <function-ref name="actualMicro" scoped="" ref="0x4045b838"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4045b918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x4045bb20" loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x4045bb20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045bcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045ed48" loc="39:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045ed48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045ef20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x404638e0" loc="45:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x404638e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40463ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x40463510" loc="44:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x40463510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404636e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x40463150" loc="43:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x40463150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40463328"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4045d900" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4045d900"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045dad8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x404680c8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x404680c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404682a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x4045dd08" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x4045dd08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045dee0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x4047c010" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x4047c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047c1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4047d010" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4047d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x4047dbb0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x4047dbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047dd88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x4047d438" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x4047d438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047d610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x4047d800" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x4047d800"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4047d9d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40489828" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40489828"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40489a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x40489bd8" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40489bd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40489db0"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40489e90"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40488010"/>
        <function-ref name="actualMicro" scoped="" ref="0x404880f0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x404881d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x40466568" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x40466568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40466740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40464b08" loc="36:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40464b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40464ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiByte" ref="0x4049e040" loc="40:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x4049e040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x4049e218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CSN" ref="0x4049c1c8" loc="38:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x4049c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049c3a0"/>
        <function-ref name="isInput" scoped="" ref="0x4049c480"/>
        <function-ref name="toggle" scoped="" ref="0x4049c560"/>
        <function-ref name="isOutput" scoped="" ref="0x4049c640"/>
        <function-ref name="get" scoped="" ref="0x4049c720"/>
        <function-ref name="makeOutput" scoped="" ref="0x4049c800"/>
        <function-ref name="set" scoped="" ref="0x4049c8e0"/>
        <function-ref name="clr" scoped="" ref="0x4049c9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SpiResource" ref="0x404a08f0" loc="37:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiResource" scoped="" ref="0x404a08f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404a0ac8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404a0ba8"/>
        <function-ref name="request" scoped="" ref="0x404a0c88"/>
        <function-ref name="granted" scoped="" ref="0x404a0d68"/>
        <function-ref name="isOwner" scoped="" ref="0x404a0e48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x4049a350" loc="36:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x4049a350"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4049a528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Hold" ref="0x4049cbd0" loc="39:/opt/tinyos-2.x/tos/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x4049cbd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4049cda8"/>
        <function-ref name="isInput" scoped="" ref="0x4049ce88"/>
        <function-ref name="toggle" scoped="" ref="0x40496010"/>
        <function-ref name="isOutput" scoped="" ref="0x404960f0"/>
        <function-ref name="get" scoped="" ref="0x404961d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404962b0"/>
        <function-ref name="set" scoped="" ref="0x40496390"/>
        <function-ref name="clr" scoped="" ref="0x40496470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x404a9dc8" loc="44:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <component-ref qname="HplStm25pSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x404a9dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404a2010"/>
        <function-ref name="sendDone" scoped="" ref="0x404a20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x404a37b8" loc="43:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <component-ref qname="HplStm25pSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x404a37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x404a3990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x404a30b8" loc="42:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pSpiC.nc">
      <component-ref qname="HplStm25pSpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x404a30b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404a3290"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404a3370"/>
        <function-ref name="request" scoped="" ref="0x404a3450"/>
        <function-ref name="granted" scoped="" ref="0x404a3530"/>
        <function-ref name="isOwner" scoped="" ref="0x404a3610"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x404b24d0" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x404b24d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404b26a8"/>
        <function-ref name="sendDone" scoped="" ref="0x404b2788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x404a2bc0" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x404a2bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x404a2d98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404a2840" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404a2840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404a2a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x404b0e78" loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x404b0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x404b2070"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x404b2150"/>
        <function-ref name="splitRead" scoped="" ref="0x404b2230"/>
        <function-ref name="write" scoped="" ref="0x404b2310"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x404b2c20" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiC.nc">
      <component-ref qname="Atm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x404b2c20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404b2df8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404b2ed8"/>
        <function-ref name="request" scoped="" ref="0x404b1010"/>
        <function-ref name="granted" scoped="" ref="0x404b10f0"/>
        <function-ref name="isOwner" scoped="" ref="0x404b11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="zeroTask" ref="0x404fbc20" loc="290:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="zeroTask" scoped="" ref="0x404fbc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x404fbdf8"/>
        <function-ref name="runTask" scoped="" ref="0x404fbed8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiPacket" ref="0x404f28e0" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiPacket" scoped="" ref="0x404f28e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404f2ab8"/>
        <function-ref name="sendDone" scoped="" ref="0x404f2b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceArbiter" ref="0x404f0de8" loc="99:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceArbiter" scoped="" ref="0x404f0de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404fb010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404fb0f0"/>
        <function-ref name="request" scoped="" ref="0x404fb1d0"/>
        <function-ref name="granted" scoped="" ref="0x404fb2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x404fb390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiByte" ref="0x404f2010" loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiByte" scoped="" ref="0x404f2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="write" scoped="" ref="0x404f21e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x404b9c88" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x404b9c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x404b9e60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Spi" ref="0x404f1520" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Spi" scoped="" ref="0x404f1520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x404f16f8"/>
        <function-ref name="setClockPhase" scoped="" ref="0x404f0b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x404f18b8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x404f0bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x404f1a78"/>
        <function-ref name="setMasterBit" scoped="" ref="0x404f1b58"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x404f1c38"/>
        <function-ref name="read" scoped="" ref="0x404f1d18"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x404f1df8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x404f1ed8"/>
        <function-ref name="setClock" scoped="" ref="0x404f0010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x404f00f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x404f01d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x404f0330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x404f0410"/>
        <function-ref name="write" scoped="" ref="0x404f04f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x404f05d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x404f06b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x404f0790"/>
        <function-ref name="getClock" scoped="" ref="0x404f0870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x404f0950"/>
        <function-ref name="sleep" scoped="" ref="0x404f17d8"/>
        <function-ref name="dataReady" scoped="" ref="0x404f1998"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x404f0a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FastSpiByte" ref="0x404f2328" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FastSpiByte" scoped="" ref="0x404f2328"/></type-interface>
      <instance>
        <interfacedef-ref qname="FastSpiByte"/>
      </instance>
      <interface-functions>
        <function-ref name="splitWrite" scoped="" ref="0x404f2500"/>
        <function-ref name="splitReadWrite" scoped="" ref="0x404f25e0"/>
        <function-ref name="splitRead" scoped="" ref="0x404f26c0"/>
        <function-ref name="write" scoped="" ref="0x404f27a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x404f2d70" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x404f2d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x404f1010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x404f10f0"/>
        <function-ref name="request" scoped="" ref="0x404f11d0"/>
        <function-ref name="granted" scoped="" ref="0x404f12b0"/>
        <function-ref name="isOwner" scoped="" ref="0x404f1390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x404fb4d0" loc="100:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x404fb4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x404fb6a8"/>
        <function-ref name="userId" scoped="" ref="0x404fb788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x404fb8c8" loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/Atm128SpiP.nc">
      <component-ref qname="Atm128SpiC.SpiMaster"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x404fb8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x404fbaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SpiBus" ref="0x404f94e0" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiC.nc">
      <component-ref qname="HplAtm128SpiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SpiBus" scoped="" ref="0x404f94e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x404f96b8"/>
        <function-ref name="sleep" scoped="" ref="0x404f6b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x404f9878"/>
        <function-ref name="dataReady" scoped="" ref="0x404f6bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x404f9a38"/>
        <function-ref name="setMasterBit" scoped="" ref="0x404f9b18"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x404f9bf8"/>
        <function-ref name="read" scoped="" ref="0x404f9cd8"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x404f9db8"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x404f9e98"/>
        <function-ref name="setClock" scoped="" ref="0x404f6010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x404f60f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x404f61d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x404f6330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x404f6410"/>
        <function-ref name="write" scoped="" ref="0x404f64f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x404f65d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x404f66b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x404f6790"/>
        <function-ref name="getClock" scoped="" ref="0x404f6870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x404f6950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x404f9798"/>
        <function-ref name="setClockPhase" scoped="" ref="0x404f9958"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x404f6a30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x405240a0" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x405240a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524478"/>
        <function-ref name="isInput" scoped="" ref="0x40524558"/>
        <function-ref name="toggle" scoped="" ref="0x40524638"/>
        <function-ref name="isOutput" scoped="" ref="0x40524718"/>
        <function-ref name="get" scoped="" ref="0x405247f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405248d8"/>
        <function-ref name="set" scoped="" ref="0x405249b8"/>
        <function-ref name="clr" scoped="" ref="0x40524a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40509670" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40509670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40509848"/>
        <function-ref name="isInput" scoped="" ref="0x40509928"/>
        <function-ref name="toggle" scoped="" ref="0x40509a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40509ae8"/>
        <function-ref name="get" scoped="" ref="0x40509bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40509ca8"/>
        <function-ref name="set" scoped="" ref="0x40509d88"/>
        <function-ref name="clr" scoped="" ref="0x40509e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x40511c08" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x40511c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40511de0"/>
        <function-ref name="isInput" scoped="" ref="0x40511ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40510010"/>
        <function-ref name="isOutput" scoped="" ref="0x405100f0"/>
        <function-ref name="get" scoped="" ref="0x405101d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405102b0"/>
        <function-ref name="set" scoped="" ref="0x40510390"/>
        <function-ref name="clr" scoped="" ref="0x40510470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x4051ace8" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x4051ace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051aec0"/>
        <function-ref name="isInput" scoped="" ref="0x40519010"/>
        <function-ref name="toggle" scoped="" ref="0x405190f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405191d0"/>
        <function-ref name="get" scoped="" ref="0x405192b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519390"/>
        <function-ref name="set" scoped="" ref="0x40519470"/>
        <function-ref name="clr" scoped="" ref="0x40519550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x40521670" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x40521670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40521848"/>
        <function-ref name="isInput" scoped="" ref="0x40521928"/>
        <function-ref name="toggle" scoped="" ref="0x40521a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40521ae8"/>
        <function-ref name="get" scoped="" ref="0x40521bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40521ca8"/>
        <function-ref name="set" scoped="" ref="0x40521d88"/>
        <function-ref name="clr" scoped="" ref="0x40521e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x40508210" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x40508210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405083e8"/>
        <function-ref name="isInput" scoped="" ref="0x405084c8"/>
        <function-ref name="toggle" scoped="" ref="0x405085a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40508688"/>
        <function-ref name="get" scoped="" ref="0x40508768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40508848"/>
        <function-ref name="set" scoped="" ref="0x40508928"/>
        <function-ref name="clr" scoped="" ref="0x40508a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x4051b8e0" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x4051b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4051bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4051bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4051bd58"/>
        <function-ref name="get" scoped="" ref="0x4051be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051bf18"/>
        <function-ref name="set" scoped="" ref="0x4051a010"/>
        <function-ref name="clr" scoped="" ref="0x4051a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40507670" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40507670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40507848"/>
        <function-ref name="isInput" scoped="" ref="0x40507928"/>
        <function-ref name="toggle" scoped="" ref="0x40507a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40507ae8"/>
        <function-ref name="get" scoped="" ref="0x40507bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40507ca8"/>
        <function-ref name="set" scoped="" ref="0x40507d88"/>
        <function-ref name="clr" scoped="" ref="0x40507e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x4050fce8" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x4050fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4050d010"/>
        <function-ref name="toggle" scoped="" ref="0x4050d0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4050d1d0"/>
        <function-ref name="get" scoped="" ref="0x4050d2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050d390"/>
        <function-ref name="set" scoped="" ref="0x4050d470"/>
        <function-ref name="clr" scoped="" ref="0x4050d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x405154b0" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x405154b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40515688"/>
        <function-ref name="isInput" scoped="" ref="0x40515768"/>
        <function-ref name="toggle" scoped="" ref="0x40515848"/>
        <function-ref name="isOutput" scoped="" ref="0x40515928"/>
        <function-ref name="get" scoped="" ref="0x40515a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40515ae8"/>
        <function-ref name="set" scoped="" ref="0x40515bc8"/>
        <function-ref name="clr" scoped="" ref="0x40515ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x4051da98" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x4051da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4051dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4051de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4051df10"/>
        <function-ref name="get" scoped="" ref="0x4051c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051c0f0"/>
        <function-ref name="set" scoped="" ref="0x4051c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4051c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40501d68" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40501d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fe010"/>
        <function-ref name="isInput" scoped="" ref="0x404fe0f0"/>
        <function-ref name="toggle" scoped="" ref="0x404fe1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fe2b0"/>
        <function-ref name="get" scoped="" ref="0x404fe390"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fe470"/>
        <function-ref name="set" scoped="" ref="0x404fe550"/>
        <function-ref name="clr" scoped="" ref="0x404fe630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x405054b0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x405054b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40505688"/>
        <function-ref name="isInput" scoped="" ref="0x40505768"/>
        <function-ref name="toggle" scoped="" ref="0x40505848"/>
        <function-ref name="isOutput" scoped="" ref="0x40505928"/>
        <function-ref name="get" scoped="" ref="0x40505a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40505ae8"/>
        <function-ref name="set" scoped="" ref="0x40505bc8"/>
        <function-ref name="clr" scoped="" ref="0x40505ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x4050cc08" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x4050cc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050cde0"/>
        <function-ref name="isInput" scoped="" ref="0x4050cec0"/>
        <function-ref name="toggle" scoped="" ref="0x4050b010"/>
        <function-ref name="isOutput" scoped="" ref="0x4050b0f0"/>
        <function-ref name="get" scoped="" ref="0x4050b1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050b2b0"/>
        <function-ref name="set" scoped="" ref="0x4050b390"/>
        <function-ref name="clr" scoped="" ref="0x4050b470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x405132f0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x405132f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405134c8"/>
        <function-ref name="isInput" scoped="" ref="0x405135a8"/>
        <function-ref name="toggle" scoped="" ref="0x40513688"/>
        <function-ref name="isOutput" scoped="" ref="0x40513768"/>
        <function-ref name="get" scoped="" ref="0x40513848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40513928"/>
        <function-ref name="set" scoped="" ref="0x40513a08"/>
        <function-ref name="clr" scoped="" ref="0x40513ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x40518c08" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x40518c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40518de0"/>
        <function-ref name="isInput" scoped="" ref="0x40518ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40517010"/>
        <function-ref name="isOutput" scoped="" ref="0x405170f0"/>
        <function-ref name="get" scoped="" ref="0x405171d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405172b0"/>
        <function-ref name="set" scoped="" ref="0x40517390"/>
        <function-ref name="clr" scoped="" ref="0x40517470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x40522210" loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x40522210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405223e8"/>
        <function-ref name="isInput" scoped="" ref="0x405224c8"/>
        <function-ref name="toggle" scoped="" ref="0x405225a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40522688"/>
        <function-ref name="get" scoped="" ref="0x40522768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40522848"/>
        <function-ref name="set" scoped="" ref="0x40522928"/>
        <function-ref name="clr" scoped="" ref="0x40522a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x40512750" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x40512750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40512928"/>
        <function-ref name="isInput" scoped="" ref="0x40512a08"/>
        <function-ref name="toggle" scoped="" ref="0x40512ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40512bc8"/>
        <function-ref name="get" scoped="" ref="0x40512ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512d88"/>
        <function-ref name="set" scoped="" ref="0x40512e68"/>
        <function-ref name="clr" scoped="" ref="0x40511010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x404fdce8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x404fdce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fdec0"/>
        <function-ref name="isInput" scoped="" ref="0x404fc010"/>
        <function-ref name="toggle" scoped="" ref="0x404fc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x404fc1d0"/>
        <function-ref name="get" scoped="" ref="0x404fc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fc390"/>
        <function-ref name="set" scoped="" ref="0x404fc470"/>
        <function-ref name="clr" scoped="" ref="0x404fc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x405033d0" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x405033d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405035a8"/>
        <function-ref name="isInput" scoped="" ref="0x40503688"/>
        <function-ref name="toggle" scoped="" ref="0x40503768"/>
        <function-ref name="isOutput" scoped="" ref="0x40503848"/>
        <function-ref name="get" scoped="" ref="0x40503928"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503a08"/>
        <function-ref name="set" scoped="" ref="0x40503ae8"/>
        <function-ref name="clr" scoped="" ref="0x40503bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x40524c98" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x40524c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40524e70"/>
        <function-ref name="isInput" scoped="" ref="0x40523010"/>
        <function-ref name="toggle" scoped="" ref="0x405230f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405231d0"/>
        <function-ref name="get" scoped="" ref="0x405232b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523390"/>
        <function-ref name="set" scoped="" ref="0x40523470"/>
        <function-ref name="clr" scoped="" ref="0x40523550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x40502830" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x40502830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502a08"/>
        <function-ref name="isInput" scoped="" ref="0x40502ae8"/>
        <function-ref name="toggle" scoped="" ref="0x40502bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x40502ca8"/>
        <function-ref name="get" scoped="" ref="0x40502d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502e68"/>
        <function-ref name="set" scoped="" ref="0x4050f010"/>
        <function-ref name="clr" scoped="" ref="0x4050f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x405160a0" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x405160a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516278"/>
        <function-ref name="isInput" scoped="" ref="0x40516358"/>
        <function-ref name="toggle" scoped="" ref="0x40516438"/>
        <function-ref name="isOutput" scoped="" ref="0x40516518"/>
        <function-ref name="get" scoped="" ref="0x405165f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405166d8"/>
        <function-ref name="set" scoped="" ref="0x405167b8"/>
        <function-ref name="clr" scoped="" ref="0x40516898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40510670" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40510670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40510848"/>
        <function-ref name="isInput" scoped="" ref="0x40510928"/>
        <function-ref name="toggle" scoped="" ref="0x40510a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40510ae8"/>
        <function-ref name="get" scoped="" ref="0x40510bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40510ca8"/>
        <function-ref name="set" scoped="" ref="0x40510d88"/>
        <function-ref name="clr" scoped="" ref="0x40510e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40519750" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40519750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40519928"/>
        <function-ref name="isInput" scoped="" ref="0x40519a08"/>
        <function-ref name="toggle" scoped="" ref="0x40519ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40519bc8"/>
        <function-ref name="get" scoped="" ref="0x40519ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40519d88"/>
        <function-ref name="set" scoped="" ref="0x40519e68"/>
        <function-ref name="clr" scoped="" ref="0x40518010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x40508c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x40508c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40508de0"/>
        <function-ref name="isInput" scoped="" ref="0x40508ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40507010"/>
        <function-ref name="isOutput" scoped="" ref="0x405070f0"/>
        <function-ref name="get" scoped="" ref="0x405071d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405072b0"/>
        <function-ref name="set" scoped="" ref="0x40507390"/>
        <function-ref name="clr" scoped="" ref="0x40507470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x405060a0" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x405060a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506278"/>
        <function-ref name="isInput" scoped="" ref="0x40506358"/>
        <function-ref name="toggle" scoped="" ref="0x40506438"/>
        <function-ref name="isOutput" scoped="" ref="0x40506518"/>
        <function-ref name="get" scoped="" ref="0x405065f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405066d8"/>
        <function-ref name="set" scoped="" ref="0x405067b8"/>
        <function-ref name="clr" scoped="" ref="0x40506898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x4050d750" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x4050d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050d928"/>
        <function-ref name="isInput" scoped="" ref="0x4050da08"/>
        <function-ref name="toggle" scoped="" ref="0x4050dae8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050dbc8"/>
        <function-ref name="get" scoped="" ref="0x4050dca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050dd88"/>
        <function-ref name="set" scoped="" ref="0x4050de68"/>
        <function-ref name="clr" scoped="" ref="0x4050c010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x40515ea8" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x40515ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405140c0"/>
        <function-ref name="isInput" scoped="" ref="0x405141a0"/>
        <function-ref name="toggle" scoped="" ref="0x40514280"/>
        <function-ref name="isOutput" scoped="" ref="0x40514360"/>
        <function-ref name="get" scoped="" ref="0x40514440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40514520"/>
        <function-ref name="set" scoped="" ref="0x40514600"/>
        <function-ref name="clr" scoped="" ref="0x405146e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x4051c4b0" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x4051c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051c688"/>
        <function-ref name="isInput" scoped="" ref="0x4051c768"/>
        <function-ref name="toggle" scoped="" ref="0x4051c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4051c928"/>
        <function-ref name="get" scoped="" ref="0x4051ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051cae8"/>
        <function-ref name="set" scoped="" ref="0x4051cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4051cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x404fe830" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x404fe830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fea08"/>
        <function-ref name="isInput" scoped="" ref="0x404feae8"/>
        <function-ref name="toggle" scoped="" ref="0x404febc8"/>
        <function-ref name="isOutput" scoped="" ref="0x404feca8"/>
        <function-ref name="get" scoped="" ref="0x404fed88"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fee68"/>
        <function-ref name="set" scoped="" ref="0x404fd010"/>
        <function-ref name="clr" scoped="" ref="0x404fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x40505ea8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x40505ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504188"/>
        <function-ref name="isInput" scoped="" ref="0x40504268"/>
        <function-ref name="toggle" scoped="" ref="0x40504348"/>
        <function-ref name="isOutput" scoped="" ref="0x40504428"/>
        <function-ref name="get" scoped="" ref="0x40504508"/>
        <function-ref name="makeOutput" scoped="" ref="0x405045e8"/>
        <function-ref name="set" scoped="" ref="0x405046c8"/>
        <function-ref name="clr" scoped="" ref="0x405047a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x4050b670" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x4050b670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050b848"/>
        <function-ref name="isInput" scoped="" ref="0x4050b928"/>
        <function-ref name="toggle" scoped="" ref="0x4050ba08"/>
        <function-ref name="isOutput" scoped="" ref="0x4050bae8"/>
        <function-ref name="get" scoped="" ref="0x4050bbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050bca8"/>
        <function-ref name="set" scoped="" ref="0x4050bd88"/>
        <function-ref name="clr" scoped="" ref="0x4050be68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x40517670" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x40517670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40517848"/>
        <function-ref name="isInput" scoped="" ref="0x40517928"/>
        <function-ref name="toggle" scoped="" ref="0x40517a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40517ae8"/>
        <function-ref name="get" scoped="" ref="0x40517bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40517ca8"/>
        <function-ref name="set" scoped="" ref="0x40517d88"/>
        <function-ref name="clr" scoped="" ref="0x40517e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x4050aa98" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x4050aa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050ad70"/>
        <function-ref name="isInput" scoped="" ref="0x4050ae50"/>
        <function-ref name="toggle" scoped="" ref="0x40509010"/>
        <function-ref name="isOutput" scoped="" ref="0x405090f0"/>
        <function-ref name="get" scoped="" ref="0x405091d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405092b0"/>
        <function-ref name="set" scoped="" ref="0x40509390"/>
        <function-ref name="clr" scoped="" ref="0x40509470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x40511210" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x40511210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405113e8"/>
        <function-ref name="isInput" scoped="" ref="0x405114c8"/>
        <function-ref name="toggle" scoped="" ref="0x405115a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40511688"/>
        <function-ref name="get" scoped="" ref="0x40511768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40511848"/>
        <function-ref name="set" scoped="" ref="0x40511928"/>
        <function-ref name="clr" scoped="" ref="0x40511a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x4051a2f0" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x4051a2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051a4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4051a5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4051a688"/>
        <function-ref name="isOutput" scoped="" ref="0x4051a768"/>
        <function-ref name="get" scoped="" ref="0x4051a848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051a928"/>
        <function-ref name="set" scoped="" ref="0x4051aa08"/>
        <function-ref name="clr" scoped="" ref="0x4051aae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x40522c08" loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x40522c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40522de0"/>
        <function-ref name="isInput" scoped="" ref="0x40522ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40521010"/>
        <function-ref name="isOutput" scoped="" ref="0x405210f0"/>
        <function-ref name="get" scoped="" ref="0x405211d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405212b0"/>
        <function-ref name="set" scoped="" ref="0x40521390"/>
        <function-ref name="clr" scoped="" ref="0x40521470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x404fc750" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x404fc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fc928"/>
        <function-ref name="isInput" scoped="" ref="0x404fca08"/>
        <function-ref name="toggle" scoped="" ref="0x404fcae8"/>
        <function-ref name="isOutput" scoped="" ref="0x404fcbc8"/>
        <function-ref name="get" scoped="" ref="0x404fcca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fcd88"/>
        <function-ref name="set" scoped="" ref="0x404fce68"/>
        <function-ref name="clr" scoped="" ref="0x40508010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x40503dc8" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x40503dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40502010"/>
        <function-ref name="isInput" scoped="" ref="0x405020f0"/>
        <function-ref name="toggle" scoped="" ref="0x405021d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405022b0"/>
        <function-ref name="get" scoped="" ref="0x40502390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40502470"/>
        <function-ref name="set" scoped="" ref="0x40502550"/>
        <function-ref name="clr" scoped="" ref="0x40502630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x4051cea8" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x4051cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4051b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4051b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4051b360"/>
        <function-ref name="get" scoped="" ref="0x4051b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051b520"/>
        <function-ref name="set" scoped="" ref="0x4051b600"/>
        <function-ref name="clr" scoped="" ref="0x4051b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x4050f2f0" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x4050f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4050f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4050f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4050f768"/>
        <function-ref name="get" scoped="" ref="0x4050f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050f928"/>
        <function-ref name="set" scoped="" ref="0x4050fa08"/>
        <function-ref name="clr" scoped="" ref="0x4050fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x40516a98" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x40516a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40516c70"/>
        <function-ref name="isInput" scoped="" ref="0x40516d50"/>
        <function-ref name="toggle" scoped="" ref="0x40516e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40516f10"/>
        <function-ref name="get" scoped="" ref="0x40515010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405150f0"/>
        <function-ref name="set" scoped="" ref="0x405151d0"/>
        <function-ref name="clr" scoped="" ref="0x405152b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x4051d0a0" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x4051d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4051d278"/>
        <function-ref name="isInput" scoped="" ref="0x4051d358"/>
        <function-ref name="toggle" scoped="" ref="0x4051d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4051d518"/>
        <function-ref name="get" scoped="" ref="0x4051d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4051d6d8"/>
        <function-ref name="set" scoped="" ref="0x4051d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4051d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x40518210" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x40518210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405183e8"/>
        <function-ref name="isInput" scoped="" ref="0x405184c8"/>
        <function-ref name="toggle" scoped="" ref="0x405185a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40518688"/>
        <function-ref name="get" scoped="" ref="0x40518768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40518848"/>
        <function-ref name="set" scoped="" ref="0x40518928"/>
        <function-ref name="clr" scoped="" ref="0x40518a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x40501370" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x40501370"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40501548"/>
        <function-ref name="isInput" scoped="" ref="0x40501628"/>
        <function-ref name="toggle" scoped="" ref="0x40501708"/>
        <function-ref name="isOutput" scoped="" ref="0x405017e8"/>
        <function-ref name="get" scoped="" ref="0x405018c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405019a8"/>
        <function-ref name="set" scoped="" ref="0x40501a88"/>
        <function-ref name="clr" scoped="" ref="0x40501b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x40506a98" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x40506a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40506c70"/>
        <function-ref name="isInput" scoped="" ref="0x40506d50"/>
        <function-ref name="toggle" scoped="" ref="0x40506e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40506f10"/>
        <function-ref name="get" scoped="" ref="0x40505010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405050f0"/>
        <function-ref name="set" scoped="" ref="0x405051d0"/>
        <function-ref name="clr" scoped="" ref="0x405052b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x4050c210" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x4050c210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050c3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4050c4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4050c5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4050c688"/>
        <function-ref name="get" scoped="" ref="0x4050c768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050c848"/>
        <function-ref name="set" scoped="" ref="0x4050c928"/>
        <function-ref name="clr" scoped="" ref="0x4050ca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x405148e0" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x405148e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40514ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40514b98"/>
        <function-ref name="toggle" scoped="" ref="0x40514c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40514d58"/>
        <function-ref name="get" scoped="" ref="0x40514e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40514f18"/>
        <function-ref name="set" scoped="" ref="0x40513010"/>
        <function-ref name="clr" scoped="" ref="0x405130f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x40523750" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x40523750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40523928"/>
        <function-ref name="isInput" scoped="" ref="0x40523a08"/>
        <function-ref name="toggle" scoped="" ref="0x40523ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40523bc8"/>
        <function-ref name="get" scoped="" ref="0x40523ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40523d88"/>
        <function-ref name="set" scoped="" ref="0x40523e68"/>
        <function-ref name="clr" scoped="" ref="0x40522010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x40513ce8" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x40513ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40513ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40512010"/>
        <function-ref name="toggle" scoped="" ref="0x405120f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405121d0"/>
        <function-ref name="get" scoped="" ref="0x405122b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40512390"/>
        <function-ref name="set" scoped="" ref="0x40512470"/>
        <function-ref name="clr" scoped="" ref="0x40512550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x4050a0a0" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x4050a0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4050a278"/>
        <function-ref name="isInput" scoped="" ref="0x4050a358"/>
        <function-ref name="toggle" scoped="" ref="0x4050a438"/>
        <function-ref name="isOutput" scoped="" ref="0x4050a518"/>
        <function-ref name="get" scoped="" ref="0x4050a5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4050a6d8"/>
        <function-ref name="set" scoped="" ref="0x4050a7b8"/>
        <function-ref name="clr" scoped="" ref="0x4050a898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x404fd2f0" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x404fd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404fd4c8"/>
        <function-ref name="isInput" scoped="" ref="0x404fd5a8"/>
        <function-ref name="toggle" scoped="" ref="0x404fd688"/>
        <function-ref name="isOutput" scoped="" ref="0x404fd768"/>
        <function-ref name="get" scoped="" ref="0x404fd848"/>
        <function-ref name="makeOutput" scoped="" ref="0x404fd928"/>
        <function-ref name="set" scoped="" ref="0x404fda08"/>
        <function-ref name="clr" scoped="" ref="0x404fdae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x405049a8" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x405049a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40504b80"/>
        <function-ref name="isInput" scoped="" ref="0x40504c60"/>
        <function-ref name="toggle" scoped="" ref="0x40504d40"/>
        <function-ref name="isOutput" scoped="" ref="0x40504e20"/>
        <function-ref name="get" scoped="" ref="0x40504f00"/>
        <function-ref name="makeOutput" scoped="" ref="0x40503010"/>
        <function-ref name="set" scoped="" ref="0x405030f0"/>
        <function-ref name="clr" scoped="" ref="0x405031d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4052beb0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4052beb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4052a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4052a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4052a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4052a360"/>
        <function-ref name="get" scoped="" ref="0x4052a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4052a520"/>
        <function-ref name="set" scoped="" ref="0x4052a600"/>
        <function-ref name="clr" scoped="" ref="0x4052a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40536700" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40536700"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405368e8"/>
        <function-ref name="isInput" scoped="" ref="0x405369c8"/>
        <function-ref name="toggle" scoped="" ref="0x40536aa8"/>
        <function-ref name="isOutput" scoped="" ref="0x40536b88"/>
        <function-ref name="get" scoped="" ref="0x40536c68"/>
        <function-ref name="makeOutput" scoped="" ref="0x40536d48"/>
        <function-ref name="set" scoped="" ref="0x40536e28"/>
        <function-ref name="clr" scoped="" ref="0x40536f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40533f28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40533f28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053f120"/>
        <function-ref name="isInput" scoped="" ref="0x4053f200"/>
        <function-ref name="toggle" scoped="" ref="0x4053f2e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4053f3c0"/>
        <function-ref name="get" scoped="" ref="0x4053f4a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053f580"/>
        <function-ref name="set" scoped="" ref="0x4053f660"/>
        <function-ref name="clr" scoped="" ref="0x4053f740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4053c7a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4053c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4053c990"/>
        <function-ref name="isInput" scoped="" ref="0x4053ca70"/>
        <function-ref name="toggle" scoped="" ref="0x4053cb50"/>
        <function-ref name="isOutput" scoped="" ref="0x4053cc30"/>
        <function-ref name="get" scoped="" ref="0x4053cd10"/>
        <function-ref name="makeOutput" scoped="" ref="0x4053cdf0"/>
        <function-ref name="set" scoped="" ref="0x4053ced0"/>
        <function-ref name="clr" scoped="" ref="0x4053b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40546068" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40546068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40546250"/>
        <function-ref name="isInput" scoped="" ref="0x40546330"/>
        <function-ref name="toggle" scoped="" ref="0x40546410"/>
        <function-ref name="isOutput" scoped="" ref="0x405464f0"/>
        <function-ref name="get" scoped="" ref="0x405465d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405466b0"/>
        <function-ref name="set" scoped="" ref="0x40546790"/>
        <function-ref name="clr" scoped="" ref="0x40546870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405428a0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405428a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40542a88"/>
        <function-ref name="isInput" scoped="" ref="0x40542b68"/>
        <function-ref name="toggle" scoped="" ref="0x40542c48"/>
        <function-ref name="isOutput" scoped="" ref="0x40542d28"/>
        <function-ref name="get" scoped="" ref="0x40542e08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40542ee8"/>
        <function-ref name="set" scoped="" ref="0x40541010"/>
        <function-ref name="clr" scoped="" ref="0x405410f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4054c128" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4054c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4054c310"/>
        <function-ref name="isInput" scoped="" ref="0x4054c3f0"/>
        <function-ref name="toggle" scoped="" ref="0x4054c4d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4054c5b0"/>
        <function-ref name="get" scoped="" ref="0x4054c690"/>
        <function-ref name="makeOutput" scoped="" ref="0x4054c770"/>
        <function-ref name="set" scoped="" ref="0x4054c850"/>
        <function-ref name="clr" scoped="" ref="0x4054c930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MISO" ref="0x4056c580" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MISO" scoped="" ref="0x4056c580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056c758"/>
        <function-ref name="isInput" scoped="" ref="0x4056c838"/>
        <function-ref name="toggle" scoped="" ref="0x4056c918"/>
        <function-ref name="isOutput" scoped="" ref="0x4056c9f8"/>
        <function-ref name="get" scoped="" ref="0x4056cad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056cbb8"/>
        <function-ref name="set" scoped="" ref="0x4056cc98"/>
        <function-ref name="clr" scoped="" ref="0x4056cd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x4056f338" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4056f338"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4056f510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SCK" ref="0x4056e110" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SCK" scoped="" ref="0x4056e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056e2e8"/>
        <function-ref name="isInput" scoped="" ref="0x4056e3c8"/>
        <function-ref name="toggle" scoped="" ref="0x4056e4a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4056e588"/>
        <function-ref name="get" scoped="" ref="0x4056e668"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056e748"/>
        <function-ref name="set" scoped="" ref="0x4056e828"/>
        <function-ref name="clr" scoped="" ref="0x4056e908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SS" ref="0x4056f718" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SS" scoped="" ref="0x4056f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056f8f0"/>
        <function-ref name="isInput" scoped="" ref="0x4056f9d0"/>
        <function-ref name="toggle" scoped="" ref="0x4056fab0"/>
        <function-ref name="isOutput" scoped="" ref="0x4056fb90"/>
        <function-ref name="get" scoped="" ref="0x4056fc70"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056fd50"/>
        <function-ref name="set" scoped="" ref="0x4056fe30"/>
        <function-ref name="clr" scoped="" ref="0x4056ff10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x4056de30" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x4056de30"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4056f050"/>
        <function-ref name="stop" scoped="" ref="0x4056f130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Mcu" ref="0x4056a010" loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Mcu" scoped="" ref="0x4056a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4056a1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SPI" ref="0x40566550" loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SPI" scoped="" ref="0x40566550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Spi"/>
      </instance>
      <interface-functions>
        <function-ref name="initSlave" scoped="" ref="0x40566728"/>
        <function-ref name="sleep" scoped="" ref="0x40562b10"/>
        <function-ref name="isSpiEnabled" scoped="" ref="0x405668e8"/>
        <function-ref name="dataReady" scoped="" ref="0x40562bf0"/>
        <function-ref name="initMaster" scoped="" ref="0x40566aa8"/>
        <function-ref name="setMasterBit" scoped="" ref="0x40566b88"/>
        <function-ref name="enableInterrupt" scoped="" ref="0x40566c68"/>
        <function-ref name="read" scoped="" ref="0x40566d48"/>
        <function-ref name="setMasterDoubleSpeed" scoped="" ref="0x40566e28"/>
        <function-ref name="isInterruptEnabled" scoped="" ref="0x40566f08"/>
        <function-ref name="setClock" scoped="" ref="0x40562010"/>
        <function-ref name="isInterruptPending" scoped="" ref="0x405620f0"/>
        <function-ref name="setClockPolarity" scoped="" ref="0x405621d0"/>
        <function-ref name="isMasterDoubleSpeed" scoped="" ref="0x40562330"/>
        <function-ref name="setDataOrder" scoped="" ref="0x40562410"/>
        <function-ref name="write" scoped="" ref="0x405624f0"/>
        <function-ref name="enableSpi" scoped="" ref="0x405625d0"/>
        <function-ref name="isMasterBitSet" scoped="" ref="0x405626b0"/>
        <function-ref name="getClockPhase" scoped="" ref="0x40562790"/>
        <function-ref name="getClock" scoped="" ref="0x40562870"/>
        <function-ref name="hasWriteCollided" scoped="" ref="0x40562950"/>
        <function-ref name="getClockPolarity" scoped="" ref="0x40566808"/>
        <function-ref name="setClockPhase" scoped="" ref="0x405669c8"/>
        <function-ref name="isOrderLsbFirst" scoped="" ref="0x40562a30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MOSI" ref="0x4056eaf8" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/spi/HplAtm128SpiP.nc">
      <component-ref qname="HplAtm128SpiP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MOSI" scoped="" ref="0x4056eaf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056ecd0"/>
        <function-ref name="isInput" scoped="" ref="0x4056edb0"/>
        <function-ref name="toggle" scoped="" ref="0x4056ee90"/>
        <function-ref name="isOutput" scoped="" ref="0x4056c010"/>
        <function-ref name="get" scoped="" ref="0x4056c0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056c1d0"/>
        <function-ref name="set" scoped="" ref="0x4056c2b0"/>
        <function-ref name="clr" scoped="" ref="0x4056c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4043c098" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c098"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4043c270"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40434078" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40434078"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034f3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034f3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40434250"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40434330"/>
        <function-ref name="led1On" scoped="" ref="0x40434410"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404344f0"/>
        <function-ref name="led3Off" scoped="" ref="0x404345d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404346b0"/>
        <function-ref name="get" scoped="" ref="0x40434790"/>
        <function-ref name="led1Off" scoped="" ref="0x40434870"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40434950"/>
        <function-ref name="led3On" scoped="" ref="0x40434a30"/>
        <function-ref name="led4Off" scoped="" ref="0x40434b10"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40434bf0"/>
        <function-ref name="led0On" scoped="" ref="0x40434cd0"/>
        <function-ref name="led2Off" scoped="" ref="0x40434e30"/>
        <function-ref name="led2On" scoped="" ref="0x40434f10"/>
        <function-ref name="led4On" scoped="" ref="0x40433010"/>
        <function-ref name="set" scoped="" ref="0x404330f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x40437e60" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40437e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40436050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40436b20" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40436b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40436cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4059ccb0" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4059ccb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4059ce98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x405c7010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x405c7600" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x405c7600"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x405c77e8"/>
        <function-ref name="configure" scoped="" ref="0x405c78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4059c570" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4059c570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4059c758"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4059c838"/>
        <function-ref name="request" scoped="" ref="0x4059c918"/>
        <function-ref name="granted" scoped="" ref="0x4059c9f8"/>
        <function-ref name="isOwner" scoped="" ref="0x4059cad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x405c7150" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="Atm128SpiC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x405c7150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x405c7328"/>
        <function-ref name="userId" scoped="" ref="0x405c7408"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x415dfa98" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x415dfa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x415dfc70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x415dfdd0" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x415dfdd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x415dd010"/>
        <function-ref name="isEmpty" scoped="" ref="0x415dd0f0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x415dd1d0"/>
        <function-ref name="dequeue" scoped="" ref="0x415dd2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x415dc5a8" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x415dc5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x415dc790"/>
        <function-ref name="immediateRequested" scoped="" ref="0x415dc870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x415dce70" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x415dce70"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x415db070"/>
        <function-ref name="configure" scoped="" ref="0x415db150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x415db2b0" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x415db2b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x415db488"/>
        <function-ref name="isEmpty" scoped="" ref="0x415db568"/>
        <function-ref name="isEnqueued" scoped="" ref="0x415db648"/>
        <function-ref name="dequeue" scoped="" ref="0x415db728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x415dde18" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x415dde18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x415dc050"/>
        <function-ref name="immediateRequest" scoped="" ref="0x415dc130"/>
        <function-ref name="request" scoped="" ref="0x415dc210"/>
        <function-ref name="granted" scoped="" ref="0x415dc2f0"/>
        <function-ref name="isOwner" scoped="" ref="0x415dc3d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x415dc9b0" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x415dc9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x415dcb88"/>
        <function-ref name="userId" scoped="" ref="0x415dcc68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x415db8a8" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="Atm128SpiC.Arbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x415db8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x415dba80"/>
        <function-ref name="runTask" scoped="" ref="0x415dbb60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x404a43c0" loc="42:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x404a43c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x404a4598"/>
        <function-ref name="isInput" scoped="" ref="0x404a4678"/>
        <function-ref name="toggle" scoped="" ref="0x404a4758"/>
        <function-ref name="isOutput" scoped="" ref="0x404a4838"/>
        <function-ref name="get" scoped="" ref="0x404a4918"/>
        <function-ref name="makeOutput" scoped="" ref="0x404a49f8"/>
        <function-ref name="set" scoped="" ref="0x404a4ad8"/>
        <function-ref name="clr" scoped="" ref="0x404a4bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x404a4dc8" loc="43:/opt/tinyos-2.x/tos/platforms/ucbase/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x404a4dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d1010"/>
        <function-ref name="isInput" scoped="" ref="0x405d10f0"/>
        <function-ref name="toggle" scoped="" ref="0x405d11d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405d12b0"/>
        <function-ref name="get" scoped="" ref="0x405d1390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d1470"/>
        <function-ref name="set" scoped="" ref="0x405d1550"/>
        <function-ref name="clr" scoped="" ref="0x405d1630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x405eea98" loc="98:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x405eea98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405eee70"/>
        <function-ref name="isInput" scoped="" ref="0x405fd010"/>
        <function-ref name="toggle" scoped="" ref="0x405fd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405fd1d0"/>
        <function-ref name="get" scoped="" ref="0x405fd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fd390"/>
        <function-ref name="set" scoped="" ref="0x405fd470"/>
        <function-ref name="clr" scoped="" ref="0x405fd550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x405ed010" loc="72:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x405ed010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ed1e8"/>
        <function-ref name="isInput" scoped="" ref="0x405ed2c8"/>
        <function-ref name="toggle" scoped="" ref="0x405ed3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405ed488"/>
        <function-ref name="get" scoped="" ref="0x405ed568"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ed648"/>
        <function-ref name="set" scoped="" ref="0x405ed728"/>
        <function-ref name="clr" scoped="" ref="0x405ed808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x405e7670" loc="83:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x405e7670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e7848"/>
        <function-ref name="isInput" scoped="" ref="0x405e7928"/>
        <function-ref name="toggle" scoped="" ref="0x405e7a08"/>
        <function-ref name="isOutput" scoped="" ref="0x405e7ae8"/>
        <function-ref name="get" scoped="" ref="0x405e7bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e7ca8"/>
        <function-ref name="set" scoped="" ref="0x405e7d88"/>
        <function-ref name="clr" scoped="" ref="0x405e7e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x405f2750" loc="92:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x405f2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f2928"/>
        <function-ref name="isInput" scoped="" ref="0x405f2a08"/>
        <function-ref name="toggle" scoped="" ref="0x405f2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f2bc8"/>
        <function-ref name="get" scoped="" ref="0x405f2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f2d88"/>
        <function-ref name="set" scoped="" ref="0x405f2e68"/>
        <function-ref name="clr" scoped="" ref="0x405f1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x405fa0a0" loc="103:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x405fa0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fa278"/>
        <function-ref name="isInput" scoped="" ref="0x405fa358"/>
        <function-ref name="toggle" scoped="" ref="0x405fa438"/>
        <function-ref name="isOutput" scoped="" ref="0x405fa518"/>
        <function-ref name="get" scoped="" ref="0x405fa5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fa6d8"/>
        <function-ref name="set" scoped="" ref="0x405fa7b8"/>
        <function-ref name="clr" scoped="" ref="0x405fa898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x405dbc08" loc="50:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x405dbc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dbde0"/>
        <function-ref name="isInput" scoped="" ref="0x405dbec0"/>
        <function-ref name="toggle" scoped="" ref="0x405da010"/>
        <function-ref name="isOutput" scoped="" ref="0x405da0f0"/>
        <function-ref name="get" scoped="" ref="0x405da1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405da2b0"/>
        <function-ref name="set" scoped="" ref="0x405da390"/>
        <function-ref name="clr" scoped="" ref="0x405da470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x405f32f0" loc="90:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x405f32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f34c8"/>
        <function-ref name="isInput" scoped="" ref="0x405f35a8"/>
        <function-ref name="toggle" scoped="" ref="0x405f3688"/>
        <function-ref name="isOutput" scoped="" ref="0x405f3768"/>
        <function-ref name="get" scoped="" ref="0x405f3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f3928"/>
        <function-ref name="set" scoped="" ref="0x405f3a08"/>
        <function-ref name="clr" scoped="" ref="0x405f3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x405d80a0" loc="53:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x405d80a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d8278"/>
        <function-ref name="isInput" scoped="" ref="0x405d8358"/>
        <function-ref name="toggle" scoped="" ref="0x405d8438"/>
        <function-ref name="isOutput" scoped="" ref="0x405d8518"/>
        <function-ref name="get" scoped="" ref="0x405d85f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d86d8"/>
        <function-ref name="set" scoped="" ref="0x405d87b8"/>
        <function-ref name="clr" scoped="" ref="0x405d8898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x405e2750" loc="64:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x405e2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e2928"/>
        <function-ref name="isInput" scoped="" ref="0x405e2a08"/>
        <function-ref name="toggle" scoped="" ref="0x405e2ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e2bc8"/>
        <function-ref name="get" scoped="" ref="0x405e2ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e2d88"/>
        <function-ref name="set" scoped="" ref="0x405e2e68"/>
        <function-ref name="clr" scoped="" ref="0x405e1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x405ecea8" loc="75:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x405ecea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405eb0c0"/>
        <function-ref name="isInput" scoped="" ref="0x405eb1a0"/>
        <function-ref name="toggle" scoped="" ref="0x405eb280"/>
        <function-ref name="isOutput" scoped="" ref="0x405eb360"/>
        <function-ref name="get" scoped="" ref="0x405eb440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405eb520"/>
        <function-ref name="set" scoped="" ref="0x405eb600"/>
        <function-ref name="clr" scoped="" ref="0x405eb6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x405f54b0" loc="86:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x405f54b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f5688"/>
        <function-ref name="isInput" scoped="" ref="0x405f5768"/>
        <function-ref name="toggle" scoped="" ref="0x405f5848"/>
        <function-ref name="isOutput" scoped="" ref="0x405f5928"/>
        <function-ref name="get" scoped="" ref="0x405f5a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f5ae8"/>
        <function-ref name="set" scoped="" ref="0x405f5bc8"/>
        <function-ref name="clr" scoped="" ref="0x405f5ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x405ce8e0" loc="45:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x405ce8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ceab8"/>
        <function-ref name="isInput" scoped="" ref="0x405ceb98"/>
        <function-ref name="toggle" scoped="" ref="0x405cec78"/>
        <function-ref name="isOutput" scoped="" ref="0x405ced58"/>
        <function-ref name="get" scoped="" ref="0x405cee38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cef18"/>
        <function-ref name="set" scoped="" ref="0x405dd010"/>
        <function-ref name="clr" scoped="" ref="0x405dd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x405d7ea8" loc="56:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x405d7ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d60c0"/>
        <function-ref name="isInput" scoped="" ref="0x405d61a0"/>
        <function-ref name="toggle" scoped="" ref="0x405d6280"/>
        <function-ref name="isOutput" scoped="" ref="0x405d6360"/>
        <function-ref name="get" scoped="" ref="0x405d6440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d6520"/>
        <function-ref name="set" scoped="" ref="0x405d6600"/>
        <function-ref name="clr" scoped="" ref="0x405d66e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x405e0670" loc="67:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x405e0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e0848"/>
        <function-ref name="isInput" scoped="" ref="0x405e0928"/>
        <function-ref name="toggle" scoped="" ref="0x405e0a08"/>
        <function-ref name="isOutput" scoped="" ref="0x405e0ae8"/>
        <function-ref name="get" scoped="" ref="0x405e0bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e0ca8"/>
        <function-ref name="set" scoped="" ref="0x405e0d88"/>
        <function-ref name="clr" scoped="" ref="0x405e0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x405eace8" loc="78:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x405eace8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405eaec0"/>
        <function-ref name="isInput" scoped="" ref="0x405e9010"/>
        <function-ref name="toggle" scoped="" ref="0x405e90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e91d0"/>
        <function-ref name="get" scoped="" ref="0x405e92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e9390"/>
        <function-ref name="set" scoped="" ref="0x405e9470"/>
        <function-ref name="clr" scoped="" ref="0x405e9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x405f0670" loc="95:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x405f0670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f0848"/>
        <function-ref name="isInput" scoped="" ref="0x405f0928"/>
        <function-ref name="toggle" scoped="" ref="0x405f0a08"/>
        <function-ref name="isOutput" scoped="" ref="0x405f0ae8"/>
        <function-ref name="get" scoped="" ref="0x405f0bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f0ca8"/>
        <function-ref name="set" scoped="" ref="0x405f0d88"/>
        <function-ref name="clr" scoped="" ref="0x405f0e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x405fcc08" loc="101:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x405fcc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fcde0"/>
        <function-ref name="isInput" scoped="" ref="0x405fcec0"/>
        <function-ref name="toggle" scoped="" ref="0x405fb010"/>
        <function-ref name="isOutput" scoped="" ref="0x405fb0f0"/>
        <function-ref name="get" scoped="" ref="0x405fb1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fb2b0"/>
        <function-ref name="set" scoped="" ref="0x405fb390"/>
        <function-ref name="clr" scoped="" ref="0x405fb470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x405e8210" loc="81:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x405e8210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e83e8"/>
        <function-ref name="isInput" scoped="" ref="0x405e84c8"/>
        <function-ref name="toggle" scoped="" ref="0x405e85a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e8688"/>
        <function-ref name="get" scoped="" ref="0x405e8768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e8848"/>
        <function-ref name="set" scoped="" ref="0x405e8928"/>
        <function-ref name="clr" scoped="" ref="0x405e8a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x405dc750" loc="48:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x405dc750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dc928"/>
        <function-ref name="isInput" scoped="" ref="0x405dca08"/>
        <function-ref name="toggle" scoped="" ref="0x405dcae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405dcbc8"/>
        <function-ref name="get" scoped="" ref="0x405dcca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dcd88"/>
        <function-ref name="set" scoped="" ref="0x405dce68"/>
        <function-ref name="clr" scoped="" ref="0x405db010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x405e5dc8" loc="59:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x405e5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e4010"/>
        <function-ref name="isInput" scoped="" ref="0x405e40f0"/>
        <function-ref name="toggle" scoped="" ref="0x405e41d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e42b0"/>
        <function-ref name="get" scoped="" ref="0x405e4390"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e4470"/>
        <function-ref name="set" scoped="" ref="0x405e4550"/>
        <function-ref name="clr" scoped="" ref="0x405e4630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x405fd750" loc="99:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x405fd750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fd928"/>
        <function-ref name="isInput" scoped="" ref="0x405fda08"/>
        <function-ref name="toggle" scoped="" ref="0x405fdae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405fdbc8"/>
        <function-ref name="get" scoped="" ref="0x405fdca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fdd88"/>
        <function-ref name="set" scoped="" ref="0x405fde68"/>
        <function-ref name="clr" scoped="" ref="0x405fc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x405e32f0" loc="62:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x405e32f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e34c8"/>
        <function-ref name="isInput" scoped="" ref="0x405e35a8"/>
        <function-ref name="toggle" scoped="" ref="0x405e3688"/>
        <function-ref name="isOutput" scoped="" ref="0x405e3768"/>
        <function-ref name="get" scoped="" ref="0x405e3848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e3928"/>
        <function-ref name="set" scoped="" ref="0x405e3a08"/>
        <function-ref name="clr" scoped="" ref="0x405e3ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x405eda08" loc="73:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x405eda08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405edbe0"/>
        <function-ref name="isInput" scoped="" ref="0x405edcc0"/>
        <function-ref name="toggle" scoped="" ref="0x405edda0"/>
        <function-ref name="isOutput" scoped="" ref="0x405ede80"/>
        <function-ref name="get" scoped="" ref="0x405ec010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ec0f0"/>
        <function-ref name="set" scoped="" ref="0x405ec1d0"/>
        <function-ref name="clr" scoped="" ref="0x405ec2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x405e60a0" loc="84:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x405e60a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e6278"/>
        <function-ref name="isInput" scoped="" ref="0x405e6358"/>
        <function-ref name="toggle" scoped="" ref="0x405e6438"/>
        <function-ref name="isOutput" scoped="" ref="0x405e6518"/>
        <function-ref name="get" scoped="" ref="0x405e65f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e66d8"/>
        <function-ref name="set" scoped="" ref="0x405e67b8"/>
        <function-ref name="clr" scoped="" ref="0x405e6898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x405f1210" loc="93:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x405f1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f13e8"/>
        <function-ref name="isInput" scoped="" ref="0x405f14c8"/>
        <function-ref name="toggle" scoped="" ref="0x405f15a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405f1688"/>
        <function-ref name="get" scoped="" ref="0x405f1768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f1848"/>
        <function-ref name="set" scoped="" ref="0x405f1928"/>
        <function-ref name="clr" scoped="" ref="0x405f1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x405da670" loc="51:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x405da670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405da848"/>
        <function-ref name="isInput" scoped="" ref="0x405da928"/>
        <function-ref name="toggle" scoped="" ref="0x405daa08"/>
        <function-ref name="isOutput" scoped="" ref="0x405daae8"/>
        <function-ref name="get" scoped="" ref="0x405dabc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405daca8"/>
        <function-ref name="set" scoped="" ref="0x405dad88"/>
        <function-ref name="clr" scoped="" ref="0x405dae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x405d8a98" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x405d8a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d8c70"/>
        <function-ref name="isInput" scoped="" ref="0x405d8d50"/>
        <function-ref name="toggle" scoped="" ref="0x405d8e30"/>
        <function-ref name="isOutput" scoped="" ref="0x405d8f10"/>
        <function-ref name="get" scoped="" ref="0x405d7010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d70f0"/>
        <function-ref name="set" scoped="" ref="0x405d71d0"/>
        <function-ref name="clr" scoped="" ref="0x405d72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x405e1210" loc="65:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x405e1210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e13e8"/>
        <function-ref name="isInput" scoped="" ref="0x405e14c8"/>
        <function-ref name="toggle" scoped="" ref="0x405e15a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e1688"/>
        <function-ref name="get" scoped="" ref="0x405e1768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e1848"/>
        <function-ref name="set" scoped="" ref="0x405e1928"/>
        <function-ref name="clr" scoped="" ref="0x405e1a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x405eb8e0" loc="76:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x405eb8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ebab8"/>
        <function-ref name="isInput" scoped="" ref="0x405ebb98"/>
        <function-ref name="toggle" scoped="" ref="0x405ebc78"/>
        <function-ref name="isOutput" scoped="" ref="0x405ebd58"/>
        <function-ref name="get" scoped="" ref="0x405ebe38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ebf18"/>
        <function-ref name="set" scoped="" ref="0x405ea010"/>
        <function-ref name="clr" scoped="" ref="0x405ea0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x405f5ea8" loc="87:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x405f5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f40c0"/>
        <function-ref name="isInput" scoped="" ref="0x405f41a0"/>
        <function-ref name="toggle" scoped="" ref="0x405f4280"/>
        <function-ref name="isOutput" scoped="" ref="0x405f4360"/>
        <function-ref name="get" scoped="" ref="0x405f4440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4520"/>
        <function-ref name="set" scoped="" ref="0x405f4600"/>
        <function-ref name="clr" scoped="" ref="0x405f46e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x405dd2f0" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x405dd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dd4c8"/>
        <function-ref name="isInput" scoped="" ref="0x405dd5a8"/>
        <function-ref name="toggle" scoped="" ref="0x405dd688"/>
        <function-ref name="isOutput" scoped="" ref="0x405dd768"/>
        <function-ref name="get" scoped="" ref="0x405dd848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dd928"/>
        <function-ref name="set" scoped="" ref="0x405dda08"/>
        <function-ref name="clr" scoped="" ref="0x405ddae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x405d68e0" loc="57:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x405d68e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d6b38"/>
        <function-ref name="isInput" scoped="" ref="0x405d6c18"/>
        <function-ref name="toggle" scoped="" ref="0x405d6cf8"/>
        <function-ref name="isOutput" scoped="" ref="0x405d6dd8"/>
        <function-ref name="get" scoped="" ref="0x405d6eb8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e5010"/>
        <function-ref name="set" scoped="" ref="0x405e50f0"/>
        <function-ref name="clr" scoped="" ref="0x405e51d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x405df0a0" loc="68:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x405df0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405df278"/>
        <function-ref name="isInput" scoped="" ref="0x405df358"/>
        <function-ref name="toggle" scoped="" ref="0x405df438"/>
        <function-ref name="isOutput" scoped="" ref="0x405df518"/>
        <function-ref name="get" scoped="" ref="0x405df5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405df6d8"/>
        <function-ref name="set" scoped="" ref="0x405df7b8"/>
        <function-ref name="clr" scoped="" ref="0x405df898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x405ee0a0" loc="96:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x405ee0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ee278"/>
        <function-ref name="isInput" scoped="" ref="0x405ee358"/>
        <function-ref name="toggle" scoped="" ref="0x405ee438"/>
        <function-ref name="isOutput" scoped="" ref="0x405ee518"/>
        <function-ref name="get" scoped="" ref="0x405ee5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ee6d8"/>
        <function-ref name="set" scoped="" ref="0x405ee7b8"/>
        <function-ref name="clr" scoped="" ref="0x405ee898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x405de4b0" loc="71:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x405de4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405de788"/>
        <function-ref name="isInput" scoped="" ref="0x405de868"/>
        <function-ref name="toggle" scoped="" ref="0x405de948"/>
        <function-ref name="isOutput" scoped="" ref="0x405dea28"/>
        <function-ref name="get" scoped="" ref="0x405deb08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405debe8"/>
        <function-ref name="set" scoped="" ref="0x405decc8"/>
        <function-ref name="clr" scoped="" ref="0x405deda8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x405e8c08" loc="82:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x405e8c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e8de0"/>
        <function-ref name="isInput" scoped="" ref="0x405e8ec0"/>
        <function-ref name="toggle" scoped="" ref="0x405e7010"/>
        <function-ref name="isOutput" scoped="" ref="0x405e70f0"/>
        <function-ref name="get" scoped="" ref="0x405e71d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e72b0"/>
        <function-ref name="set" scoped="" ref="0x405e7390"/>
        <function-ref name="clr" scoped="" ref="0x405e7470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x405f3ce8" loc="91:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x405f3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x405f2010"/>
        <function-ref name="toggle" scoped="" ref="0x405f20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405f21d0"/>
        <function-ref name="get" scoped="" ref="0x405f22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f2390"/>
        <function-ref name="set" scoped="" ref="0x405f2470"/>
        <function-ref name="clr" scoped="" ref="0x405f2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x405fb670" loc="102:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x405fb670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fb848"/>
        <function-ref name="isInput" scoped="" ref="0x405fb928"/>
        <function-ref name="toggle" scoped="" ref="0x405fba08"/>
        <function-ref name="isOutput" scoped="" ref="0x405fbae8"/>
        <function-ref name="get" scoped="" ref="0x405fbbc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fbca8"/>
        <function-ref name="set" scoped="" ref="0x405fbd88"/>
        <function-ref name="clr" scoped="" ref="0x405fbe68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x405db210" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x405db210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405db3e8"/>
        <function-ref name="isInput" scoped="" ref="0x405db4c8"/>
        <function-ref name="toggle" scoped="" ref="0x405db5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405db688"/>
        <function-ref name="get" scoped="" ref="0x405db768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405db848"/>
        <function-ref name="set" scoped="" ref="0x405db928"/>
        <function-ref name="clr" scoped="" ref="0x405dba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x405e4830" loc="60:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x405e4830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e4a08"/>
        <function-ref name="isInput" scoped="" ref="0x405e4ae8"/>
        <function-ref name="toggle" scoped="" ref="0x405e4bc8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e4ca8"/>
        <function-ref name="get" scoped="" ref="0x405e4d88"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e4e68"/>
        <function-ref name="set" scoped="" ref="0x405e3010"/>
        <function-ref name="clr" scoped="" ref="0x405e30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x405f48e0" loc="89:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x405f48e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f4ab8"/>
        <function-ref name="isInput" scoped="" ref="0x405f4b98"/>
        <function-ref name="toggle" scoped="" ref="0x405f4c78"/>
        <function-ref name="isOutput" scoped="" ref="0x405f4d58"/>
        <function-ref name="get" scoped="" ref="0x405f4e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f4f18"/>
        <function-ref name="set" scoped="" ref="0x405f3010"/>
        <function-ref name="clr" scoped="" ref="0x405f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x405e3ce8" loc="63:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x405e3ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e3ec0"/>
        <function-ref name="isInput" scoped="" ref="0x405e2010"/>
        <function-ref name="toggle" scoped="" ref="0x405e20f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405e21d0"/>
        <function-ref name="get" scoped="" ref="0x405e22b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e2390"/>
        <function-ref name="set" scoped="" ref="0x405e2470"/>
        <function-ref name="clr" scoped="" ref="0x405e2550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x405ec4b0" loc="74:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x405ec4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ec688"/>
        <function-ref name="isInput" scoped="" ref="0x405ec768"/>
        <function-ref name="toggle" scoped="" ref="0x405ec848"/>
        <function-ref name="isOutput" scoped="" ref="0x405ec928"/>
        <function-ref name="get" scoped="" ref="0x405eca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ecae8"/>
        <function-ref name="set" scoped="" ref="0x405ecbc8"/>
        <function-ref name="clr" scoped="" ref="0x405ecca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x405e6a98" loc="85:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x405e6a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e6c70"/>
        <function-ref name="isInput" scoped="" ref="0x405e6d50"/>
        <function-ref name="toggle" scoped="" ref="0x405e6e30"/>
        <function-ref name="isOutput" scoped="" ref="0x405e6f10"/>
        <function-ref name="get" scoped="" ref="0x405f5010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f50f0"/>
        <function-ref name="set" scoped="" ref="0x405f51d0"/>
        <function-ref name="clr" scoped="" ref="0x405f52b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x405f1c08" loc="94:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x405f1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405f1de0"/>
        <function-ref name="isInput" scoped="" ref="0x405f1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x405f0010"/>
        <function-ref name="isOutput" scoped="" ref="0x405f00f0"/>
        <function-ref name="get" scoped="" ref="0x405f01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405f02b0"/>
        <function-ref name="set" scoped="" ref="0x405f0390"/>
        <function-ref name="clr" scoped="" ref="0x405f0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x405d1eb0" loc="44:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x405d1eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ce0c0"/>
        <function-ref name="isInput" scoped="" ref="0x405ce1a0"/>
        <function-ref name="toggle" scoped="" ref="0x405ce280"/>
        <function-ref name="isOutput" scoped="" ref="0x405ce360"/>
        <function-ref name="get" scoped="" ref="0x405ce440"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ce520"/>
        <function-ref name="set" scoped="" ref="0x405ce600"/>
        <function-ref name="clr" scoped="" ref="0x405ce6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x405d74b0" loc="55:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x405d74b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405d7688"/>
        <function-ref name="isInput" scoped="" ref="0x405d7768"/>
        <function-ref name="toggle" scoped="" ref="0x405d7848"/>
        <function-ref name="isOutput" scoped="" ref="0x405d7928"/>
        <function-ref name="get" scoped="" ref="0x405d7a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405d7ae8"/>
        <function-ref name="set" scoped="" ref="0x405d7bc8"/>
        <function-ref name="clr" scoped="" ref="0x405d7ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x405e1c08" loc="66:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x405e1c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e1de0"/>
        <function-ref name="isInput" scoped="" ref="0x405e1ec0"/>
        <function-ref name="toggle" scoped="" ref="0x405e0010"/>
        <function-ref name="isOutput" scoped="" ref="0x405e00f0"/>
        <function-ref name="get" scoped="" ref="0x405e01d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e02b0"/>
        <function-ref name="set" scoped="" ref="0x405e0390"/>
        <function-ref name="clr" scoped="" ref="0x405e0470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x405ea2f0" loc="77:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x405ea2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ea4c8"/>
        <function-ref name="isInput" scoped="" ref="0x405ea5a8"/>
        <function-ref name="toggle" scoped="" ref="0x405ea688"/>
        <function-ref name="isOutput" scoped="" ref="0x405ea768"/>
        <function-ref name="get" scoped="" ref="0x405ea848"/>
        <function-ref name="makeOutput" scoped="" ref="0x405ea928"/>
        <function-ref name="set" scoped="" ref="0x405eaa08"/>
        <function-ref name="clr" scoped="" ref="0x405eaae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x405fc210" loc="100:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x405fc210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405fc3e8"/>
        <function-ref name="isInput" scoped="" ref="0x405fc4c8"/>
        <function-ref name="toggle" scoped="" ref="0x405fc5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x405fc688"/>
        <function-ref name="get" scoped="" ref="0x405fc768"/>
        <function-ref name="makeOutput" scoped="" ref="0x405fc848"/>
        <function-ref name="set" scoped="" ref="0x405fc928"/>
        <function-ref name="clr" scoped="" ref="0x405fca08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x405e9750" loc="80:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x405e9750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e9928"/>
        <function-ref name="isInput" scoped="" ref="0x405e9a08"/>
        <function-ref name="toggle" scoped="" ref="0x405e9ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x405e9bc8"/>
        <function-ref name="get" scoped="" ref="0x405e9ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e9d88"/>
        <function-ref name="set" scoped="" ref="0x405e9e68"/>
        <function-ref name="clr" scoped="" ref="0x405e8010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x405dfa98" loc="69:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x405dfa98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405dfc70"/>
        <function-ref name="isInput" scoped="" ref="0x405dfd50"/>
        <function-ref name="toggle" scoped="" ref="0x405dfe30"/>
        <function-ref name="isOutput" scoped="" ref="0x405dff10"/>
        <function-ref name="get" scoped="" ref="0x405de010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405de0f0"/>
        <function-ref name="set" scoped="" ref="0x405de1d0"/>
        <function-ref name="clr" scoped="" ref="0x405de2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x405ddce8" loc="47:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x405ddce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405ddec0"/>
        <function-ref name="isInput" scoped="" ref="0x405dc010"/>
        <function-ref name="toggle" scoped="" ref="0x405dc0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405dc1d0"/>
        <function-ref name="get" scoped="" ref="0x405dc2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405dc390"/>
        <function-ref name="set" scoped="" ref="0x405dc470"/>
        <function-ref name="clr" scoped="" ref="0x405dc550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x405e53d0" loc="58:/opt/tinyos-2.x/tos/chips/atm1281/HplAtm128GeneralIOC.nc">
      <component-ref qname="HplAtm128GeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x405e53d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405e55a8"/>
        <function-ref name="isInput" scoped="" ref="0x405e5688"/>
        <function-ref name="toggle" scoped="" ref="0x405e5768"/>
        <function-ref name="isOutput" scoped="" ref="0x405e5848"/>
        <function-ref name="get" scoped="" ref="0x405e5928"/>
        <function-ref name="makeOutput" scoped="" ref="0x405e5a08"/>
        <function-ref name="set" scoped="" ref="0x405e5ae8"/>
        <function-ref name="clr" scoped="" ref="0x405e5bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4062a4f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4062a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062a6c8"/>
        <function-ref name="isInput" scoped="" ref="0x4062a7a8"/>
        <function-ref name="toggle" scoped="" ref="0x4062a888"/>
        <function-ref name="isOutput" scoped="" ref="0x4062a968"/>
        <function-ref name="get" scoped="" ref="0x4062aa48"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062ab28"/>
        <function-ref name="set" scoped="" ref="0x4062ac08"/>
        <function-ref name="clr" scoped="" ref="0x4062ace8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40628170" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40628170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628348"/>
        <function-ref name="isInput" scoped="" ref="0x40628428"/>
        <function-ref name="toggle" scoped="" ref="0x40628508"/>
        <function-ref name="isOutput" scoped="" ref="0x406285e8"/>
        <function-ref name="get" scoped="" ref="0x406286c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406287a8"/>
        <function-ref name="set" scoped="" ref="0x40628888"/>
        <function-ref name="clr" scoped="" ref="0x40628968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40619228" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40619228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40619400"/>
        <function-ref name="isInput" scoped="" ref="0x406194e0"/>
        <function-ref name="toggle" scoped="" ref="0x406195c0"/>
        <function-ref name="isOutput" scoped="" ref="0x406196a0"/>
        <function-ref name="get" scoped="" ref="0x40619780"/>
        <function-ref name="makeOutput" scoped="" ref="0x40619860"/>
        <function-ref name="set" scoped="" ref="0x40619940"/>
        <function-ref name="clr" scoped="" ref="0x40619a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4062ae48" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4062ae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40629050"/>
        <function-ref name="isInput" scoped="" ref="0x40629130"/>
        <function-ref name="toggle" scoped="" ref="0x40629210"/>
        <function-ref name="isOutput" scoped="" ref="0x406292f0"/>
        <function-ref name="get" scoped="" ref="0x406293d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406294b0"/>
        <function-ref name="set" scoped="" ref="0x40629590"/>
        <function-ref name="clr" scoped="" ref="0x40629670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40628ac8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40628ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40628ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40628d80"/>
        <function-ref name="toggle" scoped="" ref="0x40628e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40627010"/>
        <function-ref name="get" scoped="" ref="0x406270f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406271d0"/>
        <function-ref name="set" scoped="" ref="0x406272b0"/>
        <function-ref name="clr" scoped="" ref="0x40627390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40619b80" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40619b80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40619d58"/>
        <function-ref name="isInput" scoped="" ref="0x40619e38"/>
        <function-ref name="toggle" scoped="" ref="0x40619f18"/>
        <function-ref name="isOutput" scoped="" ref="0x4062a010"/>
        <function-ref name="get" scoped="" ref="0x4062a0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062a1d0"/>
        <function-ref name="set" scoped="" ref="0x4062a2b0"/>
        <function-ref name="clr" scoped="" ref="0x4062a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406297d0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406297d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406299a8"/>
        <function-ref name="isInput" scoped="" ref="0x40629a88"/>
        <function-ref name="toggle" scoped="" ref="0x40629b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40629c48"/>
        <function-ref name="get" scoped="" ref="0x40629d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40629e08"/>
        <function-ref name="set" scoped="" ref="0x40629ee8"/>
        <function-ref name="clr" scoped="" ref="0x40628010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406274f0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406274f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406276c8"/>
        <function-ref name="isInput" scoped="" ref="0x406277a8"/>
        <function-ref name="toggle" scoped="" ref="0x40627888"/>
        <function-ref name="isOutput" scoped="" ref="0x40627968"/>
        <function-ref name="get" scoped="" ref="0x40627a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40627b28"/>
        <function-ref name="set" scoped="" ref="0x40627c08"/>
        <function-ref name="clr" scoped="" ref="0x40627ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41604788" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41604788"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41604960"/>
        <function-ref name="isInput" scoped="" ref="0x41604a40"/>
        <function-ref name="toggle" scoped="" ref="0x41604b20"/>
        <function-ref name="isOutput" scoped="" ref="0x41604c00"/>
        <function-ref name="get" scoped="" ref="0x41604ce0"/>
        <function-ref name="makeOutput" scoped="" ref="0x41604dc0"/>
        <function-ref name="set" scoped="" ref="0x41604ea0"/>
        <function-ref name="clr" scoped="" ref="0x41603010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41602228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41602228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41602400"/>
        <function-ref name="isInput" scoped="" ref="0x416024e0"/>
        <function-ref name="toggle" scoped="" ref="0x416025c0"/>
        <function-ref name="isOutput" scoped="" ref="0x416026a0"/>
        <function-ref name="get" scoped="" ref="0x41602780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41602860"/>
        <function-ref name="set" scoped="" ref="0x41602940"/>
        <function-ref name="clr" scoped="" ref="0x41602a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41658c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41658c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41658de0"/>
        <function-ref name="isInput" scoped="" ref="0x41658ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41657010"/>
        <function-ref name="isOutput" scoped="" ref="0x416570f0"/>
        <function-ref name="get" scoped="" ref="0x416571d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416572b0"/>
        <function-ref name="set" scoped="" ref="0x41657390"/>
        <function-ref name="clr" scoped="" ref="0x41657470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416566c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416566c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41656898"/>
        <function-ref name="isInput" scoped="" ref="0x41656978"/>
        <function-ref name="toggle" scoped="" ref="0x41656a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41656b38"/>
        <function-ref name="get" scoped="" ref="0x41656c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41656cf8"/>
        <function-ref name="set" scoped="" ref="0x41656dd8"/>
        <function-ref name="clr" scoped="" ref="0x41656eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416540b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416540b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41654288"/>
        <function-ref name="isInput" scoped="" ref="0x41654368"/>
        <function-ref name="toggle" scoped="" ref="0x41654448"/>
        <function-ref name="isOutput" scoped="" ref="0x41654528"/>
        <function-ref name="get" scoped="" ref="0x41654608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416546e8"/>
        <function-ref name="set" scoped="" ref="0x416547c8"/>
        <function-ref name="clr" scoped="" ref="0x416548a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41653a88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41653a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41653c60"/>
        <function-ref name="isInput" scoped="" ref="0x41653d40"/>
        <function-ref name="toggle" scoped="" ref="0x41653e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41653f00"/>
        <function-ref name="get" scoped="" ref="0x41652010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416520f0"/>
        <function-ref name="set" scoped="" ref="0x416521d0"/>
        <function-ref name="clr" scoped="" ref="0x416522b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41651538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41651538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41651710"/>
        <function-ref name="isInput" scoped="" ref="0x416517f0"/>
        <function-ref name="toggle" scoped="" ref="0x416518d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416519b0"/>
        <function-ref name="get" scoped="" ref="0x41651a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41651b70"/>
        <function-ref name="set" scoped="" ref="0x41651c50"/>
        <function-ref name="clr" scoped="" ref="0x41651d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4164f010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortA.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4164f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4164f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4164f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4164f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4164f488"/>
        <function-ref name="get" scoped="" ref="0x4164f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4164f648"/>
        <function-ref name="set" scoped="" ref="0x4164f728"/>
        <function-ref name="clr" scoped="" ref="0x4164f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40623e48" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40623e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40633050"/>
        <function-ref name="isInput" scoped="" ref="0x40633130"/>
        <function-ref name="toggle" scoped="" ref="0x40633210"/>
        <function-ref name="isOutput" scoped="" ref="0x406332f0"/>
        <function-ref name="get" scoped="" ref="0x406333d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406334b0"/>
        <function-ref name="set" scoped="" ref="0x40633590"/>
        <function-ref name="clr" scoped="" ref="0x40633670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40632ac8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40632ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40632ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40632d80"/>
        <function-ref name="toggle" scoped="" ref="0x40632e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40631010"/>
        <function-ref name="get" scoped="" ref="0x406310f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406311d0"/>
        <function-ref name="set" scoped="" ref="0x406312b0"/>
        <function-ref name="clr" scoped="" ref="0x40631390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40624b00" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40624b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40624cd8"/>
        <function-ref name="isInput" scoped="" ref="0x40624db8"/>
        <function-ref name="toggle" scoped="" ref="0x40624e98"/>
        <function-ref name="isOutput" scoped="" ref="0x40623010"/>
        <function-ref name="get" scoped="" ref="0x406230f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406231d0"/>
        <function-ref name="set" scoped="" ref="0x406232b0"/>
        <function-ref name="clr" scoped="" ref="0x40623390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x406337d0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x406337d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406339a8"/>
        <function-ref name="isInput" scoped="" ref="0x40633a88"/>
        <function-ref name="toggle" scoped="" ref="0x40633b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40633c48"/>
        <function-ref name="get" scoped="" ref="0x40633d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40633e08"/>
        <function-ref name="set" scoped="" ref="0x40633ee8"/>
        <function-ref name="clr" scoped="" ref="0x40632010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406314f0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406314f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406316c8"/>
        <function-ref name="isInput" scoped="" ref="0x406317a8"/>
        <function-ref name="toggle" scoped="" ref="0x40631888"/>
        <function-ref name="isOutput" scoped="" ref="0x40631968"/>
        <function-ref name="get" scoped="" ref="0x40631a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40631b28"/>
        <function-ref name="set" scoped="" ref="0x40631c08"/>
        <function-ref name="clr" scoped="" ref="0x40631ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x406234f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x406234f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406236c8"/>
        <function-ref name="isInput" scoped="" ref="0x406237a8"/>
        <function-ref name="toggle" scoped="" ref="0x40623888"/>
        <function-ref name="isOutput" scoped="" ref="0x40623968"/>
        <function-ref name="get" scoped="" ref="0x40623a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40623b28"/>
        <function-ref name="set" scoped="" ref="0x40623c08"/>
        <function-ref name="clr" scoped="" ref="0x40623ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40632170" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40632170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40632348"/>
        <function-ref name="isInput" scoped="" ref="0x40632428"/>
        <function-ref name="toggle" scoped="" ref="0x40632508"/>
        <function-ref name="isOutput" scoped="" ref="0x406325e8"/>
        <function-ref name="get" scoped="" ref="0x406326c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406327a8"/>
        <function-ref name="set" scoped="" ref="0x40632888"/>
        <function-ref name="clr" scoped="" ref="0x40632968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40631e48" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40631e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40630050"/>
        <function-ref name="isInput" scoped="" ref="0x40630130"/>
        <function-ref name="toggle" scoped="" ref="0x40630210"/>
        <function-ref name="isOutput" scoped="" ref="0x406302f0"/>
        <function-ref name="get" scoped="" ref="0x406303d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406304b0"/>
        <function-ref name="set" scoped="" ref="0x40630590"/>
        <function-ref name="clr" scoped="" ref="0x40630670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41674418" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41674418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416745f0"/>
        <function-ref name="isInput" scoped="" ref="0x416746d0"/>
        <function-ref name="toggle" scoped="" ref="0x416747b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41674890"/>
        <function-ref name="get" scoped="" ref="0x41674970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41674a50"/>
        <function-ref name="set" scoped="" ref="0x41674b30"/>
        <function-ref name="clr" scoped="" ref="0x41674c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41673de0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41673de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41672010"/>
        <function-ref name="isInput" scoped="" ref="0x416720f0"/>
        <function-ref name="toggle" scoped="" ref="0x416721d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416722b0"/>
        <function-ref name="get" scoped="" ref="0x41672390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41672470"/>
        <function-ref name="set" scoped="" ref="0x41672550"/>
        <function-ref name="clr" scoped="" ref="0x41672630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416717f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416717f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416719d0"/>
        <function-ref name="isInput" scoped="" ref="0x41671ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41671b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41671c70"/>
        <function-ref name="get" scoped="" ref="0x41671d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41671e30"/>
        <function-ref name="set" scoped="" ref="0x41671f10"/>
        <function-ref name="clr" scoped="" ref="0x41670010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4166f228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4166f228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4166f400"/>
        <function-ref name="isInput" scoped="" ref="0x4166f4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4166f5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4166f6a0"/>
        <function-ref name="get" scoped="" ref="0x4166f780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4166f860"/>
        <function-ref name="set" scoped="" ref="0x4166f940"/>
        <function-ref name="clr" scoped="" ref="0x4166fa20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4166ec08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4166ec08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4166ede0"/>
        <function-ref name="isInput" scoped="" ref="0x4166eec0"/>
        <function-ref name="toggle" scoped="" ref="0x4166d010"/>
        <function-ref name="isOutput" scoped="" ref="0x4166d0f0"/>
        <function-ref name="get" scoped="" ref="0x4166d1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4166d2b0"/>
        <function-ref name="set" scoped="" ref="0x4166d390"/>
        <function-ref name="clr" scoped="" ref="0x4166d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4166c6c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4166c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4166c898"/>
        <function-ref name="isInput" scoped="" ref="0x4166c978"/>
        <function-ref name="toggle" scoped="" ref="0x4166ca58"/>
        <function-ref name="isOutput" scoped="" ref="0x4166cb38"/>
        <function-ref name="get" scoped="" ref="0x4166cc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4166ccf8"/>
        <function-ref name="set" scoped="" ref="0x4166cdd8"/>
        <function-ref name="clr" scoped="" ref="0x4166ceb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4166a0b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4166a0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4166a288"/>
        <function-ref name="isInput" scoped="" ref="0x4166a368"/>
        <function-ref name="toggle" scoped="" ref="0x4166a448"/>
        <function-ref name="isOutput" scoped="" ref="0x4166a528"/>
        <function-ref name="get" scoped="" ref="0x4166a608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4166a6e8"/>
        <function-ref name="set" scoped="" ref="0x4166a7c8"/>
        <function-ref name="clr" scoped="" ref="0x4166a8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41669a88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortB.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41669a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41669c60"/>
        <function-ref name="isInput" scoped="" ref="0x41669d40"/>
        <function-ref name="toggle" scoped="" ref="0x41669e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41669f00"/>
        <function-ref name="get" scoped="" ref="0x41668010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416680f0"/>
        <function-ref name="set" scoped="" ref="0x416681d0"/>
        <function-ref name="clr" scoped="" ref="0x416682b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4062c6b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4062c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062c888"/>
        <function-ref name="isInput" scoped="" ref="0x4062c968"/>
        <function-ref name="toggle" scoped="" ref="0x4062ca48"/>
        <function-ref name="isOutput" scoped="" ref="0x4062cb28"/>
        <function-ref name="get" scoped="" ref="0x4062cc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062cce8"/>
        <function-ref name="set" scoped="" ref="0x4062cdc8"/>
        <function-ref name="clr" scoped="" ref="0x4062cea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4063c330" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4063c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063c508"/>
        <function-ref name="isInput" scoped="" ref="0x4063c5e8"/>
        <function-ref name="toggle" scoped="" ref="0x4063c6c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4063c7a8"/>
        <function-ref name="get" scoped="" ref="0x4063c888"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063c968"/>
        <function-ref name="set" scoped="" ref="0x4063ca48"/>
        <function-ref name="clr" scoped="" ref="0x4063cb28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4062d3d8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4062d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062d5b0"/>
        <function-ref name="isInput" scoped="" ref="0x4062d690"/>
        <function-ref name="toggle" scoped="" ref="0x4062d770"/>
        <function-ref name="isOutput" scoped="" ref="0x4062d850"/>
        <function-ref name="get" scoped="" ref="0x4062d930"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062da10"/>
        <function-ref name="set" scoped="" ref="0x4062daf0"/>
        <function-ref name="clr" scoped="" ref="0x4062dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4062b030" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4062b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062b208"/>
        <function-ref name="isInput" scoped="" ref="0x4062b2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4062b3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4062b4a8"/>
        <function-ref name="get" scoped="" ref="0x4062b588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062b668"/>
        <function-ref name="set" scoped="" ref="0x4062b748"/>
        <function-ref name="clr" scoped="" ref="0x4062b828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4063cc88" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4063cc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063ce60"/>
        <function-ref name="isInput" scoped="" ref="0x4063b010"/>
        <function-ref name="toggle" scoped="" ref="0x4063b0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063b1d0"/>
        <function-ref name="get" scoped="" ref="0x4063b2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063b390"/>
        <function-ref name="set" scoped="" ref="0x4063b470"/>
        <function-ref name="clr" scoped="" ref="0x4063b550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4062dd30" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4062dd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062df08"/>
        <function-ref name="isInput" scoped="" ref="0x4062c010"/>
        <function-ref name="toggle" scoped="" ref="0x4062c0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4062c1d0"/>
        <function-ref name="get" scoped="" ref="0x4062c2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4062c390"/>
        <function-ref name="set" scoped="" ref="0x4062c470"/>
        <function-ref name="clr" scoped="" ref="0x4062c550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4062b988" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4062b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4062bb60"/>
        <function-ref name="isInput" scoped="" ref="0x4062bc40"/>
        <function-ref name="toggle" scoped="" ref="0x4062bd20"/>
        <function-ref name="isOutput" scoped="" ref="0x4062be00"/>
        <function-ref name="get" scoped="" ref="0x4062bee0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063c010"/>
        <function-ref name="set" scoped="" ref="0x4063c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4063c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4063b6b0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4063b6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063b888"/>
        <function-ref name="isInput" scoped="" ref="0x4063b968"/>
        <function-ref name="toggle" scoped="" ref="0x4063ba48"/>
        <function-ref name="isOutput" scoped="" ref="0x4063bb28"/>
        <function-ref name="get" scoped="" ref="0x4063bc08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063bce8"/>
        <function-ref name="set" scoped="" ref="0x4063bdc8"/>
        <function-ref name="clr" scoped="" ref="0x4063bea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41693de8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41693de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4168f010"/>
        <function-ref name="isInput" scoped="" ref="0x4168f0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4168f1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4168f2b0"/>
        <function-ref name="get" scoped="" ref="0x4168f390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4168f470"/>
        <function-ref name="set" scoped="" ref="0x4168f550"/>
        <function-ref name="clr" scoped="" ref="0x4168f630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4168e7f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4168e7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4168e9d0"/>
        <function-ref name="isInput" scoped="" ref="0x4168eab0"/>
        <function-ref name="toggle" scoped="" ref="0x4168eb90"/>
        <function-ref name="isOutput" scoped="" ref="0x4168ec70"/>
        <function-ref name="get" scoped="" ref="0x4168ed50"/>
        <function-ref name="makeOutput" scoped="" ref="0x4168ee30"/>
        <function-ref name="set" scoped="" ref="0x4168ef10"/>
        <function-ref name="clr" scoped="" ref="0x4168d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4168c228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4168c228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4168c400"/>
        <function-ref name="isInput" scoped="" ref="0x4168c4e0"/>
        <function-ref name="toggle" scoped="" ref="0x4168c5c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4168c6a0"/>
        <function-ref name="get" scoped="" ref="0x4168c780"/>
        <function-ref name="makeOutput" scoped="" ref="0x4168c860"/>
        <function-ref name="set" scoped="" ref="0x4168c940"/>
        <function-ref name="clr" scoped="" ref="0x4168ca20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4168bc08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4168bc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4168bde0"/>
        <function-ref name="isInput" scoped="" ref="0x4168bec0"/>
        <function-ref name="toggle" scoped="" ref="0x4168a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4168a0f0"/>
        <function-ref name="get" scoped="" ref="0x4168a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4168a2b0"/>
        <function-ref name="set" scoped="" ref="0x4168a390"/>
        <function-ref name="clr" scoped="" ref="0x4168a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416896c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416896c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41689898"/>
        <function-ref name="isInput" scoped="" ref="0x41689978"/>
        <function-ref name="toggle" scoped="" ref="0x41689a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41689b38"/>
        <function-ref name="get" scoped="" ref="0x41689c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41689cf8"/>
        <function-ref name="set" scoped="" ref="0x41689dd8"/>
        <function-ref name="clr" scoped="" ref="0x41689eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416870b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416870b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41687288"/>
        <function-ref name="isInput" scoped="" ref="0x41687368"/>
        <function-ref name="toggle" scoped="" ref="0x41687448"/>
        <function-ref name="isOutput" scoped="" ref="0x41687528"/>
        <function-ref name="get" scoped="" ref="0x41687608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416876e8"/>
        <function-ref name="set" scoped="" ref="0x416877c8"/>
        <function-ref name="clr" scoped="" ref="0x416878a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41686a88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41686a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41686c60"/>
        <function-ref name="isInput" scoped="" ref="0x41686d40"/>
        <function-ref name="toggle" scoped="" ref="0x41686e20"/>
        <function-ref name="isOutput" scoped="" ref="0x41686f00"/>
        <function-ref name="get" scoped="" ref="0x41685010"/>
        <function-ref name="makeOutput" scoped="" ref="0x416850f0"/>
        <function-ref name="set" scoped="" ref="0x416851d0"/>
        <function-ref name="clr" scoped="" ref="0x416852b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41684538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortC.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41684538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41684710"/>
        <function-ref name="isInput" scoped="" ref="0x416847f0"/>
        <function-ref name="toggle" scoped="" ref="0x416848d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416849b0"/>
        <function-ref name="get" scoped="" ref="0x41684a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41684b70"/>
        <function-ref name="set" scoped="" ref="0x41684c50"/>
        <function-ref name="clr" scoped="" ref="0x41684d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40635170" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40635170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40635348"/>
        <function-ref name="isInput" scoped="" ref="0x40635428"/>
        <function-ref name="toggle" scoped="" ref="0x40635508"/>
        <function-ref name="isOutput" scoped="" ref="0x406355e8"/>
        <function-ref name="get" scoped="" ref="0x406356c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406357a8"/>
        <function-ref name="set" scoped="" ref="0x40635888"/>
        <function-ref name="clr" scoped="" ref="0x40635968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40634e48" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40634e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40645050"/>
        <function-ref name="isInput" scoped="" ref="0x40645130"/>
        <function-ref name="toggle" scoped="" ref="0x40645210"/>
        <function-ref name="isOutput" scoped="" ref="0x406452f0"/>
        <function-ref name="get" scoped="" ref="0x406453d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406454b0"/>
        <function-ref name="set" scoped="" ref="0x40645590"/>
        <function-ref name="clr" scoped="" ref="0x40645670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x40637dc8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x40637dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40636010"/>
        <function-ref name="isInput" scoped="" ref="0x406360f0"/>
        <function-ref name="toggle" scoped="" ref="0x406361d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406362b0"/>
        <function-ref name="get" scoped="" ref="0x40636390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636470"/>
        <function-ref name="set" scoped="" ref="0x40636550"/>
        <function-ref name="clr" scoped="" ref="0x40636630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40635ac8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40635ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40635ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40635d80"/>
        <function-ref name="toggle" scoped="" ref="0x40635e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40634010"/>
        <function-ref name="get" scoped="" ref="0x406340f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406341d0"/>
        <function-ref name="set" scoped="" ref="0x406342b0"/>
        <function-ref name="clr" scoped="" ref="0x40634390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x406457d0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x406457d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406459a8"/>
        <function-ref name="isInput" scoped="" ref="0x40645a88"/>
        <function-ref name="toggle" scoped="" ref="0x40645b68"/>
        <function-ref name="isOutput" scoped="" ref="0x40645c48"/>
        <function-ref name="get" scoped="" ref="0x40645d28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40645e08"/>
        <function-ref name="set" scoped="" ref="0x40645ee8"/>
        <function-ref name="clr" scoped="" ref="0x40644010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x40636790" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x40636790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40636968"/>
        <function-ref name="isInput" scoped="" ref="0x40636a48"/>
        <function-ref name="toggle" scoped="" ref="0x40636b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40636c08"/>
        <function-ref name="get" scoped="" ref="0x40636ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40636dc8"/>
        <function-ref name="set" scoped="" ref="0x40636ea8"/>
        <function-ref name="clr" scoped="" ref="0x40635010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x406344f0" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x406344f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406346c8"/>
        <function-ref name="isInput" scoped="" ref="0x406347a8"/>
        <function-ref name="toggle" scoped="" ref="0x40634888"/>
        <function-ref name="isOutput" scoped="" ref="0x40634968"/>
        <function-ref name="get" scoped="" ref="0x40634a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40634b28"/>
        <function-ref name="set" scoped="" ref="0x40634c08"/>
        <function-ref name="clr" scoped="" ref="0x40634ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x40644170" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x40644170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40644348"/>
        <function-ref name="isInput" scoped="" ref="0x40644428"/>
        <function-ref name="toggle" scoped="" ref="0x40644508"/>
        <function-ref name="isOutput" scoped="" ref="0x406445e8"/>
        <function-ref name="get" scoped="" ref="0x406446c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406447a8"/>
        <function-ref name="set" scoped="" ref="0x40644888"/>
        <function-ref name="clr" scoped="" ref="0x40644968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416ff938" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416ff938"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416ffb10"/>
        <function-ref name="isInput" scoped="" ref="0x416ffbf0"/>
        <function-ref name="toggle" scoped="" ref="0x416ffcd0"/>
        <function-ref name="isOutput" scoped="" ref="0x416ffdb0"/>
        <function-ref name="get" scoped="" ref="0x416ffe90"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fe010"/>
        <function-ref name="set" scoped="" ref="0x416fe0f0"/>
        <function-ref name="clr" scoped="" ref="0x416fe1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416fd3b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416fd3b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416fd588"/>
        <function-ref name="isInput" scoped="" ref="0x416fd668"/>
        <function-ref name="toggle" scoped="" ref="0x416fd748"/>
        <function-ref name="isOutput" scoped="" ref="0x416fd828"/>
        <function-ref name="get" scoped="" ref="0x416fd908"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fd9e8"/>
        <function-ref name="set" scoped="" ref="0x416fdac8"/>
        <function-ref name="clr" scoped="" ref="0x416fdba8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416fcd70" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416fcd70"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416fb010"/>
        <function-ref name="isInput" scoped="" ref="0x416fb0f0"/>
        <function-ref name="toggle" scoped="" ref="0x416fb1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x416fb2b0"/>
        <function-ref name="get" scoped="" ref="0x416fb390"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fb470"/>
        <function-ref name="set" scoped="" ref="0x416fb550"/>
        <function-ref name="clr" scoped="" ref="0x416fb630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416fa7f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416fa7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416fa9d0"/>
        <function-ref name="isInput" scoped="" ref="0x416faab0"/>
        <function-ref name="toggle" scoped="" ref="0x416fab90"/>
        <function-ref name="isOutput" scoped="" ref="0x416fac70"/>
        <function-ref name="get" scoped="" ref="0x416fad50"/>
        <function-ref name="makeOutput" scoped="" ref="0x416fae30"/>
        <function-ref name="set" scoped="" ref="0x416faf10"/>
        <function-ref name="clr" scoped="" ref="0x416f9010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f8228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f8228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f8400"/>
        <function-ref name="isInput" scoped="" ref="0x416f84e0"/>
        <function-ref name="toggle" scoped="" ref="0x416f85c0"/>
        <function-ref name="isOutput" scoped="" ref="0x416f86a0"/>
        <function-ref name="get" scoped="" ref="0x416f8780"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f8860"/>
        <function-ref name="set" scoped="" ref="0x416f8940"/>
        <function-ref name="clr" scoped="" ref="0x416f8a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f7c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f7c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f7de0"/>
        <function-ref name="isInput" scoped="" ref="0x416f7ec0"/>
        <function-ref name="toggle" scoped="" ref="0x416f6010"/>
        <function-ref name="isOutput" scoped="" ref="0x416f60f0"/>
        <function-ref name="get" scoped="" ref="0x416f61d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f62b0"/>
        <function-ref name="set" scoped="" ref="0x416f6390"/>
        <function-ref name="clr" scoped="" ref="0x416f6470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f56c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f56c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f5898"/>
        <function-ref name="isInput" scoped="" ref="0x416f5978"/>
        <function-ref name="toggle" scoped="" ref="0x416f5a58"/>
        <function-ref name="isOutput" scoped="" ref="0x416f5b38"/>
        <function-ref name="get" scoped="" ref="0x416f5c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f5cf8"/>
        <function-ref name="set" scoped="" ref="0x416f5dd8"/>
        <function-ref name="clr" scoped="" ref="0x416f5eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x416f30b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortD.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x416f30b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x416f3288"/>
        <function-ref name="isInput" scoped="" ref="0x416f3368"/>
        <function-ref name="toggle" scoped="" ref="0x416f3448"/>
        <function-ref name="isOutput" scoped="" ref="0x416f3528"/>
        <function-ref name="get" scoped="" ref="0x416f3608"/>
        <function-ref name="makeOutput" scoped="" ref="0x416f36e8"/>
        <function-ref name="set" scoped="" ref="0x416f37c8"/>
        <function-ref name="clr" scoped="" ref="0x416f38a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x4063f9e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x4063f9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063fbc0"/>
        <function-ref name="isInput" scoped="" ref="0x4063fca0"/>
        <function-ref name="toggle" scoped="" ref="0x4063fd80"/>
        <function-ref name="isOutput" scoped="" ref="0x4063fe60"/>
        <function-ref name="get" scoped="" ref="0x4063e010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063e0f0"/>
        <function-ref name="set" scoped="" ref="0x4063e1d0"/>
        <function-ref name="clr" scoped="" ref="0x4063e2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x4063d790" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x4063d790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063d968"/>
        <function-ref name="isInput" scoped="" ref="0x4063da48"/>
        <function-ref name="toggle" scoped="" ref="0x4063db28"/>
        <function-ref name="isOutput" scoped="" ref="0x4063dc08"/>
        <function-ref name="get" scoped="" ref="0x4063dce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063ddc8"/>
        <function-ref name="set" scoped="" ref="0x4063dea8"/>
        <function-ref name="clr" scoped="" ref="0x4064e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x406406f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x406406f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406408d0"/>
        <function-ref name="isInput" scoped="" ref="0x406409b0"/>
        <function-ref name="toggle" scoped="" ref="0x40640a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40640b70"/>
        <function-ref name="get" scoped="" ref="0x40640c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40640d30"/>
        <function-ref name="set" scoped="" ref="0x40640e10"/>
        <function-ref name="clr" scoped="" ref="0x40640ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x4063e410" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x4063e410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063e5e8"/>
        <function-ref name="isInput" scoped="" ref="0x4063e6c8"/>
        <function-ref name="toggle" scoped="" ref="0x4063e7a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4063e888"/>
        <function-ref name="get" scoped="" ref="0x4063e968"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063ea48"/>
        <function-ref name="set" scoped="" ref="0x4063eb28"/>
        <function-ref name="clr" scoped="" ref="0x4063ec08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x4064e170" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x4064e170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064e348"/>
        <function-ref name="isInput" scoped="" ref="0x4064e428"/>
        <function-ref name="toggle" scoped="" ref="0x4064e508"/>
        <function-ref name="isOutput" scoped="" ref="0x4064e5e8"/>
        <function-ref name="get" scoped="" ref="0x4064e6c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064e7a8"/>
        <function-ref name="set" scoped="" ref="0x4064e888"/>
        <function-ref name="clr" scoped="" ref="0x4064e968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4063f090" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4063f090"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063f268"/>
        <function-ref name="isInput" scoped="" ref="0x4063f348"/>
        <function-ref name="toggle" scoped="" ref="0x4063f428"/>
        <function-ref name="isOutput" scoped="" ref="0x4063f508"/>
        <function-ref name="get" scoped="" ref="0x4063f5e8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063f6c8"/>
        <function-ref name="set" scoped="" ref="0x4063f7a8"/>
        <function-ref name="clr" scoped="" ref="0x4063f888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x4063ed68" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x4063ed68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4063d010"/>
        <function-ref name="isInput" scoped="" ref="0x4063d0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4063d1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4063d2b0"/>
        <function-ref name="get" scoped="" ref="0x4063d390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4063d470"/>
        <function-ref name="set" scoped="" ref="0x4063d550"/>
        <function-ref name="clr" scoped="" ref="0x4063d630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x4064eac8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x4064eac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064eca0"/>
        <function-ref name="isInput" scoped="" ref="0x4064ed80"/>
        <function-ref name="toggle" scoped="" ref="0x4064ee60"/>
        <function-ref name="isOutput" scoped="" ref="0x4064d010"/>
        <function-ref name="get" scoped="" ref="0x4064d0f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064d1d0"/>
        <function-ref name="set" scoped="" ref="0x4064d2b0"/>
        <function-ref name="clr" scoped="" ref="0x4064d390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4171c538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4171c538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4171c710"/>
        <function-ref name="isInput" scoped="" ref="0x4171c7f0"/>
        <function-ref name="toggle" scoped="" ref="0x4171c8d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4171c9b0"/>
        <function-ref name="get" scoped="" ref="0x4171ca90"/>
        <function-ref name="makeOutput" scoped="" ref="0x4171cb70"/>
        <function-ref name="set" scoped="" ref="0x4171cc50"/>
        <function-ref name="clr" scoped="" ref="0x4171cd30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4171a010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4171a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4171a1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4171a2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4171a3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4171a488"/>
        <function-ref name="get" scoped="" ref="0x4171a568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4171a648"/>
        <function-ref name="set" scoped="" ref="0x4171a728"/>
        <function-ref name="clr" scoped="" ref="0x4171a808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417199e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417199e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41719bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41719ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41719d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41719e60"/>
        <function-ref name="get" scoped="" ref="0x41718010"/>
        <function-ref name="makeOutput" scoped="" ref="0x417180f0"/>
        <function-ref name="set" scoped="" ref="0x417181d0"/>
        <function-ref name="clr" scoped="" ref="0x417182b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41717538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41717538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41717710"/>
        <function-ref name="isInput" scoped="" ref="0x417177f0"/>
        <function-ref name="toggle" scoped="" ref="0x417178d0"/>
        <function-ref name="isOutput" scoped="" ref="0x417179b0"/>
        <function-ref name="get" scoped="" ref="0x41717a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41717b70"/>
        <function-ref name="set" scoped="" ref="0x41717c50"/>
        <function-ref name="clr" scoped="" ref="0x41717d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41715010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41715010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417151e8"/>
        <function-ref name="isInput" scoped="" ref="0x417152c8"/>
        <function-ref name="toggle" scoped="" ref="0x417153a8"/>
        <function-ref name="isOutput" scoped="" ref="0x41715488"/>
        <function-ref name="get" scoped="" ref="0x41715568"/>
        <function-ref name="makeOutput" scoped="" ref="0x41715648"/>
        <function-ref name="set" scoped="" ref="0x41715728"/>
        <function-ref name="clr" scoped="" ref="0x41715808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417149e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417149e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41714bc0"/>
        <function-ref name="isInput" scoped="" ref="0x41714ca0"/>
        <function-ref name="toggle" scoped="" ref="0x41714d80"/>
        <function-ref name="isOutput" scoped="" ref="0x41714e60"/>
        <function-ref name="get" scoped="" ref="0x41712010"/>
        <function-ref name="makeOutput" scoped="" ref="0x417120f0"/>
        <function-ref name="set" scoped="" ref="0x417121d0"/>
        <function-ref name="clr" scoped="" ref="0x417122b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41711538" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41711538"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41711710"/>
        <function-ref name="isInput" scoped="" ref="0x417117f0"/>
        <function-ref name="toggle" scoped="" ref="0x417118d0"/>
        <function-ref name="isOutput" scoped="" ref="0x417119b0"/>
        <function-ref name="get" scoped="" ref="0x41711a90"/>
        <function-ref name="makeOutput" scoped="" ref="0x41711b70"/>
        <function-ref name="set" scoped="" ref="0x41711c50"/>
        <function-ref name="clr" scoped="" ref="0x41711d30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4170f010" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortE.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4170f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4170f1e8"/>
        <function-ref name="isInput" scoped="" ref="0x4170f2c8"/>
        <function-ref name="toggle" scoped="" ref="0x4170f3a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4170f488"/>
        <function-ref name="get" scoped="" ref="0x4170f568"/>
        <function-ref name="makeOutput" scoped="" ref="0x4170f648"/>
        <function-ref name="set" scoped="" ref="0x4170f728"/>
        <function-ref name="clr" scoped="" ref="0x4170f808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin2" ref="0x40649410" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin2" scoped="" ref="0x40649410"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406495e8"/>
        <function-ref name="isInput" scoped="" ref="0x406496c8"/>
        <function-ref name="toggle" scoped="" ref="0x406497a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40649888"/>
        <function-ref name="get" scoped="" ref="0x40649968"/>
        <function-ref name="makeOutput" scoped="" ref="0x40649a48"/>
        <function-ref name="set" scoped="" ref="0x40649b28"/>
        <function-ref name="clr" scoped="" ref="0x40649c08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin5" ref="0x40646170" loc="49:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin5" scoped="" ref="0x40646170"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40646348"/>
        <function-ref name="isInput" scoped="" ref="0x40646428"/>
        <function-ref name="toggle" scoped="" ref="0x40646508"/>
        <function-ref name="isOutput" scoped="" ref="0x406465e8"/>
        <function-ref name="get" scoped="" ref="0x406466c8"/>
        <function-ref name="makeOutput" scoped="" ref="0x406467a8"/>
        <function-ref name="set" scoped="" ref="0x40646888"/>
        <function-ref name="clr" scoped="" ref="0x40646968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin0" ref="0x4064a128" loc="44:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin0" scoped="" ref="0x4064a128"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064a300"/>
        <function-ref name="isInput" scoped="" ref="0x4064a3e0"/>
        <function-ref name="toggle" scoped="" ref="0x4064a4c0"/>
        <function-ref name="isOutput" scoped="" ref="0x4064a5a0"/>
        <function-ref name="get" scoped="" ref="0x4064a680"/>
        <function-ref name="makeOutput" scoped="" ref="0x4064a760"/>
        <function-ref name="set" scoped="" ref="0x4064a840"/>
        <function-ref name="clr" scoped="" ref="0x4064a920"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin3" ref="0x40649d68" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin3" scoped="" ref="0x40649d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40647010"/>
        <function-ref name="isInput" scoped="" ref="0x406470f0"/>
        <function-ref name="toggle" scoped="" ref="0x406471d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406472b0"/>
        <function-ref name="get" scoped="" ref="0x40647390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40647470"/>
        <function-ref name="set" scoped="" ref="0x40647550"/>
        <function-ref name="clr" scoped="" ref="0x40647630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin6" ref="0x40646ac8" loc="50:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin6" scoped="" ref="0x40646ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40646ca0"/>
        <function-ref name="isInput" scoped="" ref="0x40646d80"/>
        <function-ref name="toggle" scoped="" ref="0x40646e60"/>
        <function-ref name="isOutput" scoped="" ref="0x40657010"/>
        <function-ref name="get" scoped="" ref="0x406570f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406571d0"/>
        <function-ref name="set" scoped="" ref="0x406572b0"/>
        <function-ref name="clr" scoped="" ref="0x40657390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin1" ref="0x4064aa80" loc="45:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin1" scoped="" ref="0x4064aa80"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4064ac58"/>
        <function-ref name="isInput" scoped="" ref="0x4064ad38"/>
        <function-ref name="toggle" scoped="" ref="0x4064ae18"/>
        <function-ref name="isOutput" scoped="" ref="0x4064aef8"/>
        <function-ref name="get" scoped="" ref="0x40649010"/>
        <function-ref name="makeOutput" scoped="" ref="0x406490f0"/>
        <function-ref name="set" scoped="" ref="0x406491d0"/>
        <function-ref name="clr" scoped="" ref="0x406492b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin4" ref="0x40647790" loc="48:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin4" scoped="" ref="0x40647790"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40647968"/>
        <function-ref name="isInput" scoped="" ref="0x40647a48"/>
        <function-ref name="toggle" scoped="" ref="0x40647b28"/>
        <function-ref name="isOutput" scoped="" ref="0x40647c08"/>
        <function-ref name="get" scoped="" ref="0x40647ce8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40647dc8"/>
        <function-ref name="set" scoped="" ref="0x40647ea8"/>
        <function-ref name="clr" scoped="" ref="0x40646010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin7" ref="0x406574f0" loc="51:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPortP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin7" scoped="" ref="0x406574f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406576c8"/>
        <function-ref name="isInput" scoped="" ref="0x406577a8"/>
        <function-ref name="toggle" scoped="" ref="0x40657888"/>
        <function-ref name="isOutput" scoped="" ref="0x40657968"/>
        <function-ref name="get" scoped="" ref="0x40657a48"/>
        <function-ref name="makeOutput" scoped="" ref="0x40657b28"/>
        <function-ref name="set" scoped="" ref="0x40657c08"/>
        <function-ref name="clr" scoped="" ref="0x40657ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41739418" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41739418"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417395f0"/>
        <function-ref name="isInput" scoped="" ref="0x417396d0"/>
        <function-ref name="toggle" scoped="" ref="0x417397b0"/>
        <function-ref name="isOutput" scoped="" ref="0x41739890"/>
        <function-ref name="get" scoped="" ref="0x41739970"/>
        <function-ref name="makeOutput" scoped="" ref="0x41739a50"/>
        <function-ref name="set" scoped="" ref="0x41739b30"/>
        <function-ref name="clr" scoped="" ref="0x41739c10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41738de0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41738de0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41737010"/>
        <function-ref name="isInput" scoped="" ref="0x417370f0"/>
        <function-ref name="toggle" scoped="" ref="0x417371d0"/>
        <function-ref name="isOutput" scoped="" ref="0x417372b0"/>
        <function-ref name="get" scoped="" ref="0x41737390"/>
        <function-ref name="makeOutput" scoped="" ref="0x41737470"/>
        <function-ref name="set" scoped="" ref="0x41737550"/>
        <function-ref name="clr" scoped="" ref="0x41737630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417367f8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417367f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x417369d0"/>
        <function-ref name="isInput" scoped="" ref="0x41736ab0"/>
        <function-ref name="toggle" scoped="" ref="0x41736b90"/>
        <function-ref name="isOutput" scoped="" ref="0x41736c70"/>
        <function-ref name="get" scoped="" ref="0x41736d50"/>
        <function-ref name="makeOutput" scoped="" ref="0x41736e30"/>
        <function-ref name="set" scoped="" ref="0x41736f10"/>
        <function-ref name="clr" scoped="" ref="0x41735010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41734228" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41734228"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41734400"/>
        <function-ref name="isInput" scoped="" ref="0x417344e0"/>
        <function-ref name="toggle" scoped="" ref="0x417345c0"/>
        <function-ref name="isOutput" scoped="" ref="0x417346a0"/>
        <function-ref name="get" scoped="" ref="0x41734780"/>
        <function-ref name="makeOutput" scoped="" ref="0x41734860"/>
        <function-ref name="set" scoped="" ref="0x41734940"/>
        <function-ref name="clr" scoped="" ref="0x41734a20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x41733c08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x41733c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41733de0"/>
        <function-ref name="isInput" scoped="" ref="0x41733ec0"/>
        <function-ref name="toggle" scoped="" ref="0x41732010"/>
        <function-ref name="isOutput" scoped="" ref="0x417320f0"/>
        <function-ref name="get" scoped="" ref="0x417321d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x417322b0"/>
        <function-ref name="set" scoped="" ref="0x41732390"/>
        <function-ref name="clr" scoped="" ref="0x41732470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x417316c0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x417316c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x41731898"/>
        <function-ref name="isInput" scoped="" ref="0x41731978"/>
        <function-ref name="toggle" scoped="" ref="0x41731a58"/>
        <function-ref name="isOutput" scoped="" ref="0x41731b38"/>
        <function-ref name="get" scoped="" ref="0x41731c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x41731cf8"/>
        <function-ref name="set" scoped="" ref="0x41731dd8"/>
        <function-ref name="clr" scoped="" ref="0x41731eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4172f0b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4172f0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4172f288"/>
        <function-ref name="isInput" scoped="" ref="0x4172f368"/>
        <function-ref name="toggle" scoped="" ref="0x4172f448"/>
        <function-ref name="isOutput" scoped="" ref="0x4172f528"/>
        <function-ref name="get" scoped="" ref="0x4172f608"/>
        <function-ref name="makeOutput" scoped="" ref="0x4172f6e8"/>
        <function-ref name="set" scoped="" ref="0x4172f7c8"/>
        <function-ref name="clr" scoped="" ref="0x4172f8a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4172ea88" loc="46:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.PortF.Bit7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4172ea88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4172ec60"/>
        <function-ref name="isInput" scoped="" ref="0x4172ed40"/>
        <function-ref name="toggle" scoped="" ref="0x4172ee20"/>
        <function-ref name="isOutput" scoped="" ref="0x4172ef00"/>
        <function-ref name="get" scoped="" ref="0x4172d010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4172d0f0"/>
        <function-ref name="set" scoped="" ref="0x4172d1d0"/>
        <function-ref name="clr" scoped="" ref="0x4172d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406536f8" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406536f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406538d0"/>
        <function-ref name="isInput" scoped="" ref="0x406539b0"/>
        <function-ref name="toggle" scoped="" ref="0x40653a90"/>
        <function-ref name="isOutput" scoped="" ref="0x40653b70"/>
        <function-ref name="get" scoped="" ref="0x40653c50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40653d30"/>
        <function-ref name="set" scoped="" ref="0x40653e10"/>
        <function-ref name="clr" scoped="" ref="0x40653ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40669e98" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40669e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406680c0"/>
        <function-ref name="isInput" scoped="" ref="0x406681a0"/>
        <function-ref name="toggle" scoped="" ref="0x40668280"/>
        <function-ref name="isOutput" scoped="" ref="0x40668360"/>
        <function-ref name="get" scoped="" ref="0x40668440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40668520"/>
        <function-ref name="set" scoped="" ref="0x40668600"/>
        <function-ref name="clr" scoped="" ref="0x406686e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406656c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406656c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40665898"/>
        <function-ref name="isInput" scoped="" ref="0x40665978"/>
        <function-ref name="toggle" scoped="" ref="0x40665a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40665b38"/>
        <function-ref name="get" scoped="" ref="0x40665c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40665cf8"/>
        <function-ref name="set" scoped="" ref="0x40665dd8"/>
        <function-ref name="clr" scoped="" ref="0x40665eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40663e98" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40663e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406620c0"/>
        <function-ref name="isInput" scoped="" ref="0x406621a0"/>
        <function-ref name="toggle" scoped="" ref="0x40662280"/>
        <function-ref name="isOutput" scoped="" ref="0x40662360"/>
        <function-ref name="get" scoped="" ref="0x40662440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40662520"/>
        <function-ref name="set" scoped="" ref="0x40662600"/>
        <function-ref name="clr" scoped="" ref="0x406626e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406726c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406726c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40672898"/>
        <function-ref name="isInput" scoped="" ref="0x40672978"/>
        <function-ref name="toggle" scoped="" ref="0x40672a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40672b38"/>
        <function-ref name="get" scoped="" ref="0x40672c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40672cf8"/>
        <function-ref name="set" scoped="" ref="0x40672dd8"/>
        <function-ref name="clr" scoped="" ref="0x40672eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4066fe98" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4066fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4066e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4066e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4066e360"/>
        <function-ref name="get" scoped="" ref="0x4066e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066e520"/>
        <function-ref name="set" scoped="" ref="0x4066e600"/>
        <function-ref name="clr" scoped="" ref="0x4066e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4066c728" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F6"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4066c728"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4066c900"/>
        <function-ref name="isInput" scoped="" ref="0x4066c9e0"/>
        <function-ref name="toggle" scoped="" ref="0x4066cac0"/>
        <function-ref name="isOutput" scoped="" ref="0x4066cba0"/>
        <function-ref name="get" scoped="" ref="0x4066cc80"/>
        <function-ref name="makeOutput" scoped="" ref="0x4066cd60"/>
        <function-ref name="set" scoped="" ref="0x4066ce40"/>
        <function-ref name="clr" scoped="" ref="0x4066cf20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4067bec0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.F7"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4067bec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067a0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4067a1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4067a280"/>
        <function-ref name="isOutput" scoped="" ref="0x4067a360"/>
        <function-ref name="get" scoped="" ref="0x4067a440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067a520"/>
        <function-ref name="set" scoped="" ref="0x4067a600"/>
        <function-ref name="clr" scoped="" ref="0x4067a6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406786c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G0"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406786c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40678898"/>
        <function-ref name="isInput" scoped="" ref="0x40678978"/>
        <function-ref name="toggle" scoped="" ref="0x40678a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40678b38"/>
        <function-ref name="get" scoped="" ref="0x40678c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40678cf8"/>
        <function-ref name="set" scoped="" ref="0x40678dd8"/>
        <function-ref name="clr" scoped="" ref="0x40678eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40676e98" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G1"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40676e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406750c0"/>
        <function-ref name="isInput" scoped="" ref="0x406751a0"/>
        <function-ref name="toggle" scoped="" ref="0x40675280"/>
        <function-ref name="isOutput" scoped="" ref="0x40675360"/>
        <function-ref name="get" scoped="" ref="0x40675440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40675520"/>
        <function-ref name="set" scoped="" ref="0x40675600"/>
        <function-ref name="clr" scoped="" ref="0x406756e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x406846c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G2"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x406846c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40684898"/>
        <function-ref name="isInput" scoped="" ref="0x40684978"/>
        <function-ref name="toggle" scoped="" ref="0x40684a58"/>
        <function-ref name="isOutput" scoped="" ref="0x40684b38"/>
        <function-ref name="get" scoped="" ref="0x40684c18"/>
        <function-ref name="makeOutput" scoped="" ref="0x40684cf8"/>
        <function-ref name="set" scoped="" ref="0x40684dd8"/>
        <function-ref name="clr" scoped="" ref="0x40684eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x40682e98" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G3"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x40682e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406810c0"/>
        <function-ref name="isInput" scoped="" ref="0x406811a0"/>
        <function-ref name="toggle" scoped="" ref="0x40681280"/>
        <function-ref name="isOutput" scoped="" ref="0x40681360"/>
        <function-ref name="get" scoped="" ref="0x40681440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40681520"/>
        <function-ref name="set" scoped="" ref="0x40681600"/>
        <function-ref name="clr" scoped="" ref="0x406816e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4067f6c0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G4"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4067f6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4067f898"/>
        <function-ref name="isInput" scoped="" ref="0x4067f978"/>
        <function-ref name="toggle" scoped="" ref="0x4067fa58"/>
        <function-ref name="isOutput" scoped="" ref="0x4067fb38"/>
        <function-ref name="get" scoped="" ref="0x4067fc18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4067fcf8"/>
        <function-ref name="set" scoped="" ref="0x4067fdd8"/>
        <function-ref name="clr" scoped="" ref="0x4067feb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IO" ref="0x4067ce98" loc="47:/opt/tinyos-2.x/tos/chips/atm128/pins/HplAtm128GeneralIOSlowPinP.nc">
      <component-ref qname="HplAtm128GeneralIOC.G5"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IO" scoped="" ref="0x4067ce98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4068e0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4068e1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4068e280"/>
        <function-ref name="isOutput" scoped="" ref="0x4068e360"/>
        <function-ref name="get" scoped="" ref="0x4068e440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4068e520"/>
        <function-ref name="set" scoped="" ref="0x4068e600"/>
        <function-ref name="clr" scoped="" ref="0x4068e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x406a1858" loc="18:/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x406a1858"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406a1a30"/>
        <function-ref name="isInput" scoped="" ref="0x406a1b10"/>
        <function-ref name="toggle" scoped="" ref="0x406a1bf0"/>
        <function-ref name="isOutput" scoped="" ref="0x406a1cd0"/>
        <function-ref name="get" scoped="" ref="0x406a1db0"/>
        <function-ref name="makeOutput" scoped="" ref="0x406a1e90"/>
        <function-ref name="set" scoped="" ref="0x406a0010"/>
        <function-ref name="clr" scoped="" ref="0x406a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x406b4980" loc="34:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406b4980"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406b4b58"/>
        <function-ref name="stopDone" scoped="" ref="0x406b4c38"/>
        <function-ref name="start" scoped="" ref="0x406b4d18"/>
        <function-ref name="stop" scoped="" ref="0x406b4df8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x406b6860" loc="37:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x406b6860"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x406b6a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x406c4ab0" loc="57:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x406c4ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406c4c88"/>
        <function-ref name="runTask" scoped="" ref="0x406c4d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x406b3388" loc="46:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x406b3388"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x406b3560"/>
        <function-ref name="runTask" scoped="" ref="0x406b3640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x406c5708" loc="35:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x406c5708"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c58e0"/>
        <function-ref name="disable" scoped="" ref="0x406c59c0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406c5aa0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406c5b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x406c5dc8" loc="36:/opt/tinyos-2.x/tos/platforms/ucbase/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x406c5dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406b6010"/>
        <function-ref name="isInput" scoped="" ref="0x406b60f0"/>
        <function-ref name="toggle" scoped="" ref="0x406b61d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406b62b0"/>
        <function-ref name="get" scoped="" ref="0x406b6390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406b6470"/>
        <function-ref name="set" scoped="" ref="0x406b6550"/>
        <function-ref name="clr" scoped="" ref="0x406b6630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x406cd758" loc="35:/opt/tinyos-2.x/tos/platforms/ucbase/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x406cd758"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406cd930"/>
        <function-ref name="disable" scoped="" ref="0x406cda10"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406cdaf0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406cdbd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x406cdd90" loc="36:/opt/tinyos-2.x/tos/platforms/ucbase/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x406cdd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x406cc010"/>
        <function-ref name="isInput" scoped="" ref="0x406cc0f0"/>
        <function-ref name="toggle" scoped="" ref="0x406cc1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x406cc2b0"/>
        <function-ref name="get" scoped="" ref="0x406cc390"/>
        <function-ref name="makeOutput" scoped="" ref="0x406cc470"/>
        <function-ref name="set" scoped="" ref="0x406cc550"/>
        <function-ref name="clr" scoped="" ref="0x406cc630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x406c9010" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x406c9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c91e8"/>
        <function-ref name="disable" scoped="" ref="0x406c92c8"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406c93a8"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406c9488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x406d5428" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x406d5428"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406d5600"/>
        <function-ref name="fired" scoped="" ref="0x406d56e0"/>
        <function-ref name="disable" scoped="" ref="0x406d57c0"/>
        <function-ref name="isEnabled" scoped="" ref="0x406d58a0"/>
        <function-ref name="reset" scoped="" ref="0x406d5980"/>
        <function-ref name="setMask" scoped="" ref="0x406d5a60"/>
        <function-ref name="enable" scoped="" ref="0x406d5b40"/>
        <function-ref name="getPins" scoped="" ref="0x406d5c20"/>
        <function-ref name="getMask" scoped="" ref="0x406d5d00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x406e7eb8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x406e7eb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x406c70c0"/>
        <function-ref name="fired" scoped="" ref="0x406c71a0"/>
        <function-ref name="disable" scoped="" ref="0x406c7280"/>
        <function-ref name="isEnabled" scoped="" ref="0x406c7360"/>
        <function-ref name="reset" scoped="" ref="0x406c7440"/>
        <function-ref name="setMask" scoped="" ref="0x406c7520"/>
        <function-ref name="enable" scoped="" ref="0x406c7600"/>
        <function-ref name="getPins" scoped="" ref="0x406c76e0"/>
        <function-ref name="getMask" scoped="" ref="0x406c77c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x406c79b8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x406c79b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x406c7ba0"/>
        <function-ref name="disable" scoped="" ref="0x406c7c80"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x406c7d60"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x406c7e40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x406e40e0" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x406e40e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x406e42b8"/>
        <function-ref name="stopDone" scoped="" ref="0x406e4398"/>
        <function-ref name="start" scoped="" ref="0x406e4478"/>
        <function-ref name="stop" scoped="" ref="0x406e4558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4071c388" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4071c388"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4071c560"/>
        <function-ref name="getPayload" scoped="" ref="0x4071c640"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4071c720"/>
        <function-ref name="cancel" scoped="" ref="0x4071c800"/>
        <function-ref name="sendDone" scoped="" ref="0x4071c8e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4072c9d0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4072c9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4072cba8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4072cc88"/>
        <function-ref name="getPayload" scoped="" ref="0x4072cd68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4072ce48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4072cf28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x407307a0" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x407307a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40730978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4072b010" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4072b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4072b1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4072b2c8"/>
        <function-ref name="led1On" scoped="" ref="0x4072b3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4072b488"/>
        <function-ref name="led3Off" scoped="" ref="0x4072b568"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4072b648"/>
        <function-ref name="get" scoped="" ref="0x4072b728"/>
        <function-ref name="led1Off" scoped="" ref="0x4072b808"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4072b8e8"/>
        <function-ref name="led3On" scoped="" ref="0x4072b9c8"/>
        <function-ref name="led4Off" scoped="" ref="0x4072baa8"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4072bb88"/>
        <function-ref name="led0On" scoped="" ref="0x4072bc68"/>
        <function-ref name="led2Off" scoped="" ref="0x4072bdc8"/>
        <function-ref name="led2On" scoped="" ref="0x4072bea8"/>
        <function-ref name="led4On" scoped="" ref="0x40738010"/>
        <function-ref name="set" scoped="" ref="0x407380f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40734a90" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40734a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40734c68"/>
        <function-ref name="noAck" scoped="" ref="0x40734d48"/>
        <function-ref name="wasAcked" scoped="" ref="0x40734e28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x407377b0" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x407377b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40737988"/>
        <function-ref name="source" scoped="" ref="0x40737a68"/>
        <function-ref name="address" scoped="" ref="0x40737b48"/>
        <function-ref name="destination" scoped="" ref="0x40737c28"/>
        <function-ref name="setSource" scoped="" ref="0x40737d08"/>
        <function-ref name="setDestination" scoped="" ref="0x40737de8"/>
        <function-ref name="type" scoped="" ref="0x40737ec8"/>
        <function-ref name="setType" scoped="" ref="0x4071b010"/>
        <function-ref name="isForMe" scoped="" ref="0x4071b0f0"/>
        <function-ref name="setGroup" scoped="" ref="0x4071b1d0"/>
        <function-ref name="localGroup" scoped="" ref="0x4071b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4076aed0" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4076aed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x407690c0"/>
        <function-ref name="getPayload" scoped="" ref="0x407691a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40769280"/>
        <function-ref name="cancel" scoped="" ref="0x40769360"/>
        <function-ref name="sendDone" scoped="" ref="0x40769440"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x407695a0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x407695a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40769778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40733be8" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40733be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40733dd0"/>
        <function-ref name="getPayload" scoped="" ref="0x40733eb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4076b010"/>
        <function-ref name="cancel" scoped="" ref="0x4076b0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4076b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4076a310" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4076a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4076a4e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4076a5c8"/>
        <function-ref name="getPayload" scoped="" ref="0x4076a6a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4076a788"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4076a868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4076b3a8" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4076b3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4076b590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x4076a9a8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4076a9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4076ab80"/>
        <function-ref name="noAck" scoped="" ref="0x4076ac60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4076ad40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4076b6d0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4076b6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4076b8a8"/>
        <function-ref name="source" scoped="" ref="0x4076b988"/>
        <function-ref name="address" scoped="" ref="0x4076ba68"/>
        <function-ref name="destination" scoped="" ref="0x4076bb48"/>
        <function-ref name="setSource" scoped="" ref="0x4076bc28"/>
        <function-ref name="setDestination" scoped="" ref="0x4076bd08"/>
        <function-ref name="type" scoped="" ref="0x4076bde8"/>
        <function-ref name="setType" scoped="" ref="0x4076bec8"/>
        <function-ref name="isForMe" scoped="" ref="0x4076a010"/>
        <function-ref name="setGroup" scoped="" ref="0x4076a0f0"/>
        <function-ref name="localGroup" scoped="" ref="0x4076a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40768d10" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40768d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40768ee8"/>
        <function-ref name="stopDone" scoped="" ref="0x4077b010"/>
        <function-ref name="start" scoped="" ref="0x4077b0f0"/>
        <function-ref name="stop" scoped="" ref="0x4077b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4077bc20" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4077bc20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x406ad9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4077bdf8"/>
        <function-ref name="getPayload" scoped="" ref="0x4077bed8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4077a010"/>
        <function-ref name="cancel" scoped="" ref="0x4077a0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4077a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40768978" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40768978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40768b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4077b618" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4077b618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x406ad9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4077b7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40775840" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40775840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40775a18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40775af8"/>
        <function-ref name="led1On" scoped="" ref="0x40775bd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40775cb8"/>
        <function-ref name="led3Off" scoped="" ref="0x40775d98"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40775e78"/>
        <function-ref name="get" scoped="" ref="0x40779010"/>
        <function-ref name="led1Off" scoped="" ref="0x407790f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x407791d0"/>
        <function-ref name="led3On" scoped="" ref="0x407792b0"/>
        <function-ref name="led4Off" scoped="" ref="0x40779390"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40779470"/>
        <function-ref name="led0On" scoped="" ref="0x40779550"/>
        <function-ref name="led2Off" scoped="" ref="0x407796b0"/>
        <function-ref name="led2On" scoped="" ref="0x40779790"/>
        <function-ref name="led4On" scoped="" ref="0x40779870"/>
        <function-ref name="set" scoped="" ref="0x40779950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x40775338" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40775338"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x406ad9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40775510"/>
        <function-ref name="offset" scoped="" ref="0x407755f0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x407756d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x407933d8" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x407933d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x407935b0"/>
        <function-ref name="stopDone" scoped="" ref="0x40793690"/>
        <function-ref name="start" scoped="" ref="0x40793770"/>
        <function-ref name="stop" scoped="" ref="0x40793850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x407cf9d0" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x407cf9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407cfba8"/>
        <function-ref name="runTask" scoped="" ref="0x407cfc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x4079d9a0" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x4079d9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4079db78"/>
        <function-ref name="stop" scoped="" ref="0x4079dc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x407a7d40" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x407a7d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407a7f18"/>
        <function-ref name="runTask" scoped="" ref="0x407a6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40793040" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40793040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40793218"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x4079c9c8" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x4079c9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x4079cba0"/>
        <function-ref name="flush" scoped="" ref="0x4079cc80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x407d0220" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x407d0220"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407d03f8"/>
        <function-ref name="runTask" scoped="" ref="0x407d04d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x407a1e88" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x407a1e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x4078d070"/>
        <function-ref name="resetSend" scoped="" ref="0x4078d150"/>
        <function-ref name="dataReceived" scoped="" ref="0x4078d230"/>
        <function-ref name="resetReceive" scoped="" ref="0x4078d310"/>
        <function-ref name="putData" scoped="" ref="0x4078d3f0"/>
        <function-ref name="putDone" scoped="" ref="0x4078d4d0"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x4078d5b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4078d720" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4078d720"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4078d8f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4078d9d8"/>
        <function-ref name="led1On" scoped="" ref="0x4078dab8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4078db98"/>
        <function-ref name="led3Off" scoped="" ref="0x4078dc78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4078dd58"/>
        <function-ref name="get" scoped="" ref="0x4078de38"/>
        <function-ref name="led1Off" scoped="" ref="0x4078df18"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4078b010"/>
        <function-ref name="led3On" scoped="" ref="0x4078b0f0"/>
        <function-ref name="led4Off" scoped="" ref="0x4078b1d0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4078b2b0"/>
        <function-ref name="led0On" scoped="" ref="0x4078b390"/>
        <function-ref name="led2Off" scoped="" ref="0x4078b4f0"/>
        <function-ref name="led2On" scoped="" ref="0x4078b5d0"/>
        <function-ref name="led4On" scoped="" ref="0x4078b6b0"/>
        <function-ref name="set" scoped="" ref="0x4078b790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x407cd610" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x407cd610"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x407cd7e8"/>
        <function-ref name="runTask" scoped="" ref="0x407cd8c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x4078fb00" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4078fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4078fcd8"/>
        <function-ref name="nextByte" scoped="" ref="0x4078fdb8"/>
        <function-ref name="startSend" scoped="" ref="0x4078fe98"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40792010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x4078cc30" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4078cc30"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4078ce08"/>
        <function-ref name="byteReceived" scoped="" ref="0x4078cee8"/>
        <function-ref name="endPacket" scoped="" ref="0x40791010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x4083a670" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x4083a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4083a848"/>
        <function-ref name="runTask" scoped="" ref="0x4083a928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4080ebc8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4080ebc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x406ad9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4080edb0"/>
        <function-ref name="getPayload" scoped="" ref="0x4080ee90"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4083d010"/>
        <function-ref name="cancel" scoped="" ref="0x4083d0f0"/>
        <function-ref name="sendDone" scoped="" ref="0x4083d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x4083aaa8" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x4083aaa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4083ac80"/>
        <function-ref name="runTask" scoped="" ref="0x4083ad60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4080e808" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4080e808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x406ad9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4080e9f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x4083d3f8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x4083d3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x406ad9f0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x4083d5e0"/>
        <function-ref name="offset" scoped="" ref="0x4083d6c0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x4083d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4083b3f0" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4083b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4083b5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4083b6a8"/>
        <function-ref name="led1On" scoped="" ref="0x4083b788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4083b868"/>
        <function-ref name="led3Off" scoped="" ref="0x4083b948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4083ba28"/>
        <function-ref name="get" scoped="" ref="0x4083bb08"/>
        <function-ref name="led1Off" scoped="" ref="0x4083bbe8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4083bcc8"/>
        <function-ref name="led3On" scoped="" ref="0x4083bda8"/>
        <function-ref name="led4Off" scoped="" ref="0x4083be88"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4083a010"/>
        <function-ref name="led0On" scoped="" ref="0x4083a0f0"/>
        <function-ref name="led2Off" scoped="" ref="0x4083a250"/>
        <function-ref name="led2On" scoped="" ref="0x4083a330"/>
        <function-ref name="led4On" scoped="" ref="0x4083a410"/>
        <function-ref name="set" scoped="" ref="0x4083a4f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x4083ddb8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x4083ddb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x4083b010"/>
        <function-ref name="nextByte" scoped="" ref="0x4083b0f0"/>
        <function-ref name="startSend" scoped="" ref="0x4083b1d0"/>
        <function-ref name="sendCompleted" scoped="" ref="0x4083b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x4083d8e0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x4083d8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x4083dab8"/>
        <function-ref name="byteReceived" scoped="" ref="0x4083db98"/>
        <function-ref name="endPacket" scoped="" ref="0x4083dc78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x408473d0" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x408473d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408475a8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40847688"/>
        <function-ref name="receive" scoped="" ref="0x40847768"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40847848"/>
        <function-ref name="receiveDone" scoped="" ref="0x40847928"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40847a08"/>
        <function-ref name="sendDone" scoped="" ref="0x40847ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40836040" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40836040"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40836218"/>
        <function-ref name="resetSend" scoped="" ref="0x408362f8"/>
        <function-ref name="dataReceived" scoped="" ref="0x408363d8"/>
        <function-ref name="resetReceive" scoped="" ref="0x408364b8"/>
        <function-ref name="putData" scoped="" ref="0x40836598"/>
        <function-ref name="putDone" scoped="" ref="0x40836678"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40836758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40847c58" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40847c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40847e30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40847f10"/>
        <function-ref name="led1On" scoped="" ref="0x4084f010"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4084f0f0"/>
        <function-ref name="led3Off" scoped="" ref="0x4084f1d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4084f2b0"/>
        <function-ref name="get" scoped="" ref="0x4084f390"/>
        <function-ref name="led1Off" scoped="" ref="0x4084f470"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4084f550"/>
        <function-ref name="led3On" scoped="" ref="0x4084f630"/>
        <function-ref name="led4Off" scoped="" ref="0x4084f710"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4084f7f0"/>
        <function-ref name="led0On" scoped="" ref="0x4084f8d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4084fa30"/>
        <function-ref name="led2On" scoped="" ref="0x4084fb10"/>
        <function-ref name="led4On" scoped="" ref="0x4084fbf0"/>
        <function-ref name="set" scoped="" ref="0x4084fcd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40869588" loc="42:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40869588"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40869760"/>
        <function-ref name="receive" scoped="" ref="0x40869840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40838720" loc="41:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40838720"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408388f8"/>
        <function-ref name="receivedByte" scoped="" ref="0x408389d8"/>
        <function-ref name="receive" scoped="" ref="0x40838ab8"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40838b98"/>
        <function-ref name="receiveDone" scoped="" ref="0x40838c78"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40838d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40838e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x408382a0" loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408382a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40838478"/>
        <function-ref name="stop" scoped="" ref="0x40838558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40868480" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40868480"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40868658"/>
        <function-ref name="receive" scoped="" ref="0x40868738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40868900" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40868900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40868ad8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40868bb8"/>
        <function-ref name="receive" scoped="" ref="0x40868c98"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40868d78"/>
        <function-ref name="receiveDone" scoped="" ref="0x40868e58"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40867010"/>
        <function-ref name="sendDone" scoped="" ref="0x408670f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40861230" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40861230"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40861980"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40861e70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40861bf8"/>
        <function-ref name="overflow" scoped="" ref="0x40866110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40868010" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart0C.nc">
      <component-ref qname="Atm128Uart0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40868010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408681e8"/>
        <function-ref name="stop" scoped="" ref="0x408682c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x408659a0" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x408659a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40865b78"/>
        <function-ref name="receive" scoped="" ref="0x40865c58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x408606d0" loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x408606d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408608a8"/>
        <function-ref name="stop" scoped="" ref="0x40860988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40865250" loc="48:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40865250"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40865428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40865db8" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40865db8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40860010"/>
        <function-ref name="receivedByte" scoped="" ref="0x408600f0"/>
        <function-ref name="receive" scoped="" ref="0x408601d0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x408602b0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40860390"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40860470"/>
        <function-ref name="sendDone" scoped="" ref="0x40860550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40888c48" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40888c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408873b0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408878a0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40887628"/>
        <function-ref name="overflow" scoped="" ref="0x40887b18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40888010" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40888010"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x408881e8"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x408882c8"/>
        <function-ref name="rxDone" scoped="" ref="0x408883a8"/>
        <function-ref name="txDone" scoped="" ref="0x40888488"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40888568"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40888648"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40888728"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40888808"/>
        <function-ref name="tx" scoped="" ref="0x408888e8"/>
        <function-ref name="rx" scoped="" ref="0x408889c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40865588" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40865588"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40865760"/>
        <function-ref name="stop" scoped="" ref="0x40865840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40860b08" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart0C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40860b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40860ce0"/>
        <function-ref name="stop" scoped="" ref="0x40860dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x408ac0b8" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x408ac0b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x408ac290"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x408ac370"/>
        <function-ref name="rxDone" scoped="" ref="0x408ac450"/>
        <function-ref name="txDone" scoped="" ref="0x408ac530"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x408ac610"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x408ac6f0"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x408ac7d0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x408ac8b0"/>
        <function-ref name="tx" scoped="" ref="0x408ac990"/>
        <function-ref name="rx" scoped="" ref="0x408aca70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x408ab760" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x408ab760"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x408ab938"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x408aba18"/>
        <function-ref name="rxDone" scoped="" ref="0x408abaf8"/>
        <function-ref name="txDone" scoped="" ref="0x408abbd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x408abcb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x408abd98"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x408abe78"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x408aa010"/>
        <function-ref name="tx" scoped="" ref="0x408aa0f0"/>
        <function-ref name="rx" scoped="" ref="0x408aa1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x408adb98" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x408adb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408add70"/>
        <function-ref name="stop" scoped="" ref="0x408ade50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x408accc8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x408accc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408acea0"/>
        <function-ref name="stop" scoped="" ref="0x408ab010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x408ab268" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x408ab268"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408ab440"/>
        <function-ref name="stop" scoped="" ref="0x408ab520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x408ad688" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x408ad688"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408ad860"/>
        <function-ref name="stop" scoped="" ref="0x408ad940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x408aa9f8" loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x408aa9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408aabd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x408a78c0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x408a78c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x408a7a98"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x408a7b78"/>
        <function-ref name="rxDone" scoped="" ref="0x408a7c58"/>
        <function-ref name="txDone" scoped="" ref="0x408a7d38"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x408a7e18"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x408a7ef8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x408a6010"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x408a60f0"/>
        <function-ref name="tx" scoped="" ref="0x408a61d0"/>
        <function-ref name="rx" scoped="" ref="0x408a62b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x408a4010" loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x408a4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x408a41e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x408a64c0" loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x408a64c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408a6698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x408a5390" loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x408a5390"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x408a5568"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x408a5648"/>
        <function-ref name="rxDone" scoped="" ref="0x408a5728"/>
        <function-ref name="txDone" scoped="" ref="0x408a5808"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x408a58e8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x408a59c8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x408a5aa8"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x408a5b88"/>
        <function-ref name="tx" scoped="" ref="0x408a5c68"/>
        <function-ref name="rx" scoped="" ref="0x408a5d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x408a73a8" loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x408a73a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408a7580"/>
        <function-ref name="stop" scoped="" ref="0x408a7660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x408a6910" loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x408a6910"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408a6ae8"/>
        <function-ref name="stop" scoped="" ref="0x408a6bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x408a6e40" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x408a6e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408a5050"/>
        <function-ref name="stop" scoped="" ref="0x408a5130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x408a43e0" loc="126:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x408a43e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x408a45b8"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x408a4698"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x408a4778"/>
        <function-ref name="actualMicro" scoped="" ref="0x408a4858"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x408a4938"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x408a4b20" loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x408a4b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x408a4cf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x408aae48" loc="115:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x408aae48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408a7050"/>
        <function-ref name="stop" scoped="" ref="0x408a7130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x408dcd30" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x408dcd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x408dcf08"/>
        <function-ref name="offset" scoped="" ref="0x408d9010"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x408d90f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x408e8e40" loc="47:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x408e8e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x408e7050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x408eaca0" loc="43:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x408eaca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x408eae78"/>
        <function-ref name="getPayload" scoped="" ref="0x408e9010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x408e90f0"/>
        <function-ref name="cancel" scoped="" ref="0x408e91d0"/>
        <function-ref name="sendDone" scoped="" ref="0x408e92b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x408e9438" loc="44:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x408e9438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x408e9610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408e9780" loc="45:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408e9780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408e9958"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408e9a38"/>
        <function-ref name="led1On" scoped="" ref="0x408e9b18"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408e9bf8"/>
        <function-ref name="led3Off" scoped="" ref="0x408e9cd8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408e9db8"/>
        <function-ref name="get" scoped="" ref="0x408e9e98"/>
        <function-ref name="led1Off" scoped="" ref="0x408e8010"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408e80f0"/>
        <function-ref name="led3On" scoped="" ref="0x408e81d0"/>
        <function-ref name="led4Off" scoped="" ref="0x408e82b0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x408e8390"/>
        <function-ref name="led0On" scoped="" ref="0x408e8470"/>
        <function-ref name="led2Off" scoped="" ref="0x408e85d0"/>
        <function-ref name="led2On" scoped="" ref="0x408e86b0"/>
        <function-ref name="led4On" scoped="" ref="0x408e8790"/>
        <function-ref name="set" scoped="" ref="0x408e8870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x408e6398" loc="61:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x408e6398"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408e6570"/>
        <function-ref name="runTask" scoped="" ref="0x408e6650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x408ea748" loc="38:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x408ea748"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x408ea920"/>
        <function-ref name="offset" scoped="" ref="0x408eaa00"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x408eaae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x408e8a18" loc="46:/opt/tinyos-2.x/tos/platforms/ucbase/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x408e8a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x408e8bf0"/>
        <function-ref name="stop" scoped="" ref="0x408e8cd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x408f4820" loc="42:/opt/tinyos-2.x/tos/platforms/ucbase/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408f4820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408f49f8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408f4ad8"/>
        <function-ref name="led1On" scoped="" ref="0x408f4bb8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408f4c98"/>
        <function-ref name="led3Off" scoped="" ref="0x408f4d78"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408f4e58"/>
        <function-ref name="get" scoped="" ref="0x40910010"/>
        <function-ref name="led1Off" scoped="" ref="0x409100f0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409101d0"/>
        <function-ref name="led3On" scoped="" ref="0x409102b0"/>
        <function-ref name="led4Off" scoped="" ref="0x40910390"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40910470"/>
        <function-ref name="led0On" scoped="" ref="0x40910550"/>
        <function-ref name="led2Off" scoped="" ref="0x409106b0"/>
        <function-ref name="led2On" scoped="" ref="0x40910790"/>
        <function-ref name="led4On" scoped="" ref="0x40910870"/>
        <function-ref name="set" scoped="" ref="0x40910950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x4090d030" loc="39:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4090d030"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090d208"/>
        <function-ref name="isInput" scoped="" ref="0x4090d2e8"/>
        <function-ref name="toggle" scoped="" ref="0x4090d3c8"/>
        <function-ref name="isOutput" scoped="" ref="0x4090d4a8"/>
        <function-ref name="get" scoped="" ref="0x4090d588"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090d668"/>
        <function-ref name="set" scoped="" ref="0x4090d748"/>
        <function-ref name="clr" scoped="" ref="0x4090d828"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x4090ce88" loc="42:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x4090ce88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090b070"/>
        <function-ref name="isInput" scoped="" ref="0x4090b150"/>
        <function-ref name="toggle" scoped="" ref="0x4090b230"/>
        <function-ref name="isOutput" scoped="" ref="0x4090b310"/>
        <function-ref name="get" scoped="" ref="0x4090b3f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090b4d0"/>
        <function-ref name="set" scoped="" ref="0x4090b5b0"/>
        <function-ref name="clr" scoped="" ref="0x4090b690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x4090da18" loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4090da18"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090dbf0"/>
        <function-ref name="isInput" scoped="" ref="0x4090dcd0"/>
        <function-ref name="toggle" scoped="" ref="0x4090ddb0"/>
        <function-ref name="isOutput" scoped="" ref="0x4090de90"/>
        <function-ref name="get" scoped="" ref="0x4090c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090c0f0"/>
        <function-ref name="set" scoped="" ref="0x4090c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4090c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x4090b830" loc="45:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4090b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4090ba08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x4090c4a0" loc="41:/opt/tinyos-2.x/tos/platforms/ucbase/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4090c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4090c678"/>
        <function-ref name="isInput" scoped="" ref="0x4090c758"/>
        <function-ref name="toggle" scoped="" ref="0x4090c838"/>
        <function-ref name="isOutput" scoped="" ref="0x4090c918"/>
        <function-ref name="get" scoped="" ref="0x4090c9f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4090cad8"/>
        <function-ref name="set" scoped="" ref="0x4090cbb8"/>
        <function-ref name="clr" scoped="" ref="0x4090cc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x40905110" loc="50:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40905110"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409052e8"/>
        <function-ref name="isInput" scoped="" ref="0x409053c8"/>
        <function-ref name="toggle" scoped="" ref="0x409054a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40905588"/>
        <function-ref name="get" scoped="" ref="0x40905668"/>
        <function-ref name="makeOutput" scoped="" ref="0x40905748"/>
        <function-ref name="set" scoped="" ref="0x40905828"/>
        <function-ref name="clr" scoped="" ref="0x40905908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x40903010" loc="53:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x40903010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409031e8"/>
        <function-ref name="isInput" scoped="" ref="0x409032c8"/>
        <function-ref name="toggle" scoped="" ref="0x409033a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40903488"/>
        <function-ref name="get" scoped="" ref="0x40903568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40903648"/>
        <function-ref name="set" scoped="" ref="0x40903728"/>
        <function-ref name="clr" scoped="" ref="0x40903808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4090ea30" loc="46:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4090ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4090ec08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x40905af8" loc="51:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40905af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40905cd0"/>
        <function-ref name="isInput" scoped="" ref="0x40905db0"/>
        <function-ref name="toggle" scoped="" ref="0x40905e90"/>
        <function-ref name="isOutput" scoped="" ref="0x40904010"/>
        <function-ref name="get" scoped="" ref="0x409040f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409041d0"/>
        <function-ref name="set" scoped="" ref="0x409042b0"/>
        <function-ref name="clr" scoped="" ref="0x40904390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x4090ed78" loc="47:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4090ed78"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40906010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409060f0"/>
        <function-ref name="led1On" scoped="" ref="0x409061d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409062b0"/>
        <function-ref name="led3Off" scoped="" ref="0x40906390"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40906470"/>
        <function-ref name="get" scoped="" ref="0x40906550"/>
        <function-ref name="led1Off" scoped="" ref="0x40906630"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40906710"/>
        <function-ref name="led3On" scoped="" ref="0x409067f0"/>
        <function-ref name="led4Off" scoped="" ref="0x409068d0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x409069b0"/>
        <function-ref name="led0On" scoped="" ref="0x40906a90"/>
        <function-ref name="led2Off" scoped="" ref="0x40906bf0"/>
        <function-ref name="led2On" scoped="" ref="0x40906cd0"/>
        <function-ref name="led4On" scoped="" ref="0x40906db0"/>
        <function-ref name="set" scoped="" ref="0x40906e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x40904580" loc="52:/opt/tinyos-2.x/tos/platforms/ucbase/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40904580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40904758"/>
        <function-ref name="isInput" scoped="" ref="0x40904838"/>
        <function-ref name="toggle" scoped="" ref="0x40904918"/>
        <function-ref name="isOutput" scoped="" ref="0x409049f8"/>
        <function-ref name="get" scoped="" ref="0x40904ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40904bb8"/>
        <function-ref name="set" scoped="" ref="0x40904c98"/>
        <function-ref name="clr" scoped="" ref="0x40904d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40928568" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40928568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40928740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x4045a7e8" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x4045a7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x4045a9c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40928160" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40928160"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40928338"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x4045ab80" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x4045ab80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4045ad58"/>
        <function-ref name="taskLoop" scoped="" ref="0x4045ae38"/>
        <function-ref name="runNextTask" scoped="" ref="0x4045af18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x40389010" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x40389010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403891e8"/>
        <function-ref name="runTask" scoped="" ref="0x403892c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40356840" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40356840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40356a18"/>
        <function-ref name="taskLoop" scoped="" ref="0x40356af8"/>
        <function-ref name="runNextTask" scoped="" ref="0x40356bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x404209c0" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x404209c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40420b98"/>
        <function-ref name="runTask" scoped="" ref="0x40420c78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x40427668" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x40427668"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x40427840"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40420188" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40420188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40420360"/>
        <function-ref name="taskLoop" scoped="" ref="0x40420440"/>
        <function-ref name="runNextTask" scoped="" ref="0x40420520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StatusTimer" ref="0x40994d60" loc="54:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StatusTimer" scoped="" ref="0x40994d60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409938a8"/>
        <function-ref name="fired" scoped="" ref="0x4099ab18"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40993268"/>
        <function-ref name="isOneShot" scoped="" ref="0x40993010"/>
        <function-ref name="getdt" scoped="" ref="0x40993d58"/>
        <function-ref name="gett0" scoped="" ref="0x40993b00"/>
        <function-ref name="isRunning" scoped="" ref="0x4099ad70"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4099a3c0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40993588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4099a640"/>
        <function-ref name="stop" scoped="" ref="0x4099a8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x409a1260" loc="46:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x409a1260"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x409a1438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Status" ref="0x4099b9a0" loc="50:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Status" scoped="" ref="0x4099b9a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x4099bb78"/>
        <function-ref name="bind" scoped="" ref="0x4099bc58"/>
        <function-ref name="sendtov" scoped="" ref="0x4099bd38"/>
        <function-ref name="recvfrom" scoped="" ref="0x4099be18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x409a1698" loc="47:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x409a1698"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409a1870"/>
        <function-ref name="stopDone" scoped="" ref="0x409a1950"/>
        <function-ref name="start" scoped="" ref="0x409a1a30"/>
        <function-ref name="stop" scoped="" ref="0x409a1b10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x409ac8f8" loc="59:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x409ac8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x409acad0"/>
        <function-ref name="rand32" scoped="" ref="0x409acbb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Echo" ref="0x4099b368" loc="49:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Echo" scoped="" ref="0x4099b368"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x4099b540"/>
        <function-ref name="bind" scoped="" ref="0x4099b620"/>
        <function-ref name="sendtov" scoped="" ref="0x4099b700"/>
        <function-ref name="recvfrom" scoped="" ref="0x4099b7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPStats" ref="0x409b1010" loc="56:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPStats" scoped="" ref="0x409b1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40966ce0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x40965128"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409b18d8"/>
        <function-ref name="get" scoped="" ref="0x409b1638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409a0010" loc="52:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409a0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409a01e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409a02c8"/>
        <function-ref name="led1On" scoped="" ref="0x409a03a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409a0488"/>
        <function-ref name="led3Off" scoped="" ref="0x409a0568"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409a0648"/>
        <function-ref name="get" scoped="" ref="0x409a0728"/>
        <function-ref name="led1Off" scoped="" ref="0x409a0808"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409a08e8"/>
        <function-ref name="led3On" scoped="" ref="0x409a09c8"/>
        <function-ref name="led4Off" scoped="" ref="0x409a0aa8"/>
        <function-ref name="led4Toggle" scoped="" ref="0x409a0b88"/>
        <function-ref name="led0On" scoped="" ref="0x409a0c68"/>
        <function-ref name="led2Off" scoped="" ref="0x409a0dc8"/>
        <function-ref name="led2On" scoped="" ref="0x409a0ea8"/>
        <function-ref name="led4On" scoped="" ref="0x4099f010"/>
        <function-ref name="set" scoped="" ref="0x4099f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UDPStats" ref="0x409b1d28" loc="57:UDPEchoP.nc">
      <component-ref qname="UDPEchoP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDPStats" scoped="" ref="0x409b1d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40962300"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x40962588"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409af610"/>
        <function-ref name="get" scoped="" ref="0x409af370"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40929330" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="UDPEchoC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40929330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40991e38"/>
        <function-ref name="fired" scoped="" ref="0x409910f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409917f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x409915a0"/>
        <function-ref name="getdt" scoped="" ref="0x40b02310"/>
        <function-ref name="gett0" scoped="" ref="0x40b020b8"/>
        <function-ref name="isRunning" scoped="" ref="0x40991348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40929958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40991b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x40929bd8"/>
        <function-ref name="stop" scoped="" ref="0x40929e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x409bee58" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x409bee58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x409b9988"/>
        <function-ref name="fired" scoped="" ref="0x409bbc10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x409b9348"/>
        <function-ref name="isOneShot" scoped="" ref="0x409b90f0"/>
        <function-ref name="getdt" scoped="" ref="0x409b9e38"/>
        <function-ref name="gett0" scoped="" ref="0x409b9be0"/>
        <function-ref name="isRunning" scoped="" ref="0x409bbe68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x409bb4b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x409b9668"/>
        <function-ref name="startOneShot" scoped="" ref="0x409bb738"/>
        <function-ref name="stop" scoped="" ref="0x409bb9b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x409b7f20" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x409b7f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40abe3e8"/>
        <function-ref name="fired" scoped="" ref="0x409b6ba0"/>
        <function-ref name="startAt" scoped="" ref="0x40abe0a8"/>
        <function-ref name="isRunning" scoped="" ref="0x409b6e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x40abe660"/>
        <function-ref name="start" scoped="" ref="0x409b6688"/>
        <function-ref name="stop" scoped="" ref="0x409b6928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4181db48" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4181db48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4181b068"/>
        <function-ref name="fired" scoped="" ref="0x4181c820"/>
        <function-ref name="startAt" scoped="" ref="0x4181cd10"/>
        <function-ref name="isRunning" scoped="" ref="0x4181ca98"/>
        <function-ref name="getAlarm" scoped="" ref="0x4181b2e0"/>
        <function-ref name="start" scoped="" ref="0x4181c308"/>
        <function-ref name="stop" scoped="" ref="0x4181c5a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x4180c6e0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x4180c6e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4180a1a0"/>
        <function-ref name="test" scoped="" ref="0x4180b528"/>
        <function-ref name="fired" scoped="" ref="0x4180b2b0"/>
        <function-ref name="force" scoped="" ref="0x4180a6b8"/>
        <function-ref name="get" scoped="" ref="0x4180cd28"/>
        <function-ref name="reset" scoped="" ref="0x4180b7a0"/>
        <function-ref name="getMode" scoped="" ref="0x4180a440"/>
        <function-ref name="isOn" scoped="" ref="0x4180bf08"/>
        <function-ref name="set" scoped="" ref="0x4180b010"/>
        <function-ref name="start" scoped="" ref="0x4180ba18"/>
        <function-ref name="stop" scoped="" ref="0x4180bc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41811cf8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41811cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4180f1e8"/>
        <function-ref name="fired" scoped="" ref="0x41810990"/>
        <function-ref name="startAt" scoped="" ref="0x41810e80"/>
        <function-ref name="isRunning" scoped="" ref="0x41810c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x4180f460"/>
        <function-ref name="start" scoped="" ref="0x41810478"/>
        <function-ref name="stop" scoped="" ref="0x41810718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418118c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418118c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41811a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4180f730" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4180f730"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4180c1a0"/>
        <function-ref name="test" scoped="" ref="0x4180d528"/>
        <function-ref name="get" scoped="" ref="0x4180fd78"/>
        <function-ref name="reset" scoped="" ref="0x4180d7a0"/>
        <function-ref name="getMode" scoped="" ref="0x4180c440"/>
        <function-ref name="overflow" scoped="" ref="0x4180d2b0"/>
        <function-ref name="isOn" scoped="" ref="0x4180df08"/>
        <function-ref name="set" scoped="" ref="0x4180d010"/>
        <function-ref name="start" scoped="" ref="0x4180da18"/>
        <function-ref name="stop" scoped="" ref="0x4180dc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x409ff238" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x409ff238"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x409fdca0"/>
        <function-ref name="test" scoped="" ref="0x409fd048"/>
        <function-ref name="get" scoped="" ref="0x409ff880"/>
        <function-ref name="reset" scoped="" ref="0x409fd2c0"/>
        <function-ref name="getMode" scoped="" ref="0x409fc010"/>
        <function-ref name="overflow" scoped="" ref="0x409ffd98"/>
        <function-ref name="isOn" scoped="" ref="0x409fda28"/>
        <function-ref name="set" scoped="" ref="0x409ffaf8"/>
        <function-ref name="start" scoped="" ref="0x409fd538"/>
        <function-ref name="stop" scoped="" ref="0x409fd7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x409f39b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x409f39b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x409f7418"/>
        <function-ref name="test" scoped="" ref="0x409f87a0"/>
        <function-ref name="fired" scoped="" ref="0x409f8528"/>
        <function-ref name="get" scoped="" ref="0x409f8010"/>
        <function-ref name="reset" scoped="" ref="0x409f8a18"/>
        <function-ref name="getMode" scoped="" ref="0x409f76b8"/>
        <function-ref name="isOn" scoped="" ref="0x409f71a0"/>
        <function-ref name="set" scoped="" ref="0x409f8288"/>
        <function-ref name="start" scoped="" ref="0x409f8c90"/>
        <function-ref name="stop" scoped="" ref="0x409f8f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x409fc6d8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x409fc6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x409fa1a0"/>
        <function-ref name="test" scoped="" ref="0x409fb528"/>
        <function-ref name="fired" scoped="" ref="0x409fb2b0"/>
        <function-ref name="force" scoped="" ref="0x409fa6b8"/>
        <function-ref name="get" scoped="" ref="0x409fcd20"/>
        <function-ref name="reset" scoped="" ref="0x409fb7a0"/>
        <function-ref name="getMode" scoped="" ref="0x409fa440"/>
        <function-ref name="isOn" scoped="" ref="0x409fbf08"/>
        <function-ref name="set" scoped="" ref="0x409fb010"/>
        <function-ref name="start" scoped="" ref="0x409fba18"/>
        <function-ref name="stop" scoped="" ref="0x409fbc90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40a0e408" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40a0e408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a0dee0"/>
        <function-ref name="test" scoped="" ref="0x40a0d288"/>
        <function-ref name="fired" scoped="" ref="0x40a0d010"/>
        <function-ref name="force" scoped="" ref="0x40a0b438"/>
        <function-ref name="get" scoped="" ref="0x40a0ea50"/>
        <function-ref name="reset" scoped="" ref="0x40a0d500"/>
        <function-ref name="getMode" scoped="" ref="0x40a0b1c0"/>
        <function-ref name="isOn" scoped="" ref="0x40a0dc68"/>
        <function-ref name="set" scoped="" ref="0x40a0ecc8"/>
        <function-ref name="start" scoped="" ref="0x40a0d778"/>
        <function-ref name="stop" scoped="" ref="0x40a0d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40a02010" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40a02010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40a021e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40a0b830" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40a0b830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a092c0"/>
        <function-ref name="test" scoped="" ref="0x40a0a628"/>
        <function-ref name="fired" scoped="" ref="0x40a0a3b0"/>
        <function-ref name="force" scoped="" ref="0x40a097d8"/>
        <function-ref name="get" scoped="" ref="0x40a0be78"/>
        <function-ref name="reset" scoped="" ref="0x40a0a8a0"/>
        <function-ref name="getMode" scoped="" ref="0x40a09560"/>
        <function-ref name="isOn" scoped="" ref="0x40a09048"/>
        <function-ref name="set" scoped="" ref="0x40a0a110"/>
        <function-ref name="start" scoped="" ref="0x40a0ab18"/>
        <function-ref name="stop" scoped="" ref="0x40a0ad90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a11268" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a11268"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a0fcc0"/>
        <function-ref name="test" scoped="" ref="0x40a0f068"/>
        <function-ref name="get" scoped="" ref="0x40a118b0"/>
        <function-ref name="reset" scoped="" ref="0x40a0f2e0"/>
        <function-ref name="getMode" scoped="" ref="0x40a0e010"/>
        <function-ref name="overflow" scoped="" ref="0x40a11dc8"/>
        <function-ref name="isOn" scoped="" ref="0x40a0fa48"/>
        <function-ref name="set" scoped="" ref="0x40a11b28"/>
        <function-ref name="start" scoped="" ref="0x40a0f558"/>
        <function-ref name="stop" scoped="" ref="0x40a0f7d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40a02400" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40a02400"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40a025d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40a05010" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40a05010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a04a68"/>
        <function-ref name="test" scoped="" ref="0x40a05de8"/>
        <function-ref name="fired" scoped="" ref="0x40a05b70"/>
        <function-ref name="get" scoped="" ref="0x40a05658"/>
        <function-ref name="reset" scoped="" ref="0x40a04088"/>
        <function-ref name="getMode" scoped="" ref="0x40a04d08"/>
        <function-ref name="isOn" scoped="" ref="0x40a047f0"/>
        <function-ref name="set" scoped="" ref="0x40a058d0"/>
        <function-ref name="start" scoped="" ref="0x40a04300"/>
        <function-ref name="stop" scoped="" ref="0x40a04578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40a09bd0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40a09bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a06640"/>
        <function-ref name="test" scoped="" ref="0x40a089c8"/>
        <function-ref name="fired" scoped="" ref="0x40a08750"/>
        <function-ref name="force" scoped="" ref="0x40a06b58"/>
        <function-ref name="get" scoped="" ref="0x40a08238"/>
        <function-ref name="reset" scoped="" ref="0x40a08c40"/>
        <function-ref name="getMode" scoped="" ref="0x40a068e0"/>
        <function-ref name="isOn" scoped="" ref="0x40a063c8"/>
        <function-ref name="set" scoped="" ref="0x40a084b0"/>
        <function-ref name="start" scoped="" ref="0x40a08eb8"/>
        <function-ref name="stop" scoped="" ref="0x40a06150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a5c128" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a5c128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a5c878"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a5cd68"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a5caf0"/>
        <function-ref name="overflow" scoped="" ref="0x40a5a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40a592c0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40a592c0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40a59498"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a596f8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a596f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a59e48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a6e350"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a6e0d8"/>
        <function-ref name="overflow" scoped="" ref="0x40a6e5c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x40a6e898" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x40a6e898"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40a6c300"/>
        <function-ref name="test" scoped="" ref="0x40a6d688"/>
        <function-ref name="get" scoped="" ref="0x40a6eee0"/>
        <function-ref name="reset" scoped="" ref="0x40a6d900"/>
        <function-ref name="getMode" scoped="" ref="0x40a6c5a0"/>
        <function-ref name="overflow" scoped="" ref="0x40a6d410"/>
        <function-ref name="isOn" scoped="" ref="0x40a6c088"/>
        <function-ref name="set" scoped="" ref="0x40a6d170"/>
        <function-ref name="start" scoped="" ref="0x40a6db78"/>
        <function-ref name="stop" scoped="" ref="0x40a6ddf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a69a20" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a69a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a88200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a886f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a88478"/>
        <function-ref name="overflow" scoped="" ref="0x40a88968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40a985f8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40a985f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a98d48"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a97288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a97010"/>
        <function-ref name="overflow" scoped="" ref="0x40a97500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40a84320" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40a84320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40a84a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40a98010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40a84ce8"/>
        <function-ref name="overflow" scoped="" ref="0x40a98288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x418195a0" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x418195a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41818ab8"/>
        <function-ref name="fired" scoped="" ref="0x41818288"/>
        <function-ref name="startAt" scoped="" ref="0x41818778"/>
        <function-ref name="isRunning" scoped="" ref="0x41818500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41818d30"/>
        <function-ref name="start" scoped="" ref="0x41819cf0"/>
        <function-ref name="stop" scoped="" ref="0x41818010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41816380" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41816380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41815840"/>
        <function-ref name="fired" scoped="" ref="0x41815010"/>
        <function-ref name="startAt" scoped="" ref="0x41815500"/>
        <function-ref name="isRunning" scoped="" ref="0x41815288"/>
        <function-ref name="getAlarm" scoped="" ref="0x41815ab8"/>
        <function-ref name="start" scoped="" ref="0x41816ad0"/>
        <function-ref name="stop" scoped="" ref="0x41816d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x418170a0" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x418170a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418177f0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41817ce0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41817a68"/>
        <function-ref name="overflow" scoped="" ref="0x41816010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40ac7658" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40ac7658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ac7830"/>
        <function-ref name="runTask" scoped="" ref="0x40ac7910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40ac9cc8" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40ac9cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac7190"/>
        <function-ref name="fired" scoped="" ref="0x40ac8950"/>
        <function-ref name="startAt" scoped="" ref="0x40ac8e40"/>
        <function-ref name="isRunning" scoped="" ref="0x40ac8bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40ac7408"/>
        <function-ref name="start" scoped="" ref="0x40ac8438"/>
        <function-ref name="stop" scoped="" ref="0x40ac86d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40abd968" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40abd968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ac94c8"/>
        <function-ref name="fired" scoped="" ref="0x40abc768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40abce70"/>
        <function-ref name="isOneShot" scoped="" ref="0x40abcc18"/>
        <function-ref name="getdt" scoped="" ref="0x40ac9978"/>
        <function-ref name="gett0" scoped="" ref="0x40ac9720"/>
        <function-ref name="isRunning" scoped="" ref="0x40abc9c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40abc010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ac91a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40abc290"/>
        <function-ref name="stop" scoped="" ref="0x40abc510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x40b052b8" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x40b052b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b05490"/>
        <function-ref name="runTask" scoped="" ref="0x40b05570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x40ae40c0" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x40ae40c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40b06ba8"/>
        <function-ref name="fired" scoped="" ref="0x40ae4e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40b06568"/>
        <function-ref name="isOneShot" scoped="" ref="0x40b06310"/>
        <function-ref name="getdt" scoped="" ref="0x40b05068"/>
        <function-ref name="gett0" scoped="" ref="0x40b06e00"/>
        <function-ref name="isRunning" scoped="" ref="0x40b060b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ae46e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40b06888"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ae4968"/>
        <function-ref name="stop" scoped="" ref="0x40ae4be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40ac4cc8" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40ac4cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40ae58d8"/>
        <function-ref name="fired" scoped="" ref="0x40ac3ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x40ae5278"/>
        <function-ref name="isOneShot" scoped="" ref="0x40ae5010"/>
        <function-ref name="getdt" scoped="" ref="0x40ae5da8"/>
        <function-ref name="gett0" scoped="" ref="0x40ae5b40"/>
        <function-ref name="isRunning" scoped="" ref="0x40ac3d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40ac3350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x40ae55a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x40ac35e0"/>
        <function-ref name="stop" scoped="" ref="0x40ac3870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40afd178" loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40afd178"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40afd350"/>
        <function-ref name="stopDone" scoped="" ref="0x40afd430"/>
        <function-ref name="start" scoped="" ref="0x40afd510"/>
        <function-ref name="stop" scoped="" ref="0x40afd5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x40b16e78" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x40b16e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x40af8070"/>
        <function-ref name="initiate" scoped="" ref="0x40af8150"/>
        <function-ref name="linkResult" scoped="" ref="0x40af8230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x40b18670" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40b18670"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x40b18848"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x40b18928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x40afc2a0" loc="33:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPRaw" scoped="" ref="0x40afc2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40afc478"/>
        <function-ref name="recv" scoped="" ref="0x40afc558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x40af8938" loc="41:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x40af8938"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40af8b10"/>
        <function-ref name="stop" scoped="" ref="0x40af8bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x40b19178" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x40b19178"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x40b19350"/>
        <function-ref name="lookupRoute" scoped="" ref="0x40b19430"/>
        <function-ref name="delRoute" scoped="" ref="0x40b19510"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x40b195f0"/>
        <function-ref name="addRoute" scoped="" ref="0x40b196d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x40af8428" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40af8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40af8600"/>
        <function-ref name="stop" scoped="" ref="0x40af86e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40afadf0" loc="32:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x40afadf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40afc010"/>
        <function-ref name="recv" scoped="" ref="0x40afc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40b0cbf8" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40b0cbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40b0cdd0"/>
        <function-ref name="changed" scoped="" ref="0x40b0ceb0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40b11010"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40b110f0"/>
        <function-ref name="setSource" scoped="" ref="0x40b111d0"/>
        <function-ref name="removeAddress" scoped="" ref="0x40b112b0"/>
        <function-ref name="setAddress" scoped="" ref="0x40b11390"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40b11470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x40b11620" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubIP" scoped="" ref="0x40b11620"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b117f8"/>
        <function-ref name="recv" scoped="" ref="0x40b118d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40b09ae8" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x40b09ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40b09cc0"/>
        <function-ref name="delTLV" scoped="" ref="0x40b09da0"/>
        <function-ref name="findTLV" scoped="" ref="0x40b09e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40b15558" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x40b15558"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b15730"/>
        <function-ref name="recv" scoped="" ref="0x40b15810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x40b23508" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x40b23508"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x40b236e0"/>
        <function-ref name="initiate" scoped="" ref="0x40b237c0"/>
        <function-ref name="linkResult" scoped="" ref="0x40b238a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x40b1d600" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x40b1d600"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b1d7d8"/>
        <function-ref name="recv" scoped="" ref="0x40b1d8b8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b1d998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x40b20148" loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40b20148"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40931608"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b1c230"/>
        <function-ref name="maxSize" scoped="" ref="0x40b20c20"/>
        <function-ref name="empty" scoped="" ref="0x40b20770"/>
        <function-ref name="put" scoped="" ref="0x40b20e78"/>
        <function-ref name="size" scoped="" ref="0x40b209c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x40b34040" loc="96:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x40b34040"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b34218"/>
        <function-ref name="runTask" scoped="" ref="0x40b342f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x40b14cd8" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40b14cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x40b14eb0"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x40b23010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x40b23e60" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPRaw" scoped="" ref="0x40b23e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b22050"/>
        <function-ref name="recv" scoped="" ref="0x40b22130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b222a0" loc="25:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b222a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b22478"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40b1db38" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40b1db38"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40b1dd10"/>
        <function-ref name="changed" scoped="" ref="0x40b1ddf0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40b1ded0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40b21010"/>
        <function-ref name="setSource" scoped="" ref="0x40b210f0"/>
        <function-ref name="removeAddress" scoped="" ref="0x40b211d0"/>
        <function-ref name="setAddress" scoped="" ref="0x40b212b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40b21390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b1c5e8" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b1c5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b1c7c0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b1c8a0"/>
        <function-ref name="led1On" scoped="" ref="0x40b1c980"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b1ca60"/>
        <function-ref name="led3Off" scoped="" ref="0x40b1cb40"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b1cc20"/>
        <function-ref name="get" scoped="" ref="0x40b1cd00"/>
        <function-ref name="led1Off" scoped="" ref="0x40b1cde0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b1cec0"/>
        <function-ref name="led3On" scoped="" ref="0x40b3e010"/>
        <function-ref name="led4Off" scoped="" ref="0x40b3e0f0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x40b3e1d0"/>
        <function-ref name="led0On" scoped="" ref="0x40b3e2b0"/>
        <function-ref name="led2Off" scoped="" ref="0x40b3e410"/>
        <function-ref name="led2On" scoped="" ref="0x40b3e4f0"/>
        <function-ref name="led4On" scoped="" ref="0x40b3e5d0"/>
        <function-ref name="set" scoped="" ref="0x40b3e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x40b14568" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x40b14568"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x40b14740"/>
        <function-ref name="lookupRoute" scoped="" ref="0x40b14820"/>
        <function-ref name="delRoute" scoped="" ref="0x40b14900"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x40b149e0"/>
        <function-ref name="addRoute" scoped="" ref="0x40b14ac0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40b21528" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x40b21528"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40b21700"/>
        <function-ref name="delTLV" scoped="" ref="0x40b217e0"/>
        <function-ref name="findTLV" scoped="" ref="0x40b218c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40b239f8" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x40b239f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b23bd0"/>
        <function-ref name="recv" scoped="" ref="0x40b23cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x40b6b010" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x40b6b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b6b1e8"/>
        <function-ref name="recv" scoped="" ref="0x40b6b2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40b6b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x40b8a2e0" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x40b8a2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b8a4b8"/>
        <function-ref name="recv" scoped="" ref="0x40b8a598"/>
        <function-ref name="sendDone" scoped="" ref="0x40b8a678"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x40b68a80" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x40b68a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x40b68c58"/>
        <function-ref name="matchContext" scoped="" ref="0x40b68d38"/>
        <function-ref name="getContext" scoped="" ref="0x40b68e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x40b890c0" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x40b890c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b89298"/>
        <function-ref name="recv" scoped="" ref="0x40b89378"/>
        <function-ref name="sendDone" scoped="" ref="0x40b89458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x40b84510" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40b84510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40b846e8"/>
        <function-ref name="changed" scoped="" ref="0x40b847c8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40b848a8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40b84988"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40b84a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x40b89ba8" loc="26:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x40b89ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b89d80"/>
        <function-ref name="recv" scoped="" ref="0x40b89e60"/>
        <function-ref name="sendDone" scoped="" ref="0x40b88010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40b881b0" loc="27:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40b881b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40b88388"/>
        <function-ref name="changed" scoped="" ref="0x40b88468"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40b88548"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40b88628"/>
        <function-ref name="setSource" scoped="" ref="0x40b88708"/>
        <function-ref name="removeAddress" scoped="" ref="0x40b887e8"/>
        <function-ref name="setAddress" scoped="" ref="0x40b888c8"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40b889a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x40b89648" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x40b89648"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x40b89820"/>
        <function-ref name="matchContext" scoped="" ref="0x40b89900"/>
        <function-ref name="getContext" scoped="" ref="0x40b899e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x40b6a5a8" loc="25:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40b6a5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40b6a780"/>
        <function-ref name="changed" scoped="" ref="0x40b6a860"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40b6a940"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40b6aa20"/>
        <function-ref name="setSource" scoped="" ref="0x40b6ab00"/>
        <function-ref name="removeAddress" scoped="" ref="0x40b6abe0"/>
        <function-ref name="setAddress" scoped="" ref="0x40b6acc0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40b6ada0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x40b91e00" loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40b91e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40b8e010"/>
        <function-ref name="changed" scoped="" ref="0x40b8e0f0"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40b8e1d0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40b8e2b0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40b8e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x40b913f8" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40b913f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40b915d0"/>
        <function-ref name="changed" scoped="" ref="0x40b916b0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40b91790"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40b91870"/>
        <function-ref name="setSource" scoped="" ref="0x40b91950"/>
        <function-ref name="removeAddress" scoped="" ref="0x40b91a30"/>
        <function-ref name="setAddress" scoped="" ref="0x40b91b10"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40b91bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x40b902d8" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40b902d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40b904b0"/>
        <function-ref name="changed" scoped="" ref="0x40b90590"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40b90670"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40b90750"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40b90830"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40bd5200" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40bd5200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40bd53d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x40bd8220" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40bd8220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40bd83f8"/>
        <function-ref name="changed" scoped="" ref="0x40bd84d8"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40bd85b8"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40bd8698"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40bd8778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ShortAddressConfig" ref="0x40bd33e8" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x40bd33e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x40bd35c0"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x40bd36a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40b90e60" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40b90e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40bd8050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x40bda948" loc="40:/opt/tinyos-2.x/tos/platforms/ucbase/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40bda948"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40bdab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x40be0740" loc="10:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40be0740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40be0918"/>
        <function-ref name="stopDone" scoped="" ref="0x40be09f8"/>
        <function-ref name="start" scoped="" ref="0x40be0ad8"/>
        <function-ref name="stop" scoped="" ref="0x40be0bb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40be0068" loc="9:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40be0068"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40be0240"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40be0320"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40be0400"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40be04e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShortAddressConfig" ref="0x40be0db0" loc="11:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x40be0db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x40bee010"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x40bee0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40be9338" loc="6:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40be9338"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40be9510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40bea450" loc="5:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40bea450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bea628"/>
        <function-ref name="cancel" scoped="" ref="0x40bea708"/>
        <function-ref name="sendDone" scoped="" ref="0x40bea7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40be9718" loc="7:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40be9718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40be98f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40be99d0"/>
        <function-ref name="getPayload" scoped="" ref="0x40be9ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40be9b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40be9c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40be31b8" loc="8:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40be31b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40be3390"/>
        <function-ref name="setRetries" scoped="" ref="0x40be3470"/>
        <function-ref name="getRetries" scoped="" ref="0x40be3550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40be3630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40be3710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40bee788" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40bee788"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40bee960"/>
        <function-ref name="stopDone" scoped="" ref="0x40beea40"/>
        <function-ref name="start" scoped="" ref="0x40beeb20"/>
        <function-ref name="stop" scoped="" ref="0x40beec00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40c134d8" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40c134d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c120b8"/>
        <function-ref name="get" scoped="" ref="0x40c13de0"/>
        <function-ref name="isSet" scoped="" ref="0x40c13b20"/>
        <function-ref name="set" scoped="" ref="0x40c12378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40bff690" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40bff690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40bff868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40bffda0" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40bffda0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bfa010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40bfa0f0"/>
        <function-ref name="request" scoped="" ref="0x40bfa1d0"/>
        <function-ref name="granted" scoped="" ref="0x40bfa2b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40bfa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40c02888" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40c02888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40c02a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40bde100" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40bde100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bde2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40bde3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bde498"/>
        <function-ref name="cancel" scoped="" ref="0x40bde578"/>
        <function-ref name="sendDone" scoped="" ref="0x40bde658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40bdd178" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40bdd178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdd350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40bf9010" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40bf9010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40bf91e8"/>
        <function-ref name="address" scoped="" ref="0x40bf92c8"/>
        <function-ref name="destination" scoped="" ref="0x40bf93a8"/>
        <function-ref name="setSource" scoped="" ref="0x40bf9488"/>
        <function-ref name="setDestination" scoped="" ref="0x40bf9568"/>
        <function-ref name="pan" scoped="" ref="0x40bf9648"/>
        <function-ref name="setPan" scoped="" ref="0x40bf9728"/>
        <function-ref name="isForMe" scoped="" ref="0x40bf9808"/>
        <function-ref name="localPan" scoped="" ref="0x40bf98e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x40bf9b70" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x40bf9b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bf9d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bf9e28"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf9f08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf8010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bf80f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40c19010" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40c19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c19cd8"/>
        <function-ref name="get" scoped="" ref="0x40c19a18"/>
        <function-ref name="isSet" scoped="" ref="0x40c19758"/>
        <function-ref name="set" scoped="" ref="0x40c13010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40bf34c0" loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40bf34c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40bf3698"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40bf3778"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40bf3858"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40bf3938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShortAddressConfig" ref="0x40bf8a48" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x40bf8a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x40bf8c20"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x40bf8d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40c017d0" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40c017d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c019a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c01a88"/>
        <function-ref name="getPayload" scoped="" ref="0x40c01b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c01c48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c01d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40bdeac0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40bdeac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bdec98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40bff1c0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40bff1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bff418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40c07580" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40c07580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c100a8"/>
        <function-ref name="clear" scoped="" ref="0x40c10458"/>
        <function-ref name="isValid" scoped="" ref="0x40c07cd0"/>
        <function-ref name="set" scoped="" ref="0x40c10808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40c0d8a0" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40c0d8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c0dee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40c15bd0" loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40c15bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bf17b8"/>
        <function-ref name="get" scoped="" ref="0x40bf14f8"/>
        <function-ref name="isSet" scoped="" ref="0x40bf1238"/>
        <function-ref name="set" scoped="" ref="0x40bf1a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40bf8f20" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40bf8f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40bf3110"/>
        <function-ref name="noAck" scoped="" ref="0x40bf31f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x40bf32d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40bfb098" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40bfb098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfb270"/>
        <function-ref name="getPayload" scoped="" ref="0x40bfb350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bfb430"/>
        <function-ref name="cancel" scoped="" ref="0x40bfb510"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfb5f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40c04010" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40c04010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c041e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40bf82f8" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40bf82f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40bf84d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40bf85b0"/>
        <function-ref name="getPayload" scoped="" ref="0x40bf8690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40bf8770"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40bf8850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40bfb788" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40bfb788"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40bfb960"/>
        <function-ref name="cancel" scoped="" ref="0x40bfba40"/>
        <function-ref name="sendDone" scoped="" ref="0x40bfbb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40c18580" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40c18580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40c18758"/>
        <function-ref name="setChannel" scoped="" ref="0x40c18838"/>
        <function-ref name="getChannel" scoped="" ref="0x40c18918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40c04a60" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40c04a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c04c38"/>
        <function-ref name="source" scoped="" ref="0x40c04d18"/>
        <function-ref name="address" scoped="" ref="0x40c04df8"/>
        <function-ref name="destination" scoped="" ref="0x40c04ed8"/>
        <function-ref name="setSource" scoped="" ref="0x40c01010"/>
        <function-ref name="setDestination" scoped="" ref="0x40c010f0"/>
        <function-ref name="type" scoped="" ref="0x40c011d0"/>
        <function-ref name="setType" scoped="" ref="0x40c012b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40c01390"/>
        <function-ref name="setGroup" scoped="" ref="0x40c01470"/>
        <function-ref name="localGroup" scoped="" ref="0x40c01550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40bf3ae0" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40bf3ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40bf3cb8"/>
        <function-ref name="setRetries" scoped="" ref="0x40bf3d98"/>
        <function-ref name="getRetries" scoped="" ref="0x40bf3e78"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40bf2010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40bf20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40bfbd58" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40bfbd58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40bff010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40c08010" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40c08010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c08b10"/>
        <function-ref name="clear" scoped="" ref="0x40c08ec0"/>
        <function-ref name="isValid" scoped="" ref="0x40c08760"/>
        <function-ref name="set" scoped="" ref="0x40c062a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40c0e638" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40c0e638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40c0e810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40c046f0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40c046f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40c048c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x40c1d6f8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x40c1d6f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40c1d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x40c28010" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x40c28010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x40c281e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x40c3e778" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x40c3e778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40c3e950"/>
        <function-ref name="checkFrame" scoped="" ref="0x40c3ea30"/>
        <function-ref name="source" scoped="" ref="0x40c3eb10"/>
        <function-ref name="destination" scoped="" ref="0x40c3ebf0"/>
        <function-ref name="setSource" scoped="" ref="0x40c3ecd0"/>
        <function-ref name="setDestination" scoped="" ref="0x40c3edb0"/>
        <function-ref name="setGroup" scoped="" ref="0x40c3ee90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x40c43be0" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x40c43be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x40c43db8"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x40c43e98"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x40c1e010"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x40c1e0f0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x40c1e1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40c54ad0" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c54ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c54ca8"/>
        <function-ref name="wait" scoped="" ref="0x40c54d88"/>
        <function-ref name="cancel" scoped="" ref="0x40c54e68"/>
        <function-ref name="isFree" scoped="" ref="0x40c56010"/>
        <function-ref name="getNow" scoped="" ref="0x40c560f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40c55840" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40c55840"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40c523c0"/>
        <function-ref name="clear" scoped="" ref="0x40c52770"/>
        <function-ref name="isValid" scoped="" ref="0x40c52010"/>
        <function-ref name="set" scoped="" ref="0x40c52b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x40c1f268" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x40c1f268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x40c1f440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShortAddressConfig" ref="0x40c1dac8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x40c1dac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x40c1dca0"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x40c1dd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x40c24ad0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x40c24ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40c24ca8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40c24d88"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c24e68"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40c2c010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40c2c0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40c2c1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c2c2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c2c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40c57520" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40c57520"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40c576f8"/>
        <function-ref name="getDSN" scoped="" ref="0x40c577d8"/>
        <function-ref name="setFCF" scoped="" ref="0x40c578b8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40c57998"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40c57a78"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40c57b58"/>
        <function-ref name="setDSN" scoped="" ref="0x40c57c38"/>
        <function-ref name="createAckReply" scoped="" ref="0x40c57d18"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40c57df8"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40c57ed8"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40c3c010"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40c3c0f0"/>
        <function-ref name="localAddr" scoped="" ref="0x40c3c1d0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40c3c330"/>
        <function-ref name="localPan" scoped="" ref="0x40c3c410"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40c3c4f0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40c3c5d0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40c3c6b0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40c3c790"/>
        <function-ref name="isForMe" scoped="" ref="0x40c3c870"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40c3c950"/>
        <function-ref name="getFCF" scoped="" ref="0x40c3ca30"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40c3cb10"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40c3cbf0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40c3ccd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x40c20278" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x40c20278"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40c20450"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40c20530"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40c20610"/>
        <function-ref name="getSender" scoped="" ref="0x40c206f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x40c1b118" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x40c1b118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40c1b2f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40c1b3d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40c1b4b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40c1b590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x40c50dd8" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x40c50dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c55050"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c55130"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c55210"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c552f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c553d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c554b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x40c2a8f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x40c2a8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c2aad0"/>
        <function-ref name="headerLength" scoped="" ref="0x40c2abb0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c2ac90"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40c2ad70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40c71850" loc="4:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1BarePacketP.nc">
      <component-ref qname="RFA1BarePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40c71850"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c71a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c71b08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c71be8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c71cc8"/>
        <function-ref name="headerLength" scoped="" ref="0x40c71da8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40c71e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x40c71128" loc="3:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1BarePacketP.nc">
      <component-ref qname="RFA1BarePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x40c71128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40c71300"/>
        <function-ref name="payloadLength" scoped="" ref="0x40c713e0"/>
        <function-ref name="getPayload" scoped="" ref="0x40c714c0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40c715a0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40c71680"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x40c945c0" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40c945c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40c947a8"/>
        <function-ref name="wait" scoped="" ref="0x40c94888"/>
        <function-ref name="cancel" scoped="" ref="0x40c94968"/>
        <function-ref name="isFree" scoped="" ref="0x40c94a48"/>
        <function-ref name="getNow" scoped="" ref="0x40c94b28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x40c94e78" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40c94e78"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x407085e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40c9f350"/>
        <function-ref name="fired" scoped="" ref="0x40c93af8"/>
        <function-ref name="startAt" scoped="" ref="0x40c9f010"/>
        <function-ref name="isRunning" scoped="" ref="0x40c93d70"/>
        <function-ref name="getAlarm" scoped="" ref="0x40c9f5c8"/>
        <function-ref name="start" scoped="" ref="0x40c935e0"/>
        <function-ref name="stop" scoped="" ref="0x40c93880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x41876b38" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41876b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41876d20"/>
        <function-ref name="wait" scoped="" ref="0x41876e00"/>
        <function-ref name="cancel" scoped="" ref="0x41876ee0"/>
        <function-ref name="isFree" scoped="" ref="0x41874010"/>
        <function-ref name="getNow" scoped="" ref="0x418740f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x41874380" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41874380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x407085e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41873840"/>
        <function-ref name="fired" scoped="" ref="0x41873010"/>
        <function-ref name="startAt" scoped="" ref="0x41873500"/>
        <function-ref name="isRunning" scoped="" ref="0x41873288"/>
        <function-ref name="getAlarm" scoped="" ref="0x41873ab8"/>
        <function-ref name="start" scoped="" ref="0x41874ad0"/>
        <function-ref name="stop" scoped="" ref="0x41874d70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41873cc8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41873cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41873ea0"/>
        <function-ref name="suspend" scoped="" ref="0x41872010"/>
        <function-ref name="resume" scoped="" ref="0x418720f0"/>
        <function-ref name="run" scoped="" ref="0x418721d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x40ca5010" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40ca5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40ca51e8"/>
        <function-ref name="suspend" scoped="" ref="0x40ca52c8"/>
        <function-ref name="resume" scoped="" ref="0x40ca53a8"/>
        <function-ref name="run" scoped="" ref="0x40ca5488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d19f20" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d19f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d18110"/>
        <function-ref name="cancel" scoped="" ref="0x40d181f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d182d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d18430" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d18430"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d18608"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40d1bc28" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40d1bc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40d1be10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d1c5b0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d1c5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d1c788"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d1c868"/>
        <function-ref name="getPayload" scoped="" ref="0x40d1c948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d1ca28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d1cb08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40d1cce0" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40d1cce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d1cec8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d1b010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d1b0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40d1b1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d1b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40d1b868" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40d1b868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d1ba50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d19788" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d19788"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d19960"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d19a40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d19b20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d19c00"/>
        <function-ref name="headerLength" scoped="" ref="0x40d19ce0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d19dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40d18768" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40d18768"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d18940"/>
        <function-ref name="checkFrame" scoped="" ref="0x40d18a20"/>
        <function-ref name="source" scoped="" ref="0x40d18b00"/>
        <function-ref name="destination" scoped="" ref="0x40d18be0"/>
        <function-ref name="setSource" scoped="" ref="0x40d18cc0"/>
        <function-ref name="setDestination" scoped="" ref="0x40d18da0"/>
        <function-ref name="setGroup" scoped="" ref="0x40d18e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40d1b488" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40d1b488"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d1b670"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40d19030" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40d19030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d19218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40d1d990" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40d1d990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40d1db68"/>
        <function-ref name="source" scoped="" ref="0x40d1dc48"/>
        <function-ref name="address" scoped="" ref="0x40d1dd28"/>
        <function-ref name="destination" scoped="" ref="0x40d1de08"/>
        <function-ref name="setSource" scoped="" ref="0x40d1dee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40d1c010"/>
        <function-ref name="type" scoped="" ref="0x40d1c0f0"/>
        <function-ref name="setType" scoped="" ref="0x40d1c1d0"/>
        <function-ref name="isForMe" scoped="" ref="0x40d1c2b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40d1c390"/>
        <function-ref name="localGroup" scoped="" ref="0x40d1c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40d19410" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40d19410"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d195f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x418bf9e8" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x418bf9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418bfbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x418bf4f0" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x418bf4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418bf6c8"/>
        <function-ref name="cancel" scoped="" ref="0x418bf7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x418bf888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x418c11e8" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x418c11e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x418c13d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x418c3ac0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x418c3ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418c3c98"/>
        <function-ref name="payloadLength" scoped="" ref="0x418c3d78"/>
        <function-ref name="getPayload" scoped="" ref="0x418c3e58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418c2010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418c20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x418c22c8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x418c22c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418c24b0"/>
        <function-ref name="getPayload" scoped="" ref="0x418c2590"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418c2670"/>
        <function-ref name="cancel" scoped="" ref="0x418c2750"/>
        <function-ref name="sendDone" scoped="" ref="0x418c2830"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x418c2de8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x418c2de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418c1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x418c6750" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x418c6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418c6928"/>
        <function-ref name="payloadLength" scoped="" ref="0x418c6a08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418c6ae8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418c6bc8"/>
        <function-ref name="headerLength" scoped="" ref="0x418c6ca8"/>
        <function-ref name="metadataLength" scoped="" ref="0x418c6d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x418bfd20" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x418bfd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418be010"/>
        <function-ref name="checkFrame" scoped="" ref="0x418be0f0"/>
        <function-ref name="source" scoped="" ref="0x418be1d0"/>
        <function-ref name="destination" scoped="" ref="0x418be2b0"/>
        <function-ref name="setSource" scoped="" ref="0x418be390"/>
        <function-ref name="setDestination" scoped="" ref="0x418be470"/>
        <function-ref name="setGroup" scoped="" ref="0x418be550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x418be690" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x418be690"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x418be868"/>
        <function-ref name="changed" scoped="" ref="0x418be948"/>
        <function-ref name="amGroup" scoped="" ref="0x418bea28"/>
        <function-ref name="setAddress" scoped="" ref="0x418beb08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x418c1d20" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x418c1d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x418c1ef8"/>
        <function-ref name="payloadLength" scoped="" ref="0x418bf010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x418bf0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x418bf1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x418bf2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x418bf390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x418c2a08" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x418c2a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418c2bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x418c15c8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x418c15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418c17b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x418c6ec8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x418c6ec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x418c30c0"/>
        <function-ref name="source" scoped="" ref="0x418c31a0"/>
        <function-ref name="address" scoped="" ref="0x418c3280"/>
        <function-ref name="destination" scoped="" ref="0x418c3360"/>
        <function-ref name="setSource" scoped="" ref="0x418c3440"/>
        <function-ref name="setDestination" scoped="" ref="0x418c3520"/>
        <function-ref name="type" scoped="" ref="0x418c3600"/>
        <function-ref name="setType" scoped="" ref="0x418c36e0"/>
        <function-ref name="isForMe" scoped="" ref="0x418c37c0"/>
        <function-ref name="setGroup" scoped="" ref="0x418c38a0"/>
        <function-ref name="localGroup" scoped="" ref="0x418c3980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x418c19a8" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x418c19a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x418c1b90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x40cfa010" loc="54:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x40cfa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x40cfa1e8"/>
        <function-ref name="changed" scoped="" ref="0x40cfa2c8"/>
        <function-ref name="amGroup" scoped="" ref="0x40cfa3a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40cfa488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d13a60" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d13a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d13c38"/>
        <function-ref name="cancel" scoped="" ref="0x40d13d18"/>
        <function-ref name="sendDone" scoped="" ref="0x40d13df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x40d0a010" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d0a1e8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d0a2c8"/>
        <function-ref name="request" scoped="" ref="0x40d0a3a8"/>
        <function-ref name="granted" scoped="" ref="0x40d0a488"/>
        <function-ref name="isOwner" scoped="" ref="0x40d0a568"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40d13538" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40d13538"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d13710"/>
        <function-ref name="cancel" scoped="" ref="0x40d137f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d138d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x40d089f8" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x40d089f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x40d08be0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x40d08cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40d072e8" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40d072e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40d074d0"/>
        <function-ref name="configure" scoped="" ref="0x40d075b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40d082b8" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40d082b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40d084a0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40d08580"/>
        <function-ref name="request" scoped="" ref="0x40d08660"/>
        <function-ref name="granted" scoped="" ref="0x40d08740"/>
        <function-ref name="isOwner" scoped="" ref="0x40d08820"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x40d08e00" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40d08e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40d07010"/>
        <function-ref name="userId" scoped="" ref="0x40d070f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x418ed750" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x418ed750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x418ed928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x418eda88" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x418eda88"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418edc60"/>
        <function-ref name="isEmpty" scoped="" ref="0x418edd40"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418ede20"/>
        <function-ref name="dequeue" scoped="" ref="0x418edf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x418eb1e8" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x418eb1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x418eb3d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x418eb4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x418ebab0" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x418ebab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x418ebc98"/>
        <function-ref name="configure" scoped="" ref="0x418ebd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x418ebed8" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x418ebed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x418ea0c0"/>
        <function-ref name="isEmpty" scoped="" ref="0x418ea1a0"/>
        <function-ref name="isEnqueued" scoped="" ref="0x418ea280"/>
        <function-ref name="dequeue" scoped="" ref="0x418ea360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x418eca80" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x418eca80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x418ecc68"/>
        <function-ref name="immediateRequest" scoped="" ref="0x418ecd48"/>
        <function-ref name="request" scoped="" ref="0x418ece28"/>
        <function-ref name="granted" scoped="" ref="0x418ecf08"/>
        <function-ref name="isOwner" scoped="" ref="0x418eb010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x418eb5f0" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x418eb5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x418eb7c8"/>
        <function-ref name="userId" scoped="" ref="0x418eb8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x418ea4e0" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x418ea4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418ea6b8"/>
        <function-ref name="runTask" scoped="" ref="0x418ea798"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d44908" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d44908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d44ae0"/>
        <function-ref name="cancel" scoped="" ref="0x40d44bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40d44ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d44e00" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d44e00"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d43010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40d46328" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40d46328"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40d46500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40d32248" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40d32248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d32420"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d32500"/>
        <function-ref name="getPayload" scoped="" ref="0x40d325e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d326c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d327a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x40d44170" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40d44170"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d44348"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d44428"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d44508"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d445e8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d446c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d447a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x40d46670" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40d46670"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40d46848"/>
        <function-ref name="getDSN" scoped="" ref="0x40d46928"/>
        <function-ref name="setFCF" scoped="" ref="0x40d46a08"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40d46ae8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40d46bc8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40d46ca8"/>
        <function-ref name="setDSN" scoped="" ref="0x40d46d88"/>
        <function-ref name="createAckReply" scoped="" ref="0x40d46e68"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40d45010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40d450f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40d451d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40d452b0"/>
        <function-ref name="localAddr" scoped="" ref="0x40d45390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40d454f0"/>
        <function-ref name="localPan" scoped="" ref="0x40d455d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40d456b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40d45790"/>
        <function-ref name="setFramePending" scoped="" ref="0x40d45870"/>
        <function-ref name="setDestPan" scoped="" ref="0x40d45950"/>
        <function-ref name="isForMe" scoped="" ref="0x40d45a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40d45b10"/>
        <function-ref name="getFCF" scoped="" ref="0x40d45bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40d45cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40d45db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x40d45e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40d328e0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40d328e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d32ab8"/>
        <function-ref name="getPayload" scoped="" ref="0x40d32b98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d32c78"/>
        <function-ref name="cancel" scoped="" ref="0x40d32d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40d32e38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40d46010" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40d46010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d461e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40d4e050" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40d4e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4e228"/>
        <function-ref name="cancel" scoped="" ref="0x40d4e308"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4e3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40d4e548" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40d4e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40d3e880" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40d3e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d3ea58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d3eb38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d3ec18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d3ecf8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d3edd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d3eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x40d4f528" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x40d4f528"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d4f700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40d4e880" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40d4e880"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4ea58"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4eb38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4ec18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4ecf8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d4edd8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d4eeb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x40d4f030" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x40d4f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d4f208"/>
        <function-ref name="cancel" scoped="" ref="0x40d4f2e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40d4f3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x40d3e050" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x40d3e050"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40d3e228"/>
        <function-ref name="cancel" scoped="" ref="0x40d3e308"/>
        <function-ref name="sendDone" scoped="" ref="0x40d3e3e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x40d3e548" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x40d3e548"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40d3e720"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x40d4f860" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x40d4f860"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40d4fa38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40d4fb18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40d4fbf8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40d4fcd8"/>
        <function-ref name="headerLength" scoped="" ref="0x40d4fdb8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40d4fe98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x40db4e30" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x40db4e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x40db3050"/>
        <function-ref name="address" scoped="" ref="0x40db3130"/>
        <function-ref name="destination" scoped="" ref="0x40db3210"/>
        <function-ref name="setSource" scoped="" ref="0x40db32f0"/>
        <function-ref name="setDestination" scoped="" ref="0x40db33d0"/>
        <function-ref name="pan" scoped="" ref="0x40db34b0"/>
        <function-ref name="setPan" scoped="" ref="0x40db3590"/>
        <function-ref name="isForMe" scoped="" ref="0x40db3670"/>
        <function-ref name="localPan" scoped="" ref="0x40db3750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40db3890" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40db3890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db3a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x40db3b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db3c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db3d08"/>
        <function-ref name="headerLength" scoped="" ref="0x40db3de8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40db3ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x40db5450" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x40db5450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x40db5628"/>
        <function-ref name="getDSN" scoped="" ref="0x40db5708"/>
        <function-ref name="setFCF" scoped="" ref="0x40db57e8"/>
        <function-ref name="isAckFrame" scoped="" ref="0x40db58c8"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x40db59a8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x40db5a88"/>
        <function-ref name="setDSN" scoped="" ref="0x40db5b68"/>
        <function-ref name="createAckReply" scoped="" ref="0x40db5c48"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x40db5d28"/>
        <function-ref name="isDataFrame" scoped="" ref="0x40db5e08"/>
        <function-ref name="getAckRequired" scoped="" ref="0x40db5ee8"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x40db4010"/>
        <function-ref name="localAddr" scoped="" ref="0x40db40f0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40db4250"/>
        <function-ref name="localPan" scoped="" ref="0x40db4330"/>
        <function-ref name="setDestAddr" scoped="" ref="0x40db4410"/>
        <function-ref name="createAckFrame" scoped="" ref="0x40db44f0"/>
        <function-ref name="setFramePending" scoped="" ref="0x40db45d0"/>
        <function-ref name="setDestPan" scoped="" ref="0x40db46b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40db4790"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40db4870"/>
        <function-ref name="getFCF" scoped="" ref="0x40db4950"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40db4a30"/>
        <function-ref name="getDestAddr" scoped="" ref="0x40db4b10"/>
        <function-ref name="getFramePending" scoped="" ref="0x40db4bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40db2090" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40db2090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40db2268"/>
        <function-ref name="payloadLength" scoped="" ref="0x40db2348"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40db2428"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40db2508"/>
        <function-ref name="headerLength" scoped="" ref="0x40db25e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40db26c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4190c010" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4190c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4190c1e8"/>
        <function-ref name="address" scoped="" ref="0x4190c2c8"/>
        <function-ref name="destination" scoped="" ref="0x4190c3a8"/>
        <function-ref name="setSource" scoped="" ref="0x4190c488"/>
        <function-ref name="setDestination" scoped="" ref="0x4190c568"/>
        <function-ref name="pan" scoped="" ref="0x4190c648"/>
        <function-ref name="setPan" scoped="" ref="0x4190c728"/>
        <function-ref name="isForMe" scoped="" ref="0x4190c808"/>
        <function-ref name="localPan" scoped="" ref="0x4190c8e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4190ca28" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4190ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4190cc00"/>
        <function-ref name="payloadLength" scoped="" ref="0x4190cce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4190cdc0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4190cea0"/>
        <function-ref name="headerLength" scoped="" ref="0x4190b010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4190b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x4190f5c0" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4190f5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4190f798"/>
        <function-ref name="getDSN" scoped="" ref="0x4190f878"/>
        <function-ref name="setFCF" scoped="" ref="0x4190f958"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4190fa38"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4190fb18"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4190fbf8"/>
        <function-ref name="setDSN" scoped="" ref="0x4190fcd8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4190fdb8"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4190fe98"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4190d010"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4190d0f0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4190d1d0"/>
        <function-ref name="localAddr" scoped="" ref="0x4190d2b0"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4190d410"/>
        <function-ref name="localPan" scoped="" ref="0x4190d4f0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4190d5d0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4190d6b0"/>
        <function-ref name="setFramePending" scoped="" ref="0x4190d790"/>
        <function-ref name="setDestPan" scoped="" ref="0x4190d870"/>
        <function-ref name="isForMe" scoped="" ref="0x4190d950"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4190da30"/>
        <function-ref name="getFCF" scoped="" ref="0x4190db10"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4190dbf0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4190dcd0"/>
        <function-ref name="getFramePending" scoped="" ref="0x4190ddb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x4190b260" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x4190b260"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x4190b438"/>
        <function-ref name="changed" scoped="" ref="0x4190b518"/>
        <function-ref name="amGroup" scoped="" ref="0x4190b5f8"/>
        <function-ref name="setAddress" scoped="" ref="0x4190b6d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4190b838" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4190b838"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4190ba10"/>
        <function-ref name="payloadLength" scoped="" ref="0x4190baf0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4190bbd0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4190bcb0"/>
        <function-ref name="headerLength" scoped="" ref="0x4190bd90"/>
        <function-ref name="metadataLength" scoped="" ref="0x4190be70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40dafa88" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40dafa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40dafc60"/>
        <function-ref name="cancel" scoped="" ref="0x40dafd40"/>
        <function-ref name="sendDone" scoped="" ref="0x40dafe20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e06010" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e06010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e061e8"/>
        <function-ref name="header" scoped="" ref="0x40e062c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40daf168" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40daf168"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40daf340"/>
        <function-ref name="cancel" scoped="" ref="0x40daf420"/>
        <function-ref name="sendDone" scoped="" ref="0x40daf500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40e06428" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40e06428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x40e06600"/>
        <function-ref name="reportChannelError" scoped="" ref="0x40e066e0"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x40e067c0"/>
        <function-ref name="getSender" scoped="" ref="0x40e068a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40daf640" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40daf640"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40daf818"/>
        <function-ref name="header" scoped="" ref="0x40daf8f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4193d378" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4193d378"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4193d550"/>
        <function-ref name="cancel" scoped="" ref="0x4193d630"/>
        <function-ref name="sendDone" scoped="" ref="0x4193d710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4193d870" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4193d870"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4193da48"/>
        <function-ref name="header" scoped="" ref="0x4193db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x4193c8d0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4193c8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4193caa8"/>
        <function-ref name="clearAll" scoped="" ref="0x4193cb88"/>
        <function-ref name="get" scoped="" ref="0x4193cc68"/>
        <function-ref name="set" scoped="" ref="0x4193cd48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x419406f0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x419406f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419408c8"/>
        <function-ref name="cancel" scoped="" ref="0x419409a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41940a88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x4193c238" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4193c238"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4193c410"/>
        <function-ref name="insertNode" scoped="" ref="0x4193c4f0"/>
        <function-ref name="getNode" scoped="" ref="0x4193c5d0"/>
        <function-ref name="evicted" scoped="" ref="0x4193c6b0"/>
        <function-ref name="getIndex" scoped="" ref="0x4193c790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41940bc8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41940bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41940da0"/>
        <function-ref name="header" scoped="" ref="0x41940e80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4193d010" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4193d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4193d1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x4193dc68" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x4193dc68"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x4193de40"/>
        <function-ref name="reportChannelError" scoped="" ref="0x4193df20"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x4193c018"/>
        <function-ref name="getSender" scoped="" ref="0x4193c0f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40dc3430" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40dc3430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40dc3608"/>
        <function-ref name="insertNode" scoped="" ref="0x40dc36e8"/>
        <function-ref name="getNode" scoped="" ref="0x40dc37c8"/>
        <function-ref name="evicted" scoped="" ref="0x40dc38a8"/>
        <function-ref name="getIndex" scoped="" ref="0x40dc3988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x40deedd0" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x40deedd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ded010"/>
        <function-ref name="clearAll" scoped="" ref="0x40ded0f0"/>
        <function-ref name="get" scoped="" ref="0x40ded1d0"/>
        <function-ref name="set" scoped="" ref="0x40ded2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x40dee3a8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x40dee3a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x40dee580"/>
        <function-ref name="insertNode" scoped="" ref="0x40dee660"/>
        <function-ref name="getNode" scoped="" ref="0x40dee740"/>
        <function-ref name="evicted" scoped="" ref="0x40dee820"/>
        <function-ref name="getIndex" scoped="" ref="0x40dee900"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40dee010" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40dee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40dee1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4193bd40" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4193bd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4193bf18"/>
        <function-ref name="clearAll" scoped="" ref="0x4193a010"/>
        <function-ref name="get" scoped="" ref="0x4193a0f0"/>
        <function-ref name="set" scoped="" ref="0x4193a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e2f520" loc="85:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e2f520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2f6f8"/>
        <function-ref name="cancel" scoped="" ref="0x40e2f7d8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2f8b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e2fa18" loc="86:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e2fa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e2fbf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e02d70" loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e02d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e30010"/>
        <function-ref name="cancel" scoped="" ref="0x40e300f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e301d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e30ce0" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e30ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e30eb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e2f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2f0f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e2f1d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e2f2b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e2f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e2fd50" loc="87:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e2fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e2ff28"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e2e018"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e2e0f8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e2e1d8"/>
        <function-ref name="headerLength" scoped="" ref="0x40e2e2b8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e2e398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e30330" loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e30330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e30508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x40e2e4d8" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40e2e4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40e2e6b0"/>
        <function-ref name="noAck" scoped="" ref="0x40e2e790"/>
        <function-ref name="wasAcked" scoped="" ref="0x40e2e870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40e30648" loc="79:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40e30648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40e30820"/>
        <function-ref name="setRetries" scoped="" ref="0x40e30900"/>
        <function-ref name="getRetries" scoped="" ref="0x40e309e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40e30ac0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40e30ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4192a808" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4192a808"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4192a9e0"/>
        <function-ref name="cancel" scoped="" ref="0x4192aac0"/>
        <function-ref name="sendDone" scoped="" ref="0x4192aba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x41926c88" loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x41926c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41926e60"/>
        <function-ref name="runTask" scoped="" ref="0x41925010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x419292e0" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x419292e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41928dd0"/>
        <function-ref name="fired" scoped="" ref="0x41928088"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41928790"/>
        <function-ref name="isOneShot" scoped="" ref="0x41928538"/>
        <function-ref name="getdt" scoped="" ref="0x419262a0"/>
        <function-ref name="gett0" scoped="" ref="0x41926048"/>
        <function-ref name="isRunning" scoped="" ref="0x419282e0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41929908"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41928ab0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41929b88"/>
        <function-ref name="stop" scoped="" ref="0x41929e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4192b4b0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4192b4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4192b688"/>
        <function-ref name="cancel" scoped="" ref="0x4192b768"/>
        <function-ref name="sendDone" scoped="" ref="0x4192b848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4192a040" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4192a040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4192a218"/>
        <function-ref name="payloadLength" scoped="" ref="0x4192a2f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4192a3d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4192a4b8"/>
        <function-ref name="headerLength" scoped="" ref="0x4192a598"/>
        <function-ref name="metadataLength" scoped="" ref="0x4192a678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x419264d0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x419264d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x419266a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41926788"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41926868"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41926948"/>
        <function-ref name="headerLength" scoped="" ref="0x41926a28"/>
        <function-ref name="metadataLength" scoped="" ref="0x41926b08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x4192ace0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4192ace0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4192aeb8"/>
        <function-ref name="noAck" scoped="" ref="0x41929010"/>
        <function-ref name="wasAcked" scoped="" ref="0x419290f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4192b988" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4192b988"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4192bb60"/>
        <function-ref name="setRetries" scoped="" ref="0x4192bc40"/>
        <function-ref name="getRetries" scoped="" ref="0x4192bd20"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4192be00"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4192bee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41924330" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41924330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41981e38"/>
        <function-ref name="fired" scoped="" ref="0x419810f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x419817f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x419815a0"/>
        <function-ref name="getdt" scoped="" ref="0x41980310"/>
        <function-ref name="gett0" scoped="" ref="0x419800b8"/>
        <function-ref name="isRunning" scoped="" ref="0x41981348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41924958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41981b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x41924bd8"/>
        <function-ref name="stop" scoped="" ref="0x41924e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e2be28" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e2be28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e2a050"/>
        <function-ref name="stopDone" scoped="" ref="0x40e2a130"/>
        <function-ref name="start" scoped="" ref="0x40e2a210"/>
        <function-ref name="stop" scoped="" ref="0x40e2a2f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e4f010" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e4f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e4f1e8"/>
        <function-ref name="cancel" scoped="" ref="0x40e4f2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40e4f3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e4f508" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e4f508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e4f6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e2a450" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e2a450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e2a628"/>
        <function-ref name="cancel" scoped="" ref="0x40e2a708"/>
        <function-ref name="sendDone" scoped="" ref="0x40e2a7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40e2ac60" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40e2ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e2ae38"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e2af18"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e50010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e500f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40e501d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e502b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40e503f0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40e503f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40e505c8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40e506a8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40e50788"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40e50868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40e509f8" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40e509f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e50bd0"/>
        <function-ref name="stopDone" scoped="" ref="0x40e50cb0"/>
        <function-ref name="start" scoped="" ref="0x40e50d90"/>
        <function-ref name="stop" scoped="" ref="0x40e50e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e2a948" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e2a948"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e2ab20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40e4f840" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40e4f840"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40e4fa18"/>
        <function-ref name="payloadLength" scoped="" ref="0x40e4faf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40e4fbd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40e4fcb8"/>
        <function-ref name="headerLength" scoped="" ref="0x40e4fd98"/>
        <function-ref name="metadataLength" scoped="" ref="0x40e4fe78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41963598" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningDummyP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningDummyP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41963598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41963770"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41963850"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41963930"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41963a10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40e49010" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40e49010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40e491e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40e492c8"/>
        <function-ref name="start" scoped="" ref="0x40e493a8"/>
        <function-ref name="stop" scoped="" ref="0x40e49488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x40e70340" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40e70340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40e70518"/>
        <function-ref name="turnOn" scoped="" ref="0x40e705f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40e706d8"/>
        <function-ref name="done" scoped="" ref="0x40e707b8"/>
        <function-ref name="standby" scoped="" ref="0x40e70898"/>
        <function-ref name="getChannel" scoped="" ref="0x40e70978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40e495e8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40e495e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e497c0"/>
        <function-ref name="cancel" scoped="" ref="0x40e498a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40e49980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x40e6f010" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e6f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e6f1e8"/>
        <function-ref name="header" scoped="" ref="0x40e6f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40e49ae0" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40e49ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e49cb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x40e70ab8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e70ab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e70c90"/>
        <function-ref name="ready" scoped="" ref="0x40e70d70"/>
        <function-ref name="sendDone" scoped="" ref="0x40e70e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x40e49df8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x40e49df8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x40e70010"/>
        <function-ref name="setChannel" scoped="" ref="0x40e700f0"/>
        <function-ref name="getChannel" scoped="" ref="0x40e701d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41961900" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41961900"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41961ad8"/>
        <function-ref name="stopDone" scoped="" ref="0x41961bb8"/>
        <function-ref name="start" scoped="" ref="0x41961c98"/>
        <function-ref name="stop" scoped="" ref="0x41961d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x41961ed8" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x41961ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4195e0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4195d010" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4195d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4195d1e8"/>
        <function-ref name="turnOn" scoped="" ref="0x4195d2c8"/>
        <function-ref name="setChannel" scoped="" ref="0x4195d3a8"/>
        <function-ref name="done" scoped="" ref="0x4195d488"/>
        <function-ref name="standby" scoped="" ref="0x4195d568"/>
        <function-ref name="getChannel" scoped="" ref="0x4195d648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4195e220" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4195e220"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4195e3f8"/>
        <function-ref name="cancel" scoped="" ref="0x4195e4d8"/>
        <function-ref name="sendDone" scoped="" ref="0x4195e5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x4195caa0" loc="189:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x4195caa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4195cc78"/>
        <function-ref name="runTask" scoped="" ref="0x4195cd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x4195c230" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4195c230"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4195c408"/>
        <function-ref name="header" scoped="" ref="0x4195c4e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x4195ced8" loc="144:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x4195ced8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4195b0c0"/>
        <function-ref name="runTask" scoped="" ref="0x4195b1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4195e718" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4195e718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4195e8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x4195c668" loc="322:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x4195c668"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4195c840"/>
        <function-ref name="runTask" scoped="" ref="0x4195c920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4195dd40" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4195dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4195df18"/>
        <function-ref name="ready" scoped="" ref="0x4195c010"/>
        <function-ref name="sendDone" scoped="" ref="0x4195c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4195ea30" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4195ea30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4195ec08"/>
        <function-ref name="setChannel" scoped="" ref="0x4195ece8"/>
        <function-ref name="getChannel" scoped="" ref="0x4195edc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x4195d788" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x4195d788"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x4195d960"/>
        <function-ref name="suspend" scoped="" ref="0x4195da40"/>
        <function-ref name="resume" scoped="" ref="0x4195db20"/>
        <function-ref name="run" scoped="" ref="0x4195dc00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40e9f458" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40e9f458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e9f630"/>
        <function-ref name="ready" scoped="" ref="0x40e9f710"/>
        <function-ref name="sendDone" scoped="" ref="0x40e9f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40e9f950" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40e9f950"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e9fb28"/>
        <function-ref name="header" scoped="" ref="0x40e9fc08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40e9fd48" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40e9fd48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40e9ff20"/>
        <function-ref name="wait" scoped="" ref="0x40eae018"/>
        <function-ref name="cancel" scoped="" ref="0x40eae0f8"/>
        <function-ref name="isFree" scoped="" ref="0x40eae1d8"/>
        <function-ref name="getNow" scoped="" ref="0x40eae2b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40eae418" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40eae418"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x40eae5f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x40eae6d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x40eae7b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x40eae890"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40e9f010" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40e9f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40e9f1e8"/>
        <function-ref name="header" scoped="" ref="0x40e9f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40e6dae0" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40e6dae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40e6dcb8"/>
        <function-ref name="ready" scoped="" ref="0x40e6dd98"/>
        <function-ref name="sendDone" scoped="" ref="0x40e6de78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4199c0a0" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4199c0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4199c278"/>
        <function-ref name="ready" scoped="" ref="0x4199c358"/>
        <function-ref name="sendDone" scoped="" ref="0x4199c438"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4199c598" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4199c598"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4199c770"/>
        <function-ref name="header" scoped="" ref="0x4199c850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4199c990" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4199c990"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4199cb68"/>
        <function-ref name="wait" scoped="" ref="0x4199cc48"/>
        <function-ref name="cancel" scoped="" ref="0x4199cd28"/>
        <function-ref name="isFree" scoped="" ref="0x4199ce08"/>
        <function-ref name="getNow" scoped="" ref="0x4199cee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x4199b040" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x4199b040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x4199b218"/>
        <function-ref name="rand32" scoped="" ref="0x4199b2f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4199b458" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4199b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4199b630"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4199b710"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4199b7f0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4199b8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4199ec40" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4199ec40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4199ee18"/>
        <function-ref name="header" scoped="" ref="0x4199eef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4199e768" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4199e768"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4199e940"/>
        <function-ref name="ready" scoped="" ref="0x4199ea20"/>
        <function-ref name="sendDone" scoped="" ref="0x4199eb00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x4199ba50" loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x4199ba50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4199bc28"/>
        <function-ref name="runTask" scoped="" ref="0x4199bd08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40eb1040" loc="46:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40eb1040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40eb1218"/>
        <function-ref name="rand32" scoped="" ref="0x40eb12f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40eaf748" loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40eaf748"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eafd70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eb5500" loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eb5500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eb56d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x40eadb08" loc="48:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x40eadb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x40eadce0"/>
        <function-ref name="rand32" scoped="" ref="0x40eaddc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x40ead248" loc="47:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x40ead248"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ead870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40eb1c98" loc="46:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40eb1c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40eb1e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40ea2678" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40ea2678"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ea2850"/>
        <function-ref name="ready" scoped="" ref="0x40ea2930"/>
        <function-ref name="sendDone" scoped="" ref="0x40ea2a10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40ea2b70" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40ea2b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ea2d48"/>
        <function-ref name="header" scoped="" ref="0x40ea2e28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x40ebd010" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x40ebd010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40ebd1e8"/>
        <function-ref name="wait" scoped="" ref="0x40ebd2c8"/>
        <function-ref name="cancel" scoped="" ref="0x40ebd3a8"/>
        <function-ref name="isFree" scoped="" ref="0x40ebd488"/>
        <function-ref name="getNow" scoped="" ref="0x40ebd568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x40ebc050" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x40ebc050"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ebc228"/>
        <function-ref name="get" scoped="" ref="0x40ebc308"/>
        <function-ref name="setValue" scoped="" ref="0x40ebc3e8"/>
        <function-ref name="set" scoped="" ref="0x40ebc4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40ebd6c8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40ebd6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x40ebd8a0"/>
        <function-ref name="createAckPacket" scoped="" ref="0x40ebd980"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x40ebda60"/>
        <function-ref name="isAckPacket" scoped="" ref="0x40ebdb40"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x40ebdc20"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x40ebdd00"/>
        <function-ref name="setAckRequired" scoped="" ref="0x40ebdde0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x40ebdec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ea3c90" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ea3c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ea3e68"/>
        <function-ref name="header" scoped="" ref="0x40ea2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ea37b8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ea37b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ea3990"/>
        <function-ref name="ready" scoped="" ref="0x40ea3a70"/>
        <function-ref name="sendDone" scoped="" ref="0x40ea3b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40ea2150" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40ea2150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40ea2328"/>
        <function-ref name="noAck" scoped="" ref="0x40ea2408"/>
        <function-ref name="wasAcked" scoped="" ref="0x40ea24e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40eec528" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40eec528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40eec700"/>
        <function-ref name="stopDone" scoped="" ref="0x40eec7e0"/>
        <function-ref name="start" scoped="" ref="0x40eec8c0"/>
        <function-ref name="stop" scoped="" ref="0x40eec9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40ee0408" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40ee0408"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40ee05e0"/>
        <function-ref name="request" scoped="" ref="0x40ee06c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40edd9c8" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40edd9c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eddba0"/>
        <function-ref name="ready" scoped="" ref="0x40eddc80"/>
        <function-ref name="sendDone" scoped="" ref="0x40eddd60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40eddec0" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40eddec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40edc0c0"/>
        <function-ref name="header" scoped="" ref="0x40edc1a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40ee1328" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40ee1328"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40ee1500"/>
        <function-ref name="turnOn" scoped="" ref="0x40ee15e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40ee16c0"/>
        <function-ref name="done" scoped="" ref="0x40ee17a0"/>
        <function-ref name="standby" scoped="" ref="0x40ee1880"/>
        <function-ref name="getChannel" scoped="" ref="0x40ee1960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40ee0800" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40ee0800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ee09d8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ee0ab8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ee0b98"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ee0c78"/>
        <function-ref name="headerLength" scoped="" ref="0x40ee0d58"/>
        <function-ref name="metadataLength" scoped="" ref="0x40ee0e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40edd1b0" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40edd1b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40edd408"/>
        <function-ref name="turnOn" scoped="" ref="0x40edd4e8"/>
        <function-ref name="setChannel" scoped="" ref="0x40edd5c8"/>
        <function-ref name="done" scoped="" ref="0x40edd6a8"/>
        <function-ref name="standby" scoped="" ref="0x40edd788"/>
        <function-ref name="getChannel" scoped="" ref="0x40edd868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40ede010" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40ede010"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40ede1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40ee0010" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40ee0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee01e8"/>
        <function-ref name="header" scoped="" ref="0x40ee02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40edee48" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40edee48"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40edd050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40ede378" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40ede378"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ede550"/>
        <function-ref name="stopDone" scoped="" ref="0x40ede630"/>
        <function-ref name="start" scoped="" ref="0x40ede710"/>
        <function-ref name="stop" scoped="" ref="0x40ede7f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40edc718" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40edc718"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40edc8f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40edc9d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40edcab0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40edcb90"/>
        <function-ref name="headerLength" scoped="" ref="0x40edcc70"/>
        <function-ref name="metadataLength" scoped="" ref="0x40edcd50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40ee1010" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40ee1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ee11e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40edceb0" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40edceb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40edb0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40ede950" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40ede950"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edeb28"/>
        <function-ref name="cancel" scoped="" ref="0x40edec08"/>
        <function-ref name="sendDone" scoped="" ref="0x40edece8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40ee1aa0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40ee1aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee1c78"/>
        <function-ref name="ready" scoped="" ref="0x40ee1d58"/>
        <function-ref name="sendDone" scoped="" ref="0x40ee1e38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40edc300" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40edc300"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40edc4d8"/>
        <function-ref name="request" scoped="" ref="0x40edc5b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40eecae0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40eecae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eeccb8"/>
        <function-ref name="cancel" scoped="" ref="0x40eecd98"/>
        <function-ref name="sendDone" scoped="" ref="0x40eece78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x40f3a6b0" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x40f3a6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3a888"/>
        <function-ref name="get" scoped="" ref="0x40f3a968"/>
        <function-ref name="setValue" scoped="" ref="0x40f3aa48"/>
        <function-ref name="set" scoped="" ref="0x40f3ab28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f3dd88" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f3dd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3c010"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f3c0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3c1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f3c2b0"/>
        <function-ref name="headerLength" scoped="" ref="0x40f3c390"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f3c470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f3cf08" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f3cf08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f3a0f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f3a1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f3a2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f3a390"/>
        <function-ref name="headerLength" scoped="" ref="0x40f3a470"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f3a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x40f086f0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x40f086f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f3d230"/>
        <function-ref name="clear" scoped="" ref="0x40f3d5e0"/>
        <function-ref name="isValid" scoped="" ref="0x40f08e40"/>
        <function-ref name="set" scoped="" ref="0x40f3d990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x40f3c690" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f3c690"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f3ccd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x40ed8ee8" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x40ed8ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40ed7a30"/>
        <function-ref name="clear" scoped="" ref="0x40ed7de0"/>
        <function-ref name="isValid" scoped="" ref="0x40ed7680"/>
        <function-ref name="set" scoped="" ref="0x40f081b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x419ce1a0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x419ce1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x419ce378"/>
        <function-ref name="get" scoped="" ref="0x419ce458"/>
        <function-ref name="setValue" scoped="" ref="0x419ce538"/>
        <function-ref name="set" scoped="" ref="0x419ce618"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x419cf8f8" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x419cf8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x419cfad0"/>
        <function-ref name="payloadLength" scoped="" ref="0x419cfbb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419cfc90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x419cfd70"/>
        <function-ref name="headerLength" scoped="" ref="0x419cfe50"/>
        <function-ref name="metadataLength" scoped="" ref="0x419ce010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x419cd998" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x419cd998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x419cdb70"/>
        <function-ref name="payloadLength" scoped="" ref="0x419cdc50"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x419cdd30"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x419cde10"/>
        <function-ref name="headerLength" scoped="" ref="0x419cdef0"/>
        <function-ref name="metadataLength" scoped="" ref="0x419cc010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x419d0288" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x419d0288"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x419d0d88"/>
        <function-ref name="clear" scoped="" ref="0x419cf150"/>
        <function-ref name="isValid" scoped="" ref="0x419d09d8"/>
        <function-ref name="set" scoped="" ref="0x419cf500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x419ce808" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x419ce808"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419cee50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x419cd120" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x419cd120"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419cd768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x419d59d0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x419d59d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x419d25b0"/>
        <function-ref name="clear" scoped="" ref="0x419d2960"/>
        <function-ref name="isValid" scoped="" ref="0x419d2200"/>
        <function-ref name="set" scoped="" ref="0x419d2d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40f15f00" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40f15f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f12578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40f11348" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40f11348"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f11990"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40f11ce0" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40f11ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f10478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40f10968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40f106f0"/>
        <function-ref name="overflow" scoped="" ref="0x40f10be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f37a10" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f37a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f37be8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f37cc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f37da8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f37e88"/>
        <function-ref name="headerLength" scoped="" ref="0x40f23010"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f230f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f23280" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f23280"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f23458"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f23538"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f23618"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f236f8"/>
        <function-ref name="headerLength" scoped="" ref="0x40f237d8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f238b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x40f37448" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x40f37448"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f37630"/>
        <function-ref name="get" scoped="" ref="0x40f37710"/>
        <function-ref name="setValue" scoped="" ref="0x40f377f0"/>
        <function-ref name="set" scoped="" ref="0x40f378d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f58a50" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f58a50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f58c28"/>
        <function-ref name="stopDone" scoped="" ref="0x40f58d08"/>
        <function-ref name="start" scoped="" ref="0x40f58de8"/>
        <function-ref name="stop" scoped="" ref="0x40f58ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40f568e0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40f568e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40f56ab8"/>
        <function-ref name="request" scoped="" ref="0x40f56b98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f54ec0" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f54ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f530c0"/>
        <function-ref name="ready" scoped="" ref="0x40f531a0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f53280"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f533e0" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f533e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f535b8"/>
        <function-ref name="header" scoped="" ref="0x40f53698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40f57820" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40f57820"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f579f8"/>
        <function-ref name="turnOn" scoped="" ref="0x40f57ad8"/>
        <function-ref name="setChannel" scoped="" ref="0x40f57bb8"/>
        <function-ref name="done" scoped="" ref="0x40f57c98"/>
        <function-ref name="standby" scoped="" ref="0x40f57d78"/>
        <function-ref name="getChannel" scoped="" ref="0x40f57e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f56cd8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f56cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f56eb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f55010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f550f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f551d0"/>
        <function-ref name="headerLength" scoped="" ref="0x40f552b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f55390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40f546a8" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40f546a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f54900"/>
        <function-ref name="turnOn" scoped="" ref="0x40f549e0"/>
        <function-ref name="setChannel" scoped="" ref="0x40f54ac0"/>
        <function-ref name="done" scoped="" ref="0x40f54ba0"/>
        <function-ref name="standby" scoped="" ref="0x40f54c80"/>
        <function-ref name="getChannel" scoped="" ref="0x40f54d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40f554f0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40f554f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40f556c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f564e8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f564e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f566c0"/>
        <function-ref name="header" scoped="" ref="0x40f567a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40f54370" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40f54370"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f54548"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40f55858" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40f55858"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f55a30"/>
        <function-ref name="stopDone" scoped="" ref="0x40f55b10"/>
        <function-ref name="start" scoped="" ref="0x40f55bf0"/>
        <function-ref name="stop" scoped="" ref="0x40f55cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f53c10" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f53c10"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f53de8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f53ec8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f51010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f510f0"/>
        <function-ref name="headerLength" scoped="" ref="0x40f511d0"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f512b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40f57508" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40f57508"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f576e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f51410" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f51410"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40f515e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40f55e30" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40f55e30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f54050"/>
        <function-ref name="cancel" scoped="" ref="0x40f54130"/>
        <function-ref name="sendDone" scoped="" ref="0x40f54210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f56010" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f56010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f561e8"/>
        <function-ref name="ready" scoped="" ref="0x40f562c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f563a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40f537f8" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40f537f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40f539d0"/>
        <function-ref name="request" scoped="" ref="0x40f53ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40f57030" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40f57030"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f57208"/>
        <function-ref name="cancel" scoped="" ref="0x40f572e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f573c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40f4e010" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40f4e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f4e1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40f4e2c8"/>
        <function-ref name="start" scoped="" ref="0x40f4e3a8"/>
        <function-ref name="stop" scoped="" ref="0x40f4e488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40f4de80" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40f4de80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40f4c070"/>
        <function-ref name="request" scoped="" ref="0x40f4c150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x40f4a4f0" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x40f4a4f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4a6c8"/>
        <function-ref name="ready" scoped="" ref="0x40f4a7a8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4a888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x40f4a9e8" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x40f4a9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4abc0"/>
        <function-ref name="header" scoped="" ref="0x40f4aca0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40f4edb8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40f4edb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f4d010"/>
        <function-ref name="turnOn" scoped="" ref="0x40f4d0f0"/>
        <function-ref name="setChannel" scoped="" ref="0x40f4d1d0"/>
        <function-ref name="done" scoped="" ref="0x40f4d2b0"/>
        <function-ref name="standby" scoped="" ref="0x40f4d390"/>
        <function-ref name="getChannel" scoped="" ref="0x40f4d470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f4c290" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f4c290"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f4c468"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f4c548"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f4c628"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f4c708"/>
        <function-ref name="headerLength" scoped="" ref="0x40f4c7e8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f4c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x40f4bc40" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x40f4bc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f4be98"/>
        <function-ref name="turnOn" scoped="" ref="0x40f4a010"/>
        <function-ref name="setChannel" scoped="" ref="0x40f4a0f0"/>
        <function-ref name="done" scoped="" ref="0x40f4a1d0"/>
        <function-ref name="standby" scoped="" ref="0x40f4a2b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40f4a390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x40f4ca28" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x40f4ca28"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40f4cc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f4da88" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f4da88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4dc60"/>
        <function-ref name="header" scoped="" ref="0x40f4dd40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x40f4b908" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x40f4b908"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4bae0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x40f4cd90" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x40f4cd90"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40f4b010"/>
        <function-ref name="stopDone" scoped="" ref="0x40f4b0f0"/>
        <function-ref name="start" scoped="" ref="0x40f4b1d0"/>
        <function-ref name="stop" scoped="" ref="0x40f4b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x40f49250" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x40f49250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f49428"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f49508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f495e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f496c8"/>
        <function-ref name="headerLength" scoped="" ref="0x40f497a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f49888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40f4eaa0" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40f4eaa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f4ec78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f499e8" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f499e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x40f49bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x40f4b410" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x40f4b410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4b5e8"/>
        <function-ref name="cancel" scoped="" ref="0x40f4b6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4b7a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f4d5b0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f4d5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4d788"/>
        <function-ref name="ready" scoped="" ref="0x40f4d868"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4d948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x40f4ae00" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x40f4ae00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40f49010"/>
        <function-ref name="request" scoped="" ref="0x40f490f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x40f4e5c8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x40f4e5c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f4e7a0"/>
        <function-ref name="cancel" scoped="" ref="0x40f4e880"/>
        <function-ref name="sendDone" scoped="" ref="0x40f4e960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40f43ee0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40f43ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40f420e0"/>
        <function-ref name="request" scoped="" ref="0x40f421c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40f40098" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40f40098"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f40c60"/>
        <function-ref name="get" scoped="" ref="0x40f409a0"/>
        <function-ref name="isSet" scoped="" ref="0x40f406e0"/>
        <function-ref name="set" scoped="" ref="0x40f40f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40f6bcd0" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40f6bcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f6bea8"/>
        <function-ref name="get" scoped="" ref="0x40f6a010"/>
        <function-ref name="setValue" scoped="" ref="0x40f6a0f0"/>
        <function-ref name="set" scoped="" ref="0x40f6a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40f6ee78" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40f6ee78"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f6c990"/>
        <function-ref name="clear" scoped="" ref="0x40f6cd40"/>
        <function-ref name="isValid" scoped="" ref="0x40f6c5e0"/>
        <function-ref name="set" scoped="" ref="0x40f6b108"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40f46d48" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40f46d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f46f20"/>
        <function-ref name="turnOn" scoped="" ref="0x40f43018"/>
        <function-ref name="setChannel" scoped="" ref="0x40f430f8"/>
        <function-ref name="done" scoped="" ref="0x40f431d8"/>
        <function-ref name="standby" scoped="" ref="0x40f432b8"/>
        <function-ref name="getChannel" scoped="" ref="0x40f43398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40f42d10" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40f42d10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f418f0"/>
        <function-ref name="get" scoped="" ref="0x40f41630"/>
        <function-ref name="isSet" scoped="" ref="0x40f41370"/>
        <function-ref name="set" scoped="" ref="0x40f41bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f42370" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f42370"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f42548"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f42628"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f42708"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f427e8"/>
        <function-ref name="headerLength" scoped="" ref="0x40f428c8"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f429a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f6e5f0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f6e5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f6e848"/>
        <function-ref name="headerLength" scoped="" ref="0x40f6e928"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f6ea08"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40f6eae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f43a90" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f43a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f43c68"/>
        <function-ref name="header" scoped="" ref="0x40f43d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40f70a70" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40f70a70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x407085e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40f6e010"/>
        <function-ref name="fired" scoped="" ref="0x40f6f718"/>
        <function-ref name="startAt" scoped="" ref="0x40f6fc08"/>
        <function-ref name="isRunning" scoped="" ref="0x40f6f990"/>
        <function-ref name="getAlarm" scoped="" ref="0x40f6e288"/>
        <function-ref name="start" scoped="" ref="0x40f6f200"/>
        <function-ref name="stop" scoped="" ref="0x40f6f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40f3e468" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40f3e468"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f73048"/>
        <function-ref name="get" scoped="" ref="0x40f3ed70"/>
        <function-ref name="isSet" scoped="" ref="0x40f3eab0"/>
        <function-ref name="set" scoped="" ref="0x40f73308"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x40f70010" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x40f70010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f70658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f43538" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f43538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f43710"/>
        <function-ref name="ready" scoped="" ref="0x40f437f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f438d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40f73818" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40f73818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f72410"/>
        <function-ref name="get" scoped="" ref="0x40f72150"/>
        <function-ref name="isSet" scoped="" ref="0x40f73e60"/>
        <function-ref name="set" scoped="" ref="0x40f726d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40f6a418" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40f6a418"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f6a5f0"/>
        <function-ref name="get" scoped="" ref="0x40f6a6d0"/>
        <function-ref name="setValue" scoped="" ref="0x40f6a7b0"/>
        <function-ref name="set" scoped="" ref="0x40f6a890"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40f6b638" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40f6b638"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f6b810"/>
        <function-ref name="get" scoped="" ref="0x40f6b8f0"/>
        <function-ref name="setValue" scoped="" ref="0x40f6b9d0"/>
        <function-ref name="set" scoped="" ref="0x40f6bab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40f72a80" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f72a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40f72c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x40f63288" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x40f63288"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x40f63460"/>
        <function-ref name="request" scoped="" ref="0x40f63540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x40f614d8" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x40f614d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f5f0b8"/>
        <function-ref name="get" scoped="" ref="0x40f61de0"/>
        <function-ref name="isSet" scoped="" ref="0x40f61b20"/>
        <function-ref name="set" scoped="" ref="0x40f5f378"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40f8e900" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40f8e900"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40f5a068"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40f65c90" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40f65c90"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f65e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x40f8bc00" loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x40f8bc00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f8bdd8"/>
        <function-ref name="get" scoped="" ref="0x40f8beb8"/>
        <function-ref name="setValue" scoped="" ref="0x40f8a010"/>
        <function-ref name="set" scoped="" ref="0x40f8a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x40f8ab40" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x40f8ab40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x40f896b8"/>
        <function-ref name="clear" scoped="" ref="0x40f89a68"/>
        <function-ref name="isValid" scoped="" ref="0x40f89308"/>
        <function-ref name="set" scoped="" ref="0x40f89e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x40f64040" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x40f64040"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x40f64218"/>
        <function-ref name="turnOn" scoped="" ref="0x40f642f8"/>
        <function-ref name="setChannel" scoped="" ref="0x40f643d8"/>
        <function-ref name="done" scoped="" ref="0x40f644b8"/>
        <function-ref name="standby" scoped="" ref="0x40f64598"/>
        <function-ref name="getChannel" scoped="" ref="0x40f64678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x40f5a3d0" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40f5a3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f5aa18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x40f620f0" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x40f620f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f62cb8"/>
        <function-ref name="get" scoped="" ref="0x40f629f8"/>
        <function-ref name="isSet" scoped="" ref="0x40f62738"/>
        <function-ref name="set" scoped="" ref="0x40f61010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x40f636f0" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x40f636f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f638c8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40f639a8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f63a88"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40f63b68"/>
        <function-ref name="headerLength" scoped="" ref="0x40f63c48"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f63d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x40f8ce50" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x40f8ce50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40f8b050"/>
        <function-ref name="headerLength" scoped="" ref="0x40f8b130"/>
        <function-ref name="metadataLength" scoped="" ref="0x40f8b210"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x40f8b2f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x40f64d70" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x40f64d70"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40f63010"/>
        <function-ref name="header" scoped="" ref="0x40f630f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40f5b2a8" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40f5b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40f5b500"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x40f5f8a8" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x40f5f8a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f5e4a0"/>
        <function-ref name="get" scoped="" ref="0x40f5e1e0"/>
        <function-ref name="isSet" scoped="" ref="0x40f5fef0"/>
        <function-ref name="set" scoped="" ref="0x40f5e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x40f65630" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40f65630"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f65808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x40f64818" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x40f64818"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f649f0"/>
        <function-ref name="ready" scoped="" ref="0x40f64ad0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f64bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x40f5ec70" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x40f5ec70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f5d868"/>
        <function-ref name="get" scoped="" ref="0x40f5d5a8"/>
        <function-ref name="isSet" scoped="" ref="0x40f5d2e8"/>
        <function-ref name="set" scoped="" ref="0x40f5db28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40f878c0" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40f878c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40f87a98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x40f5ae20" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40f5ae20"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40f8c898"/>
        <function-ref name="test" scoped="" ref="0x40f8dc18"/>
        <function-ref name="fired" scoped="" ref="0x40f8d9a0"/>
        <function-ref name="get" scoped="" ref="0x40f8d488"/>
        <function-ref name="reset" scoped="" ref="0x40f8de90"/>
        <function-ref name="getMode" scoped="" ref="0x40f8cb38"/>
        <function-ref name="isOn" scoped="" ref="0x40f8c620"/>
        <function-ref name="set" scoped="" ref="0x40f8d700"/>
        <function-ref name="start" scoped="" ref="0x40f8c130"/>
        <function-ref name="stop" scoped="" ref="0x40f8c3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x40f8a338" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x40f8a338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f8a510"/>
        <function-ref name="get" scoped="" ref="0x40f8a5f0"/>
        <function-ref name="setValue" scoped="" ref="0x40f8a6d0"/>
        <function-ref name="set" scoped="" ref="0x40f8a7b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x40f8b568" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x40f8b568"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40f8b740"/>
        <function-ref name="get" scoped="" ref="0x40f8b820"/>
        <function-ref name="setValue" scoped="" ref="0x40f8b900"/>
        <function-ref name="set" scoped="" ref="0x40f8b9e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x40f5ded8" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x40f5ded8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x40f5b0c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x40f87280" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x40f87280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x40f87458"/>
        <function-ref name="suspend" scoped="" ref="0x40f87538"/>
        <function-ref name="resume" scoped="" ref="0x40f87618"/>
        <function-ref name="run" scoped="" ref="0x40f876f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40f68dd8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40f68dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ff5570"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x40ff45d8" loc="53:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40ff45d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40ff4d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ff30c0" loc="54:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ff30c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ff3810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ff3d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ff3a88"/>
        <function-ref name="overflow" scoped="" ref="0x40fea010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40fe6268" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40fe6268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40474220"/>
            <typename><typedef-ref name="TMcu" ref="0x404745d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fe69b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40fe6ea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40fe6c30"/>
        <function-ref name="overflow" scoped="" ref="0x40fe5150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40fe7010" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40fe7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40477450"/>
            <typename><typedef-ref name="TMicro" ref="0x40477618"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40fe7760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40fe7c50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40fe79d8"/>
        <function-ref name="overflow" scoped="" ref="0x40fe7ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40fe5d88" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40fe5d88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40474220"/>
            <typename><typedef-ref name="TMcu" ref="0x404745d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4101a4e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4101a9d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4101a760"/>
        <function-ref name="overflow" scoped="" ref="0x4101ac50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41019ec0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41019ec0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410180c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41018320" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41018320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x40474220"/>
            <typename><typedef-ref name="TMcu" ref="0x404745d0"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41018a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41017010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41018ce8"/>
        <function-ref name="overflow" scoped="" ref="0x41017288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41017558" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41017558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41014010"/>
        <function-ref name="test" scoped="" ref="0x41015350"/>
        <function-ref name="get" scoped="" ref="0x41017ba0"/>
        <function-ref name="reset" scoped="" ref="0x410155c8"/>
        <function-ref name="getMode" scoped="" ref="0x410142b0"/>
        <function-ref name="overflow" scoped="" ref="0x410150d8"/>
        <function-ref name="isOn" scoped="" ref="0x41015d30"/>
        <function-ref name="set" scoped="" ref="0x41017e18"/>
        <function-ref name="start" scoped="" ref="0x41015840"/>
        <function-ref name="stop" scoped="" ref="0x41015ab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4100a010" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4100a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41009a68"/>
        <function-ref name="test" scoped="" ref="0x4100ade8"/>
        <function-ref name="fired" scoped="" ref="0x4100ab70"/>
        <function-ref name="get" scoped="" ref="0x4100a658"/>
        <function-ref name="reset" scoped="" ref="0x41009088"/>
        <function-ref name="getMode" scoped="" ref="0x41009d08"/>
        <function-ref name="isOn" scoped="" ref="0x410097f0"/>
        <function-ref name="set" scoped="" ref="0x4100a8d0"/>
        <function-ref name="start" scoped="" ref="0x41009300"/>
        <function-ref name="stop" scoped="" ref="0x41009578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x41013858" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41013858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4100e2c0"/>
        <function-ref name="test" scoped="" ref="0x41010648"/>
        <function-ref name="get" scoped="" ref="0x41013ea0"/>
        <function-ref name="reset" scoped="" ref="0x410108c0"/>
        <function-ref name="getMode" scoped="" ref="0x4100e560"/>
        <function-ref name="overflow" scoped="" ref="0x410103d0"/>
        <function-ref name="isOn" scoped="" ref="0x4100e048"/>
        <function-ref name="set" scoped="" ref="0x41010130"/>
        <function-ref name="start" scoped="" ref="0x41010b38"/>
        <function-ref name="stop" scoped="" ref="0x41010db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x4100ec28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x4100ec28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4100c698"/>
        <function-ref name="test" scoped="" ref="0x4100da28"/>
        <function-ref name="fired" scoped="" ref="0x4100d7b0"/>
        <function-ref name="force" scoped="" ref="0x4100cbb0"/>
        <function-ref name="get" scoped="" ref="0x4100d298"/>
        <function-ref name="reset" scoped="" ref="0x4100dca0"/>
        <function-ref name="getMode" scoped="" ref="0x4100c938"/>
        <function-ref name="isOn" scoped="" ref="0x4100c420"/>
        <function-ref name="set" scoped="" ref="0x4100d510"/>
        <function-ref name="start" scoped="" ref="0x4100df18"/>
        <function-ref name="stop" scoped="" ref="0x4100c1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x41003978" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x41003978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41000418"/>
        <function-ref name="test" scoped="" ref="0x410027a0"/>
        <function-ref name="fired" scoped="" ref="0x41002528"/>
        <function-ref name="force" scoped="" ref="0x41000930"/>
        <function-ref name="get" scoped="" ref="0x41002010"/>
        <function-ref name="reset" scoped="" ref="0x41002a18"/>
        <function-ref name="getMode" scoped="" ref="0x410006b8"/>
        <function-ref name="isOn" scoped="" ref="0x410001a0"/>
        <function-ref name="set" scoped="" ref="0x41002288"/>
        <function-ref name="start" scoped="" ref="0x41002c90"/>
        <function-ref name="stop" scoped="" ref="0x41002f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x41034470" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x41034470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41033ee0"/>
        <function-ref name="test" scoped="" ref="0x41033288"/>
        <function-ref name="fired" scoped="" ref="0x41033010"/>
        <function-ref name="get" scoped="" ref="0x41034ab8"/>
        <function-ref name="reset" scoped="" ref="0x41033500"/>
        <function-ref name="getMode" scoped="" ref="0x410311c0"/>
        <function-ref name="isOn" scoped="" ref="0x41033c68"/>
        <function-ref name="set" scoped="" ref="0x41034d30"/>
        <function-ref name="start" scoped="" ref="0x41033778"/>
        <function-ref name="stop" scoped="" ref="0x410339f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x41031478" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x41031478"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x41031650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x41000d28" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x41000d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x410387b0"/>
        <function-ref name="test" scoped="" ref="0x40fffb20"/>
        <function-ref name="fired" scoped="" ref="0x40fff8a8"/>
        <function-ref name="force" scoped="" ref="0x41038cc8"/>
        <function-ref name="get" scoped="" ref="0x40fff390"/>
        <function-ref name="reset" scoped="" ref="0x40fffd98"/>
        <function-ref name="getMode" scoped="" ref="0x41038a50"/>
        <function-ref name="isOn" scoped="" ref="0x41038538"/>
        <function-ref name="set" scoped="" ref="0x40fff608"/>
        <function-ref name="start" scoped="" ref="0x41038048"/>
        <function-ref name="stop" scoped="" ref="0x410382c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x41031868" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x41031868"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x41031a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x41036100" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x41036100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41035b50"/>
        <function-ref name="test" scoped="" ref="0x41036ed8"/>
        <function-ref name="fired" scoped="" ref="0x41036c60"/>
        <function-ref name="force" scoped="" ref="0x41034088"/>
        <function-ref name="get" scoped="" ref="0x41036748"/>
        <function-ref name="reset" scoped="" ref="0x41035170"/>
        <function-ref name="getMode" scoped="" ref="0x41035df0"/>
        <function-ref name="isOn" scoped="" ref="0x410358d8"/>
        <function-ref name="set" scoped="" ref="0x410369c0"/>
        <function-ref name="start" scoped="" ref="0x410353e8"/>
        <function-ref name="stop" scoped="" ref="0x41035660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41007878" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41007878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x410032e0"/>
        <function-ref name="test" scoped="" ref="0x41004668"/>
        <function-ref name="get" scoped="" ref="0x41007ec0"/>
        <function-ref name="reset" scoped="" ref="0x410048e0"/>
        <function-ref name="getMode" scoped="" ref="0x41003580"/>
        <function-ref name="overflow" scoped="" ref="0x410043f0"/>
        <function-ref name="isOn" scoped="" ref="0x41003068"/>
        <function-ref name="set" scoped="" ref="0x41004150"/>
        <function-ref name="start" scoped="" ref="0x41004b58"/>
        <function-ref name="stop" scoped="" ref="0x41004dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x40ff7b20" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x40ff7b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4105c200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x4105b010" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x4105b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4105b658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x4105b9a8" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4105b9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4105a120"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4105a610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4105a398"/>
        <function-ref name="overflow" scoped="" ref="0x4105a888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4101b1f8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4101b1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410586c8"/>
        <function-ref name="fired" scoped="" ref="0x4101be60"/>
        <function-ref name="startAt" scoped="" ref="0x41058388"/>
        <function-ref name="isRunning" scoped="" ref="0x41058110"/>
        <function-ref name="getAlarm" scoped="" ref="0x41058940"/>
        <function-ref name="start" scoped="" ref="0x4101b948"/>
        <function-ref name="stop" scoped="" ref="0x4101bbe8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x419efcb8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x419efcb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x419ec778"/>
        <function-ref name="test" scoped="" ref="0x419eeaa8"/>
        <function-ref name="fired" scoped="" ref="0x419ee830"/>
        <function-ref name="force" scoped="" ref="0x419ecc90"/>
        <function-ref name="get" scoped="" ref="0x419ee318"/>
        <function-ref name="reset" scoped="" ref="0x419eed20"/>
        <function-ref name="getMode" scoped="" ref="0x419eca18"/>
        <function-ref name="isOn" scoped="" ref="0x419ec500"/>
        <function-ref name="set" scoped="" ref="0x419ee590"/>
        <function-ref name="start" scoped="" ref="0x419ec010"/>
        <function-ref name="stop" scoped="" ref="0x419ec288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x419f3270" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x419f3270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="T62khz" ref="0x40474b80"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419f1728"/>
        <function-ref name="fired" scoped="" ref="0x419f3ed8"/>
        <function-ref name="startAt" scoped="" ref="0x419f13e8"/>
        <function-ref name="isRunning" scoped="" ref="0x419f1170"/>
        <function-ref name="getAlarm" scoped="" ref="0x419f19a0"/>
        <function-ref name="start" scoped="" ref="0x419f39c0"/>
        <function-ref name="stop" scoped="" ref="0x419f3c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x419f4dc0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x419f4dc0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x419f3010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x419f1c70" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x419f1c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x419ef778"/>
        <function-ref name="test" scoped="" ref="0x419f0a78"/>
        <function-ref name="get" scoped="" ref="0x419f02e8"/>
        <function-ref name="reset" scoped="" ref="0x419f0cf0"/>
        <function-ref name="getMode" scoped="" ref="0x419efa18"/>
        <function-ref name="overflow" scoped="" ref="0x419f0800"/>
        <function-ref name="isOn" scoped="" ref="0x419ef500"/>
        <function-ref name="set" scoped="" ref="0x419f0560"/>
        <function-ref name="start" scoped="" ref="0x419ef010"/>
        <function-ref name="stop" scoped="" ref="0x419ef288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b6dd40" loc="32:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b6dd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b6df18"/>
        <function-ref name="stopDone" scoped="" ref="0x41074010"/>
        <function-ref name="start" scoped="" ref="0x410740f0"/>
        <function-ref name="stop" scoped="" ref="0x410741d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x410749e8" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x410749e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40966ce0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x40965128"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410732e8"/>
        <function-ref name="get" scoped="" ref="0x41073048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x41074358" loc="33:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x41074358"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41074530"/>
        <function-ref name="recv" scoped="" ref="0x41074610"/>
        <function-ref name="sendDone" scoped="" ref="0x410746f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41073c90" loc="46:/opt/tinyos-2.x/tos/platforms/ucbase/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41073c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41073e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x410ad010" loc="47:/opt/tinyos-2.x/tos/platforms/ucbase/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410ad010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410ad1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410ad2c8"/>
        <function-ref name="led1On" scoped="" ref="0x410ad3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410ad488"/>
        <function-ref name="led3Off" scoped="" ref="0x410ad568"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410ad648"/>
        <function-ref name="get" scoped="" ref="0x410ad728"/>
        <function-ref name="led1Off" scoped="" ref="0x410ad808"/>
        <function-ref name="led3Toggle" scoped="" ref="0x410ad8e8"/>
        <function-ref name="led3On" scoped="" ref="0x410ad9c8"/>
        <function-ref name="led4Off" scoped="" ref="0x410adaa8"/>
        <function-ref name="led4Toggle" scoped="" ref="0x410adb88"/>
        <function-ref name="led0On" scoped="" ref="0x410adc68"/>
        <function-ref name="led2Off" scoped="" ref="0x410addc8"/>
        <function-ref name="led2On" scoped="" ref="0x410adea8"/>
        <function-ref name="led4On" scoped="" ref="0x410ac010"/>
        <function-ref name="set" scoped="" ref="0x410ac0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41096010" loc="43:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41096010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x410961e8"/>
        <function-ref name="stopDone" scoped="" ref="0x410962c8"/>
        <function-ref name="start" scoped="" ref="0x410963a8"/>
        <function-ref name="stop" scoped="" ref="0x41096488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41095808" loc="51:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41095808"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x410959e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x410ca128" loc="79:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendInfoPool" scoped="" ref="0x410ca128"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410c8210"/>
        <function-ref name="maxSize" scoped="" ref="0x410cac00"/>
        <function-ref name="empty" scoped="" ref="0x410ca750"/>
        <function-ref name="put" scoped="" ref="0x410cae58"/>
        <function-ref name="size" scoped="" ref="0x410ca9a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x41096cb0" loc="47:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x41096cb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x40966ce0"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x40965128"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41095588"/>
        <function-ref name="get" scoped="" ref="0x410952e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x41095c50" loc="55:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x41095c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41095e28"/>
        <function-ref name="stopDone" scoped="" ref="0x41095f08"/>
        <function-ref name="start" scoped="" ref="0x41094010"/>
        <function-ref name="stop" scoped="" ref="0x410940f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x41096620" loc="45:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x41096620"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x410967f8"/>
        <function-ref name="recv" scoped="" ref="0x410968d8"/>
        <function-ref name="sendDone" scoped="" ref="0x410969b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x410cc720" loc="73:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadLqi" scoped="" ref="0x410cc720"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x410cc8f8"/>
        <function-ref name="readLqi" scoped="" ref="0x410cc9d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x410922e0" loc="75:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x410922e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x410924b8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41092598"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41092678"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41092758"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x410c61a0" loc="81:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x410c61a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x410c6ed0"/>
        <function-ref name="enqueue" scoped="" ref="0x410c05d8"/>
        <function-ref name="element" scoped="" ref="0x410c0928"/>
        <function-ref name="maxSize" scoped="" ref="0x410c6c78"/>
        <function-ref name="dequeue" scoped="" ref="0x410c0268"/>
        <function-ref name="empty" scoped="" ref="0x410c67c8"/>
        <function-ref name="size" scoped="" ref="0x410c6a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x410c0e20" loc="84:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExpireTimer" scoped="" ref="0x410c0e20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x410be920"/>
        <function-ref name="fired" scoped="" ref="0x410bfbc0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x410be2e0"/>
        <function-ref name="isOneShot" scoped="" ref="0x410be088"/>
        <function-ref name="getdt" scoped="" ref="0x410bedd0"/>
        <function-ref name="gett0" scoped="" ref="0x410beb78"/>
        <function-ref name="isRunning" scoped="" ref="0x410bfe18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x410bf468"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x410be600"/>
        <function-ref name="startOneShot" scoped="" ref="0x410bf6e8"/>
        <function-ref name="stop" scoped="" ref="0x410bf968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BareReceive" ref="0x41093010" loc="61:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x41093010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x410931e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x410bb290" loc="89:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x410bb290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x410bb468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x410933e8" loc="71:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x410933e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x410935c0"/>
        <function-ref name="matchContext" scoped="" ref="0x410936a0"/>
        <function-ref name="getContext" scoped="" ref="0x41093780"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41221a18" loc="627:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41221a18"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41221bf0"/>
        <function-ref name="runTask" scoped="" ref="0x41221cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x41092a40" loc="78:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragPool" scoped="" ref="0x41092a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
            <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410cdb98"/>
        <function-ref name="maxSize" scoped="" ref="0x410cd5b0"/>
        <function-ref name="empty" scoped="" ref="0x410cd100"/>
        <function-ref name="put" scoped="" ref="0x410cd808"/>
        <function-ref name="size" scoped="" ref="0x410cd358"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x410bc040" loc="86:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x410bc040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x410bc218"/>
        <function-ref name="led0Toggle" scoped="" ref="0x410bc2f8"/>
        <function-ref name="led1On" scoped="" ref="0x410bc3d8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x410bc4b8"/>
        <function-ref name="led3Off" scoped="" ref="0x410bc598"/>
        <function-ref name="led2Toggle" scoped="" ref="0x410bc678"/>
        <function-ref name="get" scoped="" ref="0x410bc758"/>
        <function-ref name="led1Off" scoped="" ref="0x410bc838"/>
        <function-ref name="led3Toggle" scoped="" ref="0x410bc918"/>
        <function-ref name="led3On" scoped="" ref="0x410bc9f8"/>
        <function-ref name="led4Off" scoped="" ref="0x410bcad8"/>
        <function-ref name="led4Toggle" scoped="" ref="0x410bcbb8"/>
        <function-ref name="led0On" scoped="" ref="0x410bcc98"/>
        <function-ref name="led2Off" scoped="" ref="0x410bcdf8"/>
        <function-ref name="led2On" scoped="" ref="0x410bced8"/>
        <function-ref name="led4On" scoped="" ref="0x410bb010"/>
        <function-ref name="set" scoped="" ref="0x410bb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x410942f8" loc="57:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x410942f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410944d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410945b0"/>
        <function-ref name="getPayload" scoped="" ref="0x41094690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41094770"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41094850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BareSend" ref="0x410949e8" loc="60:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x410949e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41094bc0"/>
        <function-ref name="cancel" scoped="" ref="0x41094ca0"/>
        <function-ref name="sendDone" scoped="" ref="0x41094d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x410ccb80" loc="74:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x410ccb80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x410ccd58"/>
        <function-ref name="setRetries" scoped="" ref="0x410cce38"/>
        <function-ref name="getRetries" scoped="" ref="0x410ccf18"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x41092010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x410920f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x410c8798" loc="80:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendEntryPool" scoped="" ref="0x410c8798"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x410c7888"/>
        <function-ref name="maxSize" scoped="" ref="0x410c72a0"/>
        <function-ref name="empty" scoped="" ref="0x410c8dc0"/>
        <function-ref name="put" scoped="" ref="0x410c74f8"/>
        <function-ref name="size" scoped="" ref="0x410c7048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x412066a8" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadLqi" scoped="" ref="0x412066a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x41206880"/>
        <function-ref name="readLqi" scoped="" ref="0x41206960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x41242408" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <component-ref qname="RFA1ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadLqi" scoped="" ref="0x41242408"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x412425e0"/>
        <function-ref name="readLqi" scoped="" ref="0x412426c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubLqi" ref="0x412429c8" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <component-ref qname="RFA1ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubLqi" scoped="" ref="0x412429c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412415c8"/>
        <function-ref name="get" scoped="" ref="0x41241308"/>
        <function-ref name="isSet" scoped="" ref="0x41241048"/>
        <function-ref name="set" scoped="" ref="0x41241888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRssi" ref="0x41241d50" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <component-ref qname="RFA1ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRssi" scoped="" ref="0x41241d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4123f960"/>
        <function-ref name="get" scoped="" ref="0x4123f6a0"/>
        <function-ref name="isSet" scoped="" ref="0x4123f3e0"/>
        <function-ref name="set" scoped="" ref="0x4123fc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41245400" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41245400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412455d8"/>
        <function-ref name="stopDone" scoped="" ref="0x412456b8"/>
        <function-ref name="start" scoped="" ref="0x41245798"/>
        <function-ref name="stop" scoped="" ref="0x41245878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x41233918" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x41233918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41231590"/>
        <function-ref name="get" scoped="" ref="0x412312d0"/>
        <function-ref name="isSet" scoped="" ref="0x41231010"/>
        <function-ref name="set" scoped="" ref="0x41231850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x41239ec0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x41239ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x412380c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x412381a0"/>
        <function-ref name="request" scoped="" ref="0x41238280"/>
        <function-ref name="granted" scoped="" ref="0x41238360"/>
        <function-ref name="isOwner" scoped="" ref="0x41238440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4123a5e0" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4123a5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4123a7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41239430" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41239430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41239608"/>
        <function-ref name="payloadLength" scoped="" ref="0x412396e8"/>
        <function-ref name="getPayload" scoped="" ref="0x412397c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412398a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41239988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x4123a980" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x4123a980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x4123ab58"/>
        <function-ref name="address" scoped="" ref="0x4123ac38"/>
        <function-ref name="destination" scoped="" ref="0x4123ad18"/>
        <function-ref name="setSource" scoped="" ref="0x4123adf8"/>
        <function-ref name="setDestination" scoped="" ref="0x4123aed8"/>
        <function-ref name="pan" scoped="" ref="0x41239010"/>
        <function-ref name="setPan" scoped="" ref="0x412390f0"/>
        <function-ref name="isForMe" scoped="" ref="0x412391d0"/>
        <function-ref name="localPan" scoped="" ref="0x412392b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x41234530" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x41234530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41233190"/>
        <function-ref name="get" scoped="" ref="0x41234eb8"/>
        <function-ref name="isSet" scoped="" ref="0x41234bf8"/>
        <function-ref name="set" scoped="" ref="0x41233450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41238be8" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41238be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41238dc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41238ea0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41237010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x412370f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x412308e0" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x412308e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4122f3f8"/>
        <function-ref name="clear" scoped="" ref="0x4122f7a8"/>
        <function-ref name="isValid" scoped="" ref="0x4122f048"/>
        <function-ref name="set" scoped="" ref="0x4122fb58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x41231d28" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41231d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404749d8"/>
            <typename><typedef-ref name="TRadio" ref="0x40708340"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41230390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x412360e0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x412360e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41236ca8"/>
        <function-ref name="get" scoped="" ref="0x412369e8"/>
        <function-ref name="isSet" scoped="" ref="0x41236728"/>
        <function-ref name="set" scoped="" ref="0x41234010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41238660" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41238660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41238838"/>
        <function-ref name="noAck" scoped="" ref="0x41238918"/>
        <function-ref name="wasAcked" scoped="" ref="0x412389f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x41245a28" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x41245a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41245c00"/>
        <function-ref name="getPayload" scoped="" ref="0x41245ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41245dc0"/>
        <function-ref name="cancel" scoped="" ref="0x41245ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x4123a010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x41237298" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x41237298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x41237470"/>
        <function-ref name="setRetries" scoped="" ref="0x41237550"/>
        <function-ref name="getRetries" scoped="" ref="0x41237630"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x41237710"/>
        <function-ref name="wasDelivered" scoped="" ref="0x412377f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x412379b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x412379b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41237b88"/>
        <function-ref name="setChannel" scoped="" ref="0x41237c68"/>
        <function-ref name="getChannel" scoped="" ref="0x41237d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4123a248" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4123a248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4123a420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4122d2a8" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4122d2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4122dda8"/>
        <function-ref name="clear" scoped="" ref="0x4122c170"/>
        <function-ref name="isValid" scoped="" ref="0x4122d9f8"/>
        <function-ref name="set" scoped="" ref="0x4122c520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41247360" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41247360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41246e38"/>
        <function-ref name="fired" scoped="" ref="0x412460f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x412467f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x412465a0"/>
        <function-ref name="getdt" scoped="" ref="0x41265310"/>
        <function-ref name="gett0" scoped="" ref="0x412650b8"/>
        <function-ref name="isRunning" scoped="" ref="0x41246348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41247988"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41246b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x41247c08"/>
        <function-ref name="stop" scoped="" ref="0x41247e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x412615b0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x412615b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
            <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412606a0"/>
        <function-ref name="maxSize" scoped="" ref="0x412600b8"/>
        <function-ref name="empty" scoped="" ref="0x41261bd8"/>
        <function-ref name="put" scoped="" ref="0x41260310"/>
        <function-ref name="size" scoped="" ref="0x41261e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41a3ac60" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41a3ac60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
            <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a39d60"/>
        <function-ref name="maxSize" scoped="" ref="0x41a39778"/>
        <function-ref name="empty" scoped="" ref="0x41a392c8"/>
        <function-ref name="put" scoped="" ref="0x41a399d0"/>
        <function-ref name="size" scoped="" ref="0x41a39520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a3a8b8" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a3a8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a3aa90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4124b950" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4124b950"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41249aa8"/>
        <function-ref name="maxSize" scoped="" ref="0x412494c0"/>
        <function-ref name="empty" scoped="" ref="0x41249010"/>
        <function-ref name="put" scoped="" ref="0x41249718"/>
        <function-ref name="size" scoped="" ref="0x41249268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41a2f3e8" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41a2f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a2e4c0"/>
        <function-ref name="maxSize" scoped="" ref="0x41a2fec0"/>
        <function-ref name="empty" scoped="" ref="0x41a2fa10"/>
        <function-ref name="put" scoped="" ref="0x41a2e130"/>
        <function-ref name="size" scoped="" ref="0x41a2fc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a2f040" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a2f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a2f218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41289928" loc="43:/opt/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41289928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x40920218"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41288718"/>
        <function-ref name="enqueue" scoped="" ref="0x41288df8"/>
        <function-ref name="element" scoped="" ref="0x41279188"/>
        <function-ref name="maxSize" scoped="" ref="0x412884c0"/>
        <function-ref name="dequeue" scoped="" ref="0x41288a88"/>
        <function-ref name="empty" scoped="" ref="0x41288010"/>
        <function-ref name="size" scoped="" ref="0x41288268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41278468" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41278468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412765f8"/>
        <function-ref name="maxSize" scoped="" ref="0x41276010"/>
        <function-ref name="empty" scoped="" ref="0x41278a90"/>
        <function-ref name="put" scoped="" ref="0x41276268"/>
        <function-ref name="size" scoped="" ref="0x41278ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41a1f3e8" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41a1f3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a1e4c0"/>
        <function-ref name="maxSize" scoped="" ref="0x41a1fec0"/>
        <function-ref name="empty" scoped="" ref="0x41a1fa10"/>
        <function-ref name="put" scoped="" ref="0x41a1e130"/>
        <function-ref name="size" scoped="" ref="0x41a1fc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a1f040" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a1f040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a1f218"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412701a8" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412701a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41270380"/>
        <function-ref name="stopDone" scoped="" ref="0x41270460"/>
        <function-ref name="start" scoped="" ref="0x41270540"/>
        <function-ref name="stop" scoped="" ref="0x41270620"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x4126f288" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSplitControl" scoped="" ref="0x4126f288"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4126f460"/>
        <function-ref name="stopDone" scoped="" ref="0x4126f540"/>
        <function-ref name="start" scoped="" ref="0x4126f620"/>
        <function-ref name="stop" scoped="" ref="0x4126f700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x4126f8a0" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x4126f8a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x4126fa78"/>
        <function-ref name="changed" scoped="" ref="0x4126fb58"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x4126fc38"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x4126fd18"/>
        <function-ref name="setSource" scoped="" ref="0x4126fdf8"/>
        <function-ref name="removeAddress" scoped="" ref="0x4126fed8"/>
        <function-ref name="setAddress" scoped="" ref="0x4126e010"/>
        <function-ref name="isLLAddress" scoped="" ref="0x4126e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x41270d08" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x41270d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41270ee0"/>
        <function-ref name="stop" scoped="" ref="0x4126f010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x412707f8" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x412707f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x412709d0"/>
        <function-ref name="stop" scoped="" ref="0x41270ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x4129d250" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMP_IP" scoped="" ref="0x4129d250"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4129d428"/>
        <function-ref name="recv" scoped="" ref="0x4129d508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x4129daf8" loc="54:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x4129daf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x4129dcd0"/>
        <function-ref name="changed" scoped="" ref="0x4129ddb0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x4129de90"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x4129c010"/>
        <function-ref name="setSource" scoped="" ref="0x4129c0f0"/>
        <function-ref name="removeAddress" scoped="" ref="0x4129c1d0"/>
        <function-ref name="setAddress" scoped="" ref="0x4129c2b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x4129c390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4129c500" loc="55:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4129c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4129c6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4129c7b8"/>
        <function-ref name="led1On" scoped="" ref="0x4129c898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4129c978"/>
        <function-ref name="led3Off" scoped="" ref="0x4129ca58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4129cb38"/>
        <function-ref name="get" scoped="" ref="0x4129cc18"/>
        <function-ref name="led1Off" scoped="" ref="0x4129ccf8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4129cdd8"/>
        <function-ref name="led3On" scoped="" ref="0x4129ceb8"/>
        <function-ref name="led4Off" scoped="" ref="0x4129b010"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4129b0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4129b1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4129b330"/>
        <function-ref name="led2On" scoped="" ref="0x4129b410"/>
        <function-ref name="led4On" scoped="" ref="0x4129b4f0"/>
        <function-ref name="set" scoped="" ref="0x4129b5d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x4129d6a0" loc="53:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x4129d6a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4129d878"/>
        <function-ref name="recv" scoped="" ref="0x4129d958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x412a7548" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x412a7548"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x412a7720"/>
        <function-ref name="delTLV" scoped="" ref="0x412a7800"/>
        <function-ref name="findTLV" scoped="" ref="0x412a78e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x412cce20" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x412cce20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40931608"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x412bef00"/>
        <function-ref name="maxSize" scoped="" ref="0x412be918"/>
        <function-ref name="empty" scoped="" ref="0x412be468"/>
        <function-ref name="put" scoped="" ref="0x412beb70"/>
        <function-ref name="size" scoped="" ref="0x412be6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41a16c38" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41a16c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40931608"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41a15d10"/>
        <function-ref name="maxSize" scoped="" ref="0x41a15728"/>
        <function-ref name="empty" scoped="" ref="0x41a15278"/>
        <function-ref name="put" scoped="" ref="0x41a15980"/>
        <function-ref name="size" scoped="" ref="0x41a154d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a16890" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a16890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a16a68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x412bce80" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <component-ref qname="NoDhcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x412bce80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x412b9070"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x412b9210" loc="45:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <component-ref qname="NoDhcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x412b9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x412b93e8"/>
        <function-ref name="changed" scoped="" ref="0x412b94c8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x412b95a8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x412b9688"/>
        <function-ref name="setSource" scoped="" ref="0x412b9768"/>
        <function-ref name="removeAddress" scoped="" ref="0x412b9848"/>
        <function-ref name="setAddress" scoped="" ref="0x412b9928"/>
        <function-ref name="isLLAddress" scoped="" ref="0x412b9a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x412b3840" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="UDPEchoC.Echo"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x412b3840"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x412b3a18"/>
        <function-ref name="bind" scoped="" ref="0x412b3af8"/>
        <function-ref name="sendtov" scoped="" ref="0x412b3bd8"/>
        <function-ref name="recvfrom" scoped="" ref="0x412b3cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x412ad4f8" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x412ad4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40962300"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x40962588"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412addc0"/>
        <function-ref name="get" scoped="" ref="0x412adb20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x412b1cc8" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x412b1cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x412b1ea0"/>
        <function-ref name="bind" scoped="" ref="0x412ad010"/>
        <function-ref name="sendtov" scoped="" ref="0x412ad0f0"/>
        <function-ref name="recvfrom" scoped="" ref="0x412ad1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x412ec510" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x412ec510"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x40962300"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x40962588"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412ecdd8"/>
        <function-ref name="get" scoped="" ref="0x412ecb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412ec010" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412ec010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412ec1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x412eb4b8" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x412eb4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x412eb690"/>
        <function-ref name="changed" scoped="" ref="0x412eb770"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x412eb850"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x412eb930"/>
        <function-ref name="setSource" scoped="" ref="0x412eba10"/>
        <function-ref name="removeAddress" scoped="" ref="0x412ebaf0"/>
        <function-ref name="setAddress" scoped="" ref="0x412ebbd0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x412ebcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x412ef9e0" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x412ef9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x412efbb8"/>
        <function-ref name="bind" scoped="" ref="0x412efc98"/>
        <function-ref name="sendtov" scoped="" ref="0x412efd78"/>
        <function-ref name="recvfrom" scoped="" ref="0x412efe58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x412eb040" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x412eb040"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412eb218"/>
        <function-ref name="recv" scoped="" ref="0x412eb2f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x412b2868" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="UDPEchoC.Status"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x412b2868"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x412b2a40"/>
        <function-ref name="bind" scoped="" ref="0x412b2b20"/>
        <function-ref name="sendtov" scoped="" ref="0x412b2c00"/>
        <function-ref name="recvfrom" scoped="" ref="0x412b2ce0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x41302800" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x41302800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x413029d8"/>
        <function-ref name="setRoot" scoped="" ref="0x41302ab8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x41302b98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413074a0" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x413074a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41307678"/>
        <function-ref name="stop" scoped="" ref="0x41307758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x412f9098" loc="76:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRank" scoped="" ref="0x412f9098"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x412f9270"/>
        <function-ref name="isRoot" scoped="" ref="0x412f9350"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x412f9430"/>
        <function-ref name="hasParent" scoped="" ref="0x412f9510"/>
        <function-ref name="validInstance" scoped="" ref="0x412f95f0"/>
        <function-ref name="declareRoot" scoped="" ref="0x412f96d0"/>
        <function-ref name="getRank" scoped="" ref="0x412f97b0"/>
        <function-ref name="getEtx" scoped="" ref="0x412f9890"/>
        <function-ref name="isLeaf" scoped="" ref="0x412f9970"/>
        <function-ref name="compareAddr" scoped="" ref="0x412f9a50"/>
        <function-ref name="isParent" scoped="" ref="0x412f9b30"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x412f9c10"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x412f9cf0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x412f9e50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x413007c0" loc="80:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMP_RA" scoped="" ref="0x413007c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41300998"/>
        <function-ref name="recv" scoped="" ref="0x41300a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41300010" loc="77:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41300010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413001e8"/>
        <function-ref name="stop" scoped="" ref="0x413002c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x41304270" loc="75:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x41304270"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41304448"/>
        <function-ref name="recv" scoped="" ref="0x41304528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x41313928" loc="95:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x41313928"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x41313b00"/>
        <function-ref name="initiate" scoped="" ref="0x41313be0"/>
        <function-ref name="linkResult" scoped="" ref="0x41313cc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x4131a770" loc="93:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x4131a770"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x4131a948"/>
        <function-ref name="changed" scoped="" ref="0x4131aa28"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x4131ab08"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x4131abe8"/>
        <function-ref name="setSource" scoped="" ref="0x4131acc8"/>
        <function-ref name="removeAddress" scoped="" ref="0x4131ada8"/>
        <function-ref name="setAddress" scoped="" ref="0x4131ae88"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41313010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x4131b958" loc="89:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO" scoped="" ref="0x4131b958"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4131bb30"/>
        <function-ref name="recv" scoped="" ref="0x4131bc10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x41354a08" loc="96:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLOF" scoped="" ref="0x41354a08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x41354be0"/>
        <function-ref name="OCP" scoped="" ref="0x41354cc0"/>
        <function-ref name="objectSupported" scoped="" ref="0x41354da0"/>
        <function-ref name="getRank" scoped="" ref="0x41354e80"/>
        <function-ref name="resetRank" scoped="" ref="0x41312010"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x413120f0"/>
        <function-ref name="getObjectValue" scoped="" ref="0x413121d0"/>
        <function-ref name="getParent" scoped="" ref="0x413122b0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x41312390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4131c500" loc="92:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4131c500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4131c6d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4131c7b8"/>
        <function-ref name="led1On" scoped="" ref="0x4131c898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4131c978"/>
        <function-ref name="led3Off" scoped="" ref="0x4131ca58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4131cb38"/>
        <function-ref name="get" scoped="" ref="0x4131cc18"/>
        <function-ref name="led1Off" scoped="" ref="0x4131ccf8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4131cdd8"/>
        <function-ref name="led3On" scoped="" ref="0x4131ceb8"/>
        <function-ref name="led4Off" scoped="" ref="0x4131a010"/>
        <function-ref name="led4Toggle" scoped="" ref="0x4131a0f0"/>
        <function-ref name="led0On" scoped="" ref="0x4131a1d0"/>
        <function-ref name="led2Off" scoped="" ref="0x4131a330"/>
        <function-ref name="led2On" scoped="" ref="0x4131a410"/>
        <function-ref name="led4On" scoped="" ref="0x4131a4f0"/>
        <function-ref name="set" scoped="" ref="0x4131a5d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x4131f430" loc="83:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRankInfo" scoped="" ref="0x4131f430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x4131f608"/>
        <function-ref name="isRoot" scoped="" ref="0x4131f6e8"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x4131f7c8"/>
        <function-ref name="hasParent" scoped="" ref="0x4131f8a8"/>
        <function-ref name="validInstance" scoped="" ref="0x4131f988"/>
        <function-ref name="declareRoot" scoped="" ref="0x4131fa68"/>
        <function-ref name="getRank" scoped="" ref="0x4131fb48"/>
        <function-ref name="getEtx" scoped="" ref="0x4131fc28"/>
        <function-ref name="isLeaf" scoped="" ref="0x4131fd08"/>
        <function-ref name="compareAddr" scoped="" ref="0x4131fde8"/>
        <function-ref name="isParent" scoped="" ref="0x4131fec8"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x4131e010"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x4131e0f0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x4131e250"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x4131b588" loc="86:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLParentTable" scoped="" ref="0x4131b588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4131b760"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x41315798" loc="91:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteInfo" scoped="" ref="0x41315798"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x41315970"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x4131c2b0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x4131c390"/>
        <function-ref name="hasDODAG" scoped="" ref="0x41315c10"/>
        <function-ref name="validInstance" scoped="" ref="0x41315cf0"/>
        <function-ref name="inconsistency" scoped="" ref="0x41315dd0"/>
        <function-ref name="getRank" scoped="" ref="0x41315eb0"/>
        <function-ref name="getDodagId" scoped="" ref="0x4131c010"/>
        <function-ref name="getDTSN" scoped="" ref="0x41315b30"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x4131c0f0"/>
        <function-ref name="getInstanceID" scoped="" ref="0x4131c1d0"/>
        <function-ref name="setDTSN" scoped="" ref="0x41315a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x413131e8" loc="94:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x413131e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x413133c0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x413134a0"/>
        <function-ref name="delRoute" scoped="" ref="0x41313580"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x41313660"/>
        <function-ref name="addRoute" scoped="" ref="0x41313740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x4131bda8" loc="90:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x4131bda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x4131d010"/>
        <function-ref name="delTLV" scoped="" ref="0x4131d0f0"/>
        <function-ref name="findTLV" scoped="" ref="0x4131d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x41370768" loc="362:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="newParentSearch" scoped="" ref="0x41370768"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x413709c0"/>
        <function-ref name="runTask" scoped="" ref="0x41370aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4131e3f8" loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4131e3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4131e5d0"/>
        <function-ref name="stop" scoped="" ref="0x4131e6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x4131e8b0" loc="85:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x4131e8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4131ea88"/>
        <function-ref name="recv" scoped="" ref="0x4131eb68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x413ad5f8" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x413ad5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x413ad7d0"/>
        <function-ref name="setRoot" scoped="" ref="0x413ad8b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x413ad990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x413aa010" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x413aa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x413aa1e8"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x413aaaa8"/>
        <function-ref name="resetTrickle" scoped="" ref="0x413aab88"/>
        <function-ref name="hasDODAG" scoped="" ref="0x413aa488"/>
        <function-ref name="validInstance" scoped="" ref="0x413aa568"/>
        <function-ref name="inconsistency" scoped="" ref="0x413aa648"/>
        <function-ref name="getRank" scoped="" ref="0x413aa728"/>
        <function-ref name="getDodagId" scoped="" ref="0x413aa808"/>
        <function-ref name="getDTSN" scoped="" ref="0x413aa3a8"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x413aa8e8"/>
        <function-ref name="getInstanceID" scoped="" ref="0x413aa9c8"/>
        <function-ref name="setDTSN" scoped="" ref="0x413aa2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x413adb38" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x413adb38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x413add10"/>
        <function-ref name="stop" scoped="" ref="0x413addf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x41450ad0" loc="46:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x41450ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x41450ca8"/>
        <function-ref name="setRoot" scoped="" ref="0x41450d88"/>
        <function-ref name="unsetRoot" scoped="" ref="0x41450e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x4144d5b8" loc="52:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIS" scoped="" ref="0x4144d5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4144d790"/>
        <function-ref name="recv" scoped="" ref="0x4144d870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x41441508" loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x41441508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x414416e0"/>
        <function-ref name="getStoreState" scoped="" ref="0x414417c0"/>
        <function-ref name="startDAO" scoped="" ref="0x414418a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x41441a20" loc="167:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="computeRemaining" scoped="" ref="0x41441a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41441bf8"/>
        <function-ref name="runTask" scoped="" ref="0x41441cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x4144bce0" loc="55:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InitDISTimer" scoped="" ref="0x4144bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414488a8"/>
        <function-ref name="fired" scoped="" ref="0x4144aaa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41448268"/>
        <function-ref name="isOneShot" scoped="" ref="0x41448010"/>
        <function-ref name="getdt" scoped="" ref="0x41448d58"/>
        <function-ref name="gett0" scoped="" ref="0x41448b00"/>
        <function-ref name="isRunning" scoped="" ref="0x4144ad00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4144a350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41448588"/>
        <function-ref name="startOneShot" scoped="" ref="0x4144a5d0"/>
        <function-ref name="stop" scoped="" ref="0x4144a850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41445220" loc="57:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41445220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x414453f8"/>
        <function-ref name="rand32" scoped="" ref="0x414454d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x4144da60" loc="54:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4144da60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4144b570"/>
        <function-ref name="fired" scoped="" ref="0x4144c810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4144cf18"/>
        <function-ref name="isOneShot" scoped="" ref="0x4144ccc0"/>
        <function-ref name="getdt" scoped="" ref="0x4144ba20"/>
        <function-ref name="gett0" scoped="" ref="0x4144b7c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4144ca68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4144c0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4144b250"/>
        <function-ref name="startOneShot" scoped="" ref="0x4144c338"/>
        <function-ref name="stop" scoped="" ref="0x4144c5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x414402b0" loc="121:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x414402b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41440488"/>
        <function-ref name="runTask" scoped="" ref="0x41440568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x41443550" loc="59:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x41443550"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41443728"/>
        <function-ref name="changed" scoped="" ref="0x41443808"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x414438e8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x414439c8"/>
        <function-ref name="setSource" scoped="" ref="0x41443aa8"/>
        <function-ref name="removeAddress" scoped="" ref="0x41443b88"/>
        <function-ref name="setAddress" scoped="" ref="0x41443c68"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41443d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x414406e8" loc="120:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDISTask" scoped="" ref="0x414406e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414408c0"/>
        <function-ref name="runTask" scoped="" ref="0x414409a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x4144d1a0" loc="51:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO" scoped="" ref="0x4144d1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4144d378"/>
        <function-ref name="recv" scoped="" ref="0x4144d458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x41445638" loc="58:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRankInfo" scoped="" ref="0x41445638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x41445810"/>
        <function-ref name="isRoot" scoped="" ref="0x414458f0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x414459d0"/>
        <function-ref name="hasParent" scoped="" ref="0x41445ab0"/>
        <function-ref name="validInstance" scoped="" ref="0x41445b90"/>
        <function-ref name="declareRoot" scoped="" ref="0x41445c70"/>
        <function-ref name="getRank" scoped="" ref="0x41445d50"/>
        <function-ref name="getEtx" scoped="" ref="0x41445e30"/>
        <function-ref name="isLeaf" scoped="" ref="0x41445f10"/>
        <function-ref name="compareAddr" scoped="" ref="0x41443010"/>
        <function-ref name="isParent" scoped="" ref="0x414430f0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x414431d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x414432b0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x41443410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41443e88" loc="60:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41443e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41442070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41442150"/>
        <function-ref name="led1On" scoped="" ref="0x41442230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41442310"/>
        <function-ref name="led3Off" scoped="" ref="0x414423f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414424d0"/>
        <function-ref name="get" scoped="" ref="0x414425b0"/>
        <function-ref name="led1Off" scoped="" ref="0x41442690"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41442770"/>
        <function-ref name="led3On" scoped="" ref="0x41442850"/>
        <function-ref name="led4Off" scoped="" ref="0x41442930"/>
        <function-ref name="led4Toggle" scoped="" ref="0x41442a10"/>
        <function-ref name="led0On" scoped="" ref="0x41442af0"/>
        <function-ref name="led2Off" scoped="" ref="0x41442c50"/>
        <function-ref name="led2On" scoped="" ref="0x41442d30"/>
        <function-ref name="led4On" scoped="" ref="0x41442e10"/>
        <function-ref name="set" scoped="" ref="0x41442ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x41441e58" loc="122:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="initDIO" scoped="" ref="0x41441e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41440050"/>
        <function-ref name="runTask" scoped="" ref="0x41440130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x41440b20" loc="119:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDIOTask" scoped="" ref="0x41440b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41440cf8"/>
        <function-ref name="runTask" scoped="" ref="0x41440dd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x41447030" loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x41447030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41446b38"/>
        <function-ref name="fired" scoped="" ref="0x41447db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414464f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x414462a0"/>
        <function-ref name="getdt" scoped="" ref="0x41445010"/>
        <function-ref name="gett0" scoped="" ref="0x41446d90"/>
        <function-ref name="isRunning" scoped="" ref="0x41446048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41447658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41446818"/>
        <function-ref name="startOneShot" scoped="" ref="0x414478d8"/>
        <function-ref name="stop" scoped="" ref="0x41447b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x4144f428" loc="48:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRouteInfo" scoped="" ref="0x4144f428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x4144f600"/>
        <function-ref name="getInstanceID" scoped="" ref="0x4144fec0"/>
        <function-ref name="setDTSN" scoped="" ref="0x4144d010"/>
        <function-ref name="hasDODAG" scoped="" ref="0x4144f8a0"/>
        <function-ref name="validInstance" scoped="" ref="0x4144f980"/>
        <function-ref name="inconsistency" scoped="" ref="0x4144fa60"/>
        <function-ref name="getRank" scoped="" ref="0x4144fb40"/>
        <function-ref name="getDodagId" scoped="" ref="0x4144fc20"/>
        <function-ref name="getDTSN" scoped="" ref="0x4144fd00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x4144fde0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x4144f6e0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x4144f7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x41441090" loc="61:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RankControl" scoped="" ref="0x41441090"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414412e8"/>
        <function-ref name="stop" scoped="" ref="0x414413c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4144f010" loc="47:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4144f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4144f1e8"/>
        <function-ref name="stop" scoped="" ref="0x4144f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4143c1c8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4143c1c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4143bd58"/>
        <function-ref name="fired" scoped="" ref="0x4143b010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4143b718"/>
        <function-ref name="isOneShot" scoped="" ref="0x4143b4c0"/>
        <function-ref name="getdt" scoped="" ref="0x41439268"/>
        <function-ref name="gett0" scoped="" ref="0x41439010"/>
        <function-ref name="isRunning" scoped="" ref="0x4143b268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4143c7f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4143ba38"/>
        <function-ref name="startOneShot" scoped="" ref="0x4143ca70"/>
        <function-ref name="stop" scoped="" ref="0x4143ccf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x414380a0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x414380a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41437b88"/>
        <function-ref name="fired" scoped="" ref="0x41438e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41437548"/>
        <function-ref name="isOneShot" scoped="" ref="0x414372f0"/>
        <function-ref name="getdt" scoped="" ref="0x41436048"/>
        <function-ref name="gett0" scoped="" ref="0x41437de0"/>
        <function-ref name="isRunning" scoped="" ref="0x41437098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414386c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41437868"/>
        <function-ref name="startOneShot" scoped="" ref="0x41438948"/>
        <function-ref name="stop" scoped="" ref="0x41438bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41436e40" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41436e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41433988"/>
        <function-ref name="fired" scoped="" ref="0x41435c10"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41433348"/>
        <function-ref name="isOneShot" scoped="" ref="0x414330f0"/>
        <function-ref name="getdt" scoped="" ref="0x41433e38"/>
        <function-ref name="gett0" scoped="" ref="0x41433be0"/>
        <function-ref name="isRunning" scoped="" ref="0x41435e68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414354b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41433668"/>
        <function-ref name="startOneShot" scoped="" ref="0x41435738"/>
        <function-ref name="stop" scoped="" ref="0x414359b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x4142f6c8" loc="45:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4142f6c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x4142f8a0"/>
        <function-ref name="getStoreState" scoped="" ref="0x4142f980"/>
        <function-ref name="startDAO" scoped="" ref="0x4142fa60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x41478010" loc="48:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMP_RA" scoped="" ref="0x41478010"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414781e8"/>
        <function-ref name="recv" scoped="" ref="0x414782c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4142f210" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4142f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4142f3e8"/>
        <function-ref name="stop" scoped="" ref="0x4142f4c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x414ab4d0" loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x414ab4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x414ab6a8"/>
        <function-ref name="setRoot" scoped="" ref="0x414ab788"/>
        <function-ref name="unsetRoot" scoped="" ref="0x414ab868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x414ae320" loc="54:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendPool" scoped="" ref="0x414ae320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414ac3f8"/>
        <function-ref name="maxSize" scoped="" ref="0x414aedf8"/>
        <function-ref name="empty" scoped="" ref="0x414ae948"/>
        <function-ref name="put" scoped="" ref="0x414ac068"/>
        <function-ref name="size" scoped="" ref="0x414aeba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x414b2890" loc="51:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DAO" scoped="" ref="0x414b2890"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414b2a68"/>
        <function-ref name="recv" scoped="" ref="0x414b2b48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x414b2478" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x414b2478"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x414b2650"/>
        <function-ref name="rand32" scoped="" ref="0x414b2730"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x414a9c68" loc="107:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDAO" scoped="" ref="0x414a9c68"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414a9e40"/>
        <function-ref name="runTask" scoped="" ref="0x414a9f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x414b8f00" loc="48:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RemoveTimer" scoped="" ref="0x414b8f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414b6a18"/>
        <function-ref name="fired" scoped="" ref="0x414b7cb0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414b63d8"/>
        <function-ref name="isOneShot" scoped="" ref="0x414b6180"/>
        <function-ref name="getdt" scoped="" ref="0x414b6ec8"/>
        <function-ref name="gett0" scoped="" ref="0x414b6c70"/>
        <function-ref name="isRunning" scoped="" ref="0x414b7f08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414b7558"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414b66f8"/>
        <function-ref name="startOneShot" scoped="" ref="0x414b77d8"/>
        <function-ref name="stop" scoped="" ref="0x414b7a58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x414b1760" loc="53:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x414b1760"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x414af4c0"/>
        <function-ref name="enqueue" scoped="" ref="0x414afba0"/>
        <function-ref name="element" scoped="" ref="0x414afef0"/>
        <function-ref name="maxSize" scoped="" ref="0x414af268"/>
        <function-ref name="dequeue" scoped="" ref="0x414af830"/>
        <function-ref name="empty" scoped="" ref="0x414b1d88"/>
        <function-ref name="size" scoped="" ref="0x414af010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x414b2c88" loc="52:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x414b2c88"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x414b2e60"/>
        <function-ref name="changed" scoped="" ref="0x414b1010"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x414b10f0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x414b11d0"/>
        <function-ref name="setSource" scoped="" ref="0x414b12b0"/>
        <function-ref name="removeAddress" scoped="" ref="0x414b1390"/>
        <function-ref name="setAddress" scoped="" ref="0x414b1470"/>
        <function-ref name="isLLAddress" scoped="" ref="0x414b1550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x414a9830" loc="190:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="initDAO" scoped="" ref="0x414a9830"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x414a9a08"/>
        <function-ref name="runTask" scoped="" ref="0x414a9ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x414bb2d8" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x414bb2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x414bb4b0"/>
        <function-ref name="getStoreState" scoped="" ref="0x414bb590"/>
        <function-ref name="startDAO" scoped="" ref="0x414bb670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x414aa5b0" loc="59:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x414aa5b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414aa788"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414aa868"/>
        <function-ref name="led1On" scoped="" ref="0x414aa948"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414aaa28"/>
        <function-ref name="led3Off" scoped="" ref="0x414aab08"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414aabe8"/>
        <function-ref name="get" scoped="" ref="0x414aacc8"/>
        <function-ref name="led1Off" scoped="" ref="0x414aada8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x414aae88"/>
        <function-ref name="led3On" scoped="" ref="0x414a9010"/>
        <function-ref name="led4Off" scoped="" ref="0x414a90f0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x414a91d0"/>
        <function-ref name="led0On" scoped="" ref="0x414a92b0"/>
        <function-ref name="led2Off" scoped="" ref="0x414a9410"/>
        <function-ref name="led2On" scoped="" ref="0x414a94f0"/>
        <function-ref name="led4On" scoped="" ref="0x414a95d0"/>
        <function-ref name="set" scoped="" ref="0x414a96b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x414bbc88" loc="47:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayDAOTimer" scoped="" ref="0x414bbc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414b8790"/>
        <function-ref name="fired" scoped="" ref="0x414baa20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414b8150"/>
        <function-ref name="isOneShot" scoped="" ref="0x414baed0"/>
        <function-ref name="getdt" scoped="" ref="0x414b8c40"/>
        <function-ref name="gett0" scoped="" ref="0x414b89e8"/>
        <function-ref name="isRunning" scoped="" ref="0x414bac78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414ba2c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414b8470"/>
        <function-ref name="startOneShot" scoped="" ref="0x414ba548"/>
        <function-ref name="stop" scoped="" ref="0x414ba7c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x414b41b8" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x414b41b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414b3d58"/>
        <function-ref name="fired" scoped="" ref="0x414b3010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414b3718"/>
        <function-ref name="isOneShot" scoped="" ref="0x414b34c0"/>
        <function-ref name="getdt" scoped="" ref="0x414b2268"/>
        <function-ref name="gett0" scoped="" ref="0x414b2010"/>
        <function-ref name="isRunning" scoped="" ref="0x414b3268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414b47e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414b3a38"/>
        <function-ref name="startOneShot" scoped="" ref="0x414b4a60"/>
        <function-ref name="stop" scoped="" ref="0x414b4ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x414ac7a0" loc="55:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRouteInfo" scoped="" ref="0x414ac7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x414ac978"/>
        <function-ref name="getInstanceID" scoped="" ref="0x414ab2b0"/>
        <function-ref name="setDTSN" scoped="" ref="0x414ab390"/>
        <function-ref name="hasDODAG" scoped="" ref="0x414acc18"/>
        <function-ref name="validInstance" scoped="" ref="0x414accf8"/>
        <function-ref name="inconsistency" scoped="" ref="0x414acdd8"/>
        <function-ref name="getRank" scoped="" ref="0x414aceb8"/>
        <function-ref name="getDodagId" scoped="" ref="0x414ab010"/>
        <function-ref name="getDTSN" scoped="" ref="0x414ab0f0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x414ab1d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x414aca58"/>
        <function-ref name="resetTrickle" scoped="" ref="0x414acb38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x414ab9a8" loc="57:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x414ab9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x414abc00"/>
        <function-ref name="delTLV" scoped="" ref="0x414abce0"/>
        <function-ref name="findTLV" scoped="" ref="0x414abdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x414abf00" loc="58:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x414abf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x414aa0f0"/>
        <function-ref name="lookupRoute" scoped="" ref="0x414aa1d0"/>
        <function-ref name="delRoute" scoped="" ref="0x414aa2b0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x414aa390"/>
        <function-ref name="addRoute" scoped="" ref="0x414aa470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x414bb7b0" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x414bb7b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x414bb988"/>
        <function-ref name="stop" scoped="" ref="0x414bba68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x414a50c0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x414a50c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414a3ba8"/>
        <function-ref name="fired" scoped="" ref="0x414a5e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414a3568"/>
        <function-ref name="isOneShot" scoped="" ref="0x414a3310"/>
        <function-ref name="getdt" scoped="" ref="0x414a2068"/>
        <function-ref name="gett0" scoped="" ref="0x414a3e00"/>
        <function-ref name="isRunning" scoped="" ref="0x414a30b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414a56e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414a3888"/>
        <function-ref name="startOneShot" scoped="" ref="0x414a5968"/>
        <function-ref name="stop" scoped="" ref="0x414a5be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x414a2e88" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x414a2e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414a0988"/>
        <function-ref name="fired" scoped="" ref="0x414a1c30"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414a0348"/>
        <function-ref name="isOneShot" scoped="" ref="0x414a00f0"/>
        <function-ref name="getdt" scoped="" ref="0x414a0e38"/>
        <function-ref name="gett0" scoped="" ref="0x414a0be0"/>
        <function-ref name="isRunning" scoped="" ref="0x414a1e88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414a14d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414a0668"/>
        <function-ref name="startOneShot" scoped="" ref="0x414a1758"/>
        <function-ref name="stop" scoped="" ref="0x414a19d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4149ec30" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4149ec30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414e8730"/>
        <function-ref name="fired" scoped="" ref="0x414e99d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414e80f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x414e9e80"/>
        <function-ref name="getdt" scoped="" ref="0x414e8be0"/>
        <function-ref name="gett0" scoped="" ref="0x414e8988"/>
        <function-ref name="isRunning" scoped="" ref="0x414e9c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414e9278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414e8410"/>
        <function-ref name="startOneShot" scoped="" ref="0x414e94f8"/>
        <function-ref name="stop" scoped="" ref="0x414e9778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x414e4278" loc="43:/opt/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x414e4278"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x414e2010"/>
        <function-ref name="enqueue" scoped="" ref="0x414e26f0"/>
        <function-ref name="element" scoped="" ref="0x414e2a40"/>
        <function-ref name="maxSize" scoped="" ref="0x414e4d50"/>
        <function-ref name="dequeue" scoped="" ref="0x414e2380"/>
        <function-ref name="empty" scoped="" ref="0x414e48a0"/>
        <function-ref name="size" scoped="" ref="0x414e4af8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x414e1eb0" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x414e1eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414de010"/>
        <function-ref name="maxSize" scoped="" ref="0x414e0998"/>
        <function-ref name="empty" scoped="" ref="0x414e04e8"/>
        <function-ref name="put" scoped="" ref="0x414e0bf0"/>
        <function-ref name="size" scoped="" ref="0x414e0740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41b03be8" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41b03be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x41326410"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x41326698"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b02cf0"/>
        <function-ref name="maxSize" scoped="" ref="0x41b02708"/>
        <function-ref name="empty" scoped="" ref="0x41b02258"/>
        <function-ref name="put" scoped="" ref="0x41b02960"/>
        <function-ref name="size" scoped="" ref="0x41b024b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41b03840" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41b03840"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41b03a18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x414d98e0" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x414d98e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414d9ac8"/>
        <function-ref name="recv" scoped="" ref="0x414d9ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x41af82e0" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RA" scoped="" ref="0x41af82e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41af84b8"/>
        <function-ref name="recv" scoped="" ref="0x41af8598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x41afae80" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x41afae80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41af8080"/>
        <function-ref name="recv" scoped="" ref="0x41af8160"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x4150f010" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ParentTable" scoped="" ref="0x4150f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4150f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x4150f468" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAO" scoped="" ref="0x4150f468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x4150f640"/>
        <function-ref name="getStoreState" scoped="" ref="0x4150f720"/>
        <function-ref name="startDAO" scoped="" ref="0x4150f800"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x414c8eb0" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLOF" scoped="" ref="0x414c8eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x414c50c0"/>
        <function-ref name="OCP" scoped="" ref="0x414c51a0"/>
        <function-ref name="objectSupported" scoped="" ref="0x414c5280"/>
        <function-ref name="getRank" scoped="" ref="0x414c5360"/>
        <function-ref name="resetRank" scoped="" ref="0x414c5440"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x414c5520"/>
        <function-ref name="getObjectValue" scoped="" ref="0x414c5600"/>
        <function-ref name="getParent" scoped="" ref="0x414c56e0"/>
        <function-ref name="recalculateRank" scoped="" ref="0x414c57c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x414c41b0" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRoute" scoped="" ref="0x414c41b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x414c4388"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x414c4c48"/>
        <function-ref name="resetTrickle" scoped="" ref="0x414c4d28"/>
        <function-ref name="hasDODAG" scoped="" ref="0x414c4628"/>
        <function-ref name="validInstance" scoped="" ref="0x414c4708"/>
        <function-ref name="inconsistency" scoped="" ref="0x414c47e8"/>
        <function-ref name="getRank" scoped="" ref="0x414c48c8"/>
        <function-ref name="getDodagId" scoped="" ref="0x414c49a8"/>
        <function-ref name="getDTSN" scoped="" ref="0x414c4548"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x414c4a88"/>
        <function-ref name="getInstanceID" scoped="" ref="0x414c4b68"/>
        <function-ref name="setDTSN" scoped="" ref="0x414c4468"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x414c59b8" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x414c59b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x414c5b90"/>
        <function-ref name="lookupRoute" scoped="" ref="0x414c5c70"/>
        <function-ref name="delRoute" scoped="" ref="0x414c5d50"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x414c5e30"/>
        <function-ref name="addRoute" scoped="" ref="0x414c5f10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x414efab0" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x414efab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414efc98"/>
        <function-ref name="recv" scoped="" ref="0x414efd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x41af36b0" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RA" scoped="" ref="0x41af36b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41af3888"/>
        <function-ref name="recv" scoped="" ref="0x41af3968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x41af3268" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x41af3268"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41af3450"/>
        <function-ref name="recv" scoped="" ref="0x41af3530"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x414eb090" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="UDPShellC.UdpSocketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x414eb090"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x414eb268"/>
        <function-ref name="bind" scoped="" ref="0x414eb348"/>
        <function-ref name="sendtov" scoped="" ref="0x414eb428"/>
        <function-ref name="recvfrom" scoped="" ref="0x414eb508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41533ca0" loc="46:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41533ca0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41533e78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UDP" ref="0x41531010" loc="47:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x41531010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x415311e8"/>
        <function-ref name="bind" scoped="" ref="0x415312c8"/>
        <function-ref name="sendtov" scoped="" ref="0x415313a8"/>
        <function-ref name="recvfrom" scoped="" ref="0x41531488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x415315f8" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x415315f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x415317d0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x415318b0"/>
        <function-ref name="led1On" scoped="" ref="0x41531990"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41531a70"/>
        <function-ref name="led3Off" scoped="" ref="0x41531b50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41531c30"/>
        <function-ref name="get" scoped="" ref="0x41531d10"/>
        <function-ref name="led1Off" scoped="" ref="0x41531df0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41531ed0"/>
        <function-ref name="led3On" scoped="" ref="0x41530010"/>
        <function-ref name="led4Off" scoped="" ref="0x415300f0"/>
        <function-ref name="led4Toggle" scoped="" ref="0x415301d0"/>
        <function-ref name="led0On" scoped="" ref="0x415302b0"/>
        <function-ref name="led2Off" scoped="" ref="0x41530410"/>
        <function-ref name="led2On" scoped="" ref="0x415304f0"/>
        <function-ref name="led4On" scoped="" ref="0x415305d0"/>
        <function-ref name="set" scoped="" ref="0x415306b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShellCommand" ref="0x41532958" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShellCommand" scoped="" ref="0x41532958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShellCommand"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x41532b30"/>
        <function-ref name="eval" scoped="" ref="0x41532c10"/>
        <function-ref name="write" scoped="" ref="0x41532cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RegisterShellCommand" ref="0x41533918" loc="43:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RegisterShellCommand" scoped="" ref="0x41533918"/></type-interface>
      <instance>
        <interfacedef-ref qname="RegisterShellCommand"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCommandName" scoped="" ref="0x41533af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMPPing" ref="0x4152c4e8" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMPPing" scoped="" ref="0x4152c4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ICMPPing"/>
      </instance>
      <interface-functions>
        <function-ref name="pingDone" scoped="" ref="0x4152c6c0"/>
        <function-ref name="pingReply" scoped="" ref="0x4152c7a0"/>
        <function-ref name="ping" scoped="" ref="0x4152c880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMPPing" ref="0x41545478" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <component-ref qname="ICMPPingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMPPing" scoped="" ref="0x41545478"/></type-interface>
      <instance>
        <interfacedef-ref qname="ICMPPing"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="pingDone" scoped="" ref="0x41545650"/>
        <function-ref name="pingReply" scoped="" ref="0x41545730"/>
        <function-ref name="ping" scoped="" ref="0x41545810"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_ECHO" ref="0x4153fa70" loc="38:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_ECHO" scoped="" ref="0x4153fa70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4153fc48"/>
        <function-ref name="recv" scoped="" ref="0x4153fd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x4153fec8" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x4153fec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x4153e0c0"/>
        <function-ref name="changed" scoped="" ref="0x4153e1a0"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x4153e280"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x4153e360"/>
        <function-ref name="setSource" scoped="" ref="0x4153e440"/>
        <function-ref name="removeAddress" scoped="" ref="0x4153e520"/>
        <function-ref name="setAddress" scoped="" ref="0x4153e600"/>
        <function-ref name="isLLAddress" scoped="" ref="0x4153e6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMPPing" ref="0x41541120" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMPPing" scoped="" ref="0x41541120"/></type-interface>
      <instance>
        <interfacedef-ref qname="ICMPPing"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="pingDone" scoped="" ref="0x415412f8"/>
        <function-ref name="pingReply" scoped="" ref="0x415413d8"/>
        <function-ref name="ping" scoped="" ref="0x415414b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PingTimer" ref="0x415417b0" loc="37:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PingTimer" scoped="" ref="0x415417b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4153f330"/>
        <function-ref name="fired" scoped="" ref="0x41540540"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41540c48"/>
        <function-ref name="isOneShot" scoped="" ref="0x415409f0"/>
        <function-ref name="getdt" scoped="" ref="0x4153f7e0"/>
        <function-ref name="gett0" scoped="" ref="0x4153f588"/>
        <function-ref name="isRunning" scoped="" ref="0x41540798"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41541dd8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4153f010"/>
        <function-ref name="startOneShot" scoped="" ref="0x41540068"/>
        <function-ref name="stop" scoped="" ref="0x415402e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x415435a8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ICMPPingC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415435a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x415720d8"/>
        <function-ref name="fired" scoped="" ref="0x41573368"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41573a70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41573818"/>
        <function-ref name="getdt" scoped="" ref="0x41572588"/>
        <function-ref name="gett0" scoped="" ref="0x41572330"/>
        <function-ref name="isRunning" scoped="" ref="0x415735c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41543bd0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41573d90"/>
        <function-ref name="startOneShot" scoped="" ref="0x41543e50"/>
        <function-ref name="stop" scoped="" ref="0x41573110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ShellCommand" ref="0x414ec608" loc="38:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShellCommand" scoped="" ref="0x414ec608"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShellCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x414ec7e0"/>
        <function-ref name="eval" scoped="" ref="0x414ec8c0"/>
        <function-ref name="write" scoped="" ref="0x414ec9a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x414ecb98" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x414ecb98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x414ecd70"/>
        <function-ref name="lookupRoute" scoped="" ref="0x414ece50"/>
        <function-ref name="delRoute" scoped="" ref="0x4156b010"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x4156b0f0"/>
        <function-ref name="addRoute" scoped="" ref="0x4156b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4156b438" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4156b438"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41568010"/>
        <function-ref name="fired" scoped="" ref="0x41569268"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41569970"/>
        <function-ref name="isOneShot" scoped="" ref="0x41569718"/>
        <function-ref name="getdt" scoped="" ref="0x415684c0"/>
        <function-ref name="gett0" scoped="" ref="0x41568268"/>
        <function-ref name="isRunning" scoped="" ref="0x415694c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4156ba60"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41569c90"/>
        <function-ref name="startOneShot" scoped="" ref="0x4156bce0"/>
        <function-ref name="stop" scoped="" ref="0x41569010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShellCommand" ref="0x4156c5d8" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <component-ref qname="RouteCmdC.ShellCommandC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShellCommand" scoped="" ref="0x4156c5d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShellCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x4156c7b0"/>
        <function-ref name="eval" scoped="" ref="0x4156c890"/>
        <function-ref name="write" scoped="" ref="0x4156c970"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RegisterShellCommand" ref="0x41ae8998" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc">
      <component-ref qname="RouteCmdC.ShellCommandC.ShellCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RegisterShellCommand" scoped="" ref="0x41ae8998"/></type-interface>
      <instance>
        <interfacedef-ref qname="RegisterShellCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="getCommandName" scoped="" ref="0x41ae8b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x415a1b20" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RouteCmdC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x415a1b20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x40478bb0"/>
            <typename><typedef-ref name="TMilli" ref="0x40478d78"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4159a6a8"/>
        <function-ref name="fired" scoped="" ref="0x4159b938"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4159a068"/>
        <function-ref name="isOneShot" scoped="" ref="0x4159bde8"/>
        <function-ref name="getdt" scoped="" ref="0x4159ab58"/>
        <function-ref name="gett0" scoped="" ref="0x4159a900"/>
        <function-ref name="isRunning" scoped="" ref="0x4159bb90"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4159b1e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4159a388"/>
        <function-ref name="startOneShot" scoped="" ref="0x4159b460"/>
        <function-ref name="stop" scoped="" ref="0x4159b6e0"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40457010" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404583e0" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4045b168" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4045b010" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x4045f7b0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4045fde8" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4045fc90" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4045c4c8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4045c370" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4045ca20" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiByte" loc="38:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="write" ref="0x40496dc8" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
          <short>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; </short>
          <long>&#10; Synchronous transmit and receive (can be in interrupt context)&#10; @param tx Byte to transmit&#10; @param rx Received byte is stored here.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="tx" ref="0x40496c70" loc="45:/opt/tinyos-2.x/tos/interfaces/SpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x4049d408" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x4049d7f0" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40497c58" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4049c010" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4049d038" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4049dbc8" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40497518" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x404978a8" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x404a1e28" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x404a1508" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4049ae58" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x404a19b8" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x404a05f0" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SpiPacket" loc="54:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <short>&#10; SPI Packet/buffer interface for sending data over an SPI bus.</short>
        <long>&#10; SPI Packet/buffer interface for sending data over an SPI bus.  This&#10; interface provides a split-phase send command which can be used for&#10; sending, receiving or both. It is a &#34;send&#34; command because reading&#10; from the SPI requires writing bytes. The send call allows NULL&#10; parameters for receive or send only operations. This interface is&#10; for buffer based transfers where the microcontroller is the master&#10; (clocking) device.&#10;&#10; Often, an SPI bus must first be acquired using a Resource interface&#10; before sending commands with SPIPacket. In the case of multiple&#10; devices attached to a single SPI bus, chip select pins are often also&#10; used.&#10;&#10; @author Philip Levis&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.8 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x404acba8" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Send a message over the SPI bus.</short>
          <long>&#10; Send a message over the SPI bus.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' A pointer to the buffer to send over the bus. If this&#10;              parameter is NULL, then the SPI will send zeroes.&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' A pointer to the buffer where received data should&#10;              be stored. If this parameter is NULL, then the SPI will&#10;              discard incoming bytes.&#10; @param len   Length of the message.  Note that non-NULL rxBuf and txBuf&#10;              parameters must be AT LEAST as large as len, or the SPI&#10;              will overflow a buffer.&#10;&#10; @return SUCCESS if the request was accepted for transfer&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x404ac638" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x404ac850" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404aca40" loc="70:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404a9298" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
          <short>&#10; Notification that the send command has completed.</short>
          <long>&#10; Notification that the send command has completed.&#10;&#10; @param 'uint8_t* COUNT_NOK(len) txBuf' The buffer used for transmission&#10; @param 'uint8_t* COUNT_NOK(len) rxBuf' The buffer used for reception&#10; @param len    The request length of the transfer, but not necessarily&#10;               the number of bytes that were actually transferred&#10; @param error  SUCCESS if the operation completed successfully, FAIL&#10;               otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SpiPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="txBuf" ref="0x404aaac0" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="rxBuf" ref="0x404aacd8" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404aaec8" loc="82:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x404a9128" loc="83:/opt/tinyos-2.x/tos/interfaces/SpiPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FastSpiByte" loc="55:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <short>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface.</short>
        <long>&#10; This is a natural extension of the SpiByte interface which allows fast &#10; data transfers comparable to the SpiStream interface. You may want to&#10; use the following code sequence to write a buffer as fast as possible&#10;&#10;&#9;uint8_t *data;&#10;&#9;uint8_t *response;&#10;&#10;&#9;// start the first byte&#10;&#9;call FastSpiByte.splitWrite(data[0]);&#10;&#9;for(i = 1; i &#60; length; ++i) {&#10;&#9;   // finish the previous one and write the next one&#10;&#9;  response[i-1] = call FastSpiByte.splitReadWrite(data[i]);&#10;&#9;}&#10;&#9;// finish the last byte&#10;&#9;response[length-1] = call FastSpiByte.splitRead();&#10;&#10; You can also do some useful computation (like calculate a CRC) while the&#10; hardware is sending the byte.&#10;</long>
      </documentation>
      <function command="" provided="0" name="splitWrite" ref="0x404b3948" loc="62:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Starts a split-phase SPI data transfer with the given data.</short>
          <long>&#10; Starts a split-phase SPI data transfer with the given data.&#10; A splitRead/splitReadWrite command must follow this command even &#10; if the result is unimportant.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404b37f0" loc="62:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitReadWrite" ref="0x404b0588" loc="74:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns.</short>
          <long>&#10; This command first reads the SPI register and then writes&#10; there the new data, then returns. &#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404b0430" loc="74:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="splitRead" ref="0x404b3e58" loc="68:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.</short>
          <long>&#10; Finishes the split-phase SPI data transfer by waiting till &#10; the write command comletes and returning the received data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x404b0bd0" loc="81:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
          <short>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.</short>
          <long>&#10; This is the standard SpiByte.write command but a little&#10; faster as we should not need to adjust the power state there.&#10; (To be consistent, this command could have be named splitWriteRead).&#10;</long>
        </documentation>
        <interfacedef-ref qname="FastSpiByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404b0a78" loc="81:/opt/tinyos-2.x/tos/interfaces/FastSpiByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4035c550" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4035ca68" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Spi" loc="78:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
      <function command="" provided="0" name="initSlave" ref="0x404bb460" loc="86:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into slave mode.</short>
          <long> Initialize the ATmega128 SPI bus into slave mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPolarity" ref="0x404c2b20" loc="126:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isSpiEnabled" ref="0x404c5ca8" loc="117:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPhase" ref="0x404c1168" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sampleOnTrailing" ref="0x404c1010" loc="128:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="initMaster" ref="0x404bb010" loc="83:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Initialize the ATmega128 SPI bus into master mode.</short>
          <long> Initialize the ATmega128 SPI bus into master mode. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterBit" ref="0x404c3c20" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="isMaster" ref="0x404c3ac8" loc="122:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterrupt" ref="0x404baec8" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="enabled" ref="0x404bad70" loc="113:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="read" ref="0x404bbcf0" loc="97:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Read the SPI data register &#10; </short>
          <long> &#10; Read the SPI data register &#10; @return last data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMasterDoubleSpeed" ref="0x404ca218" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="on" ref="0x404ca0c0" loc="141:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptEnabled" ref="0x404c5338" loc="114:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClock" ref="0x404c1af0" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="speed" ref="0x404c1998" loc="131:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isInterruptPending" ref="0x404c03a8" loc="136:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setClockPolarity" ref="0x404c26d8" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="highWhenIdle" ref="0x404c2580" loc="125:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterDoubleSpeed" ref="0x404c0c70" loc="140:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDataOrder" ref="0x404c3258" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="lsbFirst" ref="0x404c3100" loc="119:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x404ba2b8" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> &#10; Write the SPI data register &#10; </short>
          <long> &#10; Write the SPI data register &#10; @param data   next data byte&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404ba160" loc="103:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableSpi" ref="0x404c5888" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="busOn" ref="0x404c5730" loc="116:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isMasterBitSet" ref="0x404c20f8" loc="123:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClockPhase" ref="0x404c1590" loc="129:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getClock" ref="0x404c1f00" loc="132:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasWriteCollided" ref="0x404c0800" loc="138:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOrderLsbFirst" ref="0x404c3690" loc="120:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sleep" ref="0x404bb888" loc="89:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short> Disable and sleep the ATmega128 SPI bus.</short>
          <long> Disable and sleep the ATmega128 SPI bus. *</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x404ba880" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
          <short>&#10; Interrupt signalling SPI data cycle is complete.</short>
          <long>&#10; Interrupt signalling SPI data cycle is complete. &#10; @param data   data byte from data register&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Spi"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x404ba728" loc="109:/opt/tinyos-2.x/tos/chips/atm128/spi/Atm128Spi.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x404c7010" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x404c7510" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x404368a8" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucbase/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x40435d18" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4040e0f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4056d660" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4056db48" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4043a560" loc="63:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x4043a9a8" loc="69:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x4043ae28" loc="74:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x404396c0" loc="85:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x40441d00" loc="113:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="110:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40441458" loc="102:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4043f390" loc="150:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x40439278" loc="79:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40440158" loc="119:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x404418d8" loc="108:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4Off" ref="0x40440a80" loc="129:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn off LED 4.</short>
          <long>&#10; Turn off LED 4. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4Toggle" ref="0x40440ec8" loc="135:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="131:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Toggle LED 4; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 4; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4043a138" loc="58:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x40441010" loc="96:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x40439b40" loc="91:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led4On" ref="0x404405d8" loc="124:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="121:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Turn on LED 4.</short>
          <long>&#10; Turn on LED 4. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4043fa88" loc="165:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4043f930" loc="165:/opt/tinyos-2.x/tos/platforms/ucbase/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x40427490" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x4059a9a8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x40597010" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x40598c90" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x405987d0" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x4059f618" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x405a3010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x4059f4c0" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x405a3010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x405a02a8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x405a0968" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x405a3010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x405a0810" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x405a3010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x405a0f18" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x405a3010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x406b5850" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x406b56f8" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x406b4730" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x406b45d8" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x406b5010" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x406b5d60" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x406c5478" loc="68:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x406c5018" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x406b7bf0" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x406b7688" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x406d8538" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x406d8158" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x406d70c8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x406d74d8" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x406d88f0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x406d7e48" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x406d7cf0" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x406d8cc0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x406d52c0" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x406d78f8" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <function command="" provided="0" name="send" ref="0x40721ac0" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40721560" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40721778" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40721958" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4071e7a0" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071e440" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4071e620" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40720de8" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4071f7b0" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071f658" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x407204e0" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40720188" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40720380" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x407192a0" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40719148" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40719c70" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40719b18" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x4072fc00" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072f8a0" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4072fa80" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x4072f2b8" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x4072e8f8" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4072e5b8" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4072e798" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4071a5f0" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
              <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071a0a8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4071a288" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4071a468" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x4071bd68" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4071bc10" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x407359c8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40735870" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x40734460" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40734308" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x40739088" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4073bf08" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4072a930" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4072a7d8" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x406f7858" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x406f7ef0" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x406f7d98" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40727238" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40729eb0" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x407270d8" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40729530" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407291c8" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x407293d0" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x40726a28" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407268d0" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4073b580" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4073b250" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4073b420" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x406ae970"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40727dd8" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40727c80" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40739d08" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x407399a8" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40739ba8" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x407375a0" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40745cc0" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40745980" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40745b60" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40740a18" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407406b8" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40740898" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40740158" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40741b38" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x407419e0" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4073f820" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4073f4c8" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4073f6c0" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x40777d28" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40777998" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x40777bc8" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x4077aa80" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x40777388" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40777010" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x40777228" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4079d138" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4079d600" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x4079c818" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x4079c3e0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x407919b0" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x4078a698" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x407a1790" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x407a1638" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x4078abc0" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x4078a168" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4078a010" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x407a1c98" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x407a1138" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x40790aa0" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x4078f090" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x40790490" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x40790338" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x4078f7c8" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4078f670" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x407929c0" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x4078c1c0" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4078c068" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x4078c858" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4078c700" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4084d280" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40836ee0" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4084d120" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x4084b680" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x4084b528" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x4084be88" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4084bb38" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4084bd28" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x4084cac8" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40849d80" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40849830" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40849a20" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40849c18" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x4084b070" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4084c178" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x4084db90" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4084dd80" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x4084c010" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40852728" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x408525d0" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40869010" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40852c58" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40852e60" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408678e0" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408678e0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40867a48" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40867a48"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40863010" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40867a48"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40863a38" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40863538" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40863e38" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40874558" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40875d00" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40872b50" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x408729f8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40872250" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40875488" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x408758c8" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40874158" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40874958" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40874e60" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40874d08" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40872620" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40358cd0" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40356600" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40356138" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4099f7c0" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4099f7c0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x40994038" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40998e28" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x40995010" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x40996c48" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40996e30" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x409967a0" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x409949b0" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x40994480" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x409962e0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x4099fe18" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x4099fcc0" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x409959f8" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x409956b0" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x40995898" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x40998590" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40998438" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40998a60" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x4099eca8" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x409363c0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4099e760" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x409363c0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4099e940" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4099eb40" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x4099e2c8" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x4099e170" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x4099c558" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x409363c0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4099c1a8" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x409363c0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x4099c3f8" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x4099b1a0" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x409363c0"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x4099c9b0" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x409363c0"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4099cb90" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4099cd90" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x4099b030" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x409ac6f8" loc="52:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x409ac250" loc="46:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x409922f8" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x409922f8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40992ca0" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40992908" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x409922f8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x409927b0" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x409922f8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x409b8ca0" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x409b8ca0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x409b8e08" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x409d0138" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x409b3d98" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x409d1ac8" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x409d1778" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          </variable>
          <variable name="dt" ref="0x409d1968" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x409d1270" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x409d05c8" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409b3458" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x409b3300" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409b8e08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409b3938" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x409c2e80" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c2e80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x409d8568" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x409d8410" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409d9090" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x409dac98" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x409d8d40" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409da390" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c2e80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409d9448" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x409d8978" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409d8010" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409da8d0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c2e80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x409da778" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c2e80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409d9810" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409d9bc0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x409c4e38" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c4e38"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x409de568" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x409de410" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409e0090" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409e1370" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c4e38"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409e0448" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x409de978" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x409e1c98" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409de010" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409e18b0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c4e38"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x409e1758" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409c4e38"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409e0810" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409e0bc0" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x409fac08" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409fac08"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x409f32b8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x409f3160" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x409f6e20" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x409f6a40" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x409f6138" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409fac08"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x409f51f0" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x409f36c8" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x409f5d48" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x409f6678" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409fac08"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x409f6520" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x409fac08"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x409f55b8" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409f5968" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x40b17e08" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40b17a20" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40b17ca8" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x40b174e0" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40b170f8" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40b17380" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x40b168d0" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40b16518" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x40b16770" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x40b19e80" loc="43:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x40b18420" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x40afddb8" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40afdc60" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40afa968" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x400324a8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40afa1c0" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x40afa398" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40afa580" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x400324a8"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x40afa7f8" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x40b19010" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:37" alignment="I:1"><struct-ref name="route_entry" ref="0x40afe488"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x40af6e78" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x40af63f8" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:37" alignment="I:1"><struct-ref name="route_entry" ref="0x40afe488"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40af6068" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40af6278" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x40af7b20" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x40affd80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40af79c8" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x40affd80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x40af6a30" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:37" alignment="I:1"><struct-ref name="route_entry" ref="0x40afe488"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x40affd80"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40af68b8" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x40affd80"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x40af7530" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="route_key_t" ref="0x40affd80"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40afcd00" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40afcf10" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="next_hop" ref="0x40af71b8" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x40af73c0" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x40b0f168" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b0f010" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40b0ca90" loc="56:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x40b0c938" loc="56:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x40b0e480" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b0e328" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x40b0f798" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short> &#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b0f640" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40b0fd80" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40b0fc28" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x40b0c588" loc="54:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40b0c168" loc="52:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b0c010" loc="52:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x40b0eaa8" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b0e950" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x40b0a600" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x40b0a010" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x40b0a248" loc="15:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x40b0a498" loc="15:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x40b09980" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b09428" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x40b09618" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="type" ref="0x40b09818" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x40b09010" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x40b0aa30" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4093b318"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x40b0ac20" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="type" ref="0x40b0ae20" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x40b1f1d0" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x40b22bf8" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x40b22e58" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x40b1f068" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40b1d178" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40b1fb68" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40b1fd48" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x40b1d010" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b1f770" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x40b1f618" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40b21ec0" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b21ec0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b40b70" loc="97:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b21ec0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40b1bdd0" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40b1b388" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40b40410" loc="89:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b21ec0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40b402b8" loc="89:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40b21ec0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40b1b898" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x40b8c178" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:20" alignment="I:1"><struct-ref name="ieee154_frame_addr" ref="0x40703e68"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x40b6bb50" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:20" alignment="I:1"><struct-ref name="ieee154_frame_addr" ref="0x40703e68"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x40b6bdb0" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x409498b8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x40b8c010" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40b8a178" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40b8cb10" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40936958"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40b8ccf0" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x40b8a010" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x409491e0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b8c718" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x40b8c5c0" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x40921538"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="resolveAddress" ref="0x40b69888" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue &#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x40703430"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x40703658"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b694a0" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x40b69728" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x40703430"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x40703658"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x40b68170" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match &#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b69de0" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x40b68010" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x40b68918" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x40b68578" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x40b687b8" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x40b85138" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40705520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40b843a8" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40b84010" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40b85e80" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40b859f0" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40706de8"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x40705a78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40b855a0" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x40bd5010" loc="48:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40706de8"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x40705288"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ShortAddressConfig" loc="1:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
      <function command="" provided="0" name="setShortAddr" ref="0x40bd5cb0" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
        <interfacedef-ref qname="ShortAddressConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40bd5b58" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setShortAddrDone" ref="0x40bd3280" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
        <interfacedef-ref qname="ShortAddressConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40bd3128" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40be2090" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be4cc0" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40be4ef8" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40be2b50" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be29f8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40be47e8" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40be4168" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40be4010" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40be90a8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
              <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40beaf10" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x40bec088" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40beff00" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40bea168" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bea010" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40bec9f8" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bec6a0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40bec898" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x40be6380" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be6228" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x40be8780" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be83e8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x40be8620" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x40be7a20" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be78c8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x40be73a8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be7010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x40be7248" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x40be6ca0" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40be6b48" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x40c18d68" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40c18d68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x40c15058" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c17ed8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40c17a10" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40c18d68"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c178b8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x40c173f0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c17298" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c15800" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40c18d68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c15488" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40c156a0" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x40c18d68"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40c02018" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40bddc88" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40bddea0" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x40bf7738" loc="41:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf75e0" loc="41:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40bfaac8" loc="37:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40bf7168" loc="39:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf7010" loc="39:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40bf66d0" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf6330" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40bf6570" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40bf7f08" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf7b68" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40bf7da8" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x40bf5220" loc="49:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40705520"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf50c8" loc="49:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x40bf5990" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40705520"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf5600" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40bf5830" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40705520"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40bf6c40" loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bf6ae8" loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40bf5dd0" loc="53:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40705520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x40c114b8" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c114b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40c11620" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c11620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x40c0a818" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c11620"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c0a6c0" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x40c0b2e0" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c0b188" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x40c11ca8" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c11b50" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c0bda0" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c11620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c0ba30" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40c0bc40" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40c11620"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40c0d010" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40c0d010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40c0d4f0" loc="61:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40c00a90" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40c00530" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40c00748" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40c00928" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40bfcdb0" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bfca50" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40bfcc30" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40bfc4f0" loc="110:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40bfd460" loc="83:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bfd308" loc="83:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40bfde40" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40bfdae8" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40bfdce0" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x40bf2e68" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40bf2988" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40bf2830" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40c183b8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x40c0e010" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c12df0" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x40c1d548" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x40c1fdb0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c1fc58" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x40c3f738" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3f5e0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x40c3e4b8" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3e360" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40c40948" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c407f0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40c1eb30" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c1e9d8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40c3f170" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c40d78" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40c3f010" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x40c40378" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c40010" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40c40218" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x40c3fec0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3fb60" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x40c3fd60" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x40c1bdc0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x40c1a478" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x40c439e8" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c43890" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x40c1ab28" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c1a9d0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x40c43240" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c430e8" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x40c54428" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x40c3bb58" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x407085e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x40c3ba00" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x407085e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40c54010" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x40c3b4c8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x40c548e8" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x407085e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x40c1f010" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c20e70" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x40c248b8" loc="86:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x40c24400" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c24088" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40c242a0" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40c26450" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c262f8" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x40c26b18" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c269c0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x40c25470" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c250f8" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40c25310" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x40c2d578" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40c2dde8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2dac0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40c2dc88" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40c25b88" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c25a30" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x40c32058" loc="131:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c34ed0" loc="131:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x40c34220" loc="120:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c340c8" loc="120:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x40c3a170" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c41dd8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x40c3a010" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x40c39580" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c39428" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x40c304a8" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c30148" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40c30348" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x40c3ae78" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3ad20" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x40c34a18" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c346d8" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x40c348b8" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x40c38510" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c38198" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40c383b0" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x40c31c98" loc="151:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c31b40" loc="151:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x40c3a7d8" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c3a680" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x40c364e8" loc="99:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c36390" loc="99:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x40c38e18" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40c38aa0" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40c38cb8" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x40c58b88" loc="178:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x407057b8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x40c30ad0" loc="162:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c30978" loc="162:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x40c586e8" loc="173:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40705520"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x40c31670" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c31310" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40c31510" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x40c39c30" loc="81:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c39ad8" loc="81:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x40c35bf0" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c358a0" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x40c35a90" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x40c32840" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c324f0" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x40c326e0" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x40c57188" loc="185:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c57030" loc="185:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x40c36cf0" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c369c8" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x40c36b90" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x40c41920" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c417c8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x40c58200" loc="168:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c580a8" loc="168:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x40c32e70" loc="141:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c32d18" loc="141:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x40c353b8" loc="110:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c35260" loc="110:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x40c21b40" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c217e0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x40c219e0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x40c20010" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x40c2ccb0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2cb58" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x40c21310" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c211b8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x40c1c2e0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c1c188" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x40c28bc0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c28a68" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x40c1c7d8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x40c1ce90" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c1cd38" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x40c50b48" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c509f0" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40c51168" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c51010" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c51e80" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40c519c0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c51660" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40c51860" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40c569b0" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c56858" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40c50530" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c503d8" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x40c2b938" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x40c2b438" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2b2e0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x40c2a058" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2bec0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x40c2a708" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40c2a5b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x40c899f0" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x40c86010" loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x40c86650" loc="79:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x40c895f0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x40cb5a70" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40cb32f8" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x40cb5ee0" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40cb5580" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x40cb5218" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x406aebc8"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x40cb5420" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x40dab2c0" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
              <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dab148" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x40daea68" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40dae910" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40dd0168" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40dd0010" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x40dd05e8" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40dd1638" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40dd14e0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40dd1b80" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40dd1a28" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x40dd3010" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40dd6df8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x40dd3cf8" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40dd3ba0" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x40dd36e0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40dd3588" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x40dd23c8" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x40dd2270" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x40dd68d0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x40dd6778" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x406aee28"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x40e47c20" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x40e446a0" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x40e44ce8" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x40e44b90" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x40e431a8" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x40e441a8" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40e436e8" loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x40e46780" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40e46628" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x40e40448" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40e46ef8" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40e46da0" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x40eb5c40" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40eb5c40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x40eaf2d8" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40eb5c40"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40eaf180" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x40eb5c40"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x40ecfea0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ecfd48" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40ed2ae8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ed2990" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x40ecf350" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ecf010" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x40ecf1f0" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40ecf910" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ecf7b8" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x40ee8b30" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40ee89d8" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40ee84f8" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40f5bd70" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40f5bd70"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40f5bed8" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f5bed8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40f8e500" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f5bed8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40f8e3a8" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40f5bed8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x410cc5b8" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410cc460" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x410cc010" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41093e30" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:135" alignment="I:1"><nx_struct-ref name="message_t" ref="0x4070d308"/>
                <typename><typedef-ref name="message_t" ref="0x407210c8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x410c4010" loc="43:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410c4010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x410c2210" loc="73:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410c4010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x410c1168" loc="90:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410c4010"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x410c1010" loc="90:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410c4010"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40038840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40038840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x410c1a60" loc="101:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410c4010"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x410c1908" loc="101:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x410c4db0" loc="65:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x410c28b8" loc="81:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x410c4010"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x410c44b0" loc="50:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x410c48f8" loc="58:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x41302698" loc="43:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x41307ed0" loc="41:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x413022d8" loc="42:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="72:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x412fa2b8" loc="106:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x412fe3e0" loc="81:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x412fa858" loc="111:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
          <short></short>
        </documentation>
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x412fa700" loc="111:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x412fd890" loc="98:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x412fbe68" loc="104:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x412fbd10" loc="104:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x41304bc8" loc="75:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x412fe9c0" loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x412fe868" loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x412fb070" loc="101:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x412fdc50" loc="99:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x412fb8a8" loc="103:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x412fb4f0" loc="103:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x412fb748" loc="103:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x412fd010" loc="87:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x412fee30" loc="87:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x412fd478" loc="94:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x412faf18" loc="113:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x412fadc0" loc="113:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x412fe010" loc="78:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="1:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x413542f8" loc="20:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x41356440" loc="4:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x413562e8" loc="4:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x41356a30" loc="7:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x413568d8" loc="7:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x413556e0" loc="14:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x41355a90" loc="15:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x413548a0" loc="22:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x41354748" loc="22:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x41356e68" loc="9:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x413552e0" loc="11:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x41355ea8" loc="17:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="1:/opt/tinyos-2.x/tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x4131b420" loc="2:/opt/tinyos-2.x/tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:23" alignment="I:1"><struct-ref ref="0x41320678"/>
              <typename><typedef-ref name="parent_t" ref="0x413209c0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x4131b2a8" loc="2:/opt/tinyos-2.x/tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x413168a8" loc="52:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x41316dc0" loc="53:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x41316c68" loc="53:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x413151c8" loc="54:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x4131dd48" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x413171c0" loc="46:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x41317068" loc="46:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x413155a0" loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x413197a0" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x41317620" loc="47:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x413164d0" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x41317a88" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x41317ca8" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x41317ed0" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x41316110" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x41316358" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x41319bc0" loc="45:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x413193b0" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x41319258" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x4131d970" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="newParent" ref="0x413dd648" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x413dd298" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x413e0e38" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ShellCommand" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
      <function command="" provided="0" name="getBuffer" ref="0x41535e38" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="len" ref="0x41535cc0" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eval" ref="0x415358d8" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="argc" ref="0x41535570" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="argv" ref="0x41535758" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x415324d8" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="str" ref="0x415321e0" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41532378" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RegisterShellCommand" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/RegisterShellCommand.nc">
      <function event="" provided="0" name="getCommandName" ref="0x41533498" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/shell/RegisterShellCommand.nc">
        <interfacedef-ref qname="RegisterShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ICMPPing" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
      <function event="" provided="0" name="pingDone" ref="0x4152c380" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ping_rcv" ref="0x4152c010" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="ping_n" ref="0x4152c220" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pingReply" ref="0x4152db68" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="icmp_stats" ref="0x4129f810"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="source" ref="0x4152d7a0" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="stats" ref="0x4152da08" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="icmp_stats" ref="0x4129f810"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ping" ref="0x4152d358" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="target" ref="0x41530da0" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x40937830"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="period" ref="0x4152d010" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x4152d1f0" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
