<nesc xmlns="http://www.tinyos.net/nesC">
  <wiring>
    <wire loc="11:PppRouterC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x404da010"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40517820"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x40517820"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40b53408"/></to>
    </wire>
    <wire loc="14:PppRouterC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x404da358"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409078f8"/></to>
    </wire>
    <wire loc="17:PppRouterC.nc">
      <from><interface-ref name="PppControl" scoped="" ref="0x404dcb08"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b66eb0"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b66eb0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b824a0"/></to>
    </wire>
    <wire loc="20:PppRouterC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b6acc0"/>
      <arguments>
        <value cst="I:32855">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppControlProtocol" scoped="" ref="0x40e65ad8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppControlProtocol" scoped="" ref="0x40e65ad8"/></from>
      <to><interface-ref name="PppControlProtocol" scoped="" ref="0x40e8f030"/></to>
    </wire>
    <wire loc="21:PppRouterC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b6acc0"/>
      <arguments>
        <value cst="I:87">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40e63040"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40e63040"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40e8e2a0"/></to>
    </wire>
    <wire loc="22:PppRouterC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e62290"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b69170"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40b69170"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b95aa0"/></to>
    </wire>
    <wire loc="23:PppRouterC.nc">
      <from><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e62a78"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40b6c520"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40b6c520"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40ca87f8"/></to>
    </wire>
    <wire loc="25:PppRouterC.nc">
      <from><interface-ref name="Ipv6LcpAutomaton" scoped="" ref="0x404f45c0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e63598"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e63598"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40eba9e0"/></to>
    </wire>
    <wire loc="26:PppRouterC.nc">
      <from><interface-ref name="PppIpv6" scoped="" ref="0x404e6010"/></from>
      <to><interface-ref name="PppIpv6" scoped="" ref="0x40e65138"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppIpv6" scoped="" ref="0x40e65138"/></from>
      <to><interface-ref name="PppIpv6" scoped="" ref="0x40e60668"/></to>
    </wire>
    <wire loc="27:PppRouterC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x404f6068"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b69170"/></to>
    </wire>
    <wire loc="34:PppRouterC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40b66348"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40ead518"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40ead518"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40eab730"/></to>
    </wire>
    <wire loc="35:PppRouterC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40b669f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ead0c8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ead0c8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40eab2e0"/></to>
    </wire>
    <wire loc="45:PppRouterC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40ec5b60"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b69170"/></to>
    </wire>
    <wire loc="46:PppRouterC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b6acc0"/>
      <arguments>
        <value cst="I:16463">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40ec5628"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40ec5628"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40ef8b70"/></to>
    </wire>
    <wire loc="50:PppRouterC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40f25d90"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x404e0178"/></to>
    </wire>
    <wire loc="51:PppRouterC.nc">
      <from><interface-ref name="IPControl" scoped="" ref="0x404dc448"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40eae9b0"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40eae9b0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x416a12a8"/></to>
    </wire>
    <wire loc="52:PppRouterC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x404fe2f0"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40ee1770"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x40ee1770"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40f099c0"/></to>
    </wire>
    <wire loc="53:PppRouterC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40505af0"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></to>
    </wire>
    <wire loc="57:PppRouterC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x404fd930"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x41701c50"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x41701c50"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x417a55f8"/></to>
    </wire>
    <wire loc="58:PppRouterC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x416ff4b8"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x40f064b8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="59:PppRouterC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x416ff9e8"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x419050c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4201d8b8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41f41d20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41f4a4c0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41f5a4e0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41ef0d48"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x414f6d90"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x413ff878"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41359b40"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x41e9e6e8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4122c178"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41e2ebd0"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41db54b8"/></to>
    </wire>
    <wire loc="16:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40f88dd0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40edf7c0"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41d09df0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41c8d340"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e60308"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40e3a650"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41c4ac18"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41bcc010"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41b57690"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40be85e8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Uart0Init" scoped="" ref="0x40adb010"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Uart1Init" scoped="" ref="0x40adaab0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40ab1810"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409c7550"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40955f20"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a80c98"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a58758"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40b537a0"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40356b58"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="Scheduler" scoped="" ref="0x40356b58"/></from>
      <to><interface-ref name="Scheduler" scoped="" ref="0x40420738"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40b53d68"/></from>
      <to><interface-ref name="PlatformInit" scoped="" ref="0x413ff218"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="PlatformInit" scoped="" ref="0x40b53d68"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40522c58"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40522c58"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40528010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/system/MainC.nc">
      <from><interface-ref name="SoftwareInit" scoped="" ref="0x40b52240"/></from>
      <to><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x4052a5b8"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4053e228"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x4052ad38"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40904450"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="LedsInit" scoped="" ref="0x405287c0"/></from>
      <to><interface-ref name="LedsInit" scoped="" ref="0x4052ad38"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="McuInit" scoped="" ref="0x40528400"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40531510"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40531510"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x405306d0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="Stm25pInit" scoped="" ref="0x40528b90"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x4051f7a0"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Stm25pOff" scoped="" ref="0x4051f7a0"/></from>
      <to><interface-ref name="Stm25pOff" scoped="" ref="0x40553010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <from><interface-ref name="BatteryWarning" scoped="" ref="0x40527010"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40529cd0"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40529cd0"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x408f96e0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x40531cc8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4075b2d8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41f09808"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41cb6140"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x40842ec0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4068e010"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41a3edf8"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="TimerInit" scoped="" ref="0x40530ec0"/></from>
      <to><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="AdcInit" scoped="" ref="0x4052d298"/></from>
      <to><interface-ref name="AdcInit" scoped="" ref="0x40531cc8"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="RadioInit" scoped="" ref="0x4052d660"/></from>
      <to><interface-ref name="RFA1RadioOff" scoped="" ref="0x4054aa18"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <from><interface-ref name="MeasureClock" scoped="" ref="0x40530af8"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x4053fe58"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <from><interface-ref name="Toggle" scoped="" ref="0x4055c5e0"/></from>
      <to><interface-ref name="Power" scoped="" ref="0x4055bd10"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Power" scoped="" ref="0x4055bd10"/></from>
      <to><interface-ref name="PortD6" scoped="" ref="0x4056d0a0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="CSN" scoped="" ref="0x405558d0"/></from>
      <to><interface-ref name="PortB0" scoped="" ref="0x40561ea8"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB0" scoped="" ref="0x40561ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <from><interface-ref name="Hold" scoped="" ref="0x4055b300"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x405c0438"/></to>
    </wire>
    <wire loc="145:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD6" scoped="" ref="0x4056d0a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG0" scoped="" ref="0x4057e750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a18a0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD1" scoped="" ref="0x40571d08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE3" scoped="" ref="0x405782f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="164:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF3" scoped="" ref="0x405734b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="177:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG5" scoped="" ref="0x4057bce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a18a0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA6" scoped="" ref="0x40562a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF1" scoped="" ref="0x405740a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC2" scoped="" ref="0x405674b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD4" scoped="" ref="0x4056fc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="156:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE6" scoped="" ref="0x40576210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA1" scoped="" ref="0x40557750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB3" scoped="" ref="0x4055fce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC5" scoped="" ref="0x405652f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="146:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD7" scoped="" ref="0x4056da98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF6" scoped="" ref="0x4057f2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG3" scoped="" ref="0x4057c830"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a18a0"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE1" scoped="" ref="0x4056cea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="110:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA4" scoped="" ref="0x40563670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="123:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB6" scoped="" ref="0x4055dc08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG1" scoped="" ref="0x4057d3d0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a18a0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC0" scoped="" ref="0x405680a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="141:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD2" scoped="" ref="0x40570750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE4" scoped="" ref="0x40578ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="165:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF4" scoped="" ref="0x40573ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA7" scoped="" ref="0x405614b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB1" scoped="" ref="0x405608e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC3" scoped="" ref="0x40567ea8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD5" scoped="" ref="0x4056e670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="157:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE7" scoped="" ref="0x40576c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA2" scoped="" ref="0x40556210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB4" scoped="" ref="0x4055e750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="134:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC6" scoped="" ref="0x40565ce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF7" scoped="" ref="0x4057fce8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD0" scoped="" ref="0x40571210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="152:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE2" scoped="" ref="0x4056b8e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="163:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF2" scoped="" ref="0x40574a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG4" scoped="" ref="0x4057b2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a18a0"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA5" scoped="" ref="0x405620a0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB7" scoped="" ref="0x4056a670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF0" scoped="" ref="0x40575670"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="129:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC1" scoped="" ref="0x40568a98"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortD3" scoped="" ref="0x4056f210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x4059df28"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE5" scoped="" ref="0x40577750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortF5" scoped="" ref="0x405728e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a4068"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA0" scoped="" ref="0x4055acb0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB2" scoped="" ref="0x4055f2f0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC4" scoped="" ref="0x405668e0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortG2" scoped="" ref="0x4057ddc8"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405a18a0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="150:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortE0" scoped="" ref="0x4056c4b0"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405997a8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortC7" scoped="" ref="0x40564750"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40590690"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortA3" scoped="" ref="0x40556c08"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x405865c8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <from><interface-ref name="PortB5" scoped="" ref="0x4055d210"/></from>
      <to><interface-ref name="Pin" scoped="" ref="0x40595df0"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Voltage" scoped="" ref="0x408fc568"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x405d44c8"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x405d44c8"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40728ba0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Switch" scoped="" ref="0x40729838"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x405d18f0"/></to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x405d18f0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x405cf0b0"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x408fac88"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x409218f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x409218f8"/></from>
      <to><interface-ref name="PortB5" scoped="" ref="0x4055d210"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x408fb138"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x408fa280"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x4080ce30"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x4080ce30"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x408215d8"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="GeneralIO" scoped="" ref="0x405cfc88"/></from>
      <to><interface-ref name="PortD5" scoped="" ref="0x4056e670"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405d5210"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x405d0330"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x405d0330"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x40702cc8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x406f3cc8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x405e7f20"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x405e7f20"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x419e5b58"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <from><interface-ref name="TimerFrom" scoped="" ref="0x407300c0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x406e2968"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x419e2870"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x419e81f8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x419e81f8"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41a3d270"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x419e3630"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406a4768"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x406a4768"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406b10c0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41a3cc70"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40618e60"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40618e60"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40631e40"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41a39cb8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40624258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x4062d5a8"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x40643be0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40624258"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40639010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40624258"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40636408"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40624258"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40634830"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x4063f010"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c6b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x413f6de8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c6b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40afc598"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c6b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40854478"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c6b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40784ed8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <from><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c6b0"/></from>
      <to><interface-ref name="McuPowerOverride" scoped="" ref="0x40640be8"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40690cf0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4068e448"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x406aa5f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40618e60"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x406b6380"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40690cf0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <from><interface-ref name="fired" scoped="" ref="0x40704658"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <from><interface-ref name="updateFromTimer" scoped="" ref="0x4072e2b8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="6:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40728ba0"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x408f25f0"/></to>
    </wire>
    <wire loc="7:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x408e6280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x4073bde8"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x4073bde8"/></from>
      <to><interface-ref name="VoltageMilliVolts" scoped="" ref="0x408b3578"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408e6e70"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x40738bc8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x40738bc8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a7c170"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x40901530"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x408d6e48"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x408d6e48"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41a7b3f0"/></to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="AdcRaw" scoped="" ref="0x408b2280"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40736c98"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40736c98"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40743480"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="MeasureBridge" scoped="" ref="0x408b2f00"/></from>
      <to><interface-ref name="PortF0" scoped="" ref="0x40575670"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408b1978"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x408b41c8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x408b41c8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40735848"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408b6e88"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40741940"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40735848"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407401b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Resource" scoped="" ref="0x4074f1b8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x4074d618"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x40735d20"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Read" scoped="" ref="0x40743480"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x40824868"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="ReadNow" scoped="" ref="0x4073f958"/></from>
      <to><interface-ref name="ReadNow" scoped="" ref="0x40808390"/></to>
    </wire>
    <wire loc="33:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x408ba1c0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407401b8"/></to>
    </wire>
    <wire loc="34:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408078b8"/></from>
      <to><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40741940"/></to>
    </wire>
    <wire loc="36:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Service" scoped="" ref="0x4082a590"/></from>
      <to><interface-ref name="Read" scoped="" ref="0x408093d8"/></to>
    </wire>
    <wire loc="37:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40807040"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4074bbd8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4074bbd8"/></from>
      <to><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40758b58"/></to>
    </wire>
    <wire loc="38:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x40806088"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x4080ce30"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40747db0"/></from>
      <to><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4075a110"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4074f1b8"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x407a43a0"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x407a43a0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41a57bf0"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x407eea50"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4074d618"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40764dd8"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40749588"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="HplAtm128Adc" scoped="" ref="0x40749588"/></from>
      <to><interface-ref name="HplAtm128Adc" scoped="" ref="0x40788658"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40757648"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4052a5b8"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x407eb9f0"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407586c8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407ea150"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407a4ee8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407a4ee8"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a557b0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x407832a8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x407a4ae0"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41a553a8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x407ee5a0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41a55e48"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41a54338"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x407eea50"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41a54760"/></from>
      <to><interface-ref name="RoundRobinQueue" scoped="" ref="0x41a58a90"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41a53c90"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="AsyncStdControl" scoped="" ref="0x41a9a7f8"/></from>
      <to><interface-ref name="AsyncStdControl" scoped="" ref="0x407eb9f0"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="PowerDownCleanup" scoped="" ref="0x41a9abf0"/></from>
      <to><interface-ref name="PowerDownCleanup" scoped="" ref="0x407ebde8"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a9af08"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407ea150"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x41a995b0"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x407ea7e8"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <from><interface-ref name="acquiredData" scoped="" ref="0x40816c70"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x408320c0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4082f010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x4082d268"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4082cd88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4082cd88"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40840320"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x4083f558"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4083b858"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x4083b858"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4084a878"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Capture" scoped="" ref="0x4084d010"/></from>
      <to><interface-ref name="Capture" scoped="" ref="0x40856470"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40837c28"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareA" scoped="" ref="0x40845978"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40837c28"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareB" scoped="" ref="0x40843d28"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="Compare" scoped="" ref="0x40837c28"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="CompareC" scoped="" ref="0x40859100"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40854868"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <from><interface-ref name="calcTask" scoped="" ref="0x408c9708"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x408d63a8"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41a7c8b0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x408d67b0"/></from>
      <to><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a7ccb8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41a7b8b0"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x408d9328"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41a7bcd8"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41a7d010"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41a792f0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x40904450"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409075b0"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x4091d9c0"/></from>
      <to><interface-ref name="Led0" scoped="" ref="0x40909ae0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40909ae0"/></from>
      <to><interface-ref name="PortE4" scoped="" ref="0x40578ce8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x4091c3c0"/></from>
      <to><interface-ref name="Led1" scoped="" ref="0x40906580"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40906580"/></from>
      <to><interface-ref name="PortE5" scoped="" ref="0x40577750"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x4091cda8"/></from>
      <to><interface-ref name="Led2" scoped="" ref="0x40905010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40905010"/></from>
      <to><interface-ref name="PortE6" scoped="" ref="0x40576210"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x4091b820"/></from>
      <to><interface-ref name="Led3" scoped="" ref="0x409059f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x409059f8"/></from>
      <to><interface-ref name="PortE7" scoped="" ref="0x40576c08"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x409212c0"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40924b98"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="GpioInterrupt" scoped="" ref="0x40924b98"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x40949590"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <from><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x4093aab0"/></from>
      <to><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40935068"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlInt" scoped="" ref="0x40956dd8"/></from>
      <to><interface-ref name="GpioInterrupt" scoped="" ref="0x409212c0"/></to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="ControlPin" scoped="" ref="0x409554f8"/></from>
      <to><interface-ref name="GeneralIO" scoped="" ref="0x409218f8"/></to>
    </wire>
    <wire loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409566f0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40957ad8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40957ad8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409c78e8"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOff" scoped="" ref="0x409511d8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <from><interface-ref name="turnOn" scoped="" ref="0x40954a28"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x409c78e8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x409cec68"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x4095c670"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x40982700"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x40973af0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x40981d68"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40978ac8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40982e40"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40984b10"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409aa4d0"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40987990"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x40981190"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x409c7550"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x409ce8d0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409c23f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x40972060"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x409aa9f8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409c47e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x409a9170"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409c41d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x409c0ea8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="Info" scoped="" ref="0x40b25af8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x409c47e0"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x40a3fd20"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x409c41d8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x40a3f960"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="PacketInfo" scoped="" ref="0x40a8f4d8"/></from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x409c0ea8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x409cc010"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409c23f0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40a8e4a0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409c23f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40aa3978"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x409c23f0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40a8f9c0"/></from>
      <to><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409e6460"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SendBytePacket" scoped="" ref="0x40a8fe98"/></from>
      <to><interface-ref name="SendBytePacket" scoped="" ref="0x409c9390"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialFrameComm" scoped="" ref="0x409e3708"/></from>
      <to><interface-ref name="SerialFrameComm" scoped="" ref="0x40a8bd88"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x409e2010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a8ad98"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40a8ad98"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ab4b00"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40aa30f0"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a962b8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40a962b8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40ab5490"/></to>
    </wire>
    <wire loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="stopDoneTask" scoped="" ref="0x40a13e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="RunTx" scoped="" ref="0x409f1300"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="startDoneTask" scoped="" ref="0x40a156a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <from><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40a11ac0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="receiveTask" scoped="" ref="0x40a8d4b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:13">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <from><interface-ref name="signalSendDone" scoped="" ref="0x40a8d8e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ab40f0"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40ab5010"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartByte" scoped="" ref="0x40ab5010"/></from>
      <to><interface-ref name="UartByte" scoped="" ref="0x40ab0010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40ab5490"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40ab0428"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ab4b00"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ab1b48"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ab5f08"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b35170"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b35170"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b327f0"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40ad0290"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40ab5f08"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartTxControl" scoped="" ref="0x40ab0cc0"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40ae0348"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1TxControl" scoped="" ref="0x40ae0348"/></from>
      <to><interface-ref name="Uart1TxControl" scoped="" ref="0x40adaf00"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUartRxControl" scoped="" ref="0x40ad1190"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40ae0858"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart1RxControl" scoped="" ref="0x40ae0858"/></from>
      <to><interface-ref name="Uart1RxControl" scoped="" ref="0x40afd448"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <from><interface-ref name="HplUart" scoped="" ref="0x40ad15c8"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40ae0d50"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart1" scoped="" ref="0x40ae0d50"/></from>
      <to><interface-ref name="HplUart1" scoped="" ref="0x40afd960"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="HplUart0" scoped="" ref="0x40ae1670"/></from>
      <to><interface-ref name="HplUart0" scoped="" ref="0x40adbea8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0RxControl" scoped="" ref="0x40ae1178"/></from>
      <to><interface-ref name="Uart0RxControl" scoped="" ref="0x40adb990"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Uart0TxControl" scoped="" ref="0x40ae2c50"/></from>
      <to><interface-ref name="Uart0TxControl" scoped="" ref="0x40adb460"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="Atm128Calibrate" scoped="" ref="0x40afc968"/></from>
      <to><interface-ref name="Atm128Calibrate" scoped="" ref="0x4052a5b8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40afb0e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x40afb0e8"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b31ae8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b2e890"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x40b2e890"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40b2add8"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <from><interface-ref name="CounterFrom" scoped="" ref="0x40b27078"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x4082cd88"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40b3ca38"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x40b3c010"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x409c47e0"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40b3c6f0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x409c41d8"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetC.nc">
      <from><interface-ref name="SerialPacketInfo" scoped="" ref="0x409c0ea8"/>
      <arguments>
        <value cst="I:114">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="SerialPacketInfo" scoped="" ref="0x40b3fa28"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <from><interface-ref name="sendAck" scoped="" ref="0x40b3a218"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:14">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x4041f010"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <from><interface-ref name="McuSleep" scoped="" ref="0x4041fc70"/></from>
      <to><interface-ref name="McuSleep" scoped="" ref="0x4035b458"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b65970"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b93588"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b93588"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40ca0da8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40b95aa0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ba8538"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40b63af8"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40b907a8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40b907a8"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40ba99e8"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40ca87f8"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40dca9f0"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b96010"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40b6acc0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40b96908"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40b66348"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40b95010"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40b669f8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppControl" scoped="" ref="0x40b5d798"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40b954c8"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x40b954c8"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x40ba9210"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40b96010"/>
      <arguments>
        <value cst="I:49185">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40ca82a0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40ca82a0"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40ccc260"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40ca61b0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40b95aa0"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40ca6ee0"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b93588"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40ca5c48"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40b907a8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="ProtocolReject" scoped="" ref="0x40b7fef0"/></from>
      <to><interface-ref name="ProtocolReject" scoped="" ref="0x40ca7580"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="ProtocolReject" scoped="" ref="0x40ca7580"/></from>
      <to><interface-ref name="ProtocolReject" scoped="" ref="0x40ccc8c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40b5ea48"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40ca87f8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppProtocolReject" scoped="" ref="0x40b96598"/></from>
      <to><interface-ref name="PppProtocolReject" scoped="" ref="0x40b7dac0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <from><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40ca6908"/></from>
      <to><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b90270"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b90270"/></from>
      <to><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40ba8c90"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40ca0da8"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x41b56660"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppProtocol" scoped="" ref="0x40baad90"/></from>
      <to><interface-ref name="PppProtocol" scoped="" ref="0x40b96010"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="PppProtocolReject" scoped="" ref="0x40b8da28"/></from>
      <to><interface-ref name="PppProtocolReject" scoped="" ref="0x40b96598"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="TransmitFramePool" scoped="" ref="0x40baa278"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40bd4010"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPool" scoped="" ref="0x40bd4010"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40bf6750"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcFraming" scoped="" ref="0x40b87288"/></from>
      <to><interface-ref name="HdlcFraming" scoped="" ref="0x40ca0580"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="HdlcFraming" scoped="" ref="0x40ca0580"/></from>
      <to><interface-ref name="HdlcFraming" scoped="" ref="0x41b57da0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcControl" scoped="" ref="0x40b8de38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40ca0188"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x40ca0188"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41b579a8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x40c30d50"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40b95010"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x40c30778"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40b96908"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x40ba69b0"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x40c96620"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x40c96620"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x40c953a8"/></to>
    </wire>
    <wire loc="413:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="processError_task" scoped="" ref="0x40bbf1e8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:18">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="355:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="processFrame_task" scoped="" ref="0x40bc7530"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="controlEngine_task" scoped="" ref="0x40b9d918"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:15">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <from><interface-ref name="transmitEngine_task" scoped="" ref="0x40bbb198"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:16">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bea300"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="FragmentPoolStorage" scoped="" ref="0x41b1dc28"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <from><interface-ref name="FragmentPool" scoped="" ref="0x40bf6750"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40be8978"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <from><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40c0e1f8"/></from>
      <to><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bea300"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="HdlcUart" scoped="" ref="0x41b594b0"/></from>
      <to><interface-ref name="HdlcUart" scoped="" ref="0x40c30778"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="UartControl" scoped="" ref="0x41b59a88"/></from>
      <to><interface-ref name="UartControl" scoped="" ref="0x40c30d50"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <from><interface-ref name="InputFramePool" scoped="" ref="0x41b59ea0"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x41b53248"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPool" scoped="" ref="0x41b53248"/></from>
      <to><interface-ref name="FragmentPool" scoped="" ref="0x40bf6750"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="522:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <from><interface-ref name="uartStreamSendDone" scoped="" ref="0x41b55260"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:20">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <from><interface-ref name="inputEngine_task" scoped="" ref="0x41b55698"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:19">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <from><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bea300"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="FragmentPoolStorage" scoped="" ref="0x41b79200"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led0" scoped="" ref="0x40c973d0"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led3" scoped="" ref="0x40c9a658"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Green" scoped="" ref="0x40c9ac88"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="128:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Yellow" scoped="" ref="0x40c999a8"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <from><interface-ref name="MultiLed" scoped="" ref="0x40c953a8"/></from>
      <to><interface-ref name="MultiLed" scoped="" ref="0x40c92ba0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led1" scoped="" ref="0x40c979f8"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Red" scoped="" ref="0x40c99370"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Led2" scoped="" ref="0x40c9a030"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/system/LedC.nc">
      <from><interface-ref name="Orange" scoped="" ref="0x40c96010"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c95e48"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <from><interface-ref name="Led" scoped="" ref="0x40c95e48"/></from>
      <to><interface-ref name="Led" scoped="" ref="0x40c8f718"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40c8fd40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40ca7c00"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40d8fe58"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40d8fe58"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x41bcc820"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40dca9f0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x41c47010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40cbfa48"/></from>
      <to><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40ca6908"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40cc0160"/></from>
      <to><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40ca6ee0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppOptions" scoped="" ref="0x40cc0e78"/></from>
      <to><interface-ref name="PppOptions" scoped="" ref="0x40ca5c48"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40d901e8"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AddressControlFieldCompressionOption" scoped="" ref="0x40cc3bb0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40d901e8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="MaximumReceiveUnitOption" scoped="" ref="0x40ccb938"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40d901e8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="AsyncControlCharacterMapOption" scoped="" ref="0x40cca6d0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40cbda70"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40d88480"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40d88480"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x41bf2208"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40d8fe58"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x40d8e370"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureAck" scoped="" ref="0x40d8e370"/></from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x41bccd18"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x40d8e868"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureNak" scoped="" ref="0x40d8e868"/></from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x41bcb250"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x40d8ed60"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureReject" scoped="" ref="0x40d8ed60"/></from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x41bcb748"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x40d8d330"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateRequest" scoped="" ref="0x40d8d330"/></from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x41bcbc40"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40d8d828"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40d8d828"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x41bca170"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ProtocolReject" scoped="" ref="0x40ccc8c8"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40cbfde0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40dca9f0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40d90cf0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40dca9f0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40e72e18"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40d8fe58"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40e71330"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40d8d828"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40e72920"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40d8f960"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40d8f960"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x41bcc328"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40cc1290"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ca61b0"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40d888a8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ca61b0"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40d92a88"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ca61b0"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e72288"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ca61b0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41bce0e8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40d92a88"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x41bce818"/></from>
      <to><interface-ref name="PppProtocolOption" scoped="" ref="0x40d901e8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x41bcd3f0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40d90cf0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41bf2630"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40d888a8"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x41bf2d80"/></from>
      <to><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpOptions" scoped="" ref="0x40e73740"/></from>
      <to><interface-ref name="LcpOptions" scoped="" ref="0x41c47c98"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41c467e8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e72288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x41c46e80"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40e72920"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x41c43e08"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40e72e18"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x41c42330"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40e71330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="RestartTimer" scoped="" ref="0x41c444b0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41c40c70"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41c40c70"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x40e3e820"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="resumeAutomaton_task" scoped="" ref="0x41c42c80"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:21">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="restartTimerFired_task" scoped="" ref="0x41c42848"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:22">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <from><interface-ref name="ClientAlarm" scoped="" ref="0x40e3e820"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e3ab60"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x40e496c0"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x40e77470"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x40e77470"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41c53030"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="AlarmFrom" scoped="" ref="0x41c51d00"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41c57560"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41c57560"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41cb6578"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x41c52aa8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406a4768"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41cb4010"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40618e60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41cb1010"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40624258"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40eba9e0"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x41d06150"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e8c700"/></from>
      <to><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e62a78"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x40e92b70"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="InterfaceIdentifierOption" scoped="" ref="0x40e8f6d8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40e8eef0"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40ec4340"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40ec4340"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x41c8d658"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e8d4e8"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40ebe240"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40ebe240"/></from>
      <to><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x41d1a3c8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40ec4838"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40ec4838"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x41c8db50"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x40ec4d30"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureAck" scoped="" ref="0x40ec4d30"/></from>
      <to><interface-ref name="ConfigureAck" scoped="" ref="0x41c8c060"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x40ec2250"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureNak" scoped="" ref="0x40ec2250"/></from>
      <to><interface-ref name="ConfigureNak" scoped="" ref="0x41c8c558"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x40ec2748"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="ConfigureReject" scoped="" ref="0x40ec2748"/></from>
      <to><interface-ref name="ConfigureReject" scoped="" ref="0x41c8ca50"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x40ec2c40"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateRequest" scoped="" ref="0x40ec2c40"/></from>
      <to><interface-ref name="TerminateRequest" scoped="" ref="0x41c8b010"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40ec1170"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40ec1170"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x41c8b508"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e91690"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40eba9e0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x40eb8e18"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40ec4838"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x40eb7330"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40ec1170"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x40eb8920"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40ec4340"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x40e8d960"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40eba9e0"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e8e7d8"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e62290"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40ebe668"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e62290"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40e92440"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e62290"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40eb8288"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e62290"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41c8f3d0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40e92440"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="PppProtocolOption" scoped="" ref="0x41c8fb00"/></from>
      <to><interface-ref name="PppProtocolOption" scoped="" ref="0x40e92b70"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <from><interface-ref name="LcpAutomaton" scoped="" ref="0x41c8e690"/></from>
      <to><interface-ref name="LcpAutomaton" scoped="" ref="0x40e91690"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41d1a7f0"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ebe668"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <from><interface-ref name="CodeHandler" scoped="" ref="0x41d19010"/></from>
      <to><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="LcpOptions" scoped="" ref="0x40eb9740"/></from>
      <to><interface-ref name="LcpOptions" scoped="" ref="0x41d06dd8"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x41d04948"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40eb8288"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="PppConfigure" scoped="" ref="0x41d03010"/></from>
      <to><interface-ref name="PppConfigure" scoped="" ref="0x40eb8920"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="ConfigureRequest" scoped="" ref="0x41d01010"/></from>
      <to><interface-ref name="ConfigureRequest" scoped="" ref="0x40eb8e18"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="TerminateAck" scoped="" ref="0x41d01508"/></from>
      <to><interface-ref name="TerminateAck" scoped="" ref="0x40eb7330"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <from><interface-ref name="RestartTimer" scoped="" ref="0x41d03628"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41cffdb0"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41cffdb0"/></from>
      <to><interface-ref name="ClientAlarm" scoped="" ref="0x40e3e820"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="resumeAutomaton_task" scoped="" ref="0x41d01e58"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:23">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <from><interface-ref name="restartTimerFired_task" scoped="" ref="0x41d01a20"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:24">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="SerialControl" scoped="" ref="0x40eabe38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40a8ad98"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <from><interface-ref name="UartStream" scoped="" ref="0x40edc2d8"/></from>
      <to><interface-ref name="UartStream" scoped="" ref="0x40a962b8"/></to>
    </wire>
    <wire loc="125:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <from><interface-ref name="streamFeeder_task" scoped="" ref="0x40ed42a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:25">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <from><interface-ref name="Ppp" scoped="" ref="0x40ef5e68"/></from>
      <to><interface-ref name="Ppp" scoped="" ref="0x40ec5b60"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x40ef6558"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x40ef5af0"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <from><interface-ref name="sendBuffer_task" scoped="" ref="0x40ef3b50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:26">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <from><interface-ref name="Putchar" scoped="" ref="0x40edfb40"/></from>
      <to><interface-ref name="Putchar" scoped="" ref="0x40ef6558"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x40f064b8"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x40f268f8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40f0ec98"/></from>
      <to><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40f26148"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPRaw" scoped="" ref="0x40ee12e0"/></from>
      <to><interface-ref name="IPRaw" scoped="" ref="0x40f252a0"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40f0a010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x417a5b38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x40f0a010"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4180fbb0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x40f0de60"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40f0ac88"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x416a18f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x40f06a48"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="RoutingControl" scoped="" ref="0x416a1e08"/></from>
      <to><interface-ref name="RoutingControl" scoped="" ref="0x40f0a010"/></to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubSplitControl" scoped="" ref="0x4169e368"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x414ca528"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x414ca528"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x414c0c78"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="SubIP" scoped="" ref="0x40efdc98"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40f26de8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40f25d90"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </from>
      <to><interface-ref name="IPForward" scoped="" ref="0x40f75c28"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPForward" scoped="" ref="0x40f75c28"/></from>
      <to><interface-ref name="IPForward" scoped="" ref="0x40f78c40"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x40f73e50"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x414cab28"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x414cab28"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x414bf368"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x41689710"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40f0ac88"/>
      <arguments>
        <value cst="I:58">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41688500"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x41689b68"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40fa20d0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40f24370"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40f24d00"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x40f021a8"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x4169e980"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x40f22e60"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x40f1e928"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416c9c28"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x416c9c28"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41f40100"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x416b7c90"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40517820"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x416b4040"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <from><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x40f145e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:27">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x40f756f0"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x40f70200"/></to>
    </wire>
    <wire loc="15:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPLower" scoped="" ref="0x40f70760"/></from>
      <to><interface-ref name="IPLower" scoped="" ref="0x40f73e50"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x40f70c98"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40f6b098"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40f88248"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40f88248"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40fe21e0"/></to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <from><interface-ref name="Ieee154Address" scoped="" ref="0x40fa2ad8"/></from>
      <to><interface-ref name="Ieee154Address" scoped="" ref="0x40f88248"/></to>
    </wire>
    <wire loc="17:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40fdf200"/></from>
      <to><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40fe4948"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <from><interface-ref name="ShortAddressConfig" scoped="" ref="0x40fde3e8"/></from>
      <to><interface-ref name="ShortAddressConfig" scoped="" ref="0x40ffcdb0"/></to>
    </wire>
    <wire loc="24:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="ShortAddressConfig" scoped="" ref="0x40ffcdb0"/></from>
      <to><interface-ref name="ShortAddressConfig" scoped="" ref="0x41025a48"/></to>
    </wire>
    <wire loc="23:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x40ffc740"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41008788"/></to>
    </wire>
    <wire loc="221:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41008788"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412bfac0"/></to>
    </wire>
    <wire loc="22:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x40ffc068"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x410204c0"/></to>
    </wire>
    <wire loc="222:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x410204c0"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x412f4150"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ShortAddressConfig" scoped="" ref="0x41025a48"/></from>
      <to><interface-ref name="ShortAddressConfig" scoped="" ref="0x41031ac8"/></to>
    </wire>
    <wire loc="19:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x41005338"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x40ff31c0"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x40ff31c0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x41187720"/></to>
    </wire>
    <wire loc="18:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x41006450"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x41027788"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x41027788"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x41187228"/></to>
    </wire>
    <wire loc="20:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x41005718"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x410252f8"/></to>
    </wire>
    <wire loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x410252f8"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x410895b0"/></to>
    </wire>
    <wire loc="21:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x40fff1b8"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x41020ae0"/></to>
    </wire>
    <wire loc="201:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x41020ae0"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x4125f918"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412bfac0"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41e6bed8"/></to>
    </wire>
    <wire loc="310:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x410174d8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x41411bf8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x41411bf8"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x413fa010"/></to>
    </wire>
    <wire loc="174:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Notifier" scoped="" ref="0x40ff3690"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x4118d488"/></to>
    </wire>
    <wire loc="162:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x40ff3da0"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116d420"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x4116d420"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x41db37f0"/></to>
    </wire>
    <wire loc="138:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x40ff5888"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x41128010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x41128010"/></from>
      <to><interface-ref name="SendNotifier" scoped="" ref="0x41d76ef0"/></to>
    </wire>
    <wire loc="135:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x40ffa100"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41129088"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMSend" scoped="" ref="0x41129088"/></from>
      <to><interface-ref name="AMSend" scoped="" ref="0x41d76010"/></to>
    </wire>
    <wire loc="137:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x40ff8178"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x41129ba8"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Snoop" scoped="" ref="0x41129ba8"/></from>
      <to><interface-ref name="Snoop" scoped="" ref="0x41d76b30"/></to>
    </wire>
    <wire loc="175:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x41026010"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41210170"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x41210170"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41de9e38"/></to>
    </wire>
    <wire loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForIeee154Message" scoped="" ref="0x41026b70"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x411693b0"/></to>
    </wire>
    <wire loc="308:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x41018010"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x41412888"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x41412888"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x413fdc40"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x412f4150"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x41e654d0"/></to>
    </wire>
    <wire loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40ff67d0"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x4112a930"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x4112a930"/></from>
      <to><interface-ref name="Packet" scoped="" ref="0x41d77850"/></to>
    </wire>
    <wire loc="136:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x40ffaac0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x411297c8"/></to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x411297c8"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41d76750"/></to>
    </wire>
    <wire loc="271:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4100b580"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x413b3378"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x413b3378"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x41ec4ca8"/></to>
    </wire>
    <wire loc="312:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x410118a0"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4140bb78"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4140bb78"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x41402c38"/></to>
    </wire>
    <wire loc="309:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x41019bd0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x4140d3d8"/></to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x4140d3d8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x413f87e0"/></to>
    </wire>
    <wire loc="253:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41025f20"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41349010"/></to>
    </wire>
    <wire loc="172:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x41027098"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x41169a48"/></to>
    </wire>
    <wire loc="142:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x40ff7010"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x411283f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ReceiveDefault" scoped="" ref="0x411283f0"/></from>
      <to><interface-ref name="ReceiveDefault" scoped="" ref="0x41d752e8"/></to>
    </wire>
    <wire loc="230:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x4101b580"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x412eedf8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x412eedf8"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x41e9d248"/></to>
    </wire>
    <wire loc="139:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x40ff7a60"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x4112bd38"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="AMPacket" scoped="" ref="0x4112bd38"/></from>
      <to><interface-ref name="AMPacket" scoped="" ref="0x41d78c40"/></to>
    </wire>
    <wire loc="102:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x4125f918"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x41e1b648"/></to>
    </wire>
    <wire loc="173:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x41027d58"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x4118d170"/></to>
    </wire>
    <wire loc="272:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4100c010"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x413a3b10"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x413a3b10"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x41ec54f0"/></to>
    </wire>
    <wire loc="311:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41012638"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4140b680"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4140b680"/></from>
      <to><interface-ref name="LinkPacketMetadata" scoped="" ref="0x413f6a28"/></to>
    </wire>
    <wire loc="143:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x40ff76f0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x411287d0"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SnoopDefault" scoped="" ref="0x411287d0"/></from>
      <to><interface-ref name="SnoopDefault" scoped="" ref="0x41d756c8"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x41089cd8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41413ed0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x41413ed0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x413fd2a0"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4104e2c8"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x411d2658"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x411d2658"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41dea490"/></to>
    </wire>
    <wire loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x4104b800"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x410ba790"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x4104d480"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x413b3378"/></to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RFA1Packet" scoped="" ref="0x41047a68"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41413ed0"/></to>
    </wire>
    <wire loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x410b9088"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x4140a618"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x4140a618"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x414a5378"/></to>
    </wire>
    <wire loc="130:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41127b60"/></from>
      <to><interface-ref name="ActiveMessageConfig" scoped="" ref="0x41061778"/></to>
    </wire>
    <wire loc="131:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41127330"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x41121718"/></to>
    </wire>
    <wire loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41127828"/></from>
      <to><interface-ref name="TinyosReceive" scoped="" ref="0x41186748"/></to>
    </wire>
    <wire loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41128b48"/></from>
      <to><interface-ref name="TinyosPacket" scoped="" ref="0x41186a80"/></to>
    </wire>
    <wire loc="151:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Resource" scoped="" ref="0x41120150"/></from>
      <to><interface-ref name="Resource" scoped="" ref="0x4116d420"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="155:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41121c40"/></from>
      <to><interface-ref name="TinyosSend" scoped="" ref="0x41186250"/></to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4118d7d0"/></from>
      <to><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x411d2658"/></to>
    </wire>
    <wire loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4118b9e8"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x41187228"/></to>
    </wire>
    <wire loc="169:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4118bee0"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x41187720"/></to>
    </wire>
    <wire loc="170:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4118b250"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41187a58"/></to>
    </wire>
    <wire loc="183:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x411a6280"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4120c410"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4120c410"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41e2e300"/></to>
    </wire>
    <wire loc="184:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x411a6778"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x4125f600"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x4125f600"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x4125dcd0"/></to>
    </wire>
    <wire loc="185:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x411a6ab0"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41210b88"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x41210b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41de8890"/></to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4120f368"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x4125d010"/></to>
    </wire>
    <wire loc="106:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x4125d010"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41e1bce0"/></to>
    </wire>
    <wire loc="195:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41214668"/></from>
      <to><interface-ref name="UniqueConfig" scoped="" ref="0x41033278"/></to>
    </wire>
    <wire loc="196:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4120cd30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x4125f108"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x4125f108"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41e1b170"/></to>
    </wire>
    <wire loc="202:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4125c7a8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41349010"/></to>
    </wire>
    <wire loc="203:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x4125d7d8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412f6170"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x412f6170"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41e664c0"/></to>
    </wire>
    <wire loc="204:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x4125dcd0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412f6668"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x412f6668"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41e669b8"/></to>
    </wire>
    <wire loc="205:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x4125c030"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x412f6980"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x412f6980"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41e66cd0"/></to>
    </wire>
    <wire loc="212:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x412f3d20"/></from>
      <to><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x4105e5c0"/></to>
    </wire>
    <wire loc="213:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412f2230"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41349010"/></to>
    </wire>
    <wire loc="217:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x412f4758"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x412ee010"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x412ee010"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41e9e110"/></to>
    </wire>
    <wire loc="218:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x412f4d30"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x412ee5e8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Send" scoped="" ref="0x412ee5e8"/></from>
      <to><interface-ref name="Send" scoped="" ref="0x41e9ea20"/></to>
    </wire>
    <wire loc="219:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x412f3250"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x412eeae0"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Receive" scoped="" ref="0x412eeae0"/></from>
      <to><interface-ref name="Receive" scoped="" ref="0x41e9ef18"/></to>
    </wire>
    <wire loc="220:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x412f3588"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x413b29f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x413b29f8"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41ec2330"/></to>
    </wire>
    <wire loc="227:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x4133aab8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x413379b8"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x413379b8"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x41e7c1e8"/></to>
    </wire>
    <wire loc="228:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41339010"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4120c8e8"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x4120c8e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41e2e7d8"/></to>
    </wire>
    <wire loc="229:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x4133a340"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x413df468"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x413df468"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x413dc348"/></to>
    </wire>
    <wire loc="234:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41214250"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41337e90"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41337e90"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41e7c6c0"/></to>
    </wire>
    <wire loc="243:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41355330"/></from>
      <to><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4102f118"/></to>
    </wire>
    <wire loc="244:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413362f0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4134a6b8"/></to>
    </wire>
    <wire loc="245:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x413367e8"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x4134ab90"/></to>
    </wire>
    <wire loc="246:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x41336be0"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x410ba790"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="251:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="AckReceivedFlag" scoped="" ref="0x41376e88"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x413ac088"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="252:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x41349e28"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x410ba790"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="254:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41376530"/></from>
      <to><interface-ref name="SoftwareAckConfig" scoped="" ref="0x41037ad0"/></to>
    </wire>
    <wire loc="255:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41349538"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x413667e8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x413667e8"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x413a96a0"/></to>
    </wire>
    <wire loc="256:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41349a30"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41366cc0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41366cc0"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x413a9b98"/></to>
    </wire>
    <wire loc="261:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x413a8bc0"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x410316f8"/></to>
    </wire>
    <wire loc="262:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413a96a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x413dfbe0"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x413dfbe0"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x413dcb60"/></to>
    </wire>
    <wire loc="263:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x413a9b98"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x413de150"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x413de150"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x413da090"/></to>
    </wire>
    <wire loc="264:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubRadioCCA" scoped="" ref="0x413a8010"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x41413a68"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x41413a68"/></from>
      <to><interface-ref name="RadioCCA" scoped="" ref="0x413fedf8"/></to>
    </wire>
    <wire loc="269:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x413b0310"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x4140bb78"/></to>
    </wire>
    <wire loc="270:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x413b0b88"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x413ac650"/></to>
    </wire>
    <wire loc="273:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x413af338"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x413ac088"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="278:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x413ace18"/></from>
      <to><interface-ref name="RadioPacket" scoped="" ref="0x41413ed0"/></to>
    </wire>
    <wire loc="288:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x413d9090"/></from>
      <to><interface-ref name="DummyConfig" scoped="" ref="0x410316f8"/></to>
    </wire>
    <wire loc="289:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413dcb60"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x413d5150"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x413d5150"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x413d2010"/></to>
    </wire>
    <wire loc="290:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x413da090"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41413618"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41413618"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x413fe9a8"/></to>
    </wire>
    <wire loc="291:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x413dc348"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x413d6940"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x413d6940"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x413d3760"/></to>
    </wire>
    <wire loc="300:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubState" scoped="" ref="0x413d3760"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x413ce888"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x413ce888"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x413ffbf8"/></to>
    </wire>
    <wire loc="301:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x413d2010"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x414130c0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x414130c0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x413fe450"/></to>
    </wire>
    <wire loc="306:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41407168"/></from>
      <to><interface-ref name="RFA1DriverConfig" scoped="" ref="0x4103c8f8"/></to>
    </wire>
    <wire loc="307:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x414079f0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x413b3378"/></to>
    </wire>
    <wire loc="314:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x41405280"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x413ac088"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="315:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x41405918"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x413ac088"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="316:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x41404010"/></from>
      <to><interface-ref name="PacketFlag" scoped="" ref="0x413ac088"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x410ba790"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x41d89938"/></to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x41d87150"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x410b9088"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41d85a88"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x410a1220"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41d733f0"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410f8198"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41d75a40"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x41128b48"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41d74250"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x41127330"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41d74748"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x41127828"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41d74a80"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x41127b60"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceRequested" scoped="" ref="0x4116db60"/></from>
      <to><interface-ref name="ResourceRequested" scoped="" ref="0x41db2010"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ArbiterInfo" scoped="" ref="0x4116c010"/></from>
      <to><interface-ref name="ArbiterInfo" scoped="" ref="0x41db2418"/></to>
    </wire>
    <wire loc="101:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="ResourceConfigure" scoped="" ref="0x41db28d8"/></from>
      <to><interface-ref name="ResourceConfigure" scoped="" ref="0x4116c4c0"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <from><interface-ref name="Queue" scoped="" ref="0x41db2d00"/></from>
      <to><interface-ref name="FcfsQueue" scoped="" ref="0x41db57f0"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <from><interface-ref name="grantedTask" scoped="" ref="0x41db1350"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:28">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41de7070"/></from>
      <to><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410f8198"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41de7648"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4120f368"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x41e2deb8"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x41231540"/></to>
    </wire>
    <wire loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <from><interface-ref name="Neighborhood" scoped="" ref="0x41231540"/></from>
      <to><interface-ref name="Neighborhood" scoped="" ref="0x4122c510"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41e2b580"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41e2a9c0"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <from><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41e2a9c0"/></from>
      <to><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4122b010"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41e2d010"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4120cd30"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41e2d508"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x41214250"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <from><interface-ref name="UniqueConfig" scoped="" ref="0x41e2d900"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x41214668"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41e19520"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x4125d7d8"/></to>
    </wire>
    <wire loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41e199f8"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4125c7a8"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41e16240"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x4125c030"/></to>
    </wire>
    <wire loc="109:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <from><interface-ref name="DelayTimer" scoped="" ref="0x41e18010"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41e140a0"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41e140a0"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <from><interface-ref name="send" scoped="" ref="0x41e169f8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:29">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubControl" scoped="" ref="0x41e65ad8"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x412f4758"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41e64170"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x412f4d30"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41e64668"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x412f3250"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41e649a0"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x412f3588"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41e63648"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x412f3d20"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41e63150"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412f2230"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41e63bb0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41e5c3b8"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41e5c3b8"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:3">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41e60d68"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x412caa88"/></to>
    </wire>
    <wire loc="9:/opt/tinyos-2.x/tos/system/SystemLowPowerListeningC.nc">
      <from><interface-ref name="SystemLowPowerListening" scoped="" ref="0x412caa88"/></from>
      <to><interface-ref name="SystemLowPowerListening" scoped="" ref="0x412c76f8"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41e5f3f0"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412c6c70"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <from><interface-ref name="transition" scoped="" ref="0x41e5e3d0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:30">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x41e9d750"/></from>
      <to><interface-ref name="RadioState" scoped="" ref="0x4133a340"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41e9dec8"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x410a1220"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioSend" scoped="" ref="0x41e9c4a0"/></from>
      <to><interface-ref name="RadioSend" scoped="" ref="0x4133aab8"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x41e9c978"/></from>
      <to><interface-ref name="RadioReceive" scoped="" ref="0x41339010"/></to>
    </wire>
    <wire loc="189:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x41e9b270"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:32">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="144:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="stateDoneTask" scoped="" ref="0x41e9b6a8"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:31">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="322:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <from><interface-ref name="deliverTask" scoped="" ref="0x41e9cdb0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:33">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubSend" scoped="" ref="0x41e7cb08"/></from>
      <to><interface-ref name="SubSend" scoped="" ref="0x413362f0"/></to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x41e7bed8"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x41355330"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="SubReceive" scoped="" ref="0x41e7b030"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x413367e8"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="RadioAlarm" scoped="" ref="0x41e7b428"/></from>
      <to><interface-ref name="RadioAlarm" scoped="" ref="0x41336be0"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41e7bac0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x41357e98"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41357e98"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x41354948"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <from><interface-ref name="calcNextRandom" scoped="" ref="0x41e7a4e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:34">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="55:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="SeedInit" scoped="" ref="0x413575d8"/></from>
      <to><interface-ref name="SeedInit" scoped="" ref="0x41354088"/></to>
    </wire>
    <wire loc="54:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <from><interface-ref name="Init" scoped="" ref="0x4135c330"/></from>
      <to><interface-ref name="Init" scoped="" ref="0x41359b40"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413702b0"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x41363060"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x41364150"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x413a8010"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioState" scoped="" ref="0x41366070"/></from>
      <to><interface-ref name="SubState" scoped="" ref="0x41363e68"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x41364548"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x413a8428"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x41364ce0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x413a8bc0"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x41370d40"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x41363b30"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x41370868"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x41363638"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="SubPacket" scoped="" ref="0x41ebf430"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x413b0b88"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x41ec0200"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x413b0310"/></to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="LocalTimeMilli" scoped="" ref="0x41ec0b08"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x413c0b18"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x413c0b18"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x413bc010"/></to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <from><interface-ref name="TimeStampFlag" scoped="" ref="0x41ec2af8"/></from>
      <to><interface-ref name="TimeStampFlag" scoped="" ref="0x413af338"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x413bc9a8"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x406a4768"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413e0618"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x413dd4d8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x413de548"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x413da4a8"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x413de940"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x413da8c0"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x413dd170"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x413d9090"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x413df150"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x413dc010"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x413e0bd0"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x413ddab0"/></to>
    </wire>
    <wire loc="76:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x413d7b70"/></from>
      <to><interface-ref name="SubControl" scoped="" ref="0x413d4938"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioCCA" scoped="" ref="0x413d5a20"/></from>
      <to><interface-ref name="SubRadioCCA" scoped="" ref="0x413d2920"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioPacket" scoped="" ref="0x413d5e18"/></from>
      <to><interface-ref name="SubPacket" scoped="" ref="0x413d2d38"/></to>
    </wire>
    <wire loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="UnconnectedConfig" scoped="" ref="0x413d45d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x413d04f0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="RadioReceive" scoped="" ref="0x413d5628"/></from>
      <to><interface-ref name="SubReceive" scoped="" ref="0x413d2508"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x413d6628"/></from>
      <to><interface-ref name="SubBareReceive" scoped="" ref="0x413d3428"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x413d6150"/></from>
      <to><interface-ref name="SubBareSend" scoped="" ref="0x413d4f10"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="Alarm" scoped="" ref="0x414a5378"/></from>
      <to><interface-ref name="Alarm" scoped="" ref="0x41f09c40"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4140e010"/></from>
      <to><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x413f93f8"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x41402c38"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x414a2058"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Config" scoped="" ref="0x4143a9d0"/></from>
      <to><interface-ref name="Config" scoped="" ref="0x41407168"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TransmitPowerFlag" scoped="" ref="0x414390e0"/></from>
      <to><interface-ref name="TransmitPowerFlag" scoped="" ref="0x41405280"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="RSSIFlag" scoped="" ref="0x41439778"/></from>
      <to><interface-ref name="RSSIFlag" scoped="" ref="0x41405918"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="TimeSyncFlag" scoped="" ref="0x41439e38"/></from>
      <to><interface-ref name="TimeSyncFlag" scoped="" ref="0x41404010"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="PacketTimeStamp" scoped="" ref="0x41438680"/></from>
      <to><interface-ref name="PacketTimeStamp" scoped="" ref="0x414079f0"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="LocalTime" scoped="" ref="0x413f5ea8"/></from>
      <to><interface-ref name="LocalTime" scoped="" ref="0x41402c38"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="SfdCapture" scoped="" ref="0x413f4910"/></from>
      <to><interface-ref name="SfdCapture" scoped="" ref="0x4062d5a8"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="Tasklet" scoped="" ref="0x41437d38"/></from>
      <to><interface-ref name="Tasklet" scoped="" ref="0x410a1220"/></to>
    </wire>
    <wire loc="104:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="BusyWait" scoped="" ref="0x413f53f0"/></from>
      <to><interface-ref name="BusyWait" scoped="" ref="0x4080ce30"/></to>
    </wire>
    <wire loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <from><interface-ref name="McuPowerState" scoped="" ref="0x41435398"/></from>
      <to><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <from><interface-ref name="Counter" scoped="" ref="0x414a29f0"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40690cf0"/></to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCounter" scoped="" ref="0x41f07640"/></from>
      <to><interface-ref name="Counter" scoped="" ref="0x40618e60"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <from><interface-ref name="AtmegaCompare" scoped="" ref="0x41f055e8"/></from>
      <to><interface-ref name="Compare" scoped="" ref="0x40624258"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="58:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x414c8010"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x414bf9f8"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x414be568"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40517820"/></to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="RadioControl" scoped="" ref="0x414be9b0"/></from>
      <to><interface-ref name="RadioControl" scoped="" ref="0x40ffc740"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BarePacket" scoped="" ref="0x414bd098"/></from>
      <to><interface-ref name="BarePacket" scoped="" ref="0x41005718"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BareSend" scoped="" ref="0x414bd788"/></from>
      <to><interface-ref name="BareSend" scoped="" ref="0x41006450"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="BareReceive" scoped="" ref="0x414bdcd0"/></from>
      <to><interface-ref name="BareReceive" scoped="" ref="0x41005338"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x414bb010"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x40ffc068"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x414b9868"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x40fff1b8"/></to>
    </wire>
    <wire loc="88:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x414b9408"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x416566a8"/></to>
    </wire>
    <wire loc="30:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <from><interface-ref name="ReadLqi" scoped="" ref="0x416566a8"/></from>
      <to><interface-ref name="ReadLqi" scoped="" ref="0x41650408"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x414f7dc8"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x412c6c70"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="ExpireTimer" scoped="" ref="0x414adbc8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41655360"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41655360"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:4">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="FragPool" scoped="" ref="0x414bb770"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4167f828"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x4167f828"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41eef108"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendEntryPool" scoped="" ref="0x414b5598"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41668b60"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x41668b60"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41f5a888"/></to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendInfoPool" scoped="" ref="0x414bae40"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x416a7468"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x416a7468"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x41f4a868"/></to>
    </wire>
    <wire loc="100:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x414aef20"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x41665928"/></to>
    </wire>
    <wire loc="103:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <from><interface-ref name="NeighborDiscovery" scoped="" ref="0x414bc110"/></from>
      <to><interface-ref name="NeighborDiscovery" scoped="" ref="0x40f70200"/></to>
    </wire>
    <wire loc="642:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <from><interface-ref name="sendTask" scoped="" ref="0x4161e5e0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:35">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="31:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <from><interface-ref name="SubLqi" scoped="" ref="0x416509c8"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x416430e0"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketLinkQuality" scoped="" ref="0x416430e0"/></from>
      <to><interface-ref name="PacketLinkQuality" scoped="" ref="0x41019bd0"/></to>
    </wire>
    <wire loc="32:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <from><interface-ref name="SubRssi" scoped="" ref="0x4164fd50"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x41641918"/></to>
    </wire>
    <wire loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketRSSI" scoped="" ref="0x41641918"/></from>
      <to><interface-ref name="PacketRSSI" scoped="" ref="0x410174d8"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SplitControl" scoped="" ref="0x41653400"/></from>
      <to><interface-ref name="SplitControl" scoped="" ref="0x41008788"/></to>
    </wire>
    <wire loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SendResource" scoped="" ref="0x41647ec0"/></from>
      <to><interface-ref name="SendResource" scoped="" ref="0x40ff3da0"/></to>
    </wire>
    <wire loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="SendNotifier" scoped="" ref="0x416485e0"/></from>
      <to><interface-ref name="Ieee154Notifier" scoped="" ref="0x40ff3690"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Packet" scoped="" ref="0x41647430"/></from>
      <to><interface-ref name="PacketForIeee154Message" scoped="" ref="0x41026b70"/></to>
    </wire>
    <wire loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Packet" scoped="" ref="0x41648980"/></from>
      <to><interface-ref name="Ieee154Packet" scoped="" ref="0x41026010"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTransmitPower" scoped="" ref="0x41642530"/></from>
      <to><interface-ref name="PacketTransmitPower" scoped="" ref="0x41018010"/></to>
    </wire>
    <wire loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="LowPowerListening" scoped="" ref="0x41646be8"/></from>
      <to><interface-ref name="LowPowerListening" scoped="" ref="0x410204c0"/></to>
    </wire>
    <wire loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4163e8e0"/></from>
      <to><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4100b580"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="LocalTimeRadio" scoped="" ref="0x4163fd28"/></from>
      <to><interface-ref name="LocalTimeRadio" scoped="" ref="0x410118a0"/></to>
    </wire>
    <wire loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41646660"/></from>
      <to><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41025f20"/></to>
    </wire>
    <wire loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Send" scoped="" ref="0x41653a28"/></from>
      <to><interface-ref name="Ieee154Send" scoped="" ref="0x41027098"/></to>
    </wire>
    <wire loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketLink" scoped="" ref="0x41645298"/></from>
      <to><interface-ref name="PacketLink" scoped="" ref="0x41020ae0"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="RadioChannel" scoped="" ref="0x416459b0"/></from>
      <to><interface-ref name="RadioChannel" scoped="" ref="0x4101b580"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="Ieee154Receive" scoped="" ref="0x41648248"/></from>
      <to><interface-ref name="Ieee154Receive" scoped="" ref="0x41027d58"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <from><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4163b2a8"/></from>
      <to><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4100c010"/></to>
    </wire>
    <wire loc="60:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x417a55f8"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x4182da78"/></to>
    </wire>
    <wire loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x417017e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x417a5b38"/></to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x417017e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x416fb3f8"/></to>
    </wire>
    <wire loc="59:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x417017e8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4180fbb0"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x4180fbb0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4186d230"/></to>
    </wire>
    <wire loc="90:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x416fb3f8"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x41729938"/></to>
    </wire>
    <wire loc="61:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="StdControl" scoped="" ref="0x417a5b38"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x4182c010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x416fbba8"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x418c2750"/></to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x418c2750"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x4200c268"/></to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <from><interface-ref name="ICMP_RA" scoped="" ref="0x4180c9b0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x418c2750"/></to>
    </wire>
    <wire loc="89:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRank" scoped="" ref="0x416f4468"/></from>
      <to><interface-ref name="RPLRankInfo" scoped="" ref="0x4172a970"/></to>
    </wire>
    <wire loc="91:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO_Filter" scoped="" ref="0x416fe6d0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x41729df0"/></to>
    </wire>
    <wire loc="92:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x41728ed0"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x416fbba8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="94:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41726a40"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="95:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RouteInfo" scoped="" ref="0x41720cf8"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x417a2010"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRoutingEngine" scoped="" ref="0x417a2010"/></from>
      <to><interface-ref name="RPLRouteInfo" scoped="" ref="0x4182c428"/></to>
    </wire>
    <wire loc="96:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x41725a10"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="98:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingEvents" scoped="" ref="0x4171fbc8"/></from>
      <to><interface-ref name="ForwardingEvents" scoped="" ref="0x40f064b8"/>
      <arguments>
        <value cst="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="99:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x41727338"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></to>
    </wire>
    <wire loc="111:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLOF" scoped="" ref="0x41719d48"/></from>
      <to><interface-ref name="RPLOF" scoped="" ref="0x418e7d00"/></to>
    </wire>
    <wire loc="112:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x418e4828"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40ee1770"/></to>
    </wire>
    <wire loc="113:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLRoute" scoped="" ref="0x418e3030"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x417a2010"/></to>
    </wire>
    <wire loc="114:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="ParentTable" scoped="" ref="0x418e3e28"/></from>
      <to><interface-ref name="RPLParentTable" scoped="" ref="0x41728b00"/></to>
    </wire>
    <wire loc="115:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <from><interface-ref name="RPLDAO" scoped="" ref="0x418e22d0"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4180c120"/></to>
    </wire>
    <wire loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4180c120"/></from>
      <to><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x4186ecc0"/></to>
    </wire>
    <wire loc="362:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <from><interface-ref name="newParentSearch" scoped="" ref="0x417479a0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:36">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="64:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIO" scoped="" ref="0x4182b1a0"/></from>
      <to><interface-ref name="IP_DIO_Filter" scoped="" ref="0x416fe6d0"/></to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IP_DIS" scoped="" ref="0x4182b5b8"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x4189b8e0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="TrickleTimer" scoped="" ref="0x4182ba60"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x4181aa88"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4181aa88"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:5">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="InitDISTimer" scoped="" ref="0x41828ce0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41817908"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41817908"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:6">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x41822220"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x41357e98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLRankInfo" scoped="" ref="0x41822638"/></from>
      <to><interface-ref name="RPLRank" scoped="" ref="0x416f4468"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x41821550"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41821e88"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RankControl" scoped="" ref="0x41820db0"/></from>
      <to><interface-ref name="StdControl" scoped="" ref="0x416fb3f8"/></to>
    </wire>
    <wire loc="73:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4181f270"/></from>
      <to><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4180c120"/></to>
    </wire>
    <wire loc="74:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <from><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x41824030"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41813780"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41813780"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:7">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="167:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="computeRemaining" scoped="" ref="0x4181f788"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:41">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="121:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="init" scoped="" ref="0x4181d010"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:39">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="120:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDISTask" scoped="" ref="0x4181d448"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:38">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="122:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="initDIO" scoped="" ref="0x4181fbc0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:40">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="119:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <from><interface-ref name="sendDIOTask" scoped="" ref="0x4181d880"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:37">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="63:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IP_DAO" scoped="" ref="0x418bf250"/></from>
      <to><interface-ref name="ICMP_RA" scoped="" ref="0x4180c9b0"/>
      <arguments>
        <value cst="I:2">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="65:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="DelayDAOTimer" scoped="" ref="0x4186d708"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x418b3378"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x418b3378"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:8">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="66:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="GenerateDAOTimer" scoped="" ref="0x41868c38"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x418af188"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x418af188"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:9">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="67:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RemoveTimer" scoped="" ref="0x4186a9b8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x418ac010"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x418ac010"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:10">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Random" scoped="" ref="0x418c0df0"/></from>
      <to><interface-ref name="Random" scoped="" ref="0x41357e98"/></to>
    </wire>
    <wire loc="69:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x418bf648"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="70:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RPLRouteInfo" scoped="" ref="0x418b90b0"/></from>
      <to><interface-ref name="RPLRoutingEngine" scoped="" ref="0x417a2010"/></to>
    </wire>
    <wire loc="71:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="RootControl" scoped="" ref="0x418b9d68"/></from>
      <to><interface-ref name="RootControl" scoped="" ref="0x417a55f8"/></to>
    </wire>
    <wire loc="72:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x418b8868"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40ee1770"/></to>
    </wire>
    <wire loc="75:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendQueue" scoped="" ref="0x418be070"/></from>
      <to><interface-ref name="Queue" scoped="" ref="0x418a6570"/></to>
    </wire>
    <wire loc="78:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="SendPool" scoped="" ref="0x418bcbf0"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x418a2178"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <from><interface-ref name="Pool" scoped="" ref="0x418a2178"/></from>
      <to><interface-ref name="Pool" scoped="" ref="0x4201dc60"/></to>
    </wire>
    <wire loc="81:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="IPPacket" scoped="" ref="0x418b8310"/></from>
      <to><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></to>
    </wire>
    <wire loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x418b8f00"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="107:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="sendDAO" scoped="" ref="0x418b62b0"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:42">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="190:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <from><interface-ref name="initDAO" scoped="" ref="0x418b7e50"/></from>
      <to><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/>
      <arguments>
        <value cst="I:43">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="40:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x4189b8e0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x42014e80"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x420122e0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x416892c0"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <from><interface-ref name="RA" scoped="" ref="0x4200c6b0"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x416892c0"/>
      <arguments>
        <value cst="I:155">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x41937898"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x41912840"/></to>
    </wire>
    <wire loc="8:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x41912840"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x4190bd30"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="47:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="Leds" scoped="" ref="0x41937e80"/></from>
      <to><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></to>
    </wire>
    <wire loc="49:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="ICMPPing" scoped="" ref="0x4192fa50"/></from>
      <to><interface-ref name="ICMPPing" scoped="" ref="0x4190f8c0"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="57:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellC.nc">
      <from><interface-ref name="Boot" scoped="" ref="0x41937560"/></from>
      <to><interface-ref name="Boot" scoped="" ref="0x40517820"/></to>
    </wire>
    <wire loc="11:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="BlipStatistics" scoped="" ref="0x4190a4f8"/></from>
      <to><interface-ref name="BlipStatistics" scoped="" ref="0x419055c0"/></to>
    </wire>
    <wire loc="10:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="UDP" scoped="" ref="0x4190bd30"/></from>
      <to><interface-ref name="UDP" scoped="" ref="0x41908a88"/></to>
    </wire>
    <wire loc="14:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IP" scoped="" ref="0x419040e0"/></from>
      <to><interface-ref name="IP" scoped="" ref="0x40f0de60"/>
      <arguments>
        <value cst="I:17">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="15:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x41904558"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="48:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="ICMPPing" scoped="" ref="0x4190f8c0"/></from>
      <to><interface-ref name="ICMPPing" scoped="" ref="0x41957560"/></to>
    </wire>
    <wire loc="50:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="IP_ECHO" scoped="" ref="0x41952e70"/></from>
      <to><interface-ref name="ICMP_IP" scoped="" ref="0x416892c0"/>
      <arguments>
        <value cst="I:129">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="51:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="PingTimer" scoped="" ref="0x41957bf0"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x41956a30"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x41956a30"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:11">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <from><interface-ref name="IPAddress" scoped="" ref="0x419512f0"/></from>
      <to><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></to>
    </wire>
    <wire loc="41:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdC.nc">
      <from><interface-ref name="ShellCommand" scoped="" ref="0x41913830"/></from>
      <to><interface-ref name="ShellCommand" scoped="" ref="0x419d66b8"/></to>
    </wire>
    <wire loc="13:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <from><interface-ref name="ShellCommand" scoped="" ref="0x419d66b8"/></from>
      <to><interface-ref name="ShellCommand" scoped="" ref="0x41938220"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="42:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdC.nc">
      <from><interface-ref name="ForwardingTable" scoped="" ref="0x41913dc0"/></from>
      <to><interface-ref name="ForwardingTable" scoped="" ref="0x40ee1770"/></to>
    </wire>
    <wire loc="45:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x4198f5f8"/></from>
      <to><interface-ref name="Timer" scoped="" ref="0x419d5c70"/></to>
    </wire>
    <wire loc="52:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <from><interface-ref name="Timer" scoped="" ref="0x419d5c70"/></from>
      <to><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/>
      <arguments>
        <value cst="I:12">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
    <wire loc="12:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <from><interface-ref name="RegisterShellCommand" scoped="" ref="0x42000210"/></from>
      <to><interface-ref name="RegisterShellCommand" scoped="" ref="0x419371d8"/>
      <arguments>
        <value cst="I:0">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </value>
      </arguments>
      </to>
    </wire>
  </wiring>
  <components>
    <component qname="PppRouterP" loc="12:PppRouterP.nc">
      <module/>
    </component>
    <component qname="MainC" loc="56:/opt/tinyos-2.x/tos/system/MainC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <configuration/>
    </component>
    <component qname="PlatformP" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc" safe="">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="McuInitC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc" safe="">
      <configuration/>
    </component>
    <component qname="McuInitP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc" safe="">
      <module/>
    </component>
    <component qname="MeasureClockC" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <documentation loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
        <short>&#10; Measure cpu clock frequency at boot time.</short>
        <long>&#10; Measure cpu clock frequency at boot time. Provides an Atm128Calibrate&#10; interface so that other components can adjust their calibration as&#10; needed.&#10;&#10; @author David Gay&#10; @author Janos Sallai&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioOffP" loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <module/>
    </component>
    <component qname="Stm25pOffC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <configuration/>
    </component>
    <component qname="Stm25pOffP" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <module/>
    </component>
    <component qname="HplStm25pPinsC" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
        <short>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.</short>
        <long>&#10; HPL implementation of general-purpose I/O for a ST M25P chip&#10; connected to a TI MSP430.&#10;&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-11-18 23:16:35 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOC.PortA" loc="36(AtmegaGeneralIOC.PortA):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="0">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:34">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:33">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:32">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortB" loc="36(AtmegaGeneralIOC.PortB):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="1">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:37">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:36">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:35">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortC" loc="36(AtmegaGeneralIOC.PortC):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="2">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:40">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:39">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:38">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortD" loc="36(AtmegaGeneralIOC.PortD):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="3">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:43">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:42">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:41">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortE" loc="36(AtmegaGeneralIOC.PortE):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="4">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:46">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:45">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:44">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortF" loc="36(AtmegaGeneralIOC.PortF):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="5">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:49">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:48">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:47">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="AtmegaGeneralIOC.PortG" loc="36(AtmegaGeneralIOC.PortG):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <instance number="6">
        <component-ref qname="AtmegaGeneralIOP"/>
        <arguments>
          <value cst="I:52">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:51">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
          <value cst="I:50">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplStm25pPinsC.NoPinC" loc="16(HplStm25pPinsC.NoPinC):/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="NoPinC"/>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <configuration/>
    </component>
    <component qname="BatterySwitchC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <configuration/>
    </component>
    <component qname="BatterySwitchP" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <module/>
    </component>
    <component qname="BatterySwitchC.TimerMilliC" loc="44(BatterySwitchC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C" loc="37(TimerMilliP.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="0">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C" loc="37(TimerMilliP.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="1">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1TimerMacC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1TimerMacP" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc" safe="">
      <module/>
    </component>
    <component qname="McuSleepC" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
        <short>&#10; </short>
        <long>&#10; @author Philip Levis&#10; @author Robert Szewczyk&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Counter62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <configuration/>
    </component>
    <component qname="Counter62khz32C.AtmegaCounterP" loc="35(Counter62khz32C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="0">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:48">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMilli32C.TransformCounterC" loc="54(CounterMilli32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmMilli32C.TransformAlarmC" loc="51(TimerMilliP.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.AlarmToTimerC" loc="46(TimerMilliP.AlarmToTimerC):/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AlarmToTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="TimerMilliP.VirtualizeTimerC" loc="46(TimerMilliP.VirtualizeTimerC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeTimerC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <value cst="I:13">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningC.VoltageC" loc="1(BatteryWarningC.VoltageC):/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <instance number="0">
        <component-ref qname="VoltageC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <configuration/>
    </component>
    <component qname="SingleVoltageC" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SingleVoltageC.AdcReadClientC" loc="21(SingleVoltageC.AdcReadClientC):/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AdcReadClientC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="WireAdcP" loc="17:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
        <short>&#10; Support component for AdcReadClientC and AdcReadNowClientC.</short>
        <long>&#10; Support component for AdcReadClientC and AdcReadNowClientC.&#10;&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcC" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <documentation loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
        <short>&#10; HAL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HAL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128AdcP" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc" safe="">
      <documentation loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
        <short>&#10; Internal component of the Atmega128 A/D HAL.</short>
        <long>&#10; Internal component of the Atmega128 A/D HAL.&#10;&#10; @author Jason Hill&#10; @author David Gay&#10; @author Philip Levis&#10; @author Phil Buonadonna&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10; @author Andras Biro &#60;bbandi86@gmail.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplAtm128AdcC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
        <short>&#10; HPL for the Atmega128 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega128 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128AdcP" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc" safe="">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
        <short>&#10; HPL for the Atmega1281 A/D conversion susbsystem.</short>
        <long>&#10; HPL for the Atmega1281 A/D conversion susbsystem.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter" loc="89(Atm128AdcC.AdcArbiter):/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RoundRobinArbiterC"/>
        <arguments>
          <value cst="S:atm128adc.resource">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Queue" loc="42(Atm128AdcC.AdcArbiter.Queue):/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <instance number="0">
        <component-ref qname="RoundRobinResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.AdcArbiter.Arbiter" loc="52(Atm128AdcC.AdcArbiter.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="Atm128AdcC.PM" loc="67(Atm128AdcC.PM):/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncStdControlPowerManagerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="Atm128AdcC.PM.PowerManager" loc="58(Atm128AdcC.PM.PowerManager):/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="AsyncPowerManagerP"/>
      </instance>
      <module/>
    </component>
    <component qname="AdcP" loc="46:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc" safe="">
      <documentation loc="39:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
        <short>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.</short>
        <long>&#10; Convert ATmega128 HAL A/D interface to the HIL interfaces.&#10; @author David Gay&#10; @author Jan Hauer &#60;hauer@tkn.tu-berlin.de>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="BusyWaitMicroC" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <configuration/>
    </component>
    <component qname="BusyWaitMicroC.BusyWaitCounterC" loc="51(BusyWaitMicroC.BusyWaitCounterC):/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="BusyWaitCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BusyWaitMicroC.CounterMicro16C" loc="54(BusyWaitMicroC.CounterMicro16C):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu16C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu16C.AtmegaCounterP" loc="35(CounterMcu16C.AtmegaCounterP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCounterP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="HplAtmRfa1Timer1C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmRfa1Timer1P" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc" safe="">
      <module/>
    </component>
    <component qname="WireAdcP.ArbitrateRead" loc="23(WireAdcP.ArbitrateRead):/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="ArbitratedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageP" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
        <short>&#10; Battery Voltage.</short>
        <long>&#10; Battery Voltage. The returned value represents the difference&#10; between the battery voltage and V_BG (1.23V). The formula to convert&#10; it to mV is: 1223 * 1024 / value.&#10;&#10; @author Razvan Musaloiu-E.&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SingleVoltageC.TimerMilliC" loc="44(SingleVoltageC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC" loc="89(VoltageArbiterP.FcfsArbiterC):/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsArbiterC"/>
        <arguments>
          <value cst="S:UcminiVoltage.read">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC.Queue" loc="42(VoltageArbiterP.FcfsArbiterC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageArbiterP.FcfsArbiterC.Arbiter" loc="52(VoltageArbiterP.FcfsArbiterC.Arbiter):/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="ArbiterP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="VoltageArbiterP.MultiplexedReadC" loc="18(VoltageArbiterP.MultiplexedReadC):/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
        <short>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.</short>
        <long>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MultiplexedReadC"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="BatteryWarningP" loc="8:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <module/>
    </component>
    <component qname="LedsC" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10; @author Jan Beutel&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedsC" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <configuration/>
    </component>
    <component qname="LedsP" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc" safe="">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
        <short>&#10; The implementation of the standard 3 LED mote abstraction.</short>
        <long>&#10; The implementation of the standard 3 LED mote abstraction.&#10;&#10; @author Joe Polastre&#10; @author Philip Levis&#10;&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="HplSerialAutoControlC" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="AtmegaPinChange0C" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <configuration/>
    </component>
    <component qname="HplAtmegaPinChange0C" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <module/>
    </component>
    <component qname="AtmegaPinChange0C.AtmegaPinChangeP" loc="50(AtmegaPinChange0C.AtmegaPinChangeP):/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <instance number="0">
        <component-ref qname="AtmegaPinChangeP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialAutoControlP" loc="33:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
        <short> Copyright (c) 2011, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2011, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Andras Biro&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialActiveMessageC" loc="44:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialActiveMessageC.AM" loc="45(SerialActiveMessageC.AM):/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialActiveMessageP"/>
      </instance>
      <module/>
    </component>
    <component qname="SerialDispatcherC" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
        <short>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component.</short>
        <long>&#10; This component provides functionality to send many different kinds&#10; of serial packets on top of a general packet sending component. It&#10; achieves this by knowing where the different packets in a message_t&#10; exist through the SerialPacketInfo interface.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SerialP" loc="62:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <module/>
    </component>
    <component qname="SerialDispatcherC.SerialDispatcherP" loc="48(SerialDispatcherC.SerialDispatcherP):/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SerialDispatcherP"/>
      </instance>
      <module/>
    </component>
    <component qname="HdlcTranslateC" loc="47:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PlatformSerialC" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.3 $ $Date: 2010-10-26 09:27:59 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C" loc="38:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.1 $ $Date: 2010-06-16 21:45:58 $&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="Atm128Uart1C.UartP" loc="47(Atm128Uart1C.UartP):/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="Atm128UartP"/>
      </instance>
      <module/>
    </component>
    <component qname="HplAtm128UartC" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
        <short>&#10; HPL for the Atmega 128 serial ports.</short>
        <long>&#10; HPL for the Atmega 128 serial ports.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="HplAtm128UartP" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <documentation loc="102:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
        <short> &#10; Private component of the Atmega1281 serial port HPL.</short>
        <long> &#10; Private component of the Atmega1281 serial port HPL.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author David Gay&#10; @author Janos Sallai &#60;janos.sallai@vanderbilt.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="CounterMicro32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMicro32C.TransformCounterC" loc="54(CounterMicro32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="CounterMcu32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <configuration/>
    </component>
    <component qname="CounterMcu32C.TransformCounterC" loc="54(CounterMcu32C.TransformCounterC):/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TransformCounterC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="SerialPacketInfoActiveMessageP" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="SerialResetP" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
        <short> Copyright (c) 2010, University of Szeged&#10; All rights reserved.</short>
        <long> Copyright (c) 2010, University of Szeged&#10; All rights reserved.&#10;&#10; Redistribution and use in source and binary forms, with or without&#10; modification, are permitted provided that the following conditions&#10; are met:&#10;&#10; - Redistributions of source code must retain the above copyright&#10; notice, this list of conditions and the following disclaimer.&#10; - Redistributions in binary form must reproduce the above&#10; copyright notice, this list of conditions and the following&#10; disclaimer in the documentation and/or other materials provided&#10; with the distribution.&#10; - Neither the name of University of Szeged nor the names of its&#10; contributors may be used to endorse or promote products derived&#10; from this software without specific prior written permission.&#10;&#10; THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10; &#34;AS IS&#34; AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10; LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS&#10; FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE&#10; COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT,&#10; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES&#10; (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR&#10; SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION)&#10; HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT,&#10; STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)&#10; ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED&#10; OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10; Author: Miklos Maroti&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RealMainP" loc="56:/opt/tinyos-2.x/tos/system/RealMainP.nc" safe="">
      <documentation loc="49:/opt/tinyos-2.x/tos/system/RealMainP.nc">
        <short>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.</short>
        <long>&#10; RealMain implements the TinyOS boot sequence, as documented in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 17 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="TinySchedulerC" loc="46:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
        <short>&#10; The TinyOS scheduler.</short>
        <long>&#10; The TinyOS scheduler. It provides two interfaces: Scheduler,&#10; for TinyOS to initialize and run tasks, and TaskBasic, the simplext&#10; class of TinyOS tasks (reserved always at-most-once posting,&#10; FIFO, parameter-free). For details and information on how to&#10; replace the scheduler, refer to TEP 106.&#10;&#10; @author  Phil Levis&#10; @date    August 7 2005&#10; @see     TEP 106: Tasks and Schedulers&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="SchedulerBasicP" loc="54:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc" safe="">
      <module/>
    </component>
    <component qname="PppDaemonC" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
        <short> A complete PPP daemon: the basic PPP infrastructure with an&#10; instance of Link Control Protocol already linked in.</short>
        <long> A complete PPP daemon: the basic PPP infrastructure with an&#10; instance of Link Control Protocol already linked in.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppDaemonP" loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <module/>
    </component>
    <component qname="PppC" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
        <short> Top-level configuration for a PPP instance, not including LCP support.</short>
        <long> Top-level configuration for a PPP instance, not including LCP support.&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppP" loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PppC.TransmitFramePoolC" loc="50(PppC.TransmitFramePoolC):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
        <short> Allocate a block of memory that can be partioned into individual&#10; fragments.</short>
        <long> Allocate a block of memory that can be partioned into individual&#10; fragments.&#10;&#10; There is no limit on the duration that a fragment may be held, nor&#10; any assumption on the order in which fragments are released.&#10; Requests will fail only if the entire pool is in use.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer.&#10; This must be a multiple of two, to preserve 16-bit alignment.  It's&#10; not checked in the code, so don't be a goober and ignore this&#10; requirement.&#10;&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FragmentPoolC"/>
        <arguments>
          <value cst="I:1282">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:8">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppC.TransmitFramePoolC.FragmentPoolStorageP" loc="41(PppC.TransmitFramePoolC.FragmentPoolStorageP):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
        <short> The module that reserves storage for the pool.</short>
        <long> The module that reserves storage for the pool.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FragmentPoolStorageP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="FragmentPoolImplC" loc="39:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
        <short> Configuration that links together all the pools with the pool&#10; management implementation.</short>
        <long> Configuration that links together all the pools with the pool&#10; management implementation.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="FragmentPoolImplC.FragmentPoolImplP" loc="39(FragmentPoolImplC.FragmentPoolImplP):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
        <short> Module to implement management of all fragment pools.</short>
        <long> Module to implement management of all fragment pools.&#10;&#10; @param NUM_POOLS The total number of pools allocated throughout the&#10; system.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="FragmentPoolImplP"/>
        <arguments>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppC.HdlcFramingC" loc="78(PppC.HdlcFramingC):/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
        <short> Implementation of HDLC-like framing as defined in RFC1662 for PPP.</short>
        <long> Implementation of HDLC-like framing as defined in RFC1662 for PPP.&#10;&#10; This implementation is optimized to receive data as efficiently as&#10; possible.  It does this by maintaining a FragmentPool that allows&#10; multiple fragments to be collected in interrupt context while a&#10; previous frame is being processed in task context.  Extra bytes&#10; inserted for transparency during transmission are stripped while&#10; the data is being received, to &#10;&#10; @note When used in PPP, it is highly likely that the first frame&#10; received after a Configure-Ack that completes the LCP negotiation&#10; will fail with a BadCRC.  That Configure-Ack will install a new&#10; ACCM indicating that low-value octets are valid data, rather than&#10; being corrupted control characters.  The sender of the following&#10; frame will assume this ACCM is installed, and will neglect to add&#10; transparency escapes for those characters.  Because this component&#10; will have already begun processing the incoming data for the frame,&#10; but the task that interprets the Configure-Ack and installs the&#10; ACCM may not have completed, it is highly likely that some valid&#10; data characters will be dropped, resulting in a checksum failure&#10; and loss of the frame.  The peer will subsequently retransmit the&#10; frame, which will be correctly interpreted because by that point&#10; the ACCM will have been updated.  In other words, don't get your&#10; knickers all in a twist because the LEDs indicate a BadCRC HDLC&#10; error on startup.&#10;&#10; The implementation uses a local task to process transmission of&#10; messages.  Notification of frame transmission occurs in this&#10; context.&#10;&#10; @note You must release all frames signaled by receivedFrame() when&#10; you stop this component, including any frames signalled after you&#10; began the stop process.&#10;&#10; @param RX_BUFFER_SIZE Size, in octets, to use for the fragment pool&#10; used to hold incoming messages&#10;&#10; @param RX_FRAME_LIMIT Maximum number of fragments (individual&#10; messages) supported by the fragment pool&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcFramingC"/>
        <arguments>
          <value cst="I:1284">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppC.HdlcFramingC.HdlcFramingP" loc="40(PppC.HdlcFramingC.HdlcFramingP):/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
        <short> Implement HDLC framing.</short>
        <long> Implement HDLC framing.&#10;&#10; @param RX_FRAME_LIMIT The maximum number of frames that can be held&#10; waiting for the receiver to process them. *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="HdlcFramingP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppC.HdlcFramingC.InputFramePoolC" loc="50(PppC.HdlcFramingC.InputFramePoolC):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
        <short> Allocate a block of memory that can be partioned into individual&#10; fragments.</short>
        <long> Allocate a block of memory that can be partioned into individual&#10; fragments.&#10;&#10; There is no limit on the duration that a fragment may be held, nor&#10; any assumption on the order in which fragments are released.&#10; Requests will fail only if the entire pool is in use.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer.&#10; This must be a multiple of two, to preserve 16-bit alignment.  It's&#10; not checked in the code, so don't be a goober and ignore this&#10; requirement.&#10;&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FragmentPoolC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppC.HdlcFramingC.InputFramePoolC.FragmentPoolStorageP" loc="41(PppC.HdlcFramingC.InputFramePoolC.FragmentPoolStorageP):/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
        <short> The module that reserves storage for the pool.</short>
        <long> The module that reserves storage for the pool.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FragmentPoolStorageP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LedC" loc="41:/opt/tinyos-2.x/tos/system/LedC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/LedC.nc">
        <short>&#10; Provide access to the Led components available on this platform.</short>
        <long>&#10; Provide access to the Led components available on this platform.&#10; LEDs are made available positionally (e.g., Led0) and by color&#10; (e.g., Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedC" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PlatformLedP" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
        <short> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.</short>
        <long> Defines the Led and MultiLed interfaces in terms of the underlying&#10; LedsC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="LinkControlProtocolC" loc="40:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
        <short> The component that supports the Link Control Protocol of RFC1661.</short>
        <long> The component that supports the Link Control Protocol of RFC1661.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolP" loc="36:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <documentation loc="54:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
        <short> Publish the protocol number to which this component should be&#10; wired in the PppC component *</short>
      </documentation>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.PppConfigureEngineC" loc="45(LinkControlProtocolC.PppConfigureEngineC):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.</short>
        <long> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.&#10;&#10; @param Protocol_ the 16-bit protocol value&#10;&#10; @param InhibitCompression If true, this protocol requires that&#10; optional frame compression be inhibited for its packets.&#10;&#10; @param NumOptions An upper bound on the number of options that will&#10; be linked into this engine.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppConfigureEngineC"/>
        <arguments>
          <value cst="I:49185">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:4">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP" loc="33(LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <documentation loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> RFC 1661 section 5.5.</short>
        <long> RFC 1661 section 5.5.  Data field contains a sequence of options. *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppConfigureEngineP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.CoordinatorC" loc="38(LinkControlProtocolC.CoordinatorC):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppProtocolCodeCoordinatorC"/>
        <arguments>
          <value cst="I:49185">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP" loc="40(LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PppProtocolCodeCoordinatorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.LcpAutomatonC" loc="48(LinkControlProtocolC.LcpAutomatonC):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
        <short> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.</short>
        <long> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.&#10;&#10; Note that there is generally instance of this automaton for each&#10; control protocol: the LCP instance associated with the PppDaemonC&#10; configuration has one, but so will every other network protocol&#10; that leverages LCP's option negotiation sequence for configuration.&#10; Which is most of the interesting ones.&#10;&#10; @param Protocol The protocol type encoded in PPP packets&#10;&#10; @param InhibitCompression If TRUE, any options like PCOMP and&#10; ACCOMP that might result in non-default encodings are to be&#10; inhibited for this protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LcpAutomatonC"/>
        <arguments>
          <value cst="I:49185">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP" loc="34(LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <instance number="0">
        <component-ref qname="LcpAutomatonP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="LinkControlProtocolC.LcpAutomatonC.MuxAlarmMilli32C" loc="38(LinkControlProtocolC.LcpAutomatonC.MuxAlarmMilli32C):/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
        <short> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.</short>
        <long> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="0">
        <component-ref qname="MuxAlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_" loc="46:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
        <short> The base component used for multiplexing client alarms onto a&#10; single hardware alarm with precision TMilli and size uint32_t.</short>
        <long> The base component used for multiplexing client alarms onto a&#10; single hardware alarm with precision TMilli and size uint32_t.&#10;&#10; For debugging purposes, the DEBUG_MULTIPLEX_ALARM preprocessor&#10; simple will export an interface that allows inspection of the&#10; internal details of the multiplex structures.  When it is used, the&#10; underlying Alarm interface that is multiplexed is also published to&#10; allow more controlled testing using a controlled alarm&#10; implementation.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_.VirtualizeAlarmC" loc="46(MuxAlarmMilli32C_.VirtualizeAlarmC):/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being &#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="VirtualizeAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:2">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C" loc="37(MuxAlarmMilli32C_.AlarmMilli32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <instance number="1">
        <component-ref qname="AlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C" loc="37(MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="2">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP" loc="35(MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="1">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC" loc="51(MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC):/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="TransformAlarmC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:6">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
        <short> TinyOS PPP Network Control Protocol for IPv6 per RFC5072.</short>
        <long> TinyOS PPP Network Control Protocol for IPv6 per RFC5072.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppIpv6P" loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/pppipv6.h">
        <short> Material supporting RFC5072 IPv6-over-PPP, without being bound to&#10; a particular TinyOS implementation of IP.</short>
        <long> Material supporting RFC5072 IPv6-over-PPP, without being bound to&#10; a particular TinyOS implementation of IP.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PppIpv6C.PppConfigureEngineC" loc="45(PppIpv6C.PppConfigureEngineC):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.</short>
        <long> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.&#10;&#10; @param Protocol_ the 16-bit protocol value&#10;&#10; @param InhibitCompression If true, this protocol requires that&#10; optional frame compression be inhibited for its packets.&#10;&#10; @param NumOptions An upper bound on the number of options that will&#10; be linked into this engine.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppConfigureEngineC"/>
        <arguments>
          <value cst="I:32855">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:1">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP" loc="33(PppIpv6C.PppConfigureEngineC.PppConfigureEngineP):/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <documentation loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> RFC 1661 section 5.5.</short>
        <long> RFC 1661 section 5.5.  Data field contains a sequence of options. *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppConfigureEngineP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C.CoordinatorC" loc="38(PppIpv6C.CoordinatorC):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppProtocolCodeCoordinatorC"/>
        <arguments>
          <value cst="I:32855">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP" loc="40(PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP):/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PppProtocolCodeCoordinatorP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C.LcpAutomatonC" loc="48(PppIpv6C.LcpAutomatonC):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
        <short> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.</short>
        <long> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.&#10;&#10; Note that there is generally instance of this automaton for each&#10; control protocol: the LCP instance associated with the PppDaemonC&#10; configuration has one, but so will every other network protocol&#10; that leverages LCP's option negotiation sequence for configuration.&#10; Which is most of the interesting ones.&#10;&#10; @param Protocol The protocol type encoded in PPP packets&#10;&#10; @param InhibitCompression If TRUE, any options like PCOMP and&#10; ACCOMP that might result in non-default encodings are to be&#10; inhibited for this protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="LcpAutomatonC"/>
        <arguments>
          <value cst="I:32855">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP" loc="34(PppIpv6C.LcpAutomatonC.LcpAutomatonP):/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <instance number="1">
        <component-ref qname="LcpAutomatonP"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </value>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="PppIpv6C.LcpAutomatonC.MuxAlarmMilli32C" loc="38(PppIpv6C.LcpAutomatonC.MuxAlarmMilli32C):/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
        <short> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.</short>
        <long> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <instance number="1">
        <component-ref qname="MuxAlarmMilli32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="DefaultHdlcUartC" loc="37:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
        <short> Component that uses PlatformSerialC to provide an HdlcUart&#10; interface.</short>
        <long> Component that uses PlatformSerialC to provide an HdlcUart&#10; interface.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="DefaultHdlcUartP" loc="35:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="PppPrintfC" loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
        <short> Support printf(3) within applications that use PPP.</short>
        <long> Support printf(3) within applications that use PPP.&#10;&#10; printf is too useful as a debugging capability to be lost simply&#10; because the serial interface is shuttling packets back and forth.&#10; Wiring this protocol allows console output to be passed to the peer&#10; in a special protocol message, where it can be displayed.&#10;&#10; Applications that do this should use the following wiring:&#10;components PppPrintfC;&#10;PppC.PppProtocol[PppPrintfC.Protocol] -> PppPrintfC;&#10;PppPrintfC.Ppp -> PppC;&#10; where PppC is alternatively PppDaemonC.  Simply using this&#10; component without wiring in its protocol will work, in that the&#10; messages will be sent to the peer, but standard PPP implementations&#10; that do not recognize the TinyOS-specific PPP protocol will send a&#10; Protocol-Reject message, which the TinyOS PPP implementation will be&#10; unable to process.  Wiring in the protocol allows TinyOS PPP to&#10; disable it when the peer is unable to process the messages,&#10; avoiding log clutter.&#10;&#10; A variant PPP implementation that recognizes TinyOS packets can be&#10; obtained by reading the instructions in the patch file in&#10; ${TOSDIR}/lib/ppp/tos-pppd.patch.&#10;&#10; @note For cross-platform compatibility, this module uses the PutcharP&#10; component from ${TOSDIR}/lib/printf.  That directory must be in&#10; your component search path.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PppPrintfP" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
        <short> Implement putchar() in a way that transfers the data in packets&#10; over PPP.</short>
        <long> Implement putchar() in a way that transfers the data in packets&#10; over PPP. *</long>
      </documentation>
      <module/>
    </component>
    <component qname="PutcharC" loc="42:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
        <short>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.</short>
        <long>&#10; This component provides a TinyOS-compatible bridge to the&#10; system-specific mechanism of providing single-character output to&#10; the environment's printf(3c) infrastructure.  Components that&#10; provide a libc-based printf facility in TinyOS should implement the&#10; Putchar interface and connect it to this module.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="PutcharP" loc="93:/opt/tinyos-2.x/tos/lib/printf/PutcharP.nc">
      <module/>
    </component>
    <component qname="IPStackC" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
        <short>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.</short>
        <long>&#10; Wire together the IP stack&#10;&#10; To make it somewhat flexible, the stack consists of four main&#10; layers: Protocol, Routing, NeighborDiscovery, and Dispatch.  This&#10; component wires them together.&#10;&#10; Protocol: dispatch based on the final next header value in an&#10; ipv6_packet.&#10;&#10; Routing: determine the next-hop for a packet as a link-local&#10; address.  This is accomplished by looking up the destination&#10; address in the forwarding table.&#10;&#10; NeighborDiscovery: responsible for address resolution.  Very&#10; simple, since only link-local addresses are considered to be&#10; on-link.  &#10;&#10; Dispatch: okay, this one's badly named.  It's the 6lowpan engine&#10; which talks to a packet radio on the bottom and presents fully&#10; reassembled and decompressed IPv6 packets on top.  This means most&#10; of the stack can ignore the fact that there's all this magic going&#10; on.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="IPProtocolsP" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPForwardingEngineP" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPNeighborDiscoveryC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <configuration/>
    </component>
    <component qname="IPNeighborDiscoveryP" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
        <short>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.</short>
        <long>&#10; Neighbor Discovery for blip&#10;&#10; In IPv6, neighbor discovery resolves IPv6 addresses which have been&#10; determined to be on-link to their associated link-layer addresses.&#10; This simple component follows the advice of 6lowpan-nd, which&#10; states that link-local addresses are derived from the associated&#10; link-layer addressed deterministically.  Therefore, we can do a&#10; very simple translation between the two types of addresses.&#10;&#10; In the future, implementors could consider adding more complicated&#10; address resolution mechanisms here.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPAddressC" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <configuration/>
    </component>
    <component qname="IPAddressP" loc="26:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressP.nc">
      <module/>
    </component>
    <component qname="Ieee154AddressC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <configuration/>
    </component>
    <component qname="Ieee154AddressP" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <module/>
    </component>
    <component qname="LocalIeeeEui64C" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/LocalIeeeEui64C.nc">
      <module/>
    </component>
    <component qname="BareMessageC" loc="1:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <configuration/>
    </component>
    <component qname="RFA1RadioP" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <module/>
    </component>
    <component qname="RFA1BarePacketP" loc="1:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1BarePacketP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC" loc="37(RFA1RadioC.RadioAlarmC):/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioAlarmC.RadioAlarmP" loc="39(RFA1RadioC.RadioAlarmC.RadioAlarmP):/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <instance number="0">
        <component-ref qname="RadioAlarmP"/>
      </instance>
      <module/>
    </component>
    <component qname="TaskletC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC" loc="35(RFA1RadioC.ActiveMessageLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP" loc="38(RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <instance number="0">
        <component-ref qname="ActiveMessageLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="ActiveMessageAddressC" loc="52:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc" safe="">
      <documentation loc="45:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
        <short>&#10; Component that stores the node's active message address and group ID.</short>
        <long>&#10; Component that stores the node's active message address and group ID.&#10;&#10; @author Philip Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.AutoResourceAcquireLayerC" loc="35(RFA1RadioC.AutoResourceAcquireLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <instance number="0">
        <component-ref qname="AutoResourceAcquireLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC" loc="83(RFA1RadioC.SendResourceC):/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleFcfsArbiterC"/>
        <arguments>
          <value cst="S:RADIO_SEND_RESOURCE">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Queue" loc="42(RFA1RadioC.SendResourceC.Queue):/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="FcfsResourceQueueC"/>
        <arguments>
          <value cst="U:">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.SendResourceC.Arbiter" loc="49(RFA1RadioC.SendResourceC.Arbiter):/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="SimpleArbiterP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154MessageLayerC" loc="35(RFA1RadioC.Ieee154MessageLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154MessageLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TinyosNetworkLayerC" loc="50(RFA1RadioC.TinyosNetworkLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <instance number="0">
        <component-ref qname="TinyosNetworkLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC" loc="35(RFA1RadioC.Ieee154PacketLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP" loc="37(RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <instance number="0">
        <component-ref qname="Ieee154PacketLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC" loc="35(RFA1RadioC.UniqueLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.UniqueLayerP" loc="38(RFA1RadioC.UniqueLayerC.UniqueLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <instance number="0">
        <component-ref qname="UniqueLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="NeighborhoodC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <configuration/>
    </component>
    <component qname="NeighborhoodP" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <module/>
    </component>
    <component qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC" loc="35(RFA1RadioC.UniqueLayerC.NeighborhoodFlagC):/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <instance number="0">
        <component-ref qname="NeighborhoodFlagC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC" loc="73(RFA1RadioC.PacketLinkLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PacketLinkLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP" loc="40(RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <instance number="0">
        <component-ref qname="PacketLinkLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.PacketLinkLayerC.DelayTimerC" loc="44(RFA1RadioC.PacketLinkLayerC.DelayTimerC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="11">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC" loc="35(RFA1RadioC.LowPowerListeningLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP" loc="39(RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <documentation loc="12:/opt/tinyos-2.x/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
        <long>&#10; The LPL defaults to stay-on.&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="LowPowerListeningLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.LowPowerListeningLayerC.TimerMilliC" loc="44(RFA1RadioC.LowPowerListeningLayerC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="12">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningC" loc="1:/opt/tinyos-2.x/tos/system/SystemLowPowerListeningC.nc">
      <configuration/>
    </component>
    <component qname="SystemLowPowerListeningP" loc="3:/opt/tinyos-2.x/tos/system/SystemLowPowerListeningP.nc">
      <module/>
    </component>
    <component qname="NoLedsC" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
        <short>&#10; A null operation replacement for the LedsC component.</short>
        <long>&#10; A null operation replacement for the LedsC component. As many&#10; components might concurrently signal information through LEDs,&#10; using LedsC and NoLedsC allows an application builder to select&#10; which components control the LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 19, 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC" loc="35(RFA1RadioC.MessageBufferLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP" loc="39(RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <instance number="0">
        <component-ref qname="MessageBufferLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC" loc="35(RFA1RadioC.CollisionAvoidanceLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP" loc="38(RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <instance number="0">
        <component-ref qname="RandomCollisionLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="RandomC" loc="43:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/RandomC.nc">
        <short>&#10; The standard TinyOS random number generator.</short>
        <long>&#10; The standard TinyOS random number generator. If your system requires a &#10; specific random number generator, it should wire to that component&#10; directly. &#10;&#10; @author  Barbara Hohlt &#10; @author  Phil Levis &#10; @date    March 1 2005&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RandomMlcgC" loc="45:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc" safe="">
      <documentation loc="32:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
        <short> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.</short>
        <long> This code is a fast implementation of the Park-Miller Minimal Standard &#10;  Generator for pseudo-random numbers.  It uses the 32 bit multiplicative &#10;  linear congruential generator, &#10;&#10;&#9;&#9;S' = (A x S) mod (2^31 - 1) &#10;&#10;  for A = 16807.&#10;&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RFA1RadioC.SoftwareAckLayerC" loc="38(RFA1RadioC.SoftwareAckLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <instance number="0">
        <component-ref qname="SoftwareAckLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.CsmaLayerC" loc="35(RFA1RadioC.CsmaLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="0">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC" loc="37(RFA1RadioC.TimeStampingLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP" loc="38(RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP):/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <instance number="0">
        <component-ref qname="TimeStampingLayerP"/>
      </instance>
      <module/>
    </component>
    <component qname="LocalTimeMilliC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <configuration/>
    </component>
    <component qname="LocalTimeMilliC.CounterToLocalTimeC" loc="46(LocalTimeMilliC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.MetadataFlagsLayerC" loc="38(RFA1RadioC.MetadataFlagsLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <instance number="0">
        <component-ref qname="MetadataFlagsLayerC"/>
      </instance>
      <module/>
    </component>
    <component qname="RFA1RadioC.TrafficMonitorLayerC" loc="35(RFA1RadioC.TrafficMonitorLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="1">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1RadioC.RadioDriverDebugLayerC" loc="35(RFA1RadioC.RadioDriverDebugLayerC):/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <instance number="2">
        <component-ref qname="DummyLayerC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerP" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <module/>
    </component>
    <component qname="LocalTime62khzC" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <configuration/>
    </component>
    <component qname="LocalTime62khzC.CounterToLocalTimeC" loc="46(LocalTime62khzC.CounterToLocalTimeC):/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="CounterToLocalTimeC"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C" loc="37(RFA1DriverLayerC.Alarm62khz32C):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <instance number="0">
        <component-ref qname="Alarm62khz32C"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP" loc="35(RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP):/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <instance number="2">
        <component-ref qname="AtmegaCompareP"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <value cst="I:0">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
          <value cst="I:2">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <configuration/>
    </component>
    <component qname="IPDispatchP" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="ReadLqiC" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <configuration/>
    </component>
    <component qname="RFA1ReadLqiC" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <module/>
    </component>
    <component qname="RFA1Ieee154MessageC" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <configuration/>
    </component>
    <component qname="IPDispatchC.TimerMilliC" loc="44(IPDispatchC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool" loc="41(IPDispatchC.FragPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
            <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
          </type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.FragPool.PoolP" loc="53(IPDispatchC.FragPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167d260"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendEntryPool" loc="41(IPDispatchC.SendEntryPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendEntryPool.PoolP" loc="53(IPDispatchC.SendEntryPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167d260"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.QueueC" loc="42(IPDispatchC.QueueC):/opt/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
          </type-pointer>
          <value cst="I:12">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPDispatchC.SendInfoPool" loc="41(IPDispatchC.SendInfoPool):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPDispatchC.SendInfoPool.PoolP" loc="53(IPDispatchC.SendInfoPool.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="2">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167d260"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="IPStackControlP" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <module/>
    </component>
    <component qname="ICMPCoreP" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <module/>
    </component>
    <component qname="IPPacketC" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/IPPacketC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC" loc="41(IPStackC.FwdAddrPoolC):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40469010"/></type-tag>
          <value cst="I:3">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="IPStackC.FwdAddrPoolC.PoolP" loc="53(IPStackC.FwdAddrPoolC.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167d260"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="NoDhcpC" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
        <short>&#10; Component for doing compile-time address allocation.</short>
        <long>&#10; Component for doing compile-time address allocation.  Wired by the&#10; stack, sets a static address based on IN6_PREFIX and TOS_NODE_ID on&#10; boot.  Useful for development or of you want to hard-code addresses.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
        <short>&#10; RPLRoutingC.nc&#10; </short>
        <long>&#10; RPLRoutingC.nc&#10; @ author Stephen Dawson-Haggerty&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankC" loc="73:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRankP" loc="81:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <module/>
    </component>
    <component qname="RPLRoutingEngineC" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.Routing" loc="44(RPLRoutingEngineC.Routing):/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLRoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.TrickleTimer" loc="44(RPLRoutingEngineC.TrickleTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="3">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.InitDISTimer" loc="44(RPLRoutingEngineC.InitDISTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.VersionTimer" loc="44(RPLRoutingEngineC.VersionTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="5">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.DAORouting" loc="41(RPLDAORoutingEngineC.DAORouting):/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <instance number="0">
        <component-ref qname="RPLDAORoutingEngineP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.DelayDAOTimer" loc="44(RPLDAORoutingEngineC.DelayDAOTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="6">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.GenerateDAOTimer" loc="44(RPLDAORoutingEngineC.GenerateDAOTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="7">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.RemoveTimer" loc="44(RPLDAORoutingEngineC.RemoveTimer):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="8">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendQueueP" loc="42(RPLDAORoutingEngineC.SendQueueP):/opt/tinyos-2.x/tos/system/QueueC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <instance number="1">
        <component-ref qname="QueueC"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
            </type-tag>
          </type-pointer>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP" loc="41(RPLDAORoutingEngineC.SendPoolP):/opt/tinyos-2.x/tos/system/PoolC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolC"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
          </type-tag>
          <value cst="I:5">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLDAORoutingEngineC.SendPoolP.PoolP" loc="53(RPLDAORoutingEngineC.SendPoolP.PoolP):/opt/tinyos-2.x/tos/system/PoolP.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <instance number="4">
        <component-ref qname="PoolP"/>
        <arguments>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167d260"/></type-var>
          <value cst="U:">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS" loc="34(RPLRoutingEngineC.ICMP_RS):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP" loc="34(RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="0">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="RPLOF0P" loc="39:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
        <short>&#10; RPLOF0P.nc&#10; </short>
        <long>&#10; RPLOF0P.nc&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA" loc="34(RPLRoutingC.ICMP_RA):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchC"/>
        <arguments>
          <value cst="I:155">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP" loc="34(RPLRoutingC.ICMP_RA.ICMPCodeDispatchP):/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <instance number="1">
        <component-ref qname="ICMPCodeDispatchP"/>
      </instance>
      <module/>
    </component>
    <component qname="RplBorderRouterP" loc="17:RplBorderRouterP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UDPShellC.UdpSocketC" loc="2(UDPShellC.UdpSocketC):/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <instance number="0">
        <component-ref qname="UdpSocketC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="UdpC" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <configuration/>
    </component>
    <component qname="UdpP" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <module/>
    </component>
    <component qname="UDPShellP" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <module/>
    </component>
    <component qname="ICMPPingC" loc="41:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
        <short>&#10; Provide an interface for pinging other motes.</short>
        <long>&#10; Provide an interface for pinging other motes.&#10;&#10; Replying to ICMP echos is built into all motes running blip;&#10; sending requests requires a component like this one.&#10;&#10;</long>
      </documentation>
      <configuration/>
    </component>
    <component qname="ICMPPingP" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <module/>
    </component>
    <component qname="ICMPPingC.TimerMilliC" loc="44(ICMPPingC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="9">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="RouteCmdP" loc="37:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <module/>
    </component>
    <component qname="RouteCmdC.ShellCommandC" loc="2(RouteCmdC.ShellCommandC):/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <instance number="0">
        <component-ref qname="ShellCommandC"/>
        <arguments>
          <value cst="S:route">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <configuration/>
    </component>
    <component qname="RouteCmdC.ShellCommandC.ShellCommandP" loc="2(RouteCmdC.ShellCommandC.ShellCommandP):/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc">
      <instance number="0">
        <component-ref qname="ShellCommandP"/>
        <arguments>
          <value cst="U:">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </value>
        </arguments>
      </instance>
      <module/>
    </component>
    <component qname="RouteCmdC.TimerMilliC" loc="44(RouteCmdC.TimerMilliC):/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <instance number="10">
        <component-ref qname="TimerMilliC"/>
      </instance>
      <configuration/>
    </component>
    <component qname="AtmegaGeneralIOP" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc" abstract="" safe="">
      <parameters>
        <constant name="port_addr" ref="0x40587988" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="ddr_addr" ref="0x40587bb0" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="pin_addr" ref="0x40587dd8" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
          <component-ref qname="AtmegaGeneralIOP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="NoPinC" loc="16:/opt/tinyos-2.x/tos/system/NoPinC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/NoPinC.nc">
        <short>&#10; Dummy pin component.</short>
        <long>&#10; Dummy pin component.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TimerMilliC" loc="44:/opt/tinyos-2.x/tos/system/TimerMilliC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
        <short>&#10; The virtualized millisecond timer abstraction.</short>
        <long>&#10; The virtualized millisecond timer abstraction. Instantiating this &#10; component gives an independent millisecond granularity timer.&#10;&#10; @author Philip Levis&#10; @date   January 16 2006&#10; @see    TEP 102: Timers&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AlarmMilli32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Alarm62khz32C" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AtmegaCompareP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x405fbac0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405fbac0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405fbef0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405fbef0"/></type-var>
        </typedef>
        <constant name="mode" ref="0x405f8120" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <constant name="mindt" ref="0x405f8328" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
          <component-ref qname="AtmegaCompareP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaCounterP" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc" abstract="">
      <parameters>
        <typedef name="precision_tag" ref="0x406936a8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406936a8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40693ad8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40693ad8"/></type-var>
        </typedef>
        <constant name="mode" ref="0x40693cc8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
          <component-ref qname="AtmegaCounterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="TransformCounterC" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
        <short>&#10; TransformCounterC decreases precision and/or widens an Counter.</short>
        <long>&#10; TransformCounterC decreases precision and/or widens an Counter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Counter.&#10; @param to_size_type The type for the width of the transformed Counter.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Counter.&#10; @param from_size_type The type for the width of the original Counter.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10; @param upper_count_type A type large enough to store the upper bits --&#10;   those needed above from_size_type after its shift right to fill&#10;   to_size_type.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406b46d0" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406b46d0"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406b4b30" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406b4b30"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406b4d98" loc="57:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406b4d98"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406b0230" loc="58:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406b0230"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406b0498" loc="59:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
        <typedef name="upper_count_type" ref="0x406b0920" loc="60:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
          <component-ref qname="TransformCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="upper_count_type" scoped="" ref="0x406b0920"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="TransformAlarmC" loc="51:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
        <short>&#10; TransformAlarmC decreases precision and/or widens an Alarm.</short>
        <long>&#10; TransformAlarmC decreases precision and/or widens an Alarm.  An already&#10; widened Counter component is used to help.&#10;&#10; &#60;p>See TEP102 for more details.&#10; @param to_precision_tag A type indicating the precision of the transformed&#10;   Alarm.&#10; @param to_size_type The type for the width of the transformed Alarm.&#10; @param from_precision_tag A type indicating the precision of the original&#10;   Alarm.&#10; @param from_size_type The type for the width of the original Alarm.&#10; @param bit_shift_right Original time units will be 2 to the power &#10;   &#60;code>bit_shift_right&#60;/code> larger than transformed time units.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="to_precision_tag" ref="0x406c6470" loc="52:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_precision_tag" scoped="" ref="0x406c6470"/></type-var>
        </typedef>
        <typedef name="to_size_type" ref="0x406c68d0" loc="53:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="to_size_type" scoped="" ref="0x406c68d0"/></type-var>
        </typedef>
        <typedef name="from_precision_tag" ref="0x406c6b38" loc="54:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_precision_tag" scoped="" ref="0x406c6b38"/></type-var>
        </typedef>
        <typedef name="from_size_type" ref="0x406c5010" loc="55:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="from_size_type" scoped="" ref="0x406c5010"/></type-var>
        </typedef>
        <constant name="bit_shift_right" ref="0x406c5278" loc="56:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
          <component-ref qname="TransformAlarmC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AlarmToTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
        <short>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.</short>
        <long>&#10; AlarmToTimerC converts a 32-bit Alarm to a Timer.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the Alarm and&#10; Timer being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406e0358" loc="46:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
          <component-ref qname="AlarmToTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406e0358"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="VirtualizeTimerC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc" abstract="" safe="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
        <short>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.</short>
        <long>&#10; VirtualizeTimerC uses a single Timer to create up to 255 virtual timers.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the Timer being &#10;   virtualized.&#10; @param max_timers Number of virtual timers to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40703ee8" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40703ee8"/></type-var>
        </typedef>
        <constant name="max_timers" ref="0x407000f0" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
          <component-ref qname="VirtualizeTimerC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="VoltageC" loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AdcReadClientC" loc="21:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
        <short>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.</short>
        <long>&#10; Provide, as per TEP101, arbitrated access via a Read interface to the&#10; Atmega128 ADC.  Users of this component must link it to an&#10; implementation of Atm128AdcConfig which provides the ADC parameters&#10; (channel, etc).&#10; &#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinArbiterC" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; a Round Robin fashion.  An array is used to keep track of which users have &#10; put in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in Round Robin order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x40773e38" loc="89:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
          <component-ref qname="RoundRobinArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="RoundRobinResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc" abstract="" safe="">
      <parameters>
        <constant name="size" ref="0x407b15a0" loc="42:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
          <component-ref qname="RoundRobinResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="ArbiterP" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ResourceRequested, ArbiterInfo, &#10; and ResourceDefaultOwner interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; A Queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the user of the ResourceDefaultOwner&#10; interface gains access to the resource, and holds onto it until&#10; another user makes a request.&#10;&#10; @param &#60;b>default_owner_id&#60;/b> -- The id of the default owner of this &#10;        resource&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="default_owner_id" ref="0x407b2ca8" loc="52:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
          <component-ref qname="ArbiterP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="AsyncStdControlPowerManagerC" loc="67:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc" abstract="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#60;br>&#60;br>&#10;&#10; Powerdown of the device is done through the &#60;code>AsyncStdControl&#60;/code>&#10; interface, so this component can only be used with those devices that&#10; provide that interface.&#60;br>&#60;br>&#10;&#10; For devices providing either the &#60;code>StdControl&#60;/code> or&#10; &#60;code>SplitControl&#60;/code> interfaces, please use either the&#10; &#60;code>StdControlPowerManagerC&#60;/code> component or the&#10; &#60;code>SplitControlPowerManagerC&#60;/code> component respectively.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="AsyncPowerManagerP" loc="58:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc" abstract="" safe="">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
        <short>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.</short>
        <long>&#10; Please refer to TEP 115 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the internal implementation of the standard power management&#10; policy for managing the power states of non-virtualized devices.&#10; Non-virtualized devices are shared using a parameterized Resource&#10; interface, and are powered down according to some policy whenever there&#10; are no more pending requests to that Resource.  The policy implemented&#10; by this component is to power down a device as soon as it becomes free.&#10; Such a policy is useful whenever a device has a negligible wake-up&#10; latency.  There is no cost associated with waiting for the device to&#10; power up, so it can be powered on and off as often as possible.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="BusyWaitCounterC" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
        <short>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses).</short>
        <long>&#10; BusyWaitCounterC uses a Counter to implement the BusyWait interface&#10; (block until a specified amount of time elapses). See TEP102 for more&#10; details.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of the BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for the&#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x4081f2f8" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x4081f2f8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x4081f728" loc="51:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
          <component-ref qname="BusyWaitCounterC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x4081f728"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="ArbitratedReadC" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc" abstract="" safe="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
        <short>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.</short>
        <long>&#10; Implement arbitrated access to a Read interface, based on an&#10; underlying arbitrated Resource interface.&#10;&#10; Note that this code does not deal with unexpected events: it assumes&#10; that all events it receives are in response to commands that it&#10; made. See tos/chips/atm128/adc for an example of using ArbitratedReadC &#10; in a safe way.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x4080bc80" loc="23:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
          <component-ref qname="ArbitratedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x4080bc80"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="FcfsArbiterC" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc" abstract="">
      <documentation loc="69:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceDefaultOwner&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource is granted to the default &#10; user.  If a new request is made, the default user will release the resource, &#10; and it will be granted to the requesting cleint.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x408d55e8" loc="89:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
          <component-ref qname="FcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FcfsResourceQueueC" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.7 $&#10; @date $Date: 2010-06-29 22:07:56 $&#10;</long>
      </documentation>
      <parameters>
        <constant name="size" ref="0x408d17d8" loc="42:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
          <component-ref qname="FcfsResourceQueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MultiplexedReadC" loc="18:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc" abstract="">
      <documentation loc="10:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
        <short>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.</short>
        <long>&#10; Multiplex access to a single Read interface for a parameterised&#10; Read interface whose access is controlled by an arbiter.&#10;&#10; @param width_t Width of the underlying Read interface.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <parameters>
        <typedef name="width_t" ref="0x408f34e8" loc="18:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
          <component-ref qname="MultiplexedReadC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="width_t" scoped="" ref="0x408f34e8"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="AtmegaPinChangeP" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialActiveMessageP" loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SerialDispatcherP" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc" abstract="">
      <documentation loc="71:/opt/tinyos-2.x/tos/lib/serial/Serial.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Buonadonna&#10; @author Lewis Girod&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Atm128UartP" loc="47:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc" abstract="" safe="">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/printf/printf.h">
        <short>&#10;&#10; </short>
        <long>&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.17 $&#10; @date $Date: 2010-06-29 22:07:50 $&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="FragmentPoolC" loc="50:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
        <short> Allocate a block of memory that can be partioned into individual&#10; fragments.</short>
        <long> Allocate a block of memory that can be partioned into individual&#10; fragments.&#10;&#10; There is no limit on the duration that a fragment may be held, nor&#10; any assumption on the order in which fragments are released.&#10; Requests will fail only if the entire pool is in use.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer.&#10; This must be a multiple of two, to preserve 16-bit alignment.  It's&#10; not checked in the code, so don't be a goober and ignore this&#10; requirement.&#10;&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="POOL_SIZE_B" ref="0x40bf9068" loc="50:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
          <component-ref qname="FragmentPoolC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
        <constant name="FRAGMENT_COUNT" ref="0x40bf92a0" loc="51:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
          <component-ref qname="FragmentPoolC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="FragmentPoolStorageP" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
        <short> The module that reserves storage for the pool.</short>
        <long> The module that reserves storage for the pool.&#10;&#10; @param POOL_SIZE_B the number of bytes in the fragmentable buffer&#10; @param FRAGMENT_COUNT the maximum number of fragments&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="POOL_ID" ref="0x40bf8d40" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
          <component-ref qname="FragmentPoolStorageP"/>
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="fragment_pool_id_t" ref="0x40bd31b0"/></typename>
          </type-int>
        </constant>
        <constant name="POOL_SIZE_B" ref="0x40bf5010" loc="42:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
          <component-ref qname="FragmentPoolStorageP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
        <constant name="FRAGMENT_COUNT" ref="0x40bf5248" loc="43:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
          <component-ref qname="FragmentPoolStorageP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="FragmentPoolImplP" loc="39:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
        <short> Module to implement management of all fragment pools.</short>
        <long> Module to implement management of all fragment pools.&#10;&#10; @param NUM_POOLS The total number of pools allocated throughout the&#10; system.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="NUM_POOLS" ref="0x40be9788" loc="39:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
          <component-ref qname="FragmentPoolImplP"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="HdlcFramingC" loc="78:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc" abstract="">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
        <short> Implementation of HDLC-like framing as defined in RFC1662 for PPP.</short>
        <long> Implementation of HDLC-like framing as defined in RFC1662 for PPP.&#10;&#10; This implementation is optimized to receive data as efficiently as&#10; possible.  It does this by maintaining a FragmentPool that allows&#10; multiple fragments to be collected in interrupt context while a&#10; previous frame is being processed in task context.  Extra bytes&#10; inserted for transparency during transmission are stripped while&#10; the data is being received, to &#10;&#10; @note When used in PPP, it is highly likely that the first frame&#10; received after a Configure-Ack that completes the LCP negotiation&#10; will fail with a BadCRC.  That Configure-Ack will install a new&#10; ACCM indicating that low-value octets are valid data, rather than&#10; being corrupted control characters.  The sender of the following&#10; frame will assume this ACCM is installed, and will neglect to add&#10; transparency escapes for those characters.  Because this component&#10; will have already begun processing the incoming data for the frame,&#10; but the task that interprets the Configure-Ack and installs the&#10; ACCM may not have completed, it is highly likely that some valid&#10; data characters will be dropped, resulting in a checksum failure&#10; and loss of the frame.  The peer will subsequently retransmit the&#10; frame, which will be correctly interpreted because by that point&#10; the ACCM will have been updated.  In other words, don't get your&#10; knickers all in a twist because the LEDs indicate a BadCRC HDLC&#10; error on startup.&#10;&#10; The implementation uses a local task to process transmission of&#10; messages.  Notification of frame transmission occurs in this&#10; context.&#10;&#10; @note You must release all frames signaled by receivedFrame() when&#10; you stop this component, including any frames signalled after you&#10; began the stop process.&#10;&#10; @param RX_BUFFER_SIZE Size, in octets, to use for the fragment pool&#10; used to hold incoming messages&#10;&#10; @param RX_FRAME_LIMIT Maximum number of fragments (individual&#10; messages) supported by the fragment pool&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="RX_BUFFER_SIZE" ref="0x40bebdf0" loc="78:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
          <component-ref qname="HdlcFramingC"/>
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
        </constant>
        <constant name="RX_FRAME_LIMIT" ref="0x40c2f068" loc="79:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
          <component-ref qname="HdlcFramingC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="HdlcFramingP" loc="40:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc" abstract="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
        <short> Implement HDLC framing.</short>
        <long> Implement HDLC framing.&#10;&#10; @param RX_FRAME_LIMIT The maximum number of frames that can be held&#10; waiting for the receiver to process them. *</long>
      </documentation>
      <parameters>
        <constant name="RX_FRAME_LIMIT" ref="0x40c29010" loc="40:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
          <component-ref qname="HdlcFramingP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PppConfigureEngineC" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.</short>
        <long> Implement the four messages used by the Link Control Protocol to&#10; negotiate mutually acceptable options for a PPP session.&#10;&#10; @param Protocol_ the 16-bit protocol value&#10;&#10; @param InhibitCompression If true, this protocol requires that&#10; optional frame compression be inhibited for its packets.&#10;&#10; @param NumOptions An upper bound on the number of options that will&#10; be linked into this engine.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d23478" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
          <component-ref qname="PppConfigureEngineC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40d236e8" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
          <component-ref qname="PppConfigureEngineC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
        </constant>
        <constant name="NumOptions" ref="0x40d23920" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
          <component-ref qname="PppConfigureEngineC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PppConfigureEngineP" loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc" abstract="">
      <documentation loc="73:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
        <short> RFC 1661 section 5.5.</short>
        <long> RFC 1661 section 5.5.  Data field contains a sequence of options. *</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d19c68" loc="33:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
          <component-ref qname="PppConfigureEngineP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40d19ed8" loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
          <component-ref qname="PppConfigureEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
        </constant>
        <constant name="NumOptions" ref="0x40d16158" loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
          <component-ref qname="PppConfigureEngineP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="PppProtocolCodeCoordinatorC" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d89468" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
          <component-ref qname="PppProtocolCodeCoordinatorC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PppProtocolCodeCoordinatorP" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
        <short> Provides common support for a protocol that uses LCP-style code-based handlers.</short>
        <long> Provides common support for a protocol that uses LCP-style code-based handlers.&#10;&#10; @param Protocol the Protocol code for which this component coordinates&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40d85530" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
          <component-ref qname="PppProtocolCodeCoordinatorP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="LcpAutomatonC" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc" abstract="">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
        <short> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.</short>
        <long> Configuration to manage the state associated with a PPP Link&#10; Control Protocol automaton as defined in RFC1661.&#10;&#10; Note that there is generally instance of this automaton for each&#10; control protocol: the LCP instance associated with the PppDaemonC&#10; configuration has one, but so will every other network protocol&#10; that leverages LCP's option negotiation sequence for configuration.&#10; Which is most of the interesting ones.&#10;&#10; @param Protocol The protocol type encoded in PPP packets&#10;&#10; @param InhibitCompression If TRUE, any options like PCOMP and&#10; ACCOMP that might result in non-default encodings are to be&#10; inhibited for this protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
        <constant name="Protocol" ref="0x40dc9010" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
          <component-ref qname="LcpAutomatonC"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40dc9280" loc="49:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
          <component-ref qname="LcpAutomatonC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="LcpAutomatonP" loc="34:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc" abstract="">
      <parameters>
        <constant name="Protocol" ref="0x40dc3030" loc="34:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
          <component-ref qname="LcpAutomatonP"/>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </constant>
        <constant name="InhibitCompression" ref="0x40dc32a0" loc="35:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
          <component-ref qname="LcpAutomatonP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="MuxAlarmMilli32C" loc="38:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
        <short> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.</short>
        <long> Provide a client-specific instance of a multiplexed alarm with&#10; precision TMilli and size uint32_t.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="VirtualizeAlarmC" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
        <short>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.</short>
        <long>&#10; VirtualizeAlarmC uses a single Alarm to create up to 255 virtual alarms.&#10; Note that a virtualized Alarm will have significantly more overhead than&#10; an Alarm built on a hardware compare register.&#10;&#10; @param precision_tag A type indicating the precision of the Alarm being &#10;   virtualized.&#10; @param num_alarms Number of virtual alarms to create.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x40e38010" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x40e38010"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40e38440" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40e38440"/></type-var>
        </typedef>
        <constant name="num_alarms" ref="0x40e38620" loc="46:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
          <component-ref qname="VirtualizeAlarmC"/>
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RadioAlarmC" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RadioAlarmP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ActiveMessageLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ActiveMessageLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="AutoResourceAcquireLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SimpleFcfsArbiterC" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc" abstract="">
      <documentation loc="62:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and Resource&#10; Controller interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource in&#10; an FCFS fashion.  An array is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the array is checked and the next user (in FCFS order)&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10;&#10; @param &#60;b>resourceName&#60;/b> -- The name of the Resource being shared&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
        <constant name="resourceName" ref="0x411154c0" loc="83:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
          <component-ref qname="SimpleFcfsArbiterC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="SimpleArbiterP" loc="49:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc" abstract="" safe="">
      <documentation loc="30:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
        <short>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.</short>
        <long>&#10; Please refer to TEP 108 for more information about this component and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This component provides the Resource, ArbiterInfo, and ResourceRequested&#10; interfaces and uses the ResourceConfigure interface as&#10; described in TEP 108.  It provides arbitration to a shared resource.&#10; An queue is used to keep track of which users have put&#10; in requests for the resource.  Upon the release of the resource by one&#10; of these users, the queue is checked and the next user&#10; that has a pending request will ge granted control of the resource.  If&#10; there are no pending requests, then the resource becomes idle and any&#10; user can put in a request and immediately receive access to the&#10; Resource.&#10; &#10; @author Kevin Klues (klues@tkn.tu-berlin.de)&#10; @author Philip Levis&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154MessageLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="TinyosNetworkLayerC" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="Ieee154PacketLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="Ieee154PacketLayerP" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UniqueLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="UniqueLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="NeighborhoodFlagC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerC" loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc" abstract="">
      <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
        <short>&#10; Reliable Packet Link Functionality&#10; </short>
        <long>&#10; Reliable Packet Link Functionality&#10; @author David Moss&#10; @author Jon Wyant&#10; @author Miklos Maroti&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="PacketLinkLayerP" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="LowPowerListeningLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="LowPowerListeningLayerP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc" abstract="">
      <documentation loc="12:/opt/tinyos-2.x/tos/types/Lpl.h">
        <short>&#10; The LPL defaults to stay-on.</short>
        <long>&#10; The LPL defaults to stay-on.&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="MessageBufferLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="MessageBufferLayerP" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RandomCollisionLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="RandomCollisionLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="SoftwareAckLayerC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="DummyLayerC" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerC" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="TimeStampingLayerP" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="CounterToLocalTimeC" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc" abstract="" safe="">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
        <short>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.</short>
        <long>&#10; CounterToLocalTimeC converts a 32-bit LocalTime to a Counter.  &#10;&#10; &#60;p>See TEP102 for more details.&#10; @param precision_tag A type indicating the precision of the LocalTime and&#10; Counter being converted.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x413bde70" loc="46:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
          <component-ref qname="CounterToLocalTimeC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x413bde70"/></type-var>
        </typedef>
      </parameters>
      <module/>
    </component>
    <component qname="MetadataFlagsLayerC" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="PoolC" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/PoolC.nc">
        <short>&#10;  A general dynamic memory pool component.</short>
        <long>&#10;  A general dynamic memory pool component.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2006-12-12 18:23:47 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4167d260" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167d260"/></type-var>
        </typedef>
        <constant name="POOL_SIZE" ref="0x4167d480" loc="41:/opt/tinyos-2.x/tos/system/PoolC.nc">
          <component-ref qname="PoolC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="PoolP" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc" abstract="">
      <documentation loc="34:/opt/tinyos-2.x/tos/system/PoolP.nc">
        <short>&#10;  Implementation of a general dynamic memory pool component.</short>
        <long>&#10;  Implementation of a general dynamic memory pool component.&#10;  Note that the allocation/deallocation policies are &#10;  different than traditional dynamic allocators such as&#10;  malloc or slab allocators. When initialized, the Pool&#10;  contains &#60;code>size&#60;/code> items of type &#60;code>pool_t&#60;/code>.&#10;  These elements can be removed from the pool for use with &#10;  &#60;code>Pool.get&#60;/code>, and new elements can be placed in&#10;  the pool with &#60;code>Pool.put&#60;/code>. The pool allows &#10;  components to &#60;code>put&#60;/code> elements besides those which&#10;  were obtained with &#60;code>get&#60;/code>. The pool can never have&#10;  more than &#60;code>size&#60;/code> elements in it.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2010-01-20 19:59:07 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="pool_t" ref="0x4167b760" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="pool_t" scoped="" ref="0x4167b760"/></type-var>
        </typedef>
        <constant name="size" ref="0x4167b950" loc="53:/opt/tinyos-2.x/tos/system/PoolP.nc">
          <component-ref qname="PoolP"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="QueueC" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc" abstract="">
      <documentation loc="33:/opt/tinyos-2.x/tos/system/QueueC.nc">
        <short>&#10;  A general FIFO queue component, whose queue has a bounded size.</short>
        <long>&#10;  A general FIFO queue component, whose queue has a bounded size.&#10;&#10;  @author Philip Levis&#10;  @author Geoffrey Mainland&#10;  @date   $Date: 2009-06-25 18:37:24 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="queue_t" ref="0x41666a70" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="queue_t" scoped="" ref="0x41666a70"/></type-var>
        </typedef>
        <constant name="QUEUE_SIZE" ref="0x41666c98" loc="42:/opt/tinyos-2.x/tos/system/QueueC.nc">
          <component-ref qname="QueueC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <module/>
    </component>
    <component qname="RPLRoutingEngineP" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc" abstract="">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="RPLDAORoutingEngineP" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc" abstract="">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="ICMPCodeDispatchC" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc" abstract="">
      <parameters>
        <constant name="type" ref="0x4189c8f8" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
          <component-ref qname="ICMPCodeDispatchC"/>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ICMPCodeDispatchP" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc" abstract="">
      <parameters>
      </parameters>
      <module/>
    </component>
    <component qname="UdpSocketC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc" abstract="">
      <parameters>
      </parameters>
      <configuration/>
    </component>
    <component qname="ShellCommandC" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc" abstract="">
      <parameters>
        <constant name="cmd_name" ref="0x41991a88" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
          <component-ref qname="ShellCommandC"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <configuration/>
    </component>
    <component qname="ShellCommandP" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc" abstract="">
      <parameters>
        <constant name="cmd_name" ref="0x419d4e28" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc">
          <component-ref qname="ShellCommandP"/>
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
        </constant>
      </parameters>
      <module/>
    </component>
  </components>
  <interfaces>
    <interface provided="0" name="Ipv6LcpAutomaton" ref="0x404f45c0" loc="21:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ipv6LcpAutomaton" scoped="" ref="0x404f45c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x404f4798"/>
        <function-ref name="down" scoped="" ref="0x404f4878"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x404f4958"/>
        <function-ref name="open" scoped="" ref="0x404f4a38"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x404f4b18"/>
        <function-ref name="signalEvent" scoped="" ref="0x404f4bf8"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x404f4cd8"/>
        <function-ref name="close" scoped="" ref="0x404f4db8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x404f4e98"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x404de010"/>
        <function-ref name="up" scoped="" ref="0x404de0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x404e0178" loc="14:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x404e0178"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x404e0350"/>
        <function-ref name="recv" scoped="" ref="0x404e0430"/>
        <function-ref name="sendDone" scoped="" ref="0x404e0510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x404da010" loc="17:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x404da010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x404da1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x404fd930" loc="26:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x404fd930"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x404fdb08"/>
        <function-ref name="setRoot" scoped="" ref="0x404fdbe8"/>
        <function-ref name="unsetRoot" scoped="" ref="0x404fdcc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40505af0" loc="28:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x40505af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40505cc8"/>
        <function-ref name="delTLV" scoped="" ref="0x40505da8"/>
        <function-ref name="findTLV" scoped="" ref="0x40505e88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppIpv6" ref="0x404e6010" loc="22:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppIpv6" scoped="" ref="0x404e6010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppIpv6"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x404e61e8"/>
        <function-ref name="linkUp" scoped="" ref="0x404e62c8"/>
        <function-ref name="receive" scoped="" ref="0x404e63a8"/>
        <function-ref name="localIid" scoped="" ref="0x404e6488"/>
        <function-ref name="remoteIid" scoped="" ref="0x404e6568"/>
        <function-ref name="linkIsUp" scoped="" ref="0x404e6648"/>
        <function-ref name="linkDown" scoped="" ref="0x404e6728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x404da358" loc="18:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x404da358"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x404da530"/>
        <function-ref name="led0Toggle" scoped="" ref="0x404da610"/>
        <function-ref name="led1On" scoped="" ref="0x404da6f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x404da7d0"/>
        <function-ref name="led3Off" scoped="" ref="0x404da8b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x404da990"/>
        <function-ref name="get" scoped="" ref="0x404daa70"/>
        <function-ref name="led1Off" scoped="" ref="0x404dab50"/>
        <function-ref name="led3Toggle" scoped="" ref="0x404dac30"/>
        <function-ref name="led3On" scoped="" ref="0x404dad10"/>
        <function-ref name="led0On" scoped="" ref="0x404dadf0"/>
        <function-ref name="led2Off" scoped="" ref="0x404daed0"/>
        <function-ref name="led2On" scoped="" ref="0x404d9010"/>
        <function-ref name="set" scoped="" ref="0x404d9170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPControl" ref="0x404dc448" loc="19:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPControl" scoped="" ref="0x404dc448"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404dc620"/>
        <function-ref name="stopDone" scoped="" ref="0x404dc700"/>
        <function-ref name="start" scoped="" ref="0x404dc7e0"/>
        <function-ref name="stop" scoped="" ref="0x404dc8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x404f6068" loc="23:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x404f6068"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x404f6240"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x404f6320"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x404f6400"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x404f64e0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x404f65c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x404fe2f0" loc="25:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x404fe2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x404fe4c8"/>
        <function-ref name="lookupRoute" scoped="" ref="0x404fe5a8"/>
        <function-ref name="delRoute" scoped="" ref="0x404fe688"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x404fe768"/>
        <function-ref name="addRoute" scoped="" ref="0x404fe848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Dhcp6Info" ref="0x405085e0" loc="27:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Dhcp6Info" scoped="" ref="0x405085e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Dhcp6Info"/>
      </instance>
      <interface-functions>
        <function-ref name="getDuid" scoped="" ref="0x405087b8"/>
        <function-ref name="useUnicast" scoped="" ref="0x40508898"/>
        <function-ref name="getTimers" scoped="" ref="0x40508978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppControl" ref="0x404dcb08" loc="20:PppRouterP.nc">
      <component-ref qname="PppRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControl" scoped="" ref="0x404dcb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x404dcce0"/>
        <function-ref name="stopDone" scoped="" ref="0x404dcdc0"/>
        <function-ref name="start" scoped="" ref="0x404dcea0"/>
        <function-ref name="stop" scoped="" ref="0x404df010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40522480" loc="58:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40522480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40522658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40517820" loc="57:/opt/tinyos-2.x/tos/system/MainC.nc">
      <component-ref qname="MainC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40517820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x405179f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40522c58" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40522c58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40522e30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4052a5b8" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4052a5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4052a790"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4052a870"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4052a950"/>
        <function-ref name="actualMicro" scoped="" ref="0x4052aa30"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4052ab10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x4052ad38" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformC.nc">
      <component-ref qname="PlatformC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x4052ad38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052af10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BatteryWarning" ref="0x40527010" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BatteryWarning" scoped="" ref="0x40527010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405271e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40528010" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40528010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405281e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Stm25pInit" ref="0x40528b90" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pInit" scoped="" ref="0x40528b90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40528d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LedsInit" ref="0x405287c0" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LedsInit" scoped="" ref="0x405287c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40528998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuInit" ref="0x40528400" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformP.nc">
      <component-ref qname="PlatformP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuInit" scoped="" ref="0x40528400"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405285d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40531510" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40531510"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405316e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x40531cc8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x40531cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40531ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40531918" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitC.nc">
      <component-ref qname="McuInitC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40531918"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40531af0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioInit" ref="0x4052d660" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioInit" scoped="" ref="0x4052d660"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052d838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x405306d0" loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x405306d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405308a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcInit" ref="0x4052d298" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcInit" scoped="" ref="0x4052d298"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052d470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureClock" ref="0x40530af8" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureClock" scoped="" ref="0x40530af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40530cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerInit" ref="0x40530ec0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuInitP.nc">
      <component-ref qname="McuInitP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerInit" scoped="" ref="0x40530ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4052d0c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4053fe58" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4053fe58"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4053e050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128Calibrate" ref="0x4053e228" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/MeasureClockC.nc">
      <component-ref qname="MeasureClockC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x4053e228"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x4053e400"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x4053e4e0"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x4053e5c0"/>
        <function-ref name="actualMicro" scoped="" ref="0x4053e6a0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x4053e780"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1RadioOff" ref="0x4054aa18" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioOffP.nc">
      <component-ref qname="RFA1RadioOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1RadioOff" scoped="" ref="0x4054aa18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4054abf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x4051f7a0" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffC.nc">
      <component-ref qname="Stm25pOffC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x4051f7a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4051f978"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Toggle" ref="0x4055c5e0" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Toggle" scoped="" ref="0x4055c5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055c7b8"/>
        <function-ref name="isInput" scoped="" ref="0x4055c898"/>
        <function-ref name="toggle" scoped="" ref="0x4055c978"/>
        <function-ref name="isOutput" scoped="" ref="0x4055ca58"/>
        <function-ref name="get" scoped="" ref="0x4055cb38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055cc18"/>
        <function-ref name="set" scoped="" ref="0x4055ccf8"/>
        <function-ref name="clr" scoped="" ref="0x4055cdd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Stm25pOff" ref="0x40553010" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/Stm25pOffP.nc">
      <component-ref qname="Stm25pOffP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Stm25pOff" scoped="" ref="0x40553010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x405531e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CSN" ref="0x405558d0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CSN" scoped="" ref="0x405558d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40555aa8"/>
        <function-ref name="isInput" scoped="" ref="0x40555b88"/>
        <function-ref name="toggle" scoped="" ref="0x40555c68"/>
        <function-ref name="isOutput" scoped="" ref="0x40555d48"/>
        <function-ref name="get" scoped="" ref="0x40555e28"/>
        <function-ref name="makeOutput" scoped="" ref="0x40555f08"/>
        <function-ref name="set" scoped="" ref="0x4055b010"/>
        <function-ref name="clr" scoped="" ref="0x4055b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Hold" ref="0x4055b300" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Hold" scoped="" ref="0x4055b300"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055b4d8"/>
        <function-ref name="isInput" scoped="" ref="0x4055b5b8"/>
        <function-ref name="toggle" scoped="" ref="0x4055b698"/>
        <function-ref name="isOutput" scoped="" ref="0x4055b778"/>
        <function-ref name="get" scoped="" ref="0x4055b858"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055b938"/>
        <function-ref name="set" scoped="" ref="0x4055ba18"/>
        <function-ref name="clr" scoped="" ref="0x4055baf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Power" ref="0x4055bd10" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/chips/stm25p/HplStm25pPinsC.nc">
      <component-ref qname="HplStm25pPinsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Power" scoped="" ref="0x4055bd10"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055bee8"/>
        <function-ref name="isInput" scoped="" ref="0x4055a010"/>
        <function-ref name="toggle" scoped="" ref="0x4055a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055a1d0"/>
        <function-ref name="get" scoped="" ref="0x4055a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055a390"/>
        <function-ref name="set" scoped="" ref="0x4055a470"/>
        <function-ref name="clr" scoped="" ref="0x4055a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG0" ref="0x4057e750" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG0" scoped="" ref="0x4057e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057eb28"/>
        <function-ref name="isInput" scoped="" ref="0x4057ec08"/>
        <function-ref name="toggle" scoped="" ref="0x4057ece8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057edc8"/>
        <function-ref name="get" scoped="" ref="0x4057eea8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057d010"/>
        <function-ref name="set" scoped="" ref="0x4057d0f0"/>
        <function-ref name="clr" scoped="" ref="0x4057d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD1" ref="0x40571d08" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD1" scoped="" ref="0x40571d08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40571ee0"/>
        <function-ref name="isInput" scoped="" ref="0x40570010"/>
        <function-ref name="toggle" scoped="" ref="0x405700f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405701d0"/>
        <function-ref name="get" scoped="" ref="0x405702b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40570390"/>
        <function-ref name="set" scoped="" ref="0x40570470"/>
        <function-ref name="clr" scoped="" ref="0x40570550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE3" ref="0x405782f0" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE3" scoped="" ref="0x405782f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405784c8"/>
        <function-ref name="isInput" scoped="" ref="0x405785a8"/>
        <function-ref name="toggle" scoped="" ref="0x40578688"/>
        <function-ref name="isOutput" scoped="" ref="0x40578768"/>
        <function-ref name="get" scoped="" ref="0x40578848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40578928"/>
        <function-ref name="set" scoped="" ref="0x40578a08"/>
        <function-ref name="clr" scoped="" ref="0x40578ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF3" ref="0x405734b0" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF3" scoped="" ref="0x405734b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40573688"/>
        <function-ref name="isInput" scoped="" ref="0x40573768"/>
        <function-ref name="toggle" scoped="" ref="0x40573848"/>
        <function-ref name="isOutput" scoped="" ref="0x40573928"/>
        <function-ref name="get" scoped="" ref="0x40573a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40573ae8"/>
        <function-ref name="set" scoped="" ref="0x40573bc8"/>
        <function-ref name="clr" scoped="" ref="0x40573ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG5" ref="0x4057bce8" loc="98:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG5" scoped="" ref="0x4057bce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057bec0"/>
        <function-ref name="isInput" scoped="" ref="0x4057a010"/>
        <function-ref name="toggle" scoped="" ref="0x4057a0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4057a1d0"/>
        <function-ref name="get" scoped="" ref="0x4057a2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057a390"/>
        <function-ref name="set" scoped="" ref="0x4057a470"/>
        <function-ref name="clr" scoped="" ref="0x4057a550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA6" ref="0x40562a98" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA6" scoped="" ref="0x40562a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40562c70"/>
        <function-ref name="isInput" scoped="" ref="0x40562d50"/>
        <function-ref name="toggle" scoped="" ref="0x40562e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40562f10"/>
        <function-ref name="get" scoped="" ref="0x40561010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405610f0"/>
        <function-ref name="set" scoped="" ref="0x405611d0"/>
        <function-ref name="clr" scoped="" ref="0x405612b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF1" ref="0x405740a0" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF1" scoped="" ref="0x405740a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40574278"/>
        <function-ref name="isInput" scoped="" ref="0x40574358"/>
        <function-ref name="toggle" scoped="" ref="0x40574438"/>
        <function-ref name="isOutput" scoped="" ref="0x40574518"/>
        <function-ref name="get" scoped="" ref="0x405745f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405746d8"/>
        <function-ref name="set" scoped="" ref="0x405747b8"/>
        <function-ref name="clr" scoped="" ref="0x40574898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB0" ref="0x40561ea8" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB0" scoped="" ref="0x40561ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405600c0"/>
        <function-ref name="isInput" scoped="" ref="0x405601a0"/>
        <function-ref name="toggle" scoped="" ref="0x40560280"/>
        <function-ref name="isOutput" scoped="" ref="0x40560360"/>
        <function-ref name="get" scoped="" ref="0x40560440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560520"/>
        <function-ref name="set" scoped="" ref="0x40560600"/>
        <function-ref name="clr" scoped="" ref="0x405606e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC2" ref="0x405674b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC2" scoped="" ref="0x405674b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40567688"/>
        <function-ref name="isInput" scoped="" ref="0x40567768"/>
        <function-ref name="toggle" scoped="" ref="0x40567848"/>
        <function-ref name="isOutput" scoped="" ref="0x40567928"/>
        <function-ref name="get" scoped="" ref="0x40567a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40567ae8"/>
        <function-ref name="set" scoped="" ref="0x40567bc8"/>
        <function-ref name="clr" scoped="" ref="0x40567ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD4" ref="0x4056fc08" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD4" scoped="" ref="0x4056fc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056fde0"/>
        <function-ref name="isInput" scoped="" ref="0x4056fec0"/>
        <function-ref name="toggle" scoped="" ref="0x4056e010"/>
        <function-ref name="isOutput" scoped="" ref="0x4056e0f0"/>
        <function-ref name="get" scoped="" ref="0x4056e1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056e2b0"/>
        <function-ref name="set" scoped="" ref="0x4056e390"/>
        <function-ref name="clr" scoped="" ref="0x4056e470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE6" ref="0x40576210" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE6" scoped="" ref="0x40576210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405763e8"/>
        <function-ref name="isInput" scoped="" ref="0x405764c8"/>
        <function-ref name="toggle" scoped="" ref="0x405765a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40576688"/>
        <function-ref name="get" scoped="" ref="0x40576768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40576848"/>
        <function-ref name="set" scoped="" ref="0x40576928"/>
        <function-ref name="clr" scoped="" ref="0x40576a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA1" ref="0x40557750" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA1" scoped="" ref="0x40557750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40557928"/>
        <function-ref name="isInput" scoped="" ref="0x40557a08"/>
        <function-ref name="toggle" scoped="" ref="0x40557ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40557bc8"/>
        <function-ref name="get" scoped="" ref="0x40557ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40557d88"/>
        <function-ref name="set" scoped="" ref="0x40557e68"/>
        <function-ref name="clr" scoped="" ref="0x40556010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB3" ref="0x4055fce8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB3" scoped="" ref="0x4055fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4055e010"/>
        <function-ref name="toggle" scoped="" ref="0x4055e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4055e1d0"/>
        <function-ref name="get" scoped="" ref="0x4055e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055e390"/>
        <function-ref name="set" scoped="" ref="0x4055e470"/>
        <function-ref name="clr" scoped="" ref="0x4055e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC5" ref="0x405652f0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC5" scoped="" ref="0x405652f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405654c8"/>
        <function-ref name="isInput" scoped="" ref="0x405655a8"/>
        <function-ref name="toggle" scoped="" ref="0x40565688"/>
        <function-ref name="isOutput" scoped="" ref="0x40565768"/>
        <function-ref name="get" scoped="" ref="0x40565848"/>
        <function-ref name="makeOutput" scoped="" ref="0x40565928"/>
        <function-ref name="set" scoped="" ref="0x40565a08"/>
        <function-ref name="clr" scoped="" ref="0x40565ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD7" ref="0x4056da98" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD7" scoped="" ref="0x4056da98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056dc70"/>
        <function-ref name="isInput" scoped="" ref="0x4056dd50"/>
        <function-ref name="toggle" scoped="" ref="0x4056de30"/>
        <function-ref name="isOutput" scoped="" ref="0x4056df10"/>
        <function-ref name="get" scoped="" ref="0x4056c010"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056c0f0"/>
        <function-ref name="set" scoped="" ref="0x4056c1d0"/>
        <function-ref name="clr" scoped="" ref="0x4056c2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF6" ref="0x4057f2f0" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF6" scoped="" ref="0x4057f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4057f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4057f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4057f768"/>
        <function-ref name="get" scoped="" ref="0x4057f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057f928"/>
        <function-ref name="set" scoped="" ref="0x4057fa08"/>
        <function-ref name="clr" scoped="" ref="0x4057fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG3" ref="0x4057c830" loc="96:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG3" scoped="" ref="0x4057c830"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057ca08"/>
        <function-ref name="isInput" scoped="" ref="0x4057cae8"/>
        <function-ref name="toggle" scoped="" ref="0x4057cbc8"/>
        <function-ref name="isOutput" scoped="" ref="0x4057cca8"/>
        <function-ref name="get" scoped="" ref="0x4057cd88"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057ce68"/>
        <function-ref name="set" scoped="" ref="0x4057b010"/>
        <function-ref name="clr" scoped="" ref="0x4057b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE1" ref="0x4056cea8" loc="76:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE1" scoped="" ref="0x4056cea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056b0c0"/>
        <function-ref name="isInput" scoped="" ref="0x4056b1a0"/>
        <function-ref name="toggle" scoped="" ref="0x4056b280"/>
        <function-ref name="isOutput" scoped="" ref="0x4056b360"/>
        <function-ref name="get" scoped="" ref="0x4056b440"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056b520"/>
        <function-ref name="set" scoped="" ref="0x4056b600"/>
        <function-ref name="clr" scoped="" ref="0x4056b6e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA4" ref="0x40563670" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA4" scoped="" ref="0x40563670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40563848"/>
        <function-ref name="isInput" scoped="" ref="0x40563928"/>
        <function-ref name="toggle" scoped="" ref="0x40563a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40563ae8"/>
        <function-ref name="get" scoped="" ref="0x40563bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40563ca8"/>
        <function-ref name="set" scoped="" ref="0x40563d88"/>
        <function-ref name="clr" scoped="" ref="0x40563e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB6" ref="0x4055dc08" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB6" scoped="" ref="0x4055dc08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055dde0"/>
        <function-ref name="isInput" scoped="" ref="0x4055dec0"/>
        <function-ref name="toggle" scoped="" ref="0x4056a010"/>
        <function-ref name="isOutput" scoped="" ref="0x4056a0f0"/>
        <function-ref name="get" scoped="" ref="0x4056a1d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056a2b0"/>
        <function-ref name="set" scoped="" ref="0x4056a390"/>
        <function-ref name="clr" scoped="" ref="0x4056a470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG1" ref="0x4057d3d0" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG1" scoped="" ref="0x4057d3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057d5a8"/>
        <function-ref name="isInput" scoped="" ref="0x4057d688"/>
        <function-ref name="toggle" scoped="" ref="0x4057d768"/>
        <function-ref name="isOutput" scoped="" ref="0x4057d848"/>
        <function-ref name="get" scoped="" ref="0x4057d928"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057da08"/>
        <function-ref name="set" scoped="" ref="0x4057dae8"/>
        <function-ref name="clr" scoped="" ref="0x4057dbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC0" ref="0x405680a0" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC0" scoped="" ref="0x405680a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40568278"/>
        <function-ref name="isInput" scoped="" ref="0x40568358"/>
        <function-ref name="toggle" scoped="" ref="0x40568438"/>
        <function-ref name="isOutput" scoped="" ref="0x40568518"/>
        <function-ref name="get" scoped="" ref="0x405685f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405686d8"/>
        <function-ref name="set" scoped="" ref="0x405687b8"/>
        <function-ref name="clr" scoped="" ref="0x40568898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD2" ref="0x40570750" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD2" scoped="" ref="0x40570750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40570928"/>
        <function-ref name="isInput" scoped="" ref="0x40570a08"/>
        <function-ref name="toggle" scoped="" ref="0x40570ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40570bc8"/>
        <function-ref name="get" scoped="" ref="0x40570ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40570d88"/>
        <function-ref name="set" scoped="" ref="0x40570e68"/>
        <function-ref name="clr" scoped="" ref="0x4056f010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE4" ref="0x40578ce8" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE4" scoped="" ref="0x40578ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40578ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40577010"/>
        <function-ref name="toggle" scoped="" ref="0x405770f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405771d0"/>
        <function-ref name="get" scoped="" ref="0x405772b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40577390"/>
        <function-ref name="set" scoped="" ref="0x40577470"/>
        <function-ref name="clr" scoped="" ref="0x40577550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF4" ref="0x40573ea8" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF4" scoped="" ref="0x40573ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405720c0"/>
        <function-ref name="isInput" scoped="" ref="0x405721a0"/>
        <function-ref name="toggle" scoped="" ref="0x40572280"/>
        <function-ref name="isOutput" scoped="" ref="0x40572360"/>
        <function-ref name="get" scoped="" ref="0x40572440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572520"/>
        <function-ref name="set" scoped="" ref="0x40572600"/>
        <function-ref name="clr" scoped="" ref="0x405726e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA7" ref="0x405614b0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA7" scoped="" ref="0x405614b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40561688"/>
        <function-ref name="isInput" scoped="" ref="0x40561768"/>
        <function-ref name="toggle" scoped="" ref="0x40561848"/>
        <function-ref name="isOutput" scoped="" ref="0x40561928"/>
        <function-ref name="get" scoped="" ref="0x40561a08"/>
        <function-ref name="makeOutput" scoped="" ref="0x40561ae8"/>
        <function-ref name="set" scoped="" ref="0x40561bc8"/>
        <function-ref name="clr" scoped="" ref="0x40561ca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB1" ref="0x405608e0" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB1" scoped="" ref="0x405608e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40560ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40560b98"/>
        <function-ref name="toggle" scoped="" ref="0x40560c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40560d58"/>
        <function-ref name="get" scoped="" ref="0x40560e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40560f18"/>
        <function-ref name="set" scoped="" ref="0x4055f010"/>
        <function-ref name="clr" scoped="" ref="0x4055f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC3" ref="0x40567ea8" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC3" scoped="" ref="0x40567ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405660c0"/>
        <function-ref name="isInput" scoped="" ref="0x405661a0"/>
        <function-ref name="toggle" scoped="" ref="0x40566280"/>
        <function-ref name="isOutput" scoped="" ref="0x40566360"/>
        <function-ref name="get" scoped="" ref="0x40566440"/>
        <function-ref name="makeOutput" scoped="" ref="0x40566520"/>
        <function-ref name="set" scoped="" ref="0x40566600"/>
        <function-ref name="clr" scoped="" ref="0x405666e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD5" ref="0x4056e670" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD5" scoped="" ref="0x4056e670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056e848"/>
        <function-ref name="isInput" scoped="" ref="0x4056e928"/>
        <function-ref name="toggle" scoped="" ref="0x4056ea08"/>
        <function-ref name="isOutput" scoped="" ref="0x4056eae8"/>
        <function-ref name="get" scoped="" ref="0x4056ebc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056eca8"/>
        <function-ref name="set" scoped="" ref="0x4056ed88"/>
        <function-ref name="clr" scoped="" ref="0x4056ee68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE7" ref="0x40576c08" loc="82:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE7" scoped="" ref="0x40576c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40576de0"/>
        <function-ref name="isInput" scoped="" ref="0x40576ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40575010"/>
        <function-ref name="isOutput" scoped="" ref="0x405750f0"/>
        <function-ref name="get" scoped="" ref="0x405751d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405752b0"/>
        <function-ref name="set" scoped="" ref="0x40575390"/>
        <function-ref name="clr" scoped="" ref="0x40575470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA2" ref="0x40556210" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA2" scoped="" ref="0x40556210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405563e8"/>
        <function-ref name="isInput" scoped="" ref="0x405564c8"/>
        <function-ref name="toggle" scoped="" ref="0x405565a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40556688"/>
        <function-ref name="get" scoped="" ref="0x40556768"/>
        <function-ref name="makeOutput" scoped="" ref="0x40556848"/>
        <function-ref name="set" scoped="" ref="0x40556928"/>
        <function-ref name="clr" scoped="" ref="0x40556a08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB4" ref="0x4055e750" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB4" scoped="" ref="0x4055e750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055e9a8"/>
        <function-ref name="isInput" scoped="" ref="0x4055ea88"/>
        <function-ref name="toggle" scoped="" ref="0x4055eb68"/>
        <function-ref name="isOutput" scoped="" ref="0x4055ec48"/>
        <function-ref name="get" scoped="" ref="0x4055ed28"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055ee08"/>
        <function-ref name="set" scoped="" ref="0x4055eee8"/>
        <function-ref name="clr" scoped="" ref="0x4055d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC6" ref="0x40565ce8" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC6" scoped="" ref="0x40565ce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40565ec0"/>
        <function-ref name="isInput" scoped="" ref="0x40564010"/>
        <function-ref name="toggle" scoped="" ref="0x405640f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405641d0"/>
        <function-ref name="get" scoped="" ref="0x405642b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40564390"/>
        <function-ref name="set" scoped="" ref="0x40564470"/>
        <function-ref name="clr" scoped="" ref="0x40564550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF7" ref="0x4057fce8" loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF7" scoped="" ref="0x4057fce8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057fec0"/>
        <function-ref name="isInput" scoped="" ref="0x4057e010"/>
        <function-ref name="toggle" scoped="" ref="0x4057e0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x4057e1d0"/>
        <function-ref name="get" scoped="" ref="0x4057e2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057e390"/>
        <function-ref name="set" scoped="" ref="0x4057e470"/>
        <function-ref name="clr" scoped="" ref="0x4057e550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD0" ref="0x40571210" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD0" scoped="" ref="0x40571210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405714e8"/>
        <function-ref name="isInput" scoped="" ref="0x405715c8"/>
        <function-ref name="toggle" scoped="" ref="0x405716a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40571788"/>
        <function-ref name="get" scoped="" ref="0x40571868"/>
        <function-ref name="makeOutput" scoped="" ref="0x40571948"/>
        <function-ref name="set" scoped="" ref="0x40571a28"/>
        <function-ref name="clr" scoped="" ref="0x40571b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE2" ref="0x4056b8e0" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE2" scoped="" ref="0x4056b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056bab8"/>
        <function-ref name="isInput" scoped="" ref="0x4056bb98"/>
        <function-ref name="toggle" scoped="" ref="0x4056bc78"/>
        <function-ref name="isOutput" scoped="" ref="0x4056bd58"/>
        <function-ref name="get" scoped="" ref="0x4056be38"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056bf18"/>
        <function-ref name="set" scoped="" ref="0x40578010"/>
        <function-ref name="clr" scoped="" ref="0x405780f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF2" ref="0x40574a98" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF2" scoped="" ref="0x40574a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40574c70"/>
        <function-ref name="isInput" scoped="" ref="0x40574d50"/>
        <function-ref name="toggle" scoped="" ref="0x40574e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40574f10"/>
        <function-ref name="get" scoped="" ref="0x40573010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405730f0"/>
        <function-ref name="set" scoped="" ref="0x405731d0"/>
        <function-ref name="clr" scoped="" ref="0x405732b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG4" ref="0x4057b2f0" loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG4" scoped="" ref="0x4057b2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057b4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4057b5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4057b688"/>
        <function-ref name="isOutput" scoped="" ref="0x4057b768"/>
        <function-ref name="get" scoped="" ref="0x4057b848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057b928"/>
        <function-ref name="set" scoped="" ref="0x4057ba08"/>
        <function-ref name="clr" scoped="" ref="0x4057bae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA5" ref="0x405620a0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA5" scoped="" ref="0x405620a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40562278"/>
        <function-ref name="isInput" scoped="" ref="0x40562358"/>
        <function-ref name="toggle" scoped="" ref="0x40562438"/>
        <function-ref name="isOutput" scoped="" ref="0x40562518"/>
        <function-ref name="get" scoped="" ref="0x405625f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x405626d8"/>
        <function-ref name="set" scoped="" ref="0x405627b8"/>
        <function-ref name="clr" scoped="" ref="0x40562898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB7" ref="0x4056a670" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB7" scoped="" ref="0x4056a670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056a848"/>
        <function-ref name="isInput" scoped="" ref="0x4056a928"/>
        <function-ref name="toggle" scoped="" ref="0x4056aa08"/>
        <function-ref name="isOutput" scoped="" ref="0x4056aae8"/>
        <function-ref name="get" scoped="" ref="0x4056abc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056aca8"/>
        <function-ref name="set" scoped="" ref="0x4056ad88"/>
        <function-ref name="clr" scoped="" ref="0x4056ae68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF0" ref="0x40575670" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF0" scoped="" ref="0x40575670"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40575848"/>
        <function-ref name="isInput" scoped="" ref="0x40575928"/>
        <function-ref name="toggle" scoped="" ref="0x40575a08"/>
        <function-ref name="isOutput" scoped="" ref="0x40575ae8"/>
        <function-ref name="get" scoped="" ref="0x40575bc8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40575ca8"/>
        <function-ref name="set" scoped="" ref="0x40575d88"/>
        <function-ref name="clr" scoped="" ref="0x40575e68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC1" ref="0x40568a98" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC1" scoped="" ref="0x40568a98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40568c70"/>
        <function-ref name="isInput" scoped="" ref="0x40568d50"/>
        <function-ref name="toggle" scoped="" ref="0x40568e30"/>
        <function-ref name="isOutput" scoped="" ref="0x40568f10"/>
        <function-ref name="get" scoped="" ref="0x40567010"/>
        <function-ref name="makeOutput" scoped="" ref="0x405670f0"/>
        <function-ref name="set" scoped="" ref="0x405671d0"/>
        <function-ref name="clr" scoped="" ref="0x405672b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD3" ref="0x4056f210" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD3" scoped="" ref="0x4056f210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056f3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4056f4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4056f5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4056f688"/>
        <function-ref name="get" scoped="" ref="0x4056f768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056f848"/>
        <function-ref name="set" scoped="" ref="0x4056f928"/>
        <function-ref name="clr" scoped="" ref="0x4056fa08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE5" ref="0x40577750" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE5" scoped="" ref="0x40577750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40577928"/>
        <function-ref name="isInput" scoped="" ref="0x40577a08"/>
        <function-ref name="toggle" scoped="" ref="0x40577ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40577bc8"/>
        <function-ref name="get" scoped="" ref="0x40577ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40577d88"/>
        <function-ref name="set" scoped="" ref="0x40577e68"/>
        <function-ref name="clr" scoped="" ref="0x40576010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortF5" ref="0x405728e0" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortF5" scoped="" ref="0x405728e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40572ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40572b98"/>
        <function-ref name="toggle" scoped="" ref="0x40572c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40572d58"/>
        <function-ref name="get" scoped="" ref="0x40572e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40572f18"/>
        <function-ref name="set" scoped="" ref="0x4057f010"/>
        <function-ref name="clr" scoped="" ref="0x4057f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA0" ref="0x4055acb0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA0" scoped="" ref="0x4055acb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055ae88"/>
        <function-ref name="isInput" scoped="" ref="0x40557010"/>
        <function-ref name="toggle" scoped="" ref="0x405570f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405571d0"/>
        <function-ref name="get" scoped="" ref="0x405572b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x40557390"/>
        <function-ref name="set" scoped="" ref="0x40557470"/>
        <function-ref name="clr" scoped="" ref="0x40557550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB2" ref="0x4055f2f0" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB2" scoped="" ref="0x4055f2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055f4c8"/>
        <function-ref name="isInput" scoped="" ref="0x4055f5a8"/>
        <function-ref name="toggle" scoped="" ref="0x4055f688"/>
        <function-ref name="isOutput" scoped="" ref="0x4055f768"/>
        <function-ref name="get" scoped="" ref="0x4055f848"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055f928"/>
        <function-ref name="set" scoped="" ref="0x4055fa08"/>
        <function-ref name="clr" scoped="" ref="0x4055fae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC4" ref="0x405668e0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC4" scoped="" ref="0x405668e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40566ab8"/>
        <function-ref name="isInput" scoped="" ref="0x40566b98"/>
        <function-ref name="toggle" scoped="" ref="0x40566c78"/>
        <function-ref name="isOutput" scoped="" ref="0x40566d58"/>
        <function-ref name="get" scoped="" ref="0x40566e38"/>
        <function-ref name="makeOutput" scoped="" ref="0x40566f18"/>
        <function-ref name="set" scoped="" ref="0x40565010"/>
        <function-ref name="clr" scoped="" ref="0x405650f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortD6" ref="0x4056d0a0" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortD6" scoped="" ref="0x4056d0a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056d278"/>
        <function-ref name="isInput" scoped="" ref="0x4056d358"/>
        <function-ref name="toggle" scoped="" ref="0x4056d438"/>
        <function-ref name="isOutput" scoped="" ref="0x4056d518"/>
        <function-ref name="get" scoped="" ref="0x4056d5f8"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056d6d8"/>
        <function-ref name="set" scoped="" ref="0x4056d7b8"/>
        <function-ref name="clr" scoped="" ref="0x4056d898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortG2" ref="0x4057ddc8" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortG2" scoped="" ref="0x4057ddc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4057c010"/>
        <function-ref name="isInput" scoped="" ref="0x4057c0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4057c1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4057c2b0"/>
        <function-ref name="get" scoped="" ref="0x4057c390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4057c470"/>
        <function-ref name="set" scoped="" ref="0x4057c550"/>
        <function-ref name="clr" scoped="" ref="0x4057c630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortE0" ref="0x4056c4b0" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortE0" scoped="" ref="0x4056c4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4056c688"/>
        <function-ref name="isInput" scoped="" ref="0x4056c768"/>
        <function-ref name="toggle" scoped="" ref="0x4056c848"/>
        <function-ref name="isOutput" scoped="" ref="0x4056c928"/>
        <function-ref name="get" scoped="" ref="0x4056ca08"/>
        <function-ref name="makeOutput" scoped="" ref="0x4056cae8"/>
        <function-ref name="set" scoped="" ref="0x4056cbc8"/>
        <function-ref name="clr" scoped="" ref="0x4056cca8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortC7" ref="0x40564750" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortC7" scoped="" ref="0x40564750"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40564928"/>
        <function-ref name="isInput" scoped="" ref="0x40564a08"/>
        <function-ref name="toggle" scoped="" ref="0x40564ae8"/>
        <function-ref name="isOutput" scoped="" ref="0x40564bc8"/>
        <function-ref name="get" scoped="" ref="0x40564ca8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40564d88"/>
        <function-ref name="set" scoped="" ref="0x40564e68"/>
        <function-ref name="clr" scoped="" ref="0x40571010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortA3" ref="0x40556c08" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortA3" scoped="" ref="0x40556c08"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40556de0"/>
        <function-ref name="isInput" scoped="" ref="0x40556ec0"/>
        <function-ref name="toggle" scoped="" ref="0x40563010"/>
        <function-ref name="isOutput" scoped="" ref="0x405630f0"/>
        <function-ref name="get" scoped="" ref="0x405631d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405632b0"/>
        <function-ref name="set" scoped="" ref="0x40563390"/>
        <function-ref name="clr" scoped="" ref="0x40563470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PortB5" ref="0x4055d210" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOC.nc">
      <component-ref qname="AtmegaGeneralIOC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PortB5" scoped="" ref="0x4055d210"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4055d3e8"/>
        <function-ref name="isInput" scoped="" ref="0x4055d4c8"/>
        <function-ref name="toggle" scoped="" ref="0x4055d5a8"/>
        <function-ref name="isOutput" scoped="" ref="0x4055d688"/>
        <function-ref name="get" scoped="" ref="0x4055d768"/>
        <function-ref name="makeOutput" scoped="" ref="0x4055d848"/>
        <function-ref name="set" scoped="" ref="0x4055d928"/>
        <function-ref name="clr" scoped="" ref="0x4055da08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405865c8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405865c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405867b0"/>
        <function-ref name="isInput" scoped="" ref="0x40586890"/>
        <function-ref name="toggle" scoped="" ref="0x40586970"/>
        <function-ref name="isOutput" scoped="" ref="0x40586a50"/>
        <function-ref name="get" scoped="" ref="0x40586b30"/>
        <function-ref name="makeOutput" scoped="" ref="0x40586c10"/>
        <function-ref name="set" scoped="" ref="0x40586cf0"/>
        <function-ref name="clr" scoped="" ref="0x40586dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40595df0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortB"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40595df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40594010"/>
        <function-ref name="isInput" scoped="" ref="0x405940f0"/>
        <function-ref name="toggle" scoped="" ref="0x405941d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405942b0"/>
        <function-ref name="get" scoped="" ref="0x40594390"/>
        <function-ref name="makeOutput" scoped="" ref="0x40594470"/>
        <function-ref name="set" scoped="" ref="0x40594550"/>
        <function-ref name="clr" scoped="" ref="0x40594630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x40590690" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x40590690"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40590878"/>
        <function-ref name="isInput" scoped="" ref="0x40590958"/>
        <function-ref name="toggle" scoped="" ref="0x40590a38"/>
        <function-ref name="isOutput" scoped="" ref="0x40590b18"/>
        <function-ref name="get" scoped="" ref="0x40590bf8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40590cd8"/>
        <function-ref name="set" scoped="" ref="0x40590db8"/>
        <function-ref name="clr" scoped="" ref="0x40590e98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x4059df28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortD"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x4059df28"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4059c120"/>
        <function-ref name="isInput" scoped="" ref="0x4059c200"/>
        <function-ref name="toggle" scoped="" ref="0x4059c2e0"/>
        <function-ref name="isOutput" scoped="" ref="0x4059c3c0"/>
        <function-ref name="get" scoped="" ref="0x4059c4a0"/>
        <function-ref name="makeOutput" scoped="" ref="0x4059c580"/>
        <function-ref name="set" scoped="" ref="0x4059c660"/>
        <function-ref name="clr" scoped="" ref="0x4059c740"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405997a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortE"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405997a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40599990"/>
        <function-ref name="isInput" scoped="" ref="0x40599a70"/>
        <function-ref name="toggle" scoped="" ref="0x40599b50"/>
        <function-ref name="isOutput" scoped="" ref="0x40599c30"/>
        <function-ref name="get" scoped="" ref="0x40599d10"/>
        <function-ref name="makeOutput" scoped="" ref="0x40599df0"/>
        <function-ref name="set" scoped="" ref="0x40599ed0"/>
        <function-ref name="clr" scoped="" ref="0x40598010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405a4068" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortF"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405a4068"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a4250"/>
        <function-ref name="isInput" scoped="" ref="0x405a4330"/>
        <function-ref name="toggle" scoped="" ref="0x405a4410"/>
        <function-ref name="isOutput" scoped="" ref="0x405a44f0"/>
        <function-ref name="get" scoped="" ref="0x405a45d0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a46b0"/>
        <function-ref name="set" scoped="" ref="0x405a4790"/>
        <function-ref name="clr" scoped="" ref="0x405a4870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pin" ref="0x405a18a0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaGeneralIOP.nc">
      <component-ref qname="AtmegaGeneralIOC.PortG"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pin" scoped="" ref="0x405a18a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405a1a88"/>
        <function-ref name="isInput" scoped="" ref="0x405a1b68"/>
        <function-ref name="toggle" scoped="" ref="0x405a1c48"/>
        <function-ref name="isOutput" scoped="" ref="0x405a1d28"/>
        <function-ref name="get" scoped="" ref="0x405a1e08"/>
        <function-ref name="makeOutput" scoped="" ref="0x405a1ee8"/>
        <function-ref name="set" scoped="" ref="0x405a0010"/>
        <function-ref name="clr" scoped="" ref="0x405a00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x405c0438" loc="18:/opt/tinyos-2.x/tos/system/NoPinC.nc">
      <component-ref qname="HplStm25pPinsC.NoPinC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x405c0438"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405c0610"/>
        <function-ref name="isInput" scoped="" ref="0x405c06f0"/>
        <function-ref name="toggle" scoped="" ref="0x405c07d0"/>
        <function-ref name="isOutput" scoped="" ref="0x405c08b0"/>
        <function-ref name="get" scoped="" ref="0x405c0990"/>
        <function-ref name="makeOutput" scoped="" ref="0x405c0a70"/>
        <function-ref name="set" scoped="" ref="0x405c0b50"/>
        <function-ref name="clr" scoped="" ref="0x405c0c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40529cd0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningC.nc">
      <component-ref qname="BatteryWarningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40529cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40529ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x405d18f0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchC.nc">
      <component-ref qname="BatterySwitchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405d18f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405d1f18"/>
        <function-ref name="readDone" scoped="" ref="0x405d3188"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x405cf0b0" loc="3:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405cf0b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405cf6d8"/>
        <function-ref name="readDone" scoped="" ref="0x405cf930"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x405cfc88" loc="4:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x405cfc88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x405cfe60"/>
        <function-ref name="isInput" scoped="" ref="0x405cd010"/>
        <function-ref name="toggle" scoped="" ref="0x405cd0f0"/>
        <function-ref name="isOutput" scoped="" ref="0x405cd1d0"/>
        <function-ref name="get" scoped="" ref="0x405cd2b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x405cd390"/>
        <function-ref name="set" scoped="" ref="0x405cd470"/>
        <function-ref name="clr" scoped="" ref="0x405cd550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x405d5210" loc="5:/opt/tinyos-2.x/tos/platforms/ucmini/BatterySwitchP.nc">
      <component-ref qname="BatterySwitchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405d5210"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405dcd58"/>
        <function-ref name="fired" scoped="" ref="0x405dc010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405dc718"/>
        <function-ref name="isOneShot" scoped="" ref="0x405dc4c0"/>
        <function-ref name="getdt" scoped="" ref="0x405db268"/>
        <function-ref name="gett0" scoped="" ref="0x405db010"/>
        <function-ref name="isRunning" scoped="" ref="0x405dc268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405d5838"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405dca38"/>
        <function-ref name="startOneShot" scoped="" ref="0x405d5ab8"/>
        <function-ref name="stop" scoped="" ref="0x405d5d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x405d0330" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="BatterySwitchC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x405d0330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e1e38"/>
        <function-ref name="fired" scoped="" ref="0x405e10f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405e17f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x405e15a0"/>
        <function-ref name="getdt" scoped="" ref="0x4072b310"/>
        <function-ref name="gett0" scoped="" ref="0x4072b0b8"/>
        <function-ref name="isRunning" scoped="" ref="0x405e1348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405d0958"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405e1b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x405d0bd8"/>
        <function-ref name="stop" scoped="" ref="0x405d0e58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TimerMilli" ref="0x405dec38" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/TimerMilliP.nc">
      <component-ref qname="TimerMilliP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerMilli" scoped="" ref="0x405dec38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x405e9730"/>
        <function-ref name="fired" scoped="" ref="0x405ea9d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x405e90f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x405eae80"/>
        <function-ref name="getdt" scoped="" ref="0x405e9be0"/>
        <function-ref name="gett0" scoped="" ref="0x405e9988"/>
        <function-ref name="isRunning" scoped="" ref="0x405eac28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x405ea278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x405e9410"/>
        <function-ref name="startOneShot" scoped="" ref="0x405ea4f8"/>
        <function-ref name="stop" scoped="" ref="0x405ea778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x405e7f20" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x405e7f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406e33e8"/>
        <function-ref name="fired" scoped="" ref="0x405e6ba0"/>
        <function-ref name="startAt" scoped="" ref="0x406e30a8"/>
        <function-ref name="isRunning" scoped="" ref="0x405e6e18"/>
        <function-ref name="getAlarm" scoped="" ref="0x406e3660"/>
        <function-ref name="start" scoped="" ref="0x405e6688"/>
        <function-ref name="stop" scoped="" ref="0x405e6928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x419e81f8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x419e81f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419e76c8"/>
        <function-ref name="fired" scoped="" ref="0x419e8e60"/>
        <function-ref name="startAt" scoped="" ref="0x419e7388"/>
        <function-ref name="isRunning" scoped="" ref="0x419e7110"/>
        <function-ref name="getAlarm" scoped="" ref="0x419e7940"/>
        <function-ref name="start" scoped="" ref="0x419e8948"/>
        <function-ref name="stop" scoped="" ref="0x419e8be8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41a39cb8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41a39cb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41a37778"/>
        <function-ref name="test" scoped="" ref="0x41a38aa8"/>
        <function-ref name="fired" scoped="" ref="0x41a38830"/>
        <function-ref name="force" scoped="" ref="0x41a37c90"/>
        <function-ref name="get" scoped="" ref="0x41a38318"/>
        <function-ref name="reset" scoped="" ref="0x41a38d20"/>
        <function-ref name="getMode" scoped="" ref="0x41a37a18"/>
        <function-ref name="isOn" scoped="" ref="0x41a37500"/>
        <function-ref name="set" scoped="" ref="0x41a38590"/>
        <function-ref name="start" scoped="" ref="0x41a37010"/>
        <function-ref name="stop" scoped="" ref="0x41a37288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41a3d270" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41a3d270"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41a3c728"/>
        <function-ref name="fired" scoped="" ref="0x41a3ded8"/>
        <function-ref name="startAt" scoped="" ref="0x41a3c3e8"/>
        <function-ref name="isRunning" scoped="" ref="0x41a3c170"/>
        <function-ref name="getAlarm" scoped="" ref="0x41a3c9a0"/>
        <function-ref name="start" scoped="" ref="0x41a3d9c0"/>
        <function-ref name="stop" scoped="" ref="0x41a3dc60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a3edf8" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a3edf8"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a3d010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41a3cc70" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41a3cc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41a39778"/>
        <function-ref name="test" scoped="" ref="0x41a3aa78"/>
        <function-ref name="get" scoped="" ref="0x41a3a2e8"/>
        <function-ref name="reset" scoped="" ref="0x41a3acf0"/>
        <function-ref name="getMode" scoped="" ref="0x41a39a18"/>
        <function-ref name="overflow" scoped="" ref="0x41a3a800"/>
        <function-ref name="isOn" scoped="" ref="0x41a39500"/>
        <function-ref name="set" scoped="" ref="0x41a3a560"/>
        <function-ref name="start" scoped="" ref="0x41a39010"/>
        <function-ref name="stop" scoped="" ref="0x41a39288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40618e60" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40618e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406258d8"/>
        <function-ref name="test" scoped="" ref="0x40627c68"/>
        <function-ref name="get" scoped="" ref="0x406274d8"/>
        <function-ref name="reset" scoped="" ref="0x40627ee0"/>
        <function-ref name="getMode" scoped="" ref="0x40625b78"/>
        <function-ref name="overflow" scoped="" ref="0x406279f0"/>
        <function-ref name="isOn" scoped="" ref="0x40625660"/>
        <function-ref name="set" scoped="" ref="0x40627750"/>
        <function-ref name="start" scoped="" ref="0x40625170"/>
        <function-ref name="stop" scoped="" ref="0x406253e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x4062d5a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x4062d5a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40631010"/>
        <function-ref name="test" scoped="" ref="0x406203a8"/>
        <function-ref name="fired" scoped="" ref="0x40620130"/>
        <function-ref name="get" scoped="" ref="0x4062dbf0"/>
        <function-ref name="reset" scoped="" ref="0x40620620"/>
        <function-ref name="getMode" scoped="" ref="0x406312b0"/>
        <function-ref name="isOn" scoped="" ref="0x40620d88"/>
        <function-ref name="set" scoped="" ref="0x4062de68"/>
        <function-ref name="start" scoped="" ref="0x40620898"/>
        <function-ref name="stop" scoped="" ref="0x40620b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40624258" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacC.nc">
      <component-ref qname="HplAtmRfa1TimerMacC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40624258"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40623ca0"/>
        <function-ref name="test" scoped="" ref="0x40623048"/>
        <function-ref name="fired" scoped="" ref="0x40624db8"/>
        <function-ref name="force" scoped="" ref="0x40621288"/>
        <function-ref name="get" scoped="" ref="0x406248a0"/>
        <function-ref name="reset" scoped="" ref="0x406232c0"/>
        <function-ref name="getMode" scoped="" ref="0x40621010"/>
        <function-ref name="isOn" scoped="" ref="0x40623a28"/>
        <function-ref name="set" scoped="" ref="0x40624b18"/>
        <function-ref name="start" scoped="" ref="0x40623538"/>
        <function-ref name="stop" scoped="" ref="0x406237b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40639010" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40639010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40638a68"/>
        <function-ref name="test" scoped="" ref="0x40639de8"/>
        <function-ref name="fired" scoped="" ref="0x40639b70"/>
        <function-ref name="force" scoped="" ref="0x40636010"/>
        <function-ref name="get" scoped="" ref="0x40639658"/>
        <function-ref name="reset" scoped="" ref="0x40638088"/>
        <function-ref name="getMode" scoped="" ref="0x40638d08"/>
        <function-ref name="isOn" scoped="" ref="0x406387f0"/>
        <function-ref name="set" scoped="" ref="0x406398d0"/>
        <function-ref name="start" scoped="" ref="0x40638300"/>
        <function-ref name="stop" scoped="" ref="0x40638578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40640be8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40640be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40640dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40636408" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40636408"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40635ee0"/>
        <function-ref name="test" scoped="" ref="0x40635288"/>
        <function-ref name="fired" scoped="" ref="0x40635010"/>
        <function-ref name="force" scoped="" ref="0x40634438"/>
        <function-ref name="get" scoped="" ref="0x40636a50"/>
        <function-ref name="reset" scoped="" ref="0x40635500"/>
        <function-ref name="getMode" scoped="" ref="0x406341c0"/>
        <function-ref name="isOn" scoped="" ref="0x40635c68"/>
        <function-ref name="set" scoped="" ref="0x40636cc8"/>
        <function-ref name="start" scoped="" ref="0x40635778"/>
        <function-ref name="stop" scoped="" ref="0x406359f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40631e40" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40631e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4063a8d8"/>
        <function-ref name="test" scoped="" ref="0x4062ac68"/>
        <function-ref name="get" scoped="" ref="0x4062a4d8"/>
        <function-ref name="reset" scoped="" ref="0x4062aee0"/>
        <function-ref name="getMode" scoped="" ref="0x4063ab78"/>
        <function-ref name="overflow" scoped="" ref="0x4062a9f0"/>
        <function-ref name="isOn" scoped="" ref="0x4063a660"/>
        <function-ref name="set" scoped="" ref="0x4062a750"/>
        <function-ref name="start" scoped="" ref="0x4063a170"/>
        <function-ref name="stop" scoped="" ref="0x4063a3e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x4063f010" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x4063f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x4063f1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SfdCapture" ref="0x40643be0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x40643be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40640690"/>
        <function-ref name="test" scoped="" ref="0x40642a08"/>
        <function-ref name="fired" scoped="" ref="0x40642790"/>
        <function-ref name="get" scoped="" ref="0x40642278"/>
        <function-ref name="reset" scoped="" ref="0x40642c80"/>
        <function-ref name="getMode" scoped="" ref="0x40640930"/>
        <function-ref name="isOn" scoped="" ref="0x40640418"/>
        <function-ref name="set" scoped="" ref="0x406424f0"/>
        <function-ref name="start" scoped="" ref="0x40642ef8"/>
        <function-ref name="stop" scoped="" ref="0x406401a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40634830" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1TimerMacP.nc">
      <component-ref qname="HplAtmRfa1TimerMacP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40634830"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406432c0"/>
        <function-ref name="test" scoped="" ref="0x40632628"/>
        <function-ref name="fired" scoped="" ref="0x406323b0"/>
        <function-ref name="force" scoped="" ref="0x406437d8"/>
        <function-ref name="get" scoped="" ref="0x40634e78"/>
        <function-ref name="reset" scoped="" ref="0x406328a0"/>
        <function-ref name="getMode" scoped="" ref="0x40643560"/>
        <function-ref name="isOn" scoped="" ref="0x40643048"/>
        <function-ref name="set" scoped="" ref="0x40632110"/>
        <function-ref name="start" scoped="" ref="0x40632b18"/>
        <function-ref name="stop" scoped="" ref="0x40632d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerOverride" ref="0x4043c6b0" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x4043c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x4043c888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x4043f958" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x4043f958"/></type-interface>
      <attribute-value>
        <attribute-ref name="atmostonce" ref="0x4034f3d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="atmostonce" ref="0x4034f3d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x4043fb30"/>
        <function-ref name="led0Toggle" scoped="" ref="0x4043fc10"/>
        <function-ref name="led1On" scoped="" ref="0x4043fcf0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x4043fdd0"/>
        <function-ref name="led3Off" scoped="" ref="0x4043feb0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40435010"/>
        <function-ref name="get" scoped="" ref="0x404350f0"/>
        <function-ref name="led1Off" scoped="" ref="0x404351d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x404352b0"/>
        <function-ref name="led3On" scoped="" ref="0x40435390"/>
        <function-ref name="led0On" scoped="" ref="0x40435470"/>
        <function-ref name="led2Off" scoped="" ref="0x40435550"/>
        <function-ref name="led2On" scoped="" ref="0x40435630"/>
        <function-ref name="set" scoped="" ref="0x40435790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuSleep" ref="0x4035b458" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4035b458"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4035b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerState" ref="0x40433148" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/McuSleepC.nc">
      <component-ref qname="McuSleepC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40433148"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40433320"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40690cf0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Counter62khz32C.nc">
      <component-ref qname="Counter62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40690cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40694478"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40694968"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406946f0"/>
        <function-ref name="overflow" scoped="" ref="0x40694be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4068e010" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4068e010"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4068e1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4068e448" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4068e448"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4068eb98"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406aa0a8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4068ee10"/>
        <function-ref name="overflow" scoped="" ref="0x406aa320"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x406aa5f0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="Counter62khz32C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x406aa5f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x406a7068"/>
        <function-ref name="test" scoped="" ref="0x406a83e8"/>
        <function-ref name="get" scoped="" ref="0x406aac38"/>
        <function-ref name="reset" scoped="" ref="0x406a8660"/>
        <function-ref name="getMode" scoped="" ref="0x406a7308"/>
        <function-ref name="overflow" scoped="" ref="0x406a8170"/>
        <function-ref name="isOn" scoped="" ref="0x406a8dc8"/>
        <function-ref name="set" scoped="" ref="0x406aaeb0"/>
        <function-ref name="start" scoped="" ref="0x406a88d8"/>
        <function-ref name="stop" scoped="" ref="0x406a8b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406a4768" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMilli32C.nc">
      <component-ref qname="CounterMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406a4768"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406a4eb8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406a13c8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406a1150"/>
        <function-ref name="overflow" scoped="" ref="0x406a1640"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x406b6380" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x406b6380"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406b6ad0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406c8010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406b6d48"/>
        <function-ref name="overflow" scoped="" ref="0x406c8288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x406b10c0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMilli32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x406b10c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x406b1810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x406b1d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x406b1a88"/>
        <function-ref name="overflow" scoped="" ref="0x406b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x419e5b58" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x419e5b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419e3068"/>
        <function-ref name="fired" scoped="" ref="0x419e4820"/>
        <function-ref name="startAt" scoped="" ref="0x419e4d10"/>
        <function-ref name="isRunning" scoped="" ref="0x419e4a98"/>
        <function-ref name="getAlarm" scoped="" ref="0x419e32e0"/>
        <function-ref name="start" scoped="" ref="0x419e4308"/>
        <function-ref name="stop" scoped="" ref="0x419e45a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x419e2870" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x419e2870"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419e1d58"/>
        <function-ref name="fired" scoped="" ref="0x419e1528"/>
        <function-ref name="startAt" scoped="" ref="0x419e1a18"/>
        <function-ref name="isRunning" scoped="" ref="0x419e17a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x419df010"/>
        <function-ref name="start" scoped="" ref="0x419e1010"/>
        <function-ref name="stop" scoped="" ref="0x419e12b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x419e3630" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="TimerMilliP.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x419e3630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x419e3d80"/>
        <function-ref name="clearOverflow" scoped="" ref="0x419e2288"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x419e2010"/>
        <function-ref name="overflow" scoped="" ref="0x419e2500"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="fired" ref="0x40704658" loc="74:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="fired" scoped="" ref="0x40704658"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40704830"/>
        <function-ref name="runTask" scoped="" ref="0x40704910"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x406f3cc8" loc="49:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x406f3cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40704190"/>
        <function-ref name="fired" scoped="" ref="0x406f1950"/>
        <function-ref name="startAt" scoped="" ref="0x406f1e40"/>
        <function-ref name="isRunning" scoped="" ref="0x406f1bc8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40704408"/>
        <function-ref name="start" scoped="" ref="0x406f1438"/>
        <function-ref name="stop" scoped="" ref="0x406f16d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x406e2968" loc="48:/opt/tinyos-2.x/tos/lib/timer/AlarmToTimerC.nc">
      <component-ref qname="TimerMilliP.AlarmToTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x406e2968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x406f34c8"/>
        <function-ref name="fired" scoped="" ref="0x406e1768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x406e1e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x406e1c18"/>
        <function-ref name="getdt" scoped="" ref="0x406f3978"/>
        <function-ref name="gett0" scoped="" ref="0x406f3720"/>
        <function-ref name="isRunning" scoped="" ref="0x406e19c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x406e1010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x406f31a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x406e1290"/>
        <function-ref name="stop" scoped="" ref="0x406e1510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="updateFromTimer" ref="0x4072e2b8" loc="71:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="updateFromTimer" scoped="" ref="0x4072e2b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4072e490"/>
        <function-ref name="runTask" scoped="" ref="0x4072e570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimerFrom" ref="0x407300c0" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimerFrom" scoped="" ref="0x407300c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4072fba8"/>
        <function-ref name="fired" scoped="" ref="0x40730e40"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4072f568"/>
        <function-ref name="isOneShot" scoped="" ref="0x4072f310"/>
        <function-ref name="getdt" scoped="" ref="0x4072e068"/>
        <function-ref name="gett0" scoped="" ref="0x4072fe00"/>
        <function-ref name="isRunning" scoped="" ref="0x4072f0b8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x407306e8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4072f888"/>
        <function-ref name="startOneShot" scoped="" ref="0x40730968"/>
        <function-ref name="stop" scoped="" ref="0x40730be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x40702cc8" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeTimerC.nc">
      <component-ref qname="TimerMilliP.VirtualizeTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x40702cc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4071c8d8"/>
        <function-ref name="fired" scoped="" ref="0x40701ad8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4071c278"/>
        <function-ref name="isOneShot" scoped="" ref="0x4071c010"/>
        <function-ref name="getdt" scoped="" ref="0x4071cda8"/>
        <function-ref name="gett0" scoped="" ref="0x4071cb40"/>
        <function-ref name="isRunning" scoped="" ref="0x40701d40"/>
        <function-ref name="startPeriodic" scoped="" ref="0x40701350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4071c5a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x407015e0"/>
        <function-ref name="stop" scoped="" ref="0x40701870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x405d44c8" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageC.nc">
      <component-ref qname="BatteryWarningC.VoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x405d44c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x405d4af0"/>
        <function-ref name="readDone" scoped="" ref="0x405d4d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40728ba0" loc="2:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageArbiterP.nc">
      <component-ref qname="VoltageArbiterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40728ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4073b1e0"/>
        <function-ref name="readDone" scoped="" ref="0x4073b438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x4073bde8" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/SingleVoltageC.nc">
      <component-ref qname="SingleVoltageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x4073bde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40737448"/>
        <function-ref name="readDone" scoped="" ref="0x407376a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x40735d20" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x40735d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x40735ef8"/>
        <function-ref name="configure" scoped="" ref="0x408b6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40736c98" loc="22:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40736c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x407352e8"/>
        <function-ref name="readDone" scoped="" ref="0x40735540"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40735848" loc="24:/opt/tinyos-2.x/tos/chips/atm128/adc/AdcReadClientC.nc">
      <component-ref qname="SingleVoltageC.AdcReadClientC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40735848"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40735a20"/>
        <function-ref name="getChannel" scoped="" ref="0x40735b00"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40735be0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40743480" loc="19:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40743480"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40743aa8"/>
        <function-ref name="readDone" scoped="" ref="0x40743d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x4073f958" loc="20:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x4073f958"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40741010"/>
        <function-ref name="readDone" scoped="" ref="0x40741288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x40741940" loc="23:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x40741940"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40741b18"/>
        <function-ref name="getChannel" scoped="" ref="0x40741bf8"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40741cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x407401b8" loc="24:/opt/tinyos-2.x/tos/chips/atm1281/adc/WireAdcP.nc">
      <component-ref qname="WireAdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407401b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40740390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40740470"/>
        <function-ref name="request" scoped="" ref="0x40740550"/>
        <function-ref name="granted" scoped="" ref="0x40740630"/>
        <function-ref name="isOwner" scoped="" ref="0x40740710"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4074d618" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4074d618"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4074d7f0"/>
        <function-ref name="configure" scoped="" ref="0x4074d8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x40747db0" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x40747db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4074d010"/>
        <function-ref name="dataReady" scoped="" ref="0x4074d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x4074bbd8" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x4074bbd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4074bdb0"/>
        <function-ref name="cancel" scoped="" ref="0x4074be90"/>
        <function-ref name="dataReady" scoped="" ref="0x4074e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4074f1b8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcC.nc">
      <component-ref qname="Atm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4074f1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4074f390"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4074f470"/>
        <function-ref name="request" scoped="" ref="0x4074f550"/>
        <function-ref name="granted" scoped="" ref="0x4074f630"/>
        <function-ref name="isOwner" scoped="" ref="0x4074f710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4075b2d8" loc="87:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4075b2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4075b4b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcMultiple" ref="0x4075a110" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcMultiple" scoped="" ref="0x4075a110"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x4075a2e8"/>
        <function-ref name="dataReady" scoped="" ref="0x4075a3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcSingle" ref="0x40758b58" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40758b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40758d30"/>
        <function-ref name="cancel" scoped="" ref="0x40758e10"/>
        <function-ref name="dataReady" scoped="" ref="0x40758ef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtm128Adc" ref="0x40764dd8" loc="93:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40764dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40759010"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x407590f0"/>
        <function-ref name="setPrescaler" scoped="" ref="0x407591d0"/>
        <function-ref name="isEnabled" scoped="" ref="0x407592b0"/>
        <function-ref name="setChannel" scoped="" ref="0x40759390"/>
        <function-ref name="enableAdc" scoped="" ref="0x40759470"/>
        <function-ref name="setAdlar" scoped="" ref="0x40759550"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40759630"/>
        <function-ref name="isComplete" scoped="" ref="0x40759710"/>
        <function-ref name="cancel" scoped="" ref="0x407597f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x407598d0"/>
        <function-ref name="getRef" scoped="" ref="0x407599b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40759a90"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40759bf0"/>
        <function-ref name="startConversion" scoped="" ref="0x40759cd0"/>
        <function-ref name="isStarted" scoped="" ref="0x40759db0"/>
        <function-ref name="getChannel" scoped="" ref="0x40759e90"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40757010"/>
        <function-ref name="setRef" scoped="" ref="0x407570f0"/>
        <function-ref name="getAdcsra" scoped="" ref="0x407571d0"/>
        <function-ref name="setContinuous" scoped="" ref="0x407572b0"/>
        <function-ref name="getValue" scoped="" ref="0x40757390"/>
        <function-ref name="dataReady" scoped="" ref="0x40757470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncStdControl" ref="0x407586c8" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407586c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407588a0"/>
        <function-ref name="stop" scoped="" ref="0x40758980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40757648" loc="94:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/Atm128AdcP.nc">
      <component-ref qname="Atm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40757648"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40757820"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40757900"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x407579e0"/>
        <function-ref name="actualMicro" scoped="" ref="0x40757ac0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40757ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40749588" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcC.nc">
      <component-ref qname="HplAtm128AdcC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40749588"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40749760"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x40749840"/>
        <function-ref name="setPrescaler" scoped="" ref="0x40749920"/>
        <function-ref name="isEnabled" scoped="" ref="0x40749a00"/>
        <function-ref name="setChannel" scoped="" ref="0x40749ae0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40749bc0"/>
        <function-ref name="setAdlar" scoped="" ref="0x40749ca0"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40749d80"/>
        <function-ref name="isComplete" scoped="" ref="0x40749e60"/>
        <function-ref name="cancel" scoped="" ref="0x40789010"/>
        <function-ref name="disableAdc" scoped="" ref="0x407890f0"/>
        <function-ref name="getRef" scoped="" ref="0x407891d0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x407892b0"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x40789410"/>
        <function-ref name="startConversion" scoped="" ref="0x407894f0"/>
        <function-ref name="isStarted" scoped="" ref="0x407895d0"/>
        <function-ref name="getChannel" scoped="" ref="0x407896b0"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40789790"/>
        <function-ref name="setRef" scoped="" ref="0x40789870"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40789950"/>
        <function-ref name="setContinuous" scoped="" ref="0x40789a30"/>
        <function-ref name="getValue" scoped="" ref="0x40789b10"/>
        <function-ref name="dataReady" scoped="" ref="0x40789bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40784ed8" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40784ed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x407830c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtm128Adc" ref="0x40788658" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtm128Adc" scoped="" ref="0x40788658"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Adc"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40788830"/>
        <function-ref name="isAdlarOn" scoped="" ref="0x40788910"/>
        <function-ref name="setPrescaler" scoped="" ref="0x407889f0"/>
        <function-ref name="isEnabled" scoped="" ref="0x40788ad0"/>
        <function-ref name="setChannel" scoped="" ref="0x40788bb0"/>
        <function-ref name="enableAdc" scoped="" ref="0x40788c90"/>
        <function-ref name="setAdlar" scoped="" ref="0x40788d70"/>
        <function-ref name="enableInterruption" scoped="" ref="0x40788e50"/>
        <function-ref name="isComplete" scoped="" ref="0x40784010"/>
        <function-ref name="cancel" scoped="" ref="0x407840f0"/>
        <function-ref name="disableAdc" scoped="" ref="0x407841d0"/>
        <function-ref name="getRef" scoped="" ref="0x407842b0"/>
        <function-ref name="disableInterruption" scoped="" ref="0x40784390"/>
        <function-ref name="resetInterrupt" scoped="" ref="0x407844f0"/>
        <function-ref name="startConversion" scoped="" ref="0x407845d0"/>
        <function-ref name="isStarted" scoped="" ref="0x407846b0"/>
        <function-ref name="getChannel" scoped="" ref="0x40784790"/>
        <function-ref name="setAdcsra" scoped="" ref="0x40784870"/>
        <function-ref name="setRef" scoped="" ref="0x40784950"/>
        <function-ref name="getAdcsra" scoped="" ref="0x40784a30"/>
        <function-ref name="setContinuous" scoped="" ref="0x40784b10"/>
        <function-ref name="getValue" scoped="" ref="0x40784bf0"/>
        <function-ref name="dataReady" scoped="" ref="0x40784cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x407832a8" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128AdcP.nc">
      <component-ref qname="HplAtm128AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x407832a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40783480"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x407a4ae0" loc="92:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x407a4ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x407a4cc8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407a4da8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x407eea50" loc="96:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x407eea50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x407eec38"/>
        <function-ref name="configure" scoped="" ref="0x407eed18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x407a4ee8" loc="93:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407a4ee8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407ee0e0"/>
        <function-ref name="requested" scoped="" ref="0x407ee1c0"/>
        <function-ref name="granted" scoped="" ref="0x407ee2a0"/>
        <function-ref name="isOwner" scoped="" ref="0x407ee380"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407ee460"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x407a43a0" loc="91:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x407a43a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407a4588"/>
        <function-ref name="immediateRequest" scoped="" ref="0x407a4668"/>
        <function-ref name="request" scoped="" ref="0x407a4748"/>
        <function-ref name="granted" scoped="" ref="0x407a4828"/>
        <function-ref name="isOwner" scoped="" ref="0x407a4908"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x407ee5a0" loc="94:/opt/tinyos-2.x/tos/system/RoundRobinArbiterC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407ee5a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407ee778"/>
        <function-ref name="userId" scoped="" ref="0x407ee858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a58758" loc="44:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a58758"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a58930"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RoundRobinQueue" ref="0x41a58a90" loc="45:/opt/tinyos-2.x/tos/system/RoundRobinResourceQueueC.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoundRobinQueue" scoped="" ref="0x41a58a90"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a58c68"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a58d48"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a58e28"/>
        <function-ref name="dequeue" scoped="" ref="0x41a58f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41a553a8" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41a553a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41a55590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a55670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a54338" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a54338"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a54520"/>
        <function-ref name="configure" scoped="" ref="0x41a54600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41a54760" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41a54760"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a54938"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a54a18"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a54af8"/>
        <function-ref name="dequeue" scoped="" ref="0x41a54bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41a557b0" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a557b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a55988"/>
        <function-ref name="requested" scoped="" ref="0x41a55a68"/>
        <function-ref name="granted" scoped="" ref="0x41a55b48"/>
        <function-ref name="isOwner" scoped="" ref="0x41a55c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a55d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a54d18" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41a54d18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a54ef0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a53010"/>
        <function-ref name="led1On" scoped="" ref="0x41a530f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a531d0"/>
        <function-ref name="led3Off" scoped="" ref="0x41a532b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a53390"/>
        <function-ref name="get" scoped="" ref="0x41a53470"/>
        <function-ref name="led1Off" scoped="" ref="0x41a53550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41a53630"/>
        <function-ref name="led3On" scoped="" ref="0x41a53710"/>
        <function-ref name="led0On" scoped="" ref="0x41a537f0"/>
        <function-ref name="led2Off" scoped="" ref="0x41a538d0"/>
        <function-ref name="led2On" scoped="" ref="0x41a539b0"/>
        <function-ref name="set" scoped="" ref="0x41a53b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a57bf0" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a57bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a57dd8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a57eb8"/>
        <function-ref name="request" scoped="" ref="0x41a55010"/>
        <function-ref name="granted" scoped="" ref="0x41a550f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a551d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41a55e48" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a55e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a54050"/>
        <function-ref name="userId" scoped="" ref="0x41a54130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41a53c90" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="Atm128AdcC.AdcArbiter.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41a53c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a53e68"/>
        <function-ref name="runTask" scoped="" ref="0x41a52010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x407ebde8" loc="72:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x407ebde8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x407ea010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x407ea150" loc="73:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x407ea150"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x407ea328"/>
        <function-ref name="requested" scoped="" ref="0x407ea408"/>
        <function-ref name="granted" scoped="" ref="0x407ea4e8"/>
        <function-ref name="isOwner" scoped="" ref="0x407ea5c8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x407ea6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x407eb9f0" loc="70:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x407eb9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x407ebbc8"/>
        <function-ref name="stop" scoped="" ref="0x407ebca8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x407ea7e8" loc="74:/opt/tinyos-2.x/tos/lib/power/AsyncStdControlPowerManagerC.nc">
      <component-ref qname="Atm128AdcC.PM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x407ea7e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x407ea9c0"/>
        <function-ref name="userId" scoped="" ref="0x407eaaa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PowerDownCleanup" ref="0x41a9abf0" loc="62:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PowerDownCleanup" scoped="" ref="0x41a9abf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PowerDownCleanup"/>
      </instance>
      <interface-functions>
        <function-ref name="cleanup" scoped="" ref="0x41a9adc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceDefaultOwner" ref="0x41a9af08" loc="63:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a9af08"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a990f0"/>
        <function-ref name="requested" scoped="" ref="0x41a991d0"/>
        <function-ref name="granted" scoped="" ref="0x41a992b0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a99390"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a99470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AsyncStdControl" ref="0x41a9a7f8" loc="60:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncStdControl" scoped="" ref="0x41a9a7f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AsyncStdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41a9a9d0"/>
        <function-ref name="stop" scoped="" ref="0x41a9aab0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x41a995b0" loc="64:/opt/tinyos-2.x/tos/lib/power/AsyncPowerManagerP.nc">
      <component-ref qname="Atm128AdcC.PM.PowerManager"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a995b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a99788"/>
        <function-ref name="userId" scoped="" ref="0x41a99868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x40806088" loc="54:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x40806088"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x408067d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x408093d8" loc="48:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x408093d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40809a00"/>
        <function-ref name="readDone" scoped="" ref="0x40809c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadNow" ref="0x40808390" loc="49:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadNow" scoped="" ref="0x40808390"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadNow"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408089d8"/>
        <function-ref name="readDone" scoped="" ref="0x40808c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcConfig" ref="0x408078b8" loc="53:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408078b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x40807a90"/>
        <function-ref name="getChannel" scoped="" ref="0x40807b70"/>
        <function-ref name="getPrescaler" scoped="" ref="0x40807c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128AdcSingle" ref="0x40807040" loc="52:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcSingle" scoped="" ref="0x40807040"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcSingle"/>
      </instance>
      <interface-functions>
        <function-ref name="getData" scoped="" ref="0x40807218"/>
        <function-ref name="cancel" scoped="" ref="0x408072f8"/>
        <function-ref name="dataReady" scoped="" ref="0x408073d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="acquiredData" ref="0x40816c70" loc="104:/opt/tinyos-2.x/tos/chips/atm1281/adc/AdcP.nc">
      <component-ref qname="AdcP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="acquiredData" scoped="" ref="0x40816c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40816e48"/>
        <function-ref name="runTask" scoped="" ref="0x40816f28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x4080ce30" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/BusyWaitMicroC.nc">
      <component-ref qname="BusyWaitMicroC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x4080ce30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40822590"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BusyWait" ref="0x408215d8" loc="53:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x408215d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x40821d28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x408320c0" loc="54:/opt/tinyos-2.x/tos/lib/timer/BusyWaitCounterC.nc">
      <component-ref qname="BusyWaitMicroC.BusyWaitCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x408320c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40832810"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40832d00"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40832a88"/>
        <function-ref name="overflow" scoped="" ref="0x40831010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x4082d268" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x4082d268"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4082d9b8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4082dea8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4082dc30"/>
        <function-ref name="overflow" scoped="" ref="0x4082c150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4082f010" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="BusyWaitMicroC.CounterMicro16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4082f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4082f760"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4082fc50"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x4082f9d8"/>
        <function-ref name="overflow" scoped="" ref="0x4082fec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4082cd88" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu16C.nc">
      <component-ref qname="CounterMcu16C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4082cd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x408294e8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x408299d8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40829760"/>
        <function-ref name="overflow" scoped="" ref="0x40829c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40842ec0" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40842ec0"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408400c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40840320" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40840320"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40840a70"/>
        <function-ref name="clearOverflow" scoped="" ref="0x4083f010"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40840ce8"/>
        <function-ref name="overflow" scoped="" ref="0x4083f288"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x4083f558" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounterP.nc">
      <component-ref qname="CounterMcu16C.AtmegaCounterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x4083f558"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4083c010"/>
        <function-ref name="test" scoped="" ref="0x4083e350"/>
        <function-ref name="get" scoped="" ref="0x4083fba0"/>
        <function-ref name="reset" scoped="" ref="0x4083e5c8"/>
        <function-ref name="getMode" scoped="" ref="0x4083c2b0"/>
        <function-ref name="overflow" scoped="" ref="0x4083e0d8"/>
        <function-ref name="isOn" scoped="" ref="0x4083ed30"/>
        <function-ref name="set" scoped="" ref="0x4083fe18"/>
        <function-ref name="start" scoped="" ref="0x4083e840"/>
        <function-ref name="stop" scoped="" ref="0x4083eab8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x4084d010" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x4084d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4084ba68"/>
        <function-ref name="test" scoped="" ref="0x4084dde8"/>
        <function-ref name="fired" scoped="" ref="0x4084db70"/>
        <function-ref name="get" scoped="" ref="0x4084d658"/>
        <function-ref name="reset" scoped="" ref="0x4084b088"/>
        <function-ref name="getMode" scoped="" ref="0x4084bd08"/>
        <function-ref name="isOn" scoped="" ref="0x4084b7f0"/>
        <function-ref name="set" scoped="" ref="0x4084d8d0"/>
        <function-ref name="start" scoped="" ref="0x4084b300"/>
        <function-ref name="stop" scoped="" ref="0x4084b578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x4083b858" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x4083b858"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408372c0"/>
        <function-ref name="test" scoped="" ref="0x40838648"/>
        <function-ref name="get" scoped="" ref="0x4083bea0"/>
        <function-ref name="reset" scoped="" ref="0x408388c0"/>
        <function-ref name="getMode" scoped="" ref="0x40837560"/>
        <function-ref name="overflow" scoped="" ref="0x408383d0"/>
        <function-ref name="isOn" scoped="" ref="0x40837048"/>
        <function-ref name="set" scoped="" ref="0x40838130"/>
        <function-ref name="start" scoped="" ref="0x40838b38"/>
        <function-ref name="stop" scoped="" ref="0x40838db0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Compare" ref="0x40837c28" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1C.nc">
      <component-ref qname="HplAtmRfa1Timer1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Compare" scoped="" ref="0x40837c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4084e698"/>
        <function-ref name="test" scoped="" ref="0x40836a28"/>
        <function-ref name="fired" scoped="" ref="0x408367b0"/>
        <function-ref name="force" scoped="" ref="0x4084ebb0"/>
        <function-ref name="get" scoped="" ref="0x40836298"/>
        <function-ref name="reset" scoped="" ref="0x40836ca0"/>
        <function-ref name="getMode" scoped="" ref="0x4084e938"/>
        <function-ref name="isOn" scoped="" ref="0x4084e420"/>
        <function-ref name="set" scoped="" ref="0x40836510"/>
        <function-ref name="start" scoped="" ref="0x40836f18"/>
        <function-ref name="stop" scoped="" ref="0x4084e1a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareA" ref="0x40845978" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareA" scoped="" ref="0x40845978"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40843418"/>
        <function-ref name="test" scoped="" ref="0x408447a0"/>
        <function-ref name="fired" scoped="" ref="0x40844528"/>
        <function-ref name="force" scoped="" ref="0x40843930"/>
        <function-ref name="get" scoped="" ref="0x40844010"/>
        <function-ref name="reset" scoped="" ref="0x40844a18"/>
        <function-ref name="getMode" scoped="" ref="0x408436b8"/>
        <function-ref name="isOn" scoped="" ref="0x408431a0"/>
        <function-ref name="set" scoped="" ref="0x40844288"/>
        <function-ref name="start" scoped="" ref="0x40844c90"/>
        <function-ref name="stop" scoped="" ref="0x40844f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Capture" ref="0x40856470" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Capture" scoped="" ref="0x40856470"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40855ee0"/>
        <function-ref name="test" scoped="" ref="0x40855288"/>
        <function-ref name="fired" scoped="" ref="0x40855010"/>
        <function-ref name="get" scoped="" ref="0x40856ab8"/>
        <function-ref name="reset" scoped="" ref="0x40855500"/>
        <function-ref name="getMode" scoped="" ref="0x408541c0"/>
        <function-ref name="isOn" scoped="" ref="0x40855c68"/>
        <function-ref name="set" scoped="" ref="0x40856d30"/>
        <function-ref name="start" scoped="" ref="0x40855778"/>
        <function-ref name="stop" scoped="" ref="0x408559f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40854478" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40854478"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40854650"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareB" ref="0x40843d28" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareB" scoped="" ref="0x40843d28"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4085a7b0"/>
        <function-ref name="test" scoped="" ref="0x4085cb20"/>
        <function-ref name="fired" scoped="" ref="0x4085c8a8"/>
        <function-ref name="force" scoped="" ref="0x4085acc8"/>
        <function-ref name="get" scoped="" ref="0x4085c390"/>
        <function-ref name="reset" scoped="" ref="0x4085cd98"/>
        <function-ref name="getMode" scoped="" ref="0x4085aa50"/>
        <function-ref name="isOn" scoped="" ref="0x4085a538"/>
        <function-ref name="set" scoped="" ref="0x4085c608"/>
        <function-ref name="start" scoped="" ref="0x4085a048"/>
        <function-ref name="stop" scoped="" ref="0x4085a2c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40854868" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40854868"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40854a40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CompareC" ref="0x40859100" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CompareC" scoped="" ref="0x40859100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x40858b50"/>
        <function-ref name="test" scoped="" ref="0x40859ed8"/>
        <function-ref name="fired" scoped="" ref="0x40859c60"/>
        <function-ref name="force" scoped="" ref="0x40856088"/>
        <function-ref name="get" scoped="" ref="0x40859748"/>
        <function-ref name="reset" scoped="" ref="0x40858170"/>
        <function-ref name="getMode" scoped="" ref="0x40858df0"/>
        <function-ref name="isOn" scoped="" ref="0x408588d8"/>
        <function-ref name="set" scoped="" ref="0x408599c0"/>
        <function-ref name="start" scoped="" ref="0x408583e8"/>
        <function-ref name="stop" scoped="" ref="0x40858660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4084a878" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/HplAtmRfa1Timer1P.nc">
      <component-ref qname="HplAtmRfa1Timer1P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4084a878"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x408452e0"/>
        <function-ref name="test" scoped="" ref="0x40847668"/>
        <function-ref name="get" scoped="" ref="0x4084aec0"/>
        <function-ref name="reset" scoped="" ref="0x408478e0"/>
        <function-ref name="getMode" scoped="" ref="0x40845580"/>
        <function-ref name="overflow" scoped="" ref="0x408473f0"/>
        <function-ref name="isOn" scoped="" ref="0x40845068"/>
        <function-ref name="set" scoped="" ref="0x40847150"/>
        <function-ref name="start" scoped="" ref="0x40847b58"/>
        <function-ref name="stop" scoped="" ref="0x40847dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x40824868" loc="24:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x40824868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40824ea0"/>
        <function-ref name="readDone" scoped="" ref="0x4082a130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x4082a590" loc="26:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x4082a590"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x4082abc8"/>
        <function-ref name="readDone" scoped="" ref="0x4082ae30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x408ba1c0" loc="27:/opt/tinyos-2.x/tos/system/ArbitratedReadC.nc">
      <component-ref qname="WireAdcP.ArbitrateRead"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408ba1c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408ba3a8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x408ba488"/>
        <function-ref name="request" scoped="" ref="0x408ba568"/>
        <function-ref name="granted" scoped="" ref="0x408ba648"/>
        <function-ref name="isOwner" scoped="" ref="0x408ba728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcTask" ref="0x408c9708" loc="56:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcTask" scoped="" ref="0x408c9708"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x408c98e0"/>
        <function-ref name="runTask" scoped="" ref="0x408c99c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Atm128AdcConfig" ref="0x408b6e88" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128AdcConfig" scoped="" ref="0x408b6e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128AdcConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getRefVoltage" scoped="" ref="0x408b3070"/>
        <function-ref name="getChannel" scoped="" ref="0x408b3150"/>
        <function-ref name="getPrescaler" scoped="" ref="0x408b3230"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AdcRaw" ref="0x408b2280" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AdcRaw" scoped="" ref="0x408b2280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408b28a8"/>
        <function-ref name="readDone" scoped="" ref="0x408b2b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MeasureBridge" ref="0x408b2f00" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MeasureBridge" scoped="" ref="0x408b2f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408b10f0"/>
        <function-ref name="isInput" scoped="" ref="0x408b11d0"/>
        <function-ref name="toggle" scoped="" ref="0x408b12b0"/>
        <function-ref name="isOutput" scoped="" ref="0x408b1390"/>
        <function-ref name="get" scoped="" ref="0x408b1470"/>
        <function-ref name="makeOutput" scoped="" ref="0x408b1550"/>
        <function-ref name="set" scoped="" ref="0x408b1630"/>
        <function-ref name="clr" scoped="" ref="0x408b1710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="VoltageMilliVolts" ref="0x408b3578" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="VoltageMilliVolts" scoped="" ref="0x408b3578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408b3ba0"/>
        <function-ref name="readDone" scoped="" ref="0x408b3df8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x408b1978" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/VoltageP.nc">
      <component-ref qname="VoltageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408b1978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408af4c8"/>
        <function-ref name="fired" scoped="" ref="0x408b0768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408b0e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x408b0c18"/>
        <function-ref name="getdt" scoped="" ref="0x408af978"/>
        <function-ref name="gett0" scoped="" ref="0x408af720"/>
        <function-ref name="isRunning" scoped="" ref="0x408b09c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408b0010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408af1a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x408b0290"/>
        <function-ref name="stop" scoped="" ref="0x408b0510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x408b41c8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="SingleVoltageC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x408b41c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x408bed58"/>
        <function-ref name="fired" scoped="" ref="0x408be010"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x408be718"/>
        <function-ref name="isOneShot" scoped="" ref="0x408be4c0"/>
        <function-ref name="getdt" scoped="" ref="0x408bc268"/>
        <function-ref name="gett0" scoped="" ref="0x408bc010"/>
        <function-ref name="isRunning" scoped="" ref="0x408be268"/>
        <function-ref name="startPeriodic" scoped="" ref="0x408b47f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x408bea38"/>
        <function-ref name="startOneShot" scoped="" ref="0x408b4a70"/>
        <function-ref name="stop" scoped="" ref="0x408b4cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x408d63a8" loc="92:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x408d63a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x408d6590"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408d6670"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x408d9328" loc="96:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x408d9328"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x408d9510"/>
        <function-ref name="configure" scoped="" ref="0x408d95f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x408d67b0" loc="93:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x408d67b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x408d6988"/>
        <function-ref name="requested" scoped="" ref="0x408d6a68"/>
        <function-ref name="granted" scoped="" ref="0x408d6b48"/>
        <function-ref name="isOwner" scoped="" ref="0x408d6c28"/>
        <function-ref name="immediateRequested" scoped="" ref="0x408d6d08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x40738bc8" loc="91:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x40738bc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40738db0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40738e90"/>
        <function-ref name="request" scoped="" ref="0x408d6010"/>
        <function-ref name="granted" scoped="" ref="0x408d60f0"/>
        <function-ref name="isOwner" scoped="" ref="0x408d61d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x408d6e48" loc="94:/opt/tinyos-2.x/tos/system/FcfsArbiterC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x408d6e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x408d9050"/>
        <function-ref name="userId" scoped="" ref="0x408d9130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41a80c98" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41a80c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41a80e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41a7d010" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41a7d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a7d1e8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a7d2c8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a7d3a8"/>
        <function-ref name="dequeue" scoped="" ref="0x41a7d488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41a7c8b0" loc="55:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41a7c8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41a7ca98"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a7cb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41a7b8b0" loc="60:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41a7b8b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41a7ba98"/>
        <function-ref name="configure" scoped="" ref="0x41a7bb78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41a7bcd8" loc="61:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41a7bcd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41a7beb0"/>
        <function-ref name="isEmpty" scoped="" ref="0x41a7a010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41a7a0f0"/>
        <function-ref name="dequeue" scoped="" ref="0x41a7a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceDefaultOwner" ref="0x41a7ccb8" loc="56:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceDefaultOwner" scoped="" ref="0x41a7ccb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a7ce90"/>
        <function-ref name="requested" scoped="" ref="0x41a7b010"/>
        <function-ref name="granted" scoped="" ref="0x41a7b0f0"/>
        <function-ref name="isOwner" scoped="" ref="0x41a7b1d0"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41a7b2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41a7a310" loc="62:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41a7a310"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41a7a4e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41a7a5c8"/>
        <function-ref name="led1On" scoped="" ref="0x41a7a6a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41a7a788"/>
        <function-ref name="led3Off" scoped="" ref="0x41a7a868"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41a7a948"/>
        <function-ref name="get" scoped="" ref="0x41a7aa28"/>
        <function-ref name="led1Off" scoped="" ref="0x41a7ab08"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41a7abe8"/>
        <function-ref name="led3On" scoped="" ref="0x41a7acc8"/>
        <function-ref name="led0On" scoped="" ref="0x41a7ada8"/>
        <function-ref name="led2Off" scoped="" ref="0x41a7ae88"/>
        <function-ref name="led2On" scoped="" ref="0x41a79010"/>
        <function-ref name="set" scoped="" ref="0x41a79170"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41a7c170" loc="54:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41a7c170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41a7c358"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41a7c438"/>
        <function-ref name="request" scoped="" ref="0x41a7c518"/>
        <function-ref name="granted" scoped="" ref="0x41a7c5f8"/>
        <function-ref name="isOwner" scoped="" ref="0x41a7c6d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41a7b3f0" loc="57:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41a7b3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41a7b5c8"/>
        <function-ref name="userId" scoped="" ref="0x41a7b6a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41a792f0" loc="75:/opt/tinyos-2.x/tos/system/ArbiterP.nc">
      <component-ref qname="VoltageArbiterP.FcfsArbiterC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41a792f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41a794c8"/>
        <function-ref name="runTask" scoped="" ref="0x41a795a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Read" ref="0x408f25f0" loc="19:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Read" scoped="" ref="0x408f25f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408f2c28"/>
        <function-ref name="readDone" scoped="" ref="0x408f2e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Service" ref="0x408e6280" loc="21:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Service" scoped="" ref="0x408e6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408e68a8"/>
        <function-ref name="readDone" scoped="" ref="0x408e6b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x408e6e70" loc="22:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x408e6e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40901070"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40901150"/>
        <function-ref name="request" scoped="" ref="0x40901230"/>
        <function-ref name="granted" scoped="" ref="0x40901310"/>
        <function-ref name="isOwner" scoped="" ref="0x409013f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ArbiterInfo" ref="0x40901530" loc="23:/opt/tinyos-2.x/tos/system/MultiplexedReadC.nc">
      <component-ref qname="VoltageArbiterP.MultiplexedReadC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x40901530"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x40901708"/>
        <function-ref name="userId" scoped="" ref="0x409017e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x408fa280" loc="12:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x408fa280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x408fa9d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x408f96e0" loc="14:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x408f96e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x408f98b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Voltage" ref="0x408fc568" loc="10:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Voltage" scoped="" ref="0x408fc568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x408fcb90"/>
        <function-ref name="readDone" scoped="" ref="0x408fcde8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Switch" ref="0x40729838" loc="9:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Switch" scoped="" ref="0x40729838"/></type-interface>
      <instance>
        <interfacedef-ref qname="Read"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="read" scoped="" ref="0x40729e60"/>
        <function-ref name="readDone" scoped="" ref="0x408fc0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x408fb138" loc="11:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408fb138"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408fb310"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408fb3f0"/>
        <function-ref name="led1On" scoped="" ref="0x408fb4d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408fb5b0"/>
        <function-ref name="led3Off" scoped="" ref="0x408fb690"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408fb770"/>
        <function-ref name="get" scoped="" ref="0x408fb850"/>
        <function-ref name="led1Off" scoped="" ref="0x408fb930"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408fba10"/>
        <function-ref name="led3On" scoped="" ref="0x408fbaf0"/>
        <function-ref name="led0On" scoped="" ref="0x408fbbd0"/>
        <function-ref name="led2Off" scoped="" ref="0x408fbcb0"/>
        <function-ref name="led2On" scoped="" ref="0x408fbd90"/>
        <function-ref name="set" scoped="" ref="0x408fbef0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GeneralIO" ref="0x408fac88" loc="13:/opt/tinyos-2.x/tos/platforms/ucmini/BatteryWarningP.nc">
      <component-ref qname="BatteryWarningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x408fac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x408fae60"/>
        <function-ref name="isInput" scoped="" ref="0x408f9010"/>
        <function-ref name="toggle" scoped="" ref="0x408f90f0"/>
        <function-ref name="isOutput" scoped="" ref="0x408f91d0"/>
        <function-ref name="get" scoped="" ref="0x408f92b0"/>
        <function-ref name="makeOutput" scoped="" ref="0x408f9390"/>
        <function-ref name="set" scoped="" ref="0x408f9470"/>
        <function-ref name="clr" scoped="" ref="0x408f9550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x408ff5c0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/LedsC.nc">
      <component-ref qname="LedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x408ff5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x408ff798"/>
        <function-ref name="led0Toggle" scoped="" ref="0x408ff878"/>
        <function-ref name="led1On" scoped="" ref="0x408ff958"/>
        <function-ref name="led1Toggle" scoped="" ref="0x408ffa38"/>
        <function-ref name="led3Off" scoped="" ref="0x408ffb18"/>
        <function-ref name="led2Toggle" scoped="" ref="0x408ffbf8"/>
        <function-ref name="get" scoped="" ref="0x408ffcd8"/>
        <function-ref name="led1Off" scoped="" ref="0x408ffdb8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x408ffe98"/>
        <function-ref name="led3On" scoped="" ref="0x40909010"/>
        <function-ref name="led0On" scoped="" ref="0x409090f0"/>
        <function-ref name="led2Off" scoped="" ref="0x409091d0"/>
        <function-ref name="led2On" scoped="" ref="0x409092b0"/>
        <function-ref name="set" scoped="" ref="0x40909410"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40909ae0" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40909ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40909cb8"/>
        <function-ref name="isInput" scoped="" ref="0x40909d98"/>
        <function-ref name="toggle" scoped="" ref="0x40909e78"/>
        <function-ref name="isOutput" scoped="" ref="0x40906010"/>
        <function-ref name="get" scoped="" ref="0x409060f0"/>
        <function-ref name="makeOutput" scoped="" ref="0x409061d0"/>
        <function-ref name="set" scoped="" ref="0x409062b0"/>
        <function-ref name="clr" scoped="" ref="0x40906390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x409059f8" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x409059f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40905bd0"/>
        <function-ref name="isInput" scoped="" ref="0x40905cb0"/>
        <function-ref name="toggle" scoped="" ref="0x40905d90"/>
        <function-ref name="isOutput" scoped="" ref="0x40905e70"/>
        <function-ref name="get" scoped="" ref="0x40904010"/>
        <function-ref name="makeOutput" scoped="" ref="0x409040f0"/>
        <function-ref name="set" scoped="" ref="0x409041d0"/>
        <function-ref name="clr" scoped="" ref="0x409042b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40906580" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40906580"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40906758"/>
        <function-ref name="isInput" scoped="" ref="0x40906838"/>
        <function-ref name="toggle" scoped="" ref="0x40906918"/>
        <function-ref name="isOutput" scoped="" ref="0x409069f8"/>
        <function-ref name="get" scoped="" ref="0x40906ad8"/>
        <function-ref name="makeOutput" scoped="" ref="0x40906bb8"/>
        <function-ref name="set" scoped="" ref="0x40906c98"/>
        <function-ref name="clr" scoped="" ref="0x40906d78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Init" ref="0x40904450" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40904450"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40904628"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40905010" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedsC.nc">
      <component-ref qname="PlatformLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40905010"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409051e8"/>
        <function-ref name="isInput" scoped="" ref="0x409052c8"/>
        <function-ref name="toggle" scoped="" ref="0x409053a8"/>
        <function-ref name="isOutput" scoped="" ref="0x40905488"/>
        <function-ref name="get" scoped="" ref="0x40905568"/>
        <function-ref name="makeOutput" scoped="" ref="0x40905648"/>
        <function-ref name="set" scoped="" ref="0x40905728"/>
        <function-ref name="clr" scoped="" ref="0x40905808"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led0" ref="0x4091d9c0" loc="50:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x4091d9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091db98"/>
        <function-ref name="isInput" scoped="" ref="0x4091dc78"/>
        <function-ref name="toggle" scoped="" ref="0x4091dd58"/>
        <function-ref name="isOutput" scoped="" ref="0x4091de38"/>
        <function-ref name="get" scoped="" ref="0x4091df18"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091c010"/>
        <function-ref name="set" scoped="" ref="0x4091c0f0"/>
        <function-ref name="clr" scoped="" ref="0x4091c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led3" ref="0x4091b820" loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x4091b820"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091b9f8"/>
        <function-ref name="isInput" scoped="" ref="0x4091bad8"/>
        <function-ref name="toggle" scoped="" ref="0x4091bbb8"/>
        <function-ref name="isOutput" scoped="" ref="0x4091bc98"/>
        <function-ref name="get" scoped="" ref="0x4091bd78"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091be58"/>
        <function-ref name="set" scoped="" ref="0x4091a010"/>
        <function-ref name="clr" scoped="" ref="0x4091a0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409075b0" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409075b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40907788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led1" ref="0x4091c3c0" loc="51:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x4091c3c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091c598"/>
        <function-ref name="isInput" scoped="" ref="0x4091c678"/>
        <function-ref name="toggle" scoped="" ref="0x4091c758"/>
        <function-ref name="isOutput" scoped="" ref="0x4091c838"/>
        <function-ref name="get" scoped="" ref="0x4091c918"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091c9f8"/>
        <function-ref name="set" scoped="" ref="0x4091cad8"/>
        <function-ref name="clr" scoped="" ref="0x4091cbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x409078f8" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409078f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40907ad0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40907bb0"/>
        <function-ref name="led1On" scoped="" ref="0x40907c90"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40907d70"/>
        <function-ref name="led3Off" scoped="" ref="0x40907e50"/>
        <function-ref name="led2Toggle" scoped="" ref="0x4091d010"/>
        <function-ref name="get" scoped="" ref="0x4091d0f0"/>
        <function-ref name="led1Off" scoped="" ref="0x4091d1d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x4091d2b0"/>
        <function-ref name="led3On" scoped="" ref="0x4091d390"/>
        <function-ref name="led0On" scoped="" ref="0x4091d470"/>
        <function-ref name="led2Off" scoped="" ref="0x4091d550"/>
        <function-ref name="led2On" scoped="" ref="0x4091d630"/>
        <function-ref name="set" scoped="" ref="0x4091d790"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Led2" ref="0x4091cda8" loc="52:/opt/tinyos-2.x/tos/platforms/ucmini/LedsP.nc">
      <component-ref qname="LedsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x4091cda8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x4091b010"/>
        <function-ref name="isInput" scoped="" ref="0x4091b0f0"/>
        <function-ref name="toggle" scoped="" ref="0x4091b1d0"/>
        <function-ref name="isOutput" scoped="" ref="0x4091b2b0"/>
        <function-ref name="get" scoped="" ref="0x4091b390"/>
        <function-ref name="makeOutput" scoped="" ref="0x4091b470"/>
        <function-ref name="set" scoped="" ref="0x4091b550"/>
        <function-ref name="clr" scoped="" ref="0x4091b630"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x409212c0" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x409212c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40921498"/>
        <function-ref name="disable" scoped="" ref="0x40921578"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40921658"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40921738"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GeneralIO" ref="0x409218f8" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/HplSerialAutoControlC.nc">
      <component-ref qname="HplSerialAutoControlC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GeneralIO" scoped="" ref="0x409218f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x40921ad0"/>
        <function-ref name="isInput" scoped="" ref="0x40921bb0"/>
        <function-ref name="toggle" scoped="" ref="0x40921c90"/>
        <function-ref name="isOutput" scoped="" ref="0x40921d70"/>
        <function-ref name="get" scoped="" ref="0x40921e50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40924010"/>
        <function-ref name="set" scoped="" ref="0x409240f0"/>
        <function-ref name="clr" scoped="" ref="0x409241d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40924b98" loc="37:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChange0C.nc">
      <component-ref qname="AtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40924b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40924d70"/>
        <function-ref name="disable" scoped="" ref="0x40924e50"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x4093c010"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x4093c0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplAtmegaPinChange" ref="0x40935068" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange0C.nc">
      <component-ref qname="HplAtmegaPinChange0C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x40935068"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x40935240"/>
        <function-ref name="fired" scoped="" ref="0x40935320"/>
        <function-ref name="disable" scoped="" ref="0x40935400"/>
        <function-ref name="isEnabled" scoped="" ref="0x409354e0"/>
        <function-ref name="reset" scoped="" ref="0x409355c0"/>
        <function-ref name="setMask" scoped="" ref="0x409356a0"/>
        <function-ref name="enable" scoped="" ref="0x40935780"/>
        <function-ref name="getPins" scoped="" ref="0x40935860"/>
        <function-ref name="getMask" scoped="" ref="0x40935940"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplAtmegaPinChange" ref="0x4093aab0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplAtmegaPinChange" scoped="" ref="0x4093aab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtmegaPinChange"/>
      </instance>
      <interface-functions>
        <function-ref name="test" scoped="" ref="0x4093ac88"/>
        <function-ref name="fired" scoped="" ref="0x4093ad68"/>
        <function-ref name="disable" scoped="" ref="0x4093ae48"/>
        <function-ref name="isEnabled" scoped="" ref="0x4093af28"/>
        <function-ref name="reset" scoped="" ref="0x40949018"/>
        <function-ref name="setMask" scoped="" ref="0x409490f8"/>
        <function-ref name="enable" scoped="" ref="0x409491d8"/>
        <function-ref name="getPins" scoped="" ref="0x409492b8"/>
        <function-ref name="getMask" scoped="" ref="0x40949398"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="GpioInterrupt" ref="0x40949590" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/AtmegaPinChangeP.nc">
      <component-ref qname="AtmegaPinChange0C.AtmegaPinChangeP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GpioInterrupt" scoped="" ref="0x40949590"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40949778"/>
        <function-ref name="disable" scoped="" ref="0x40949858"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x40949938"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x40949a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SplitControl" ref="0x409566f0" loc="34:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409566f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409568c8"/>
        <function-ref name="stopDone" scoped="" ref="0x409569a8"/>
        <function-ref name="start" scoped="" ref="0x40956a88"/>
        <function-ref name="stop" scoped="" ref="0x40956b68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x40955f20" loc="37:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40955f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40954110"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOff" ref="0x409511d8" loc="57:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOff" scoped="" ref="0x409511d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409513b0"/>
        <function-ref name="runTask" scoped="" ref="0x40951490"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="turnOn" ref="0x40954a28" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="turnOn" scoped="" ref="0x40954a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40954c00"/>
        <function-ref name="runTask" scoped="" ref="0x40954ce0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlInt" ref="0x40956dd8" loc="35:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlInt" scoped="" ref="0x40956dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GpioInterrupt"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x40955010"/>
        <function-ref name="disable" scoped="" ref="0x409550f0"/>
        <function-ref name="enableFallingEdge" scoped="" ref="0x409551d0"/>
        <function-ref name="enableRisingEdge" scoped="" ref="0x409552b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ControlPin" ref="0x409554f8" loc="36:/opt/tinyos-2.x/tos/platforms/ucmini/SerialAutoControlP.nc">
      <component-ref qname="SerialAutoControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ControlPin" scoped="" ref="0x409554f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GeneralIO"/>
      </instance>
      <interface-functions>
        <function-ref name="makeInput" scoped="" ref="0x409556d0"/>
        <function-ref name="isInput" scoped="" ref="0x409557b0"/>
        <function-ref name="toggle" scoped="" ref="0x40955890"/>
        <function-ref name="isOutput" scoped="" ref="0x40955970"/>
        <function-ref name="get" scoped="" ref="0x40955a50"/>
        <function-ref name="makeOutput" scoped="" ref="0x40955b30"/>
        <function-ref name="set" scoped="" ref="0x40955c10"/>
        <function-ref name="clr" scoped="" ref="0x40955cf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40957ad8" loc="46:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40957ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40957cb0"/>
        <function-ref name="stopDone" scoped="" ref="0x40957d90"/>
        <function-ref name="start" scoped="" ref="0x40957e70"/>
        <function-ref name="stop" scoped="" ref="0x40964010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x4095c670" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x4095c670"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4095c848"/>
        <function-ref name="getPayload" scoped="" ref="0x4095c928"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4095ca08"/>
        <function-ref name="cancel" scoped="" ref="0x4095cae8"/>
        <function-ref name="sendDone" scoped="" ref="0x4095cbc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40973af0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40973af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40973cc8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40973da8"/>
        <function-ref name="getPayload" scoped="" ref="0x40973e88"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40962010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409620f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40978ac8" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40978ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40978ca0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40972060" loc="53:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40972060"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40972238"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40972318"/>
        <function-ref name="led1On" scoped="" ref="0x409723f8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409724d8"/>
        <function-ref name="led3Off" scoped="" ref="0x409725b8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40972698"/>
        <function-ref name="get" scoped="" ref="0x40972778"/>
        <function-ref name="led1Off" scoped="" ref="0x40972858"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40972938"/>
        <function-ref name="led3On" scoped="" ref="0x40972a18"/>
        <function-ref name="led0On" scoped="" ref="0x40972af8"/>
        <function-ref name="led2Off" scoped="" ref="0x40972bd8"/>
        <function-ref name="led2On" scoped="" ref="0x40972cb8"/>
        <function-ref name="set" scoped="" ref="0x40972e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x40984b10" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x40984b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x40984ce8"/>
        <function-ref name="noAck" scoped="" ref="0x40984dc8"/>
        <function-ref name="wasAcked" scoped="" ref="0x40984ea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40987990" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageC.nc">
      <component-ref qname="SerialActiveMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40987990"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40987b68"/>
        <function-ref name="source" scoped="" ref="0x40987c48"/>
        <function-ref name="address" scoped="" ref="0x40987d28"/>
        <function-ref name="destination" scoped="" ref="0x40987e08"/>
        <function-ref name="setSource" scoped="" ref="0x40987ee8"/>
        <function-ref name="setDestination" scoped="" ref="0x40979010"/>
        <function-ref name="type" scoped="" ref="0x409790f0"/>
        <function-ref name="setType" scoped="" ref="0x409791d0"/>
        <function-ref name="isForMe" scoped="" ref="0x409792b0"/>
        <function-ref name="setGroup" scoped="" ref="0x40979390"/>
        <function-ref name="localGroup" scoped="" ref="0x40979470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x409aa9f8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x409aa9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409aabd0"/>
        <function-ref name="getPayload" scoped="" ref="0x409aacb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409aad90"/>
        <function-ref name="cancel" scoped="" ref="0x409aae70"/>
        <function-ref name="sendDone" scoped="" ref="0x409a9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x409a9170" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x409a9170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409a9348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40982700" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40982700"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409828e8"/>
        <function-ref name="getPayload" scoped="" ref="0x409829c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40982aa8"/>
        <function-ref name="cancel" scoped="" ref="0x40982b88"/>
        <function-ref name="sendDone" scoped="" ref="0x40982c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x40981d68" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x40981d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x409aa010"/>
        <function-ref name="payloadLength" scoped="" ref="0x409aa0f0"/>
        <function-ref name="getPayload" scoped="" ref="0x409aa1d0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409aa2b0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x409aa390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40982e40" loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40982e40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40981050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x409aa4d0" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x409aa4d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x409aa6a8"/>
        <function-ref name="noAck" scoped="" ref="0x409aa788"/>
        <function-ref name="wasAcked" scoped="" ref="0x409aa868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40981190" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialActiveMessageP.nc">
      <component-ref qname="SerialActiveMessageC.AM"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40981190"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40981368"/>
        <function-ref name="source" scoped="" ref="0x40981448"/>
        <function-ref name="address" scoped="" ref="0x40981528"/>
        <function-ref name="destination" scoped="" ref="0x40981608"/>
        <function-ref name="setSource" scoped="" ref="0x409816e8"/>
        <function-ref name="setDestination" scoped="" ref="0x409817c8"/>
        <function-ref name="type" scoped="" ref="0x409818a8"/>
        <function-ref name="setType" scoped="" ref="0x40981988"/>
        <function-ref name="isForMe" scoped="" ref="0x40981a68"/>
        <function-ref name="setGroup" scoped="" ref="0x40981b48"/>
        <function-ref name="localGroup" scoped="" ref="0x40981c28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409c78e8" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409c78e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409c7ac0"/>
        <function-ref name="stopDone" scoped="" ref="0x409c7ba0"/>
        <function-ref name="start" scoped="" ref="0x409c7c80"/>
        <function-ref name="stop" scoped="" ref="0x409c7d60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x409c47e0" loc="52:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x409c47e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404cd7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x409c49b8"/>
        <function-ref name="getPayload" scoped="" ref="0x409c4a98"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x409c4b78"/>
        <function-ref name="cancel" scoped="" ref="0x409c4c58"/>
        <function-ref name="sendDone" scoped="" ref="0x409c4d38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409c7550" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409c7550"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409c7728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x409c41d8" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x409c41d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404cd7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x409c43b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409c23f0" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409c23f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409c25c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409c26a8"/>
        <function-ref name="led1On" scoped="" ref="0x409c2788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409c2868"/>
        <function-ref name="led3Off" scoped="" ref="0x409c2948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409c2a28"/>
        <function-ref name="get" scoped="" ref="0x409c2b08"/>
        <function-ref name="led1Off" scoped="" ref="0x409c2be8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409c2cc8"/>
        <function-ref name="led3On" scoped="" ref="0x409c2da8"/>
        <function-ref name="led0On" scoped="" ref="0x409c2e88"/>
        <function-ref name="led2Off" scoped="" ref="0x409c1010"/>
        <function-ref name="led2On" scoped="" ref="0x409c10f0"/>
        <function-ref name="set" scoped="" ref="0x409c1250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialPacketInfo" ref="0x409c0ea8" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherC.nc">
      <component-ref qname="SerialDispatcherC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x409c0ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404cd7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x409c20c0"/>
        <function-ref name="offset" scoped="" ref="0x409c21a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x409c2280"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x409cec68" loc="66:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x409cec68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x409cee40"/>
        <function-ref name="stopDone" scoped="" ref="0x409cef20"/>
        <function-ref name="start" scoped="" ref="0x409cd018"/>
        <function-ref name="stop" scoped="" ref="0x409cd0f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stopDoneTask" ref="0x40a13e58" loc="332:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stopDoneTask" scoped="" ref="0x40a13e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a12050"/>
        <function-ref name="runTask" scoped="" ref="0x40a12130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x409e2010" loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x409e2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x409e21e8"/>
        <function-ref name="stop" scoped="" ref="0x409e22c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RunTx" ref="0x409f1300" loc="191:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RunTx" scoped="" ref="0x409f1300"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x409f14d8"/>
        <function-ref name="runTask" scoped="" ref="0x409f15b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x409ce8d0" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x409ce8d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x409ceaa8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFlush" ref="0x409e0010" loc="75:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFlush" scoped="" ref="0x409e0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFlush"/>
      </instance>
      <interface-functions>
        <function-ref name="flushDone" scoped="" ref="0x409e01e8"/>
        <function-ref name="flush" scoped="" ref="0x409e02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="startDoneTask" ref="0x40a156a8" loc="322:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="startDoneTask" scoped="" ref="0x40a156a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a15880"/>
        <function-ref name="runTask" scoped="" ref="0x40a15960"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialFrameComm" ref="0x409e3708" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x409e3708"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x409e38e0"/>
        <function-ref name="resetSend" scoped="" ref="0x409e39c0"/>
        <function-ref name="dataReceived" scoped="" ref="0x409e3aa0"/>
        <function-ref name="resetReceive" scoped="" ref="0x409e3b80"/>
        <function-ref name="putData" scoped="" ref="0x409e3c60"/>
        <function-ref name="putDone" scoped="" ref="0x409e3d40"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x409e3e20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x409cc010" loc="73:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x409cc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x409cc1e8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x409cc2c8"/>
        <function-ref name="led1On" scoped="" ref="0x409cc3a8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x409cc488"/>
        <function-ref name="led3Off" scoped="" ref="0x409cc568"/>
        <function-ref name="led2Toggle" scoped="" ref="0x409cc648"/>
        <function-ref name="get" scoped="" ref="0x409cc728"/>
        <function-ref name="led1Off" scoped="" ref="0x409cc808"/>
        <function-ref name="led3Toggle" scoped="" ref="0x409cc8e8"/>
        <function-ref name="led3On" scoped="" ref="0x409cc9c8"/>
        <function-ref name="led0On" scoped="" ref="0x409ccaa8"/>
        <function-ref name="led2Off" scoped="" ref="0x409ccb88"/>
        <function-ref name="led2On" scoped="" ref="0x409ccc68"/>
        <function-ref name="set" scoped="" ref="0x409ccdc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultSerialFlushTask" ref="0x40a11ac0" loc="341:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultSerialFlushTask" scoped="" ref="0x40a11ac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a11c98"/>
        <function-ref name="runTask" scoped="" ref="0x40a11d78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendBytePacket" ref="0x409c9390" loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x409c9390"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x409c9568"/>
        <function-ref name="nextByte" scoped="" ref="0x409c9648"/>
        <function-ref name="startSend" scoped="" ref="0x409c9728"/>
        <function-ref name="sendCompleted" scoped="" ref="0x409c9808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveBytePacket" ref="0x409e6460" loc="68:/opt/tinyos-2.x/tos/lib/serial/SerialP.nc">
      <component-ref qname="SerialP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x409e6460"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x409e6638"/>
        <function-ref name="byteReceived" scoped="" ref="0x409e6718"/>
        <function-ref name="endPacket" scoped="" ref="0x409e67f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="receiveTask" ref="0x40a8d4b0" loc="275:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="receiveTask" scoped="" ref="0x40a8d4b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a8d688"/>
        <function-ref name="runTask" scoped="" ref="0x40a8d768"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x40a3fd20" loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40a3fd20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404cd7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a3ff08"/>
        <function-ref name="getPayload" scoped="" ref="0x40a8f010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40a8f0f0"/>
        <function-ref name="cancel" scoped="" ref="0x40a8f1d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="signalSendDone" ref="0x40a8d8e8" loc="158:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="signalSendDone" scoped="" ref="0x40a8d8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40a8dac0"/>
        <function-ref name="runTask" scoped="" ref="0x40a8dba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40a3f960" loc="50:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40a3f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404cd7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40a3fb48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketInfo" ref="0x40a8f4d8" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketInfo" scoped="" ref="0x40a8f4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uart_id_t" ref="0x404cd7b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40a8f6c0"/>
        <function-ref name="offset" scoped="" ref="0x40a8f7a0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40a8f880"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40a8e4a0" loc="57:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40a8e4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40a8e678"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40a8e758"/>
        <function-ref name="led1On" scoped="" ref="0x40a8e838"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40a8e918"/>
        <function-ref name="led3Off" scoped="" ref="0x40a8e9f8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a8ead8"/>
        <function-ref name="get" scoped="" ref="0x40a8ebb8"/>
        <function-ref name="led1Off" scoped="" ref="0x40a8ec98"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a8ed78"/>
        <function-ref name="led3On" scoped="" ref="0x40a8ee58"/>
        <function-ref name="led0On" scoped="" ref="0x40a8d010"/>
        <function-ref name="led2Off" scoped="" ref="0x40a8d0f0"/>
        <function-ref name="led2On" scoped="" ref="0x40a8d1d0"/>
        <function-ref name="set" scoped="" ref="0x40a8d330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendBytePacket" ref="0x40a8fe98" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendBytePacket" scoped="" ref="0x40a8fe98"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="completeSend" scoped="" ref="0x40a8e0c0"/>
        <function-ref name="nextByte" scoped="" ref="0x40a8e1a0"/>
        <function-ref name="startSend" scoped="" ref="0x40a8e280"/>
        <function-ref name="sendCompleted" scoped="" ref="0x40a8e360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReceiveBytePacket" ref="0x40a8f9c0" loc="55:/opt/tinyos-2.x/tos/lib/serial/SerialDispatcherP.nc">
      <component-ref qname="SerialDispatcherC.SerialDispatcherP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveBytePacket" scoped="" ref="0x40a8f9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReceiveBytePacket"/>
      </instance>
      <interface-functions>
        <function-ref name="startPacket" scoped="" ref="0x40a8fb98"/>
        <function-ref name="byteReceived" scoped="" ref="0x40a8fc78"/>
        <function-ref name="endPacket" scoped="" ref="0x40a8fd58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40aa30f0" loc="50:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40aa30f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40aa32c8"/>
        <function-ref name="receivedByte" scoped="" ref="0x40aa33a8"/>
        <function-ref name="receive" scoped="" ref="0x40aa3488"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40aa3568"/>
        <function-ref name="receiveDone" scoped="" ref="0x40aa3648"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40aa3728"/>
        <function-ref name="sendDone" scoped="" ref="0x40aa3808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialFrameComm" ref="0x40a8bd88" loc="48:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialFrameComm" scoped="" ref="0x40a8bd88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialFrameComm"/>
      </instance>
      <interface-functions>
        <function-ref name="putDelimiter" scoped="" ref="0x40a88010"/>
        <function-ref name="resetSend" scoped="" ref="0x40a880f0"/>
        <function-ref name="dataReceived" scoped="" ref="0x40a881d0"/>
        <function-ref name="resetReceive" scoped="" ref="0x40a882b0"/>
        <function-ref name="putData" scoped="" ref="0x40a88390"/>
        <function-ref name="putDone" scoped="" ref="0x40a88470"/>
        <function-ref name="delimiterReceived" scoped="" ref="0x40a88550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40aa3978" loc="51:/opt/tinyos-2.x/tos/lib/serial/HdlcTranslateC.nc">
      <component-ref qname="HdlcTranslateC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40aa3978"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40aa3b50"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40aa3c30"/>
        <function-ref name="led1On" scoped="" ref="0x40aa3d10"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40aa3df0"/>
        <function-ref name="led3Off" scoped="" ref="0x40aa3ed0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40a87010"/>
        <function-ref name="get" scoped="" ref="0x40a870f0"/>
        <function-ref name="led1Off" scoped="" ref="0x40a871d0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40a872b0"/>
        <function-ref name="led3On" scoped="" ref="0x40a87390"/>
        <function-ref name="led0On" scoped="" ref="0x40a87470"/>
        <function-ref name="led2Off" scoped="" ref="0x40a87550"/>
        <function-ref name="led2On" scoped="" ref="0x40a87630"/>
        <function-ref name="set" scoped="" ref="0x40a87790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ab40f0" loc="42:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ab40f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab42c8"/>
        <function-ref name="receive" scoped="" ref="0x40ab43a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40a962b8" loc="41:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40a962b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40a96490"/>
        <function-ref name="receivedByte" scoped="" ref="0x40a96570"/>
        <function-ref name="receive" scoped="" ref="0x40a96650"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40a96730"/>
        <function-ref name="receiveDone" scoped="" ref="0x40a96810"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40a968f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40a969d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40a8ad98" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformSerialC.nc">
      <component-ref qname="PlatformSerialC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40a8ad98"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40a96010"/>
        <function-ref name="stop" scoped="" ref="0x40a960f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ab5010" loc="41:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ab5010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab51e8"/>
        <function-ref name="receive" scoped="" ref="0x40ab52c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40ab5490" loc="42:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ab5490"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab5668"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ab5748"/>
        <function-ref name="receive" scoped="" ref="0x40ab5828"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ab5908"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ab59e8"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ab5ac8"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab5ba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ab5f08" loc="43:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ab5f08"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ab3680"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ab3b70"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ab38f8"/>
        <function-ref name="overflow" scoped="" ref="0x40ab3de8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ab4b00" loc="40:/opt/tinyos-2.x/tos/chips/atm128/Atm128Uart1C.nc">
      <component-ref qname="Atm128Uart1C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ab4b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ab4cd8"/>
        <function-ref name="stop" scoped="" ref="0x40ab4db8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartByte" ref="0x40ab0010" loc="51:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartByte" scoped="" ref="0x40ab0010"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartByte"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab01e8"/>
        <function-ref name="receive" scoped="" ref="0x40ab02c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartTxControl" ref="0x40ab0cc0" loc="54:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartTxControl" scoped="" ref="0x40ab0cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ab0e98"/>
        <function-ref name="stop" scoped="" ref="0x40ad1010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40ab1810" loc="49:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40ab1810"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40ab19e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UartStream" ref="0x40ab0428" loc="52:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40ab0428"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ab0600"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ab06e0"/>
        <function-ref name="receive" scoped="" ref="0x40ab07c0"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40ab08a0"/>
        <function-ref name="receiveDone" scoped="" ref="0x40ab0980"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40ab0a60"/>
        <function-ref name="sendDone" scoped="" ref="0x40ab0b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x40ad0290" loc="57:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40ad0290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ad09e0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40ad0ed0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40ad0c58"/>
        <function-ref name="overflow" scoped="" ref="0x40acf170"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUart" ref="0x40ad15c8" loc="56:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart" scoped="" ref="0x40ad15c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ad17a0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ad1880"/>
        <function-ref name="rxDone" scoped="" ref="0x40ad1960"/>
        <function-ref name="txDone" scoped="" ref="0x40ad1a40"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ad1b20"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ad1c00"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ad1ce0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40ad1dc0"/>
        <function-ref name="tx" scoped="" ref="0x40ad1ea0"/>
        <function-ref name="rx" scoped="" ref="0x40ad0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ab1b48" loc="50:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ab1b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ab1d20"/>
        <function-ref name="stop" scoped="" ref="0x40ab1e00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HplUartRxControl" ref="0x40ad1190" loc="55:/opt/tinyos-2.x/tos/chips/atm128/Atm128UartP.nc">
      <component-ref qname="Atm128Uart1C.UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUartRxControl" scoped="" ref="0x40ad1190"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ad1368"/>
        <function-ref name="stop" scoped="" ref="0x40ad1448"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40ae1670" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40ae1670"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ae1848"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ae1928"/>
        <function-ref name="rxDone" scoped="" ref="0x40ae1a08"/>
        <function-ref name="txDone" scoped="" ref="0x40ae1ae8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ae1bc8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ae1ca8"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ae1d88"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40ae1e68"/>
        <function-ref name="tx" scoped="" ref="0x40ae0010"/>
        <function-ref name="rx" scoped="" ref="0x40ae00f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40ae0d50" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40ae0d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ae0f28"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40adf018"/>
        <function-ref name="rxDone" scoped="" ref="0x40adf0f8"/>
        <function-ref name="txDone" scoped="" ref="0x40adf1d8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40adf2b8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40adf398"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40adf478"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40adf558"/>
        <function-ref name="tx" scoped="" ref="0x40adf638"/>
        <function-ref name="rx" scoped="" ref="0x40adf718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40ae1178" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40ae1178"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ae1350"/>
        <function-ref name="stop" scoped="" ref="0x40ae1430"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40ae0348" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40ae0348"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ae0520"/>
        <function-ref name="stop" scoped="" ref="0x40ae0600"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40ae0858" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40ae0858"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ae0a30"/>
        <function-ref name="stop" scoped="" ref="0x40ae0b10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40ae2c50" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartC.nc">
      <component-ref qname="HplAtm128UartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40ae2c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ae2e28"/>
        <function-ref name="stop" scoped="" ref="0x40ae2f08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0Init" ref="0x40adb010" loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0Init" scoped="" ref="0x40adb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adb1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart0" ref="0x40adbea8" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart0" scoped="" ref="0x40adbea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40ada0c0"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40ada1a0"/>
        <function-ref name="rxDone" scoped="" ref="0x40ada280"/>
        <function-ref name="txDone" scoped="" ref="0x40ada360"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40ada440"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40ada520"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40ada600"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40ada6e0"/>
        <function-ref name="tx" scoped="" ref="0x40ada7c0"/>
        <function-ref name="rx" scoped="" ref="0x40ada8a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x40afc598" loc="124:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x40afc598"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x40afc770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1Init" ref="0x40adaab0" loc="119:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1Init" scoped="" ref="0x40adaab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40adac88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HplUart1" ref="0x40afd960" loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HplUart1" scoped="" ref="0x40afd960"/></type-interface>
      <instance>
        <interfacedef-ref qname="HplAtm128Uart"/>
      </instance>
      <interface-functions>
        <function-ref name="isTxEmpty" scoped="" ref="0x40afdb38"/>
        <function-ref name="enableRxIntr" scoped="" ref="0x40afdc18"/>
        <function-ref name="rxDone" scoped="" ref="0x40afdcf8"/>
        <function-ref name="txDone" scoped="" ref="0x40afddd8"/>
        <function-ref name="enableTxIntr" scoped="" ref="0x40afdeb8"/>
        <function-ref name="disableTxIntr" scoped="" ref="0x40afc010"/>
        <function-ref name="disableRxIntr" scoped="" ref="0x40afc0f0"/>
        <function-ref name="isRxEmpty" scoped="" ref="0x40afc1d0"/>
        <function-ref name="tx" scoped="" ref="0x40afc2b0"/>
        <function-ref name="rx" scoped="" ref="0x40afc390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0RxControl" ref="0x40adb990" loc="116:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0RxControl" scoped="" ref="0x40adb990"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40adbb68"/>
        <function-ref name="stop" scoped="" ref="0x40adbc48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1TxControl" ref="0x40adaf00" loc="120:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1TxControl" scoped="" ref="0x40adaf00"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40afd0f0"/>
        <function-ref name="stop" scoped="" ref="0x40afd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart1RxControl" ref="0x40afd448" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart1RxControl" scoped="" ref="0x40afd448"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40afd620"/>
        <function-ref name="stop" scoped="" ref="0x40afd700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Atm128Calibrate" ref="0x40afc968" loc="126:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Atm128Calibrate" scoped="" ref="0x40afc968"/></type-interface>
      <instance>
        <interfacedef-ref qname="Atm128Calibrate"/>
      </instance>
      <interface-functions>
        <function-ref name="baudrateRegister" scoped="" ref="0x40afcb40"/>
        <function-ref name="cyclesPerJiffy" scoped="" ref="0x40afcc20"/>
        <function-ref name="calibrateMicro" scoped="" ref="0x40afcd00"/>
        <function-ref name="actualMicro" scoped="" ref="0x40afcde0"/>
        <function-ref name="adcPrescaler" scoped="" ref="0x40afcec0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x40afb0e8" loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x40afb0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x40afb2c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Uart0TxControl" ref="0x40adb460" loc="115:/opt/tinyos-2.x/tos/chips/atm128rfa1/HplAtm128UartP.nc">
      <component-ref qname="HplAtm128UartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Uart0TxControl" scoped="" ref="0x40adb460"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40adb638"/>
        <function-ref name="stop" scoped="" ref="0x40adb718"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b35170" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMicro32C.nc">
      <component-ref qname="CounterMicro32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b35170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b358c0"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b35db0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b35b38"/>
        <function-ref name="overflow" scoped="" ref="0x40b34048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b31ae8" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b31ae8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b30308"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b307f8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b30580"/>
        <function-ref name="overflow" scoped="" ref="0x40b30a70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b327f0" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMicro32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b327f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b31010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b31500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b31288"/>
        <function-ref name="overflow" scoped="" ref="0x40b31778"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b2e890" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/CounterMcu32C.nc">
      <component-ref qname="CounterMcu32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b2e890"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b2b010"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b2b500"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b2b288"/>
        <function-ref name="overflow" scoped="" ref="0x40b2b778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CounterFrom" ref="0x40b27078" loc="63:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CounterFrom" scoped="" ref="0x40b27078"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b277c8"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b27cb8"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b27a40"/>
        <function-ref name="overflow" scoped="" ref="0x40b26010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Counter" ref="0x40b2add8" loc="62:/opt/tinyos-2.x/tos/lib/timer/TransformCounterC.nc">
      <component-ref qname="CounterMcu32C.TransformCounterC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x40b2add8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T2mhz" ref="0x404c1060"/>
            <typename><typedef-ref name="TMcu" ref="0x404c1410"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b29570"/>
        <function-ref name="clearOverflow" scoped="" ref="0x40b29a60"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x40b297e8"/>
        <function-ref name="overflow" scoped="" ref="0x40b29cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Info" ref="0x40b25af8" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfoActiveMessageP.nc">
      <component-ref qname="SerialPacketInfoActiveMessageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Info" scoped="" ref="0x40b25af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40b25cd0"/>
        <function-ref name="offset" scoped="" ref="0x40b25db0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40b25e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Send" ref="0x40b3c010" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x40b3c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b3c1e8"/>
        <function-ref name="getPayload" scoped="" ref="0x40b3c2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40b3c3a8"/>
        <function-ref name="cancel" scoped="" ref="0x40b3c488"/>
        <function-ref name="sendDone" scoped="" ref="0x40b3c568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Receive" ref="0x40b3c6f0" loc="44:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40b3c6f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40b3c8c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40b3ca38" loc="45:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40b3ca38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40b3cc10"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40b3ccf0"/>
        <function-ref name="led1On" scoped="" ref="0x40b3cdd0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40b3ceb0"/>
        <function-ref name="led3Off" scoped="" ref="0x40b3b010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40b3b0f0"/>
        <function-ref name="get" scoped="" ref="0x40b3b1d0"/>
        <function-ref name="led1Off" scoped="" ref="0x40b3b2b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40b3b390"/>
        <function-ref name="led3On" scoped="" ref="0x40b3b470"/>
        <function-ref name="led0On" scoped="" ref="0x40b3b550"/>
        <function-ref name="led2Off" scoped="" ref="0x40b3b630"/>
        <function-ref name="led2On" scoped="" ref="0x40b3b710"/>
        <function-ref name="set" scoped="" ref="0x40b3b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendAck" ref="0x40b3a218" loc="54:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendAck" scoped="" ref="0x40b3a218"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b3a3f0"/>
        <function-ref name="runTask" scoped="" ref="0x40b3a4d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SerialPacketInfo" ref="0x40b3fa28" loc="38:/opt/tinyos-2.x/tos/platforms/ucmini/SerialResetP.nc">
      <component-ref qname="SerialResetP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialPacketInfo" scoped="" ref="0x40b3fa28"/></type-interface>
      <instance>
        <interfacedef-ref qname="SerialPacketInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="upperLength" scoped="" ref="0x40b3fc00"/>
        <function-ref name="offset" scoped="" ref="0x40b3fce0"/>
        <function-ref name="dataLinkLength" scoped="" ref="0x40b3fdc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SoftwareInit" ref="0x40b52240" loc="60:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x40b52240"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b52418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Boot" ref="0x40b53408" loc="57:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x40b53408"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x40b535e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PlatformInit" ref="0x40b53d68" loc="59:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x40b53d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b52010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Scheduler" ref="0x40b537a0" loc="58:/opt/tinyos-2.x/tos/system/RealMainP.nc">
      <component-ref qname="RealMainP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40b537a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40b53978"/>
        <function-ref name="taskLoop" scoped="" ref="0x40b53a58"/>
        <function-ref name="runNextTask" scoped="" ref="0x40b53b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x403b1330" loc="48:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x403b1330"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x403b1508"/>
        <function-ref name="runTask" scoped="" ref="0x403b15e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40356b58" loc="47:/opt/tinyos-2.x/tos/system/TinySchedulerC.nc">
      <component-ref qname="TinySchedulerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40356b58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40356d30"/>
        <function-ref name="taskLoop" scoped="" ref="0x40356e10"/>
        <function-ref name="runNextTask" scoped="" ref="0x40356ef0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TaskBasic" ref="0x4041f010" loc="56:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TaskBasic" scoped="" ref="0x4041f010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4041f1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4041f2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuSleep" ref="0x4041fc70" loc="57:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuSleep" scoped="" ref="0x4041fc70"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuSleep"/>
      </instance>
      <interface-functions>
        <function-ref name="sleep" scoped="" ref="0x4041fe48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Scheduler" ref="0x40420738" loc="55:/opt/tinyos-2.x/tos/system/SchedulerBasicP.nc">
      <component-ref qname="SchedulerBasicP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Scheduler" scoped="" ref="0x40420738"/></type-interface>
      <instance>
        <interfacedef-ref qname="Scheduler"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40420910"/>
        <function-ref name="taskLoop" scoped="" ref="0x404209f0"/>
        <function-ref name="runNextTask" scoped="" ref="0x40420ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b66eb0" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b66eb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b6c0c0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b6c1a0"/>
        <function-ref name="start" scoped="" ref="0x40b6c280"/>
        <function-ref name="stop" scoped="" ref="0x40b6c360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocol" ref="0x40b6acc0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40b6acc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40b6ae98"/>
        <function-ref name="process" scoped="" ref="0x40b6d010"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40b6d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x40b66348" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40b66348"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b66520"/>
        <function-ref name="receivedByte" scoped="" ref="0x40b66600"/>
        <function-ref name="sendDone" scoped="" ref="0x40b666e0"/>
        <function-ref name="uartError" scoped="" ref="0x40b667c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x40b65970" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b65970"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x4050fea0"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b4aa98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b642d0"/>
        <function-ref name="set" scoped="" ref="0x40b64010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ppp" ref="0x40b69170" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40b69170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40b69348"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40b69428"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40b69508"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40b695e8"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40b696c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppOptions" ref="0x40b63af8" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40b63af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40470b18"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x4046f620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b654a0"/>
        <function-ref name="set" scoped="" ref="0x40b651e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x40b669f8" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40b669f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b66bd0"/>
        <function-ref name="stop" scoped="" ref="0x40b66cb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40b6c520" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonC.nc">
      <component-ref qname="PppDaemonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40b6c520"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b6c6f8"/>
        <function-ref name="down" scoped="" ref="0x40b6c7d8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40b6c8b8"/>
        <function-ref name="open" scoped="" ref="0x40b6c998"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40b6ca78"/>
        <function-ref name="signalEvent" scoped="" ref="0x40b6cb58"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40b6cc38"/>
        <function-ref name="close" scoped="" ref="0x40b6cd18"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40b6cdf8"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40b6ced8"/>
        <function-ref name="up" scoped="" ref="0x40b69010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppControl" ref="0x40b5d798" loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControl" scoped="" ref="0x40b5d798"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b5d970"/>
        <function-ref name="stopDone" scoped="" ref="0x40b5da50"/>
        <function-ref name="start" scoped="" ref="0x40b5db30"/>
        <function-ref name="stop" scoped="" ref="0x40b5dc10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b824a0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b824a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b82678"/>
        <function-ref name="stopDone" scoped="" ref="0x40b82758"/>
        <function-ref name="start" scoped="" ref="0x40b82838"/>
        <function-ref name="stop" scoped="" ref="0x40b82918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProtocolReject" ref="0x40b7fef0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40b7fef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40b820e0"/>
        <function-ref name="invoke" scoped="" ref="0x40b821c0"/>
        <function-ref name="process" scoped="" ref="0x40b822a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolReject" ref="0x40b7dac0" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolReject" scoped="" ref="0x40b7dac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolReject"/>
      </instance>
      <interface-functions>
        <function-ref name="process" scoped="" ref="0x40b7dc98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40b5ea48" loc="35:/opt/tinyos-2.x/tos/lib/ppp/PppDaemonP.nc">
      <component-ref qname="PppDaemonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40b5ea48"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40b5ec20"/>
        <function-ref name="down" scoped="" ref="0x40b5ed00"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40b5ede0"/>
        <function-ref name="open" scoped="" ref="0x40b5eec0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40b5d010"/>
        <function-ref name="signalEvent" scoped="" ref="0x40b5d0f0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40b5d1d0"/>
        <function-ref name="close" scoped="" ref="0x40b5d2b0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40b5d390"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40b5d470"/>
        <function-ref name="up" scoped="" ref="0x40b5d550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40b954c8" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40b954c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40b956a0"/>
        <function-ref name="stopDone" scoped="" ref="0x40b95780"/>
        <function-ref name="start" scoped="" ref="0x40b95860"/>
        <function-ref name="stop" scoped="" ref="0x40b95940"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppRejectedProtocol" ref="0x40b90270" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40b90270"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40b90448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocol" ref="0x40b96010" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40b96010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40b961e8"/>
        <function-ref name="process" scoped="" ref="0x40b962c8"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40b963a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x40b96908" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40b96908"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40b96ae0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40b96bc0"/>
        <function-ref name="sendDone" scoped="" ref="0x40b96ca0"/>
        <function-ref name="uartError" scoped="" ref="0x40b96d80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolReject" ref="0x40b96598" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolReject" scoped="" ref="0x40b96598"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolReject"/>
      </instance>
      <interface-functions>
        <function-ref name="process" scoped="" ref="0x40b96770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ppp" ref="0x40b95aa0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40b95aa0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40b95c78"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40b95d58"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40b95e38"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40b95f18"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40b94010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppOptions" ref="0x40b907a8" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40b907a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40470b18"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x4046f620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b930b8"/>
        <function-ref name="set" scoped="" ref="0x40b90dd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x40b93588" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40b93588"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x4050fea0"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b4aa98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40b93e70"/>
        <function-ref name="set" scoped="" ref="0x40b93bb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x40b95010" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppC.nc">
      <component-ref qname="PppC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40b95010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b951e8"/>
        <function-ref name="stop" scoped="" ref="0x40b952c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40ba9210" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40ba9210"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ba93e8"/>
        <function-ref name="stopDone" scoped="" ref="0x40ba94c8"/>
        <function-ref name="start" scoped="" ref="0x40ba95a8"/>
        <function-ref name="stop" scoped="" ref="0x40ba9688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="MultiLed" ref="0x40ba69b0" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40ba69b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40ba6b88"/>
        <function-ref name="toggle" scoped="" ref="0x40ba6c68"/>
        <function-ref name="get" scoped="" ref="0x40ba6d48"/>
        <function-ref name="on" scoped="" ref="0x40ba6e28"/>
        <function-ref name="set" scoped="" ref="0x40ba6f08"/>
        <function-ref name="off" scoped="" ref="0x40ba9010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processError_task" ref="0x40bbf1e8" loc="413:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processError_task" scoped="" ref="0x40bbf1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bbf3c0"/>
        <function-ref name="runTask" scoped="" ref="0x40bbf4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppRejectedProtocol" ref="0x40ba8c90" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40ba8c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40ba8e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitFramePool" ref="0x40baa278" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitFramePool" scoped="" ref="0x40baa278"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40baa450"/>
        <function-ref name="slotCount" scoped="" ref="0x40baa530"/>
        <function-ref name="available" scoped="" ref="0x40baa610"/>
        <function-ref name="request" scoped="" ref="0x40baa6f0"/>
        <function-ref name="poolSize" scoped="" ref="0x40baa7d0"/>
        <function-ref name="freeze" scoped="" ref="0x40baa8b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocol" ref="0x40baad90" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40baad90"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
          <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40b8d010"/>
        <function-ref name="process" scoped="" ref="0x40b8d0f0"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40b8d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="processFrame_task" ref="0x40bc7530" loc="355:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="processFrame_task" scoped="" ref="0x40bc7530"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bc7708"/>
        <function-ref name="runTask" scoped="" ref="0x40bc77e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ProtocolReject" ref="0x40b8d4a0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40b8d4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40b8d678"/>
        <function-ref name="invoke" scoped="" ref="0x40b8d758"/>
        <function-ref name="process" scoped="" ref="0x40b8d838"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="controlEngine_task" ref="0x40b9d918" loc="94:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="controlEngine_task" scoped="" ref="0x40b9d918"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40b9daf0"/>
        <function-ref name="runTask" scoped="" ref="0x40b9dbd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolReject" ref="0x40b8da28" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolReject" scoped="" ref="0x40b8da28"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolReject"/>
      </instance>
      <interface-functions>
        <function-ref name="process" scoped="" ref="0x40b8dc00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ppp" ref="0x40ba8538" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40ba8538"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40ba8710"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40ba87f0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40ba88d0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40ba89b0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40ba8a90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcControl" ref="0x40b8de38" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcControl" scoped="" ref="0x40b8de38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40b8c050"/>
        <function-ref name="stop" scoped="" ref="0x40b8c130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppOptions" ref="0x40ba99e8" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40ba99e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40470b18"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x4046f620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ba8308"/>
        <function-ref name="set" scoped="" ref="0x40ba8048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transmitEngine_task" ref="0x40bbb198" loc="175:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transmitEngine_task" scoped="" ref="0x40bbb198"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40bbb3f0"/>
        <function-ref name="runTask" scoped="" ref="0x40bbb4d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcFraming" ref="0x40b87288" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppP.nc">
      <component-ref qname="PppP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFraming" scoped="" ref="0x40b87288"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcFraming"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedFrame" scoped="" ref="0x40b87460"/>
        <function-ref name="receivedDelimiter" scoped="" ref="0x40b87540"/>
        <function-ref name="sendFrame" scoped="" ref="0x40b87620"/>
        <function-ref name="sendDone" scoped="" ref="0x40b87700"/>
        <function-ref name="releaseReceivedFrame" scoped="" ref="0x40b877e0"/>
        <function-ref name="receptionError" scoped="" ref="0x40b878c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x40bd4010" loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <component-ref qname="PppC.TransmitFramePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x40bd4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bd41e8"/>
        <function-ref name="slotCount" scoped="" ref="0x40bd42c8"/>
        <function-ref name="available" scoped="" ref="0x40bd43a8"/>
        <function-ref name="request" scoped="" ref="0x40bd4488"/>
        <function-ref name="poolSize" scoped="" ref="0x40bd4568"/>
        <function-ref name="freeze" scoped="" ref="0x40bd4648"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPoolStorage" ref="0x41b1dc28" loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <component-ref qname="PppC.TransmitFramePoolC.FragmentPoolStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x41b1dc28"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x41b1de00"/>
        <function-ref name="slots" scoped="" ref="0x41b1dee0"/>
        <function-ref name="id" scoped="" ref="0x41b1c010"/>
        <function-ref name="poolSize" scoped="" ref="0x41b1c0f0"/>
        <function-ref name="pool" scoped="" ref="0x41b1c1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragmentPoolStorage" ref="0x40bea300" loc="47:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <component-ref qname="FragmentPoolImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40bea300"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40bd31b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x40bea4d8"/>
        <function-ref name="slots" scoped="" ref="0x40bea5b8"/>
        <function-ref name="id" scoped="" ref="0x40bea698"/>
        <function-ref name="poolSize" scoped="" ref="0x40bea778"/>
        <function-ref name="pool" scoped="" ref="0x40bea858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x40bf6750" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplC.nc">
      <component-ref qname="FragmentPoolImplC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x40bf6750"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40bd31b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40bf6928"/>
        <function-ref name="slotCount" scoped="" ref="0x40bf6a08"/>
        <function-ref name="available" scoped="" ref="0x40bf6ae8"/>
        <function-ref name="request" scoped="" ref="0x40bf6bc8"/>
        <function-ref name="poolSize" scoped="" ref="0x40bf6ca8"/>
        <function-ref name="freeze" scoped="" ref="0x40bf6d88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragmentPoolStorage" ref="0x40c0e1f8" loc="48:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <component-ref qname="FragmentPoolImplC.FragmentPoolImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x40c0e1f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40bd31b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x40c0e3e0"/>
        <function-ref name="slots" scoped="" ref="0x40c0e4c0"/>
        <function-ref name="id" scoped="" ref="0x40c0e5a0"/>
        <function-ref name="poolSize" scoped="" ref="0x40c0e680"/>
        <function-ref name="pool" scoped="" ref="0x40c0e760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40be85e8" loc="41:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <component-ref qname="FragmentPoolImplC.FragmentPoolImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40be85e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40be87c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x40be8978" loc="42:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolImplP.nc">
      <component-ref qname="FragmentPoolImplC.FragmentPoolImplP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x40be8978"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-parameters>
        <type-int cname="int" size="I:2" alignment="I:1">
          <typename><typedef-ref name="fragment_pool_id_t" ref="0x40bd31b0"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40be8b60"/>
        <function-ref name="slotCount" scoped="" ref="0x40be8c40"/>
        <function-ref name="available" scoped="" ref="0x40be8d20"/>
        <function-ref name="request" scoped="" ref="0x40be8e00"/>
        <function-ref name="poolSize" scoped="" ref="0x40be8ee0"/>
        <function-ref name="freeze" scoped="" ref="0x40c0e010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFraming" ref="0x40ca0580" loc="86:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFraming" scoped="" ref="0x40ca0580"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcFraming"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedFrame" scoped="" ref="0x40ca0758"/>
        <function-ref name="receivedDelimiter" scoped="" ref="0x40ca0838"/>
        <function-ref name="sendFrame" scoped="" ref="0x40ca0918"/>
        <function-ref name="sendDone" scoped="" ref="0x40ca09f8"/>
        <function-ref name="releaseReceivedFrame" scoped="" ref="0x40ca0ad8"/>
        <function-ref name="receptionError" scoped="" ref="0x40ca0bb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x40c30778" loc="81:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40c30778"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40c30950"/>
        <function-ref name="receivedByte" scoped="" ref="0x40c30a30"/>
        <function-ref name="sendDone" scoped="" ref="0x40c30b10"/>
        <function-ref name="uartError" scoped="" ref="0x40c30bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x40ca0da8" loc="90:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40ca0da8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x4050fea0"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b4aa98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40c9e6a0"/>
        <function-ref name="set" scoped="" ref="0x40c9e3e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x40c30d50" loc="82:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x40c30d50"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40c30f28"/>
        <function-ref name="stop" scoped="" ref="0x40ca0018"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ca0188" loc="85:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingC.nc">
      <component-ref qname="PppC.HdlcFramingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ca0188"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ca0360"/>
        <function-ref name="stop" scoped="" ref="0x40ca0440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41b579a8" loc="48:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41b579a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41b57b80"/>
        <function-ref name="stop" scoped="" ref="0x41b57c60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFraming" ref="0x41b57da0" loc="49:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFraming" scoped="" ref="0x41b57da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcFraming"/>
      </instance>
      <interface-functions>
        <function-ref name="receivedFrame" scoped="" ref="0x41b56010"/>
        <function-ref name="receivedDelimiter" scoped="" ref="0x41b560f0"/>
        <function-ref name="sendFrame" scoped="" ref="0x41b561d0"/>
        <function-ref name="sendDone" scoped="" ref="0x41b562b0"/>
        <function-ref name="releaseReceivedFrame" scoped="" ref="0x41b56390"/>
        <function-ref name="receptionError" scoped="" ref="0x41b56470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="uartStreamSendDone" ref="0x41b55260" loc="522:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="uartStreamSendDone" scoped="" ref="0x41b55260"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41b55438"/>
        <function-ref name="runTask" scoped="" ref="0x41b55518"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="inputEngine_task" ref="0x41b55698" loc="136:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="inputEngine_task" scoped="" ref="0x41b55698"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41b55870"/>
        <function-ref name="runTask" scoped="" ref="0x41b55950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcUart" ref="0x41b594b0" loc="42:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x41b594b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41b59688"/>
        <function-ref name="receivedByte" scoped="" ref="0x41b59768"/>
        <function-ref name="sendDone" scoped="" ref="0x41b59848"/>
        <function-ref name="uartError" scoped="" ref="0x41b59928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41b57690" loc="47:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41b57690"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41b57868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcFramingOptions" ref="0x41b56660" loc="50:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x41b56660"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x4050fea0"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b4aa98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41b55010"/>
        <function-ref name="set" scoped="" ref="0x41b56c88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartControl" ref="0x41b59a88" loc="43:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartControl" scoped="" ref="0x41b59a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41b59c60"/>
        <function-ref name="stop" scoped="" ref="0x41b59d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InputFramePool" ref="0x41b59ea0" loc="44:/opt/tinyos-2.x/tos/lib/ppp/HdlcFramingP.nc">
      <component-ref qname="PppC.HdlcFramingC.HdlcFramingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InputFramePool" scoped="" ref="0x41b59ea0"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b570c0"/>
        <function-ref name="slotCount" scoped="" ref="0x41b571a0"/>
        <function-ref name="available" scoped="" ref="0x41b57280"/>
        <function-ref name="request" scoped="" ref="0x41b57360"/>
        <function-ref name="poolSize" scoped="" ref="0x41b57440"/>
        <function-ref name="freeze" scoped="" ref="0x41b57520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPool" ref="0x41b53248" loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolC.nc">
      <component-ref qname="PppC.HdlcFramingC.InputFramePoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPool" scoped="" ref="0x41b53248"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPool"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41b53420"/>
        <function-ref name="slotCount" scoped="" ref="0x41b53500"/>
        <function-ref name="available" scoped="" ref="0x41b535e0"/>
        <function-ref name="request" scoped="" ref="0x41b536c0"/>
        <function-ref name="poolSize" scoped="" ref="0x41b537a0"/>
        <function-ref name="freeze" scoped="" ref="0x41b53880"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FragmentPoolStorage" ref="0x41b79200" loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorageP.nc">
      <component-ref qname="PppC.HdlcFramingC.InputFramePoolC.FragmentPoolStorageP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragmentPoolStorage" scoped="" ref="0x41b79200"/></type-interface>
      <instance>
        <interfacedef-ref qname="FragmentPoolStorage"/>
      </instance>
      <interface-functions>
        <function-ref name="slotCount" scoped="" ref="0x41b793d8"/>
        <function-ref name="slots" scoped="" ref="0x41b794b8"/>
        <function-ref name="id" scoped="" ref="0x41b79598"/>
        <function-ref name="poolSize" scoped="" ref="0x41b79678"/>
        <function-ref name="pool" scoped="" ref="0x41b79758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led0" ref="0x40c973d0" loc="44:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led0" scoped="" ref="0x40c973d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c975a8"/>
        <function-ref name="on" scoped="" ref="0x40c97688"/>
        <function-ref name="off" scoped="" ref="0x40c97768"/>
        <function-ref name="set" scoped="" ref="0x40c97848"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led3" ref="0x40c9a658" loc="50:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led3" scoped="" ref="0x40c9a658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c9a830"/>
        <function-ref name="on" scoped="" ref="0x40c9a910"/>
        <function-ref name="off" scoped="" ref="0x40c9a9f0"/>
        <function-ref name="set" scoped="" ref="0x40c9aad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Green" ref="0x40c9ac88" loc="68:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Green" scoped="" ref="0x40c9ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c9ae60"/>
        <function-ref name="on" scoped="" ref="0x40c99010"/>
        <function-ref name="off" scoped="" ref="0x40c990f0"/>
        <function-ref name="set" scoped="" ref="0x40c991d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Yellow" ref="0x40c999a8" loc="77:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Yellow" scoped="" ref="0x40c999a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c99b80"/>
        <function-ref name="on" scoped="" ref="0x40c99c60"/>
        <function-ref name="off" scoped="" ref="0x40c99d40"/>
        <function-ref name="set" scoped="" ref="0x40c99e20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x40c96620" loc="85:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40c96620"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c967f8"/>
        <function-ref name="toggle" scoped="" ref="0x40c968d8"/>
        <function-ref name="get" scoped="" ref="0x40c969b8"/>
        <function-ref name="on" scoped="" ref="0x40c96a98"/>
        <function-ref name="set" scoped="" ref="0x40c96b78"/>
        <function-ref name="off" scoped="" ref="0x40c96c58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led1" ref="0x40c979f8" loc="46:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led1" scoped="" ref="0x40c979f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c97bd0"/>
        <function-ref name="on" scoped="" ref="0x40c97cb0"/>
        <function-ref name="off" scoped="" ref="0x40c97d90"/>
        <function-ref name="set" scoped="" ref="0x40c97e70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Red" ref="0x40c99370" loc="71:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Red" scoped="" ref="0x40c99370"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c99548"/>
        <function-ref name="on" scoped="" ref="0x40c99628"/>
        <function-ref name="off" scoped="" ref="0x40c99708"/>
        <function-ref name="set" scoped="" ref="0x40c997e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led2" ref="0x40c9a030" loc="48:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led2" scoped="" ref="0x40c9a030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c9a208"/>
        <function-ref name="on" scoped="" ref="0x40c9a2e8"/>
        <function-ref name="off" scoped="" ref="0x40c9a3c8"/>
        <function-ref name="set" scoped="" ref="0x40c9a4a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Orange" ref="0x40c96010" loc="80:/opt/tinyos-2.x/tos/system/LedC.nc">
      <component-ref qname="LedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Orange" scoped="" ref="0x40c96010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c961e8"/>
        <function-ref name="on" scoped="" ref="0x40c962c8"/>
        <function-ref name="off" scoped="" ref="0x40c963a8"/>
        <function-ref name="set" scoped="" ref="0x40c96488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x40c953a8" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40c953a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c95580"/>
        <function-ref name="toggle" scoped="" ref="0x40c95660"/>
        <function-ref name="get" scoped="" ref="0x40c95740"/>
        <function-ref name="on" scoped="" ref="0x40c95820"/>
        <function-ref name="set" scoped="" ref="0x40c95900"/>
        <function-ref name="off" scoped="" ref="0x40c959e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x40c95e48" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedC.nc">
      <component-ref qname="PlatformLedC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x40c95e48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c92050"/>
        <function-ref name="on" scoped="" ref="0x40c92130"/>
        <function-ref name="off" scoped="" ref="0x40c92210"/>
        <function-ref name="set" scoped="" ref="0x40c922f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MultiLed" ref="0x40c92ba0" loc="39:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MultiLed" scoped="" ref="0x40c92ba0"/></type-interface>
      <instance>
        <interfacedef-ref qname="MultiLed"/>
      </instance>
      <interface-functions>
        <function-ref name="setSingle" scoped="" ref="0x40c92d78"/>
        <function-ref name="toggle" scoped="" ref="0x40c92e58"/>
        <function-ref name="get" scoped="" ref="0x40c8f010"/>
        <function-ref name="on" scoped="" ref="0x40c8f0f0"/>
        <function-ref name="set" scoped="" ref="0x40c8f1d0"/>
        <function-ref name="off" scoped="" ref="0x40c8f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Led" ref="0x40c8f718" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Led" scoped="" ref="0x40c8f718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Led"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="toggle" scoped="" ref="0x40c8f8f0"/>
        <function-ref name="on" scoped="" ref="0x40c8f9d0"/>
        <function-ref name="off" scoped="" ref="0x40c8fab0"/>
        <function-ref name="set" scoped="" ref="0x40c8fb90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40c8fd40" loc="43:/opt/tinyos-2.x/tos/platforms/ucmini/PlatformLedP.nc">
      <component-ref qname="PlatformLedP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40c8fd40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40c8ff18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40c8d010"/>
        <function-ref name="led1On" scoped="" ref="0x40c8d0f0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40c8d1d0"/>
        <function-ref name="led3Off" scoped="" ref="0x40c8d2b0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40c8d390"/>
        <function-ref name="get" scoped="" ref="0x40c8d470"/>
        <function-ref name="led1Off" scoped="" ref="0x40c8d550"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40c8d630"/>
        <function-ref name="led3On" scoped="" ref="0x40c8d710"/>
        <function-ref name="led0On" scoped="" ref="0x40c8d7f0"/>
        <function-ref name="led2Off" scoped="" ref="0x40c8d8d0"/>
        <function-ref name="led2On" scoped="" ref="0x40c8d9b0"/>
        <function-ref name="set" scoped="" ref="0x40c8db10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x40ca7c00" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40ca7c00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ca7dd8"/>
        <function-ref name="invoke" scoped="" ref="0x40ca7eb8"/>
        <function-ref name="process" scoped="" ref="0x40ca6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppRejectedProtocol" ref="0x40ca6908" loc="49:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40ca6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40ca6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40ca82a0" loc="42:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40ca82a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40ca8478"/>
        <function-ref name="process" scoped="" ref="0x40ca8558"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40ca8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ProtocolReject" ref="0x40ca7580" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40ca7580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ca7758"/>
        <function-ref name="invoke" scoped="" ref="0x40ca7838"/>
        <function-ref name="process" scoped="" ref="0x40ca7918"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcFramingOptions" ref="0x40ca6ee0" loc="50:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40ca6ee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x4050fea0"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b4aa98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ca5818"/>
        <function-ref name="set" scoped="" ref="0x40ca5558"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40ca61b0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40ca61b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40ca6388"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40ca6468"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40ca6548"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40ca6628"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40ca6708"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppOptions" ref="0x40ca5c48" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40ca5c48"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40470b18"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x4046f620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40ca3548"/>
        <function-ref name="set" scoped="" ref="0x40ca3288"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40ca87f8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolC.nc">
      <component-ref qname="LinkControlProtocolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40ca87f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ca89d0"/>
        <function-ref name="down" scoped="" ref="0x40ca8ab0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40ca8b90"/>
        <function-ref name="open" scoped="" ref="0x40ca8c70"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40ca8d50"/>
        <function-ref name="signalEvent" scoped="" ref="0x40ca8e30"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40ca8f10"/>
        <function-ref name="close" scoped="" ref="0x40ca7010"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40ca70f0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40ca71d0"/>
        <function-ref name="up" scoped="" ref="0x40ca72b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AddressControlFieldCompressionOption" ref="0x40cc3bb0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AddressControlFieldCompressionOption" scoped="" ref="0x40cc3bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40ccb630"/>
        <function-ref name="appendRequest" scoped="" ref="0x40cc3e68"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40ccb010"/>
        <function-ref name="processNakValue" scoped="" ref="0x40ccb0f0"/>
        <function-ref name="setRemote" scoped="" ref="0x40ccb1d0"/>
        <function-ref name="reset" scoped="" ref="0x40ccb2b0"/>
        <function-ref name="setLocal" scoped="" ref="0x40ccb390"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40ccb470"/>
        <function-ref name="getType" scoped="" ref="0x40ccb550"/>
        <function-ref name="considerRequest" scoped="" ref="0x40cc3d88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AsyncControlCharacterMapOption" ref="0x40cca6d0" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AsyncControlCharacterMapOption" scoped="" ref="0x40cca6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40cc10f0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40cca988"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40ccaa68"/>
        <function-ref name="processNakValue" scoped="" ref="0x40ccab48"/>
        <function-ref name="setRemote" scoped="" ref="0x40ccac28"/>
        <function-ref name="reset" scoped="" ref="0x40ccad08"/>
        <function-ref name="setLocal" scoped="" ref="0x40ccade8"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40ccaec8"/>
        <function-ref name="getType" scoped="" ref="0x40cc1010"/>
        <function-ref name="considerRequest" scoped="" ref="0x40cca8a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppRejectedProtocol" ref="0x40cbfa48" loc="52:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppRejectedProtocol" scoped="" ref="0x40cbfa48"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppRejectedProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="rejected" scoped="" ref="0x40cbfc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40ccc260" loc="38:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40ccc260"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40ccc438"/>
        <function-ref name="process" scoped="" ref="0x40ccc518"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40ccc5f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ProtocolReject" ref="0x40ccc8c8" loc="39:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ProtocolReject" scoped="" ref="0x40ccc8c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40cccaa0"/>
        <function-ref name="invoke" scoped="" ref="0x40cccb80"/>
        <function-ref name="process" scoped="" ref="0x40cccc60"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="HdlcFramingOptions" ref="0x40cc0160" loc="50:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcFramingOptions" scoped="" ref="0x40cc0160"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:10" alignment="I:1"><struct-ref name="HdlcFramingOptions_t" ref="0x4050fea0"/>
            <typename><typedef-ref name="HdlcFramingOptions_t" ref="0x40b4aa98"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cc0a48"/>
        <function-ref name="set" scoped="" ref="0x40cc0788"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40cc1290" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40cc1290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40cc1468"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40cc1548"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40cc1628"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40cc1708"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40cc17e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppOptions" ref="0x40cc0e78" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppOptions" scoped="" ref="0x40cc0e78"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><struct-ref name="PppOptions_t" ref="0x40470b18"/>
            <typename><typedef-ref name="PppOptions_t" ref="0x4046f620"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40cbf778"/>
        <function-ref name="set" scoped="" ref="0x40cbf4b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="MaximumReceiveUnitOption" ref="0x40ccb938" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="MaximumReceiveUnitOption" scoped="" ref="0x40ccb938"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40cca390"/>
        <function-ref name="appendRequest" scoped="" ref="0x40ccbbf0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40ccbcd0"/>
        <function-ref name="processNakValue" scoped="" ref="0x40ccbdb0"/>
        <function-ref name="setRemote" scoped="" ref="0x40ccbe90"/>
        <function-ref name="reset" scoped="" ref="0x40cca010"/>
        <function-ref name="setLocal" scoped="" ref="0x40cca0f0"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40cca1d0"/>
        <function-ref name="getType" scoped="" ref="0x40cca2b0"/>
        <function-ref name="considerRequest" scoped="" ref="0x40ccbb10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolCodeCoordinator" ref="0x40cbda70" loc="49:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40cbda70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40cbdc48"/>
        <function-ref name="dispatch" scoped="" ref="0x40cbdd28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40cbfde0" loc="53:/opt/tinyos-2.x/tos/lib/ppp/LinkControlProtocolP.nc">
      <component-ref qname="LinkControlProtocolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40cbfde0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40cbb010"/>
        <function-ref name="down" scoped="" ref="0x40cbb0f0"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40cbb1d0"/>
        <function-ref name="open" scoped="" ref="0x40cbb2b0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40cbb390"/>
        <function-ref name="signalEvent" scoped="" ref="0x40cbb470"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40cbb550"/>
        <function-ref name="close" scoped="" ref="0x40cbb630"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40cbb710"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40cbb7f0"/>
        <function-ref name="up" scoped="" ref="0x40cbb8d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x40d8f960" loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40d8f960"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40d8fb38"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40d8fc18"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40d8fcf8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x40d8fe58" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40d8fe58"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d8e050"/>
        <function-ref name="invoke" scoped="" ref="0x40d8e130"/>
        <function-ref name="process" scoped="" ref="0x40d8e210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x40d8d330" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x40d8d330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d8d508"/>
        <function-ref name="invoke" scoped="" ref="0x40d8d5e8"/>
        <function-ref name="process" scoped="" ref="0x40d8d6c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x40d901e8" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x40d901e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="considerRequest" scoped="" ref="0x40d90bb0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40d904b0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40d90590"/>
        <function-ref name="processNakValue" scoped="" ref="0x40d90670"/>
        <function-ref name="setRemote" scoped="" ref="0x40d90750"/>
        <function-ref name="reset" scoped="" ref="0x40d90830"/>
        <function-ref name="setLocal" scoped="" ref="0x40d90910"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40d909f0"/>
        <function-ref name="isNegotiable" scoped="" ref="0x40d903d0"/>
        <function-ref name="getType" scoped="" ref="0x40d90ad0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x40d8e868" loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x40d8e868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d8ea40"/>
        <function-ref name="invoke" scoped="" ref="0x40d8eb20"/>
        <function-ref name="process" scoped="" ref="0x40d8ec00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40d92a88" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40d92a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40d92c60"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40d92d40"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40d92e20"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40d92f00"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40d90010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x40d8e370" loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x40d8e370"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d8e548"/>
        <function-ref name="invoke" scoped="" ref="0x40d8e628"/>
        <function-ref name="process" scoped="" ref="0x40d8e708"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x40d8ed60" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x40d8ed60"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d8d010"/>
        <function-ref name="invoke" scoped="" ref="0x40d8d0f0"/>
        <function-ref name="process" scoped="" ref="0x40d8d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x40d8d828" loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40d8d828"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d8da00"/>
        <function-ref name="invoke" scoped="" ref="0x40d8dae0"/>
        <function-ref name="process" scoped="" ref="0x40d8dbc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40d90cf0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40d90cf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40d90ec8"/>
        <function-ref name="down" scoped="" ref="0x40d8f010"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40d8f0f0"/>
        <function-ref name="open" scoped="" ref="0x40d8f1d0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40d8f2b0"/>
        <function-ref name="signalEvent" scoped="" ref="0x40d8f390"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40d8f470"/>
        <function-ref name="close" scoped="" ref="0x40d8f550"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40d8f630"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40d8f710"/>
        <function-ref name="up" scoped="" ref="0x40d8f7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x41bcc328" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x41bcc328"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x41bcc500"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x41bcc5e0"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x41bcc6c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x41bcc820" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x41bcc820"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bcc9f8"/>
        <function-ref name="invoke" scoped="" ref="0x41bccad8"/>
        <function-ref name="process" scoped="" ref="0x41bccbb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x41bce818" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x41bce818"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getType" scoped="" ref="0x41bcd2b0"/>
        <function-ref name="appendRequest" scoped="" ref="0x41bceae0"/>
        <function-ref name="setNegotiable" scoped="" ref="0x41bcebc0"/>
        <function-ref name="processNakValue" scoped="" ref="0x41bceca0"/>
        <function-ref name="setRemote" scoped="" ref="0x41bced80"/>
        <function-ref name="reset" scoped="" ref="0x41bcee60"/>
        <function-ref name="setLocal" scoped="" ref="0x41bcd010"/>
        <function-ref name="appendNakValue" scoped="" ref="0x41bcd0f0"/>
        <function-ref name="isNegotiable" scoped="" ref="0x41bcd1d0"/>
        <function-ref name="considerRequest" scoped="" ref="0x41bcea00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41bcc010" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41bcc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41bcc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x41bcb250" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x41bcb250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bcb428"/>
        <function-ref name="invoke" scoped="" ref="0x41bcb508"/>
        <function-ref name="process" scoped="" ref="0x41bcb5e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x41bcbc40" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x41bcbc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bcbe18"/>
        <function-ref name="invoke" scoped="" ref="0x41bcbef8"/>
        <function-ref name="process" scoped="" ref="0x41bca010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41bce0e8" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41bce0e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41bce2c0"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41bce3a0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x41bce480"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x41bce560"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41bce640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x41bccd18" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x41bccd18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bccef0"/>
        <function-ref name="invoke" scoped="" ref="0x41bcb010"/>
        <function-ref name="process" scoped="" ref="0x41bcb0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x41bcb748" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x41bcb748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bcb920"/>
        <function-ref name="invoke" scoped="" ref="0x41bcba00"/>
        <function-ref name="process" scoped="" ref="0x41bcbae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x41bca170" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x41bca170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bca348"/>
        <function-ref name="invoke" scoped="" ref="0x41bca428"/>
        <function-ref name="process" scoped="" ref="0x41bca508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x41bcd3f0" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="LinkControlProtocolC.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x41bcd3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41bcd5c8"/>
        <function-ref name="down" scoped="" ref="0x41bcd6a8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x41bcd788"/>
        <function-ref name="open" scoped="" ref="0x41bcd868"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x41bcd948"/>
        <function-ref name="signalEvent" scoped="" ref="0x41bcda28"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x41bcdb08"/>
        <function-ref name="close" scoped="" ref="0x41bcdbe8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x41bcdcc8"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x41bcdda8"/>
        <function-ref name="up" scoped="" ref="0x41bcde88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x40d87010" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x40d87010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40d871f8"/>
        <function-ref name="invoke" scoped="" ref="0x40d872d8"/>
        <function-ref name="process" scoped="" ref="0x40d873b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40d888a8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40d888a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40d88a80"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40d88b60"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40d88c40"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40d88d20"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40d88e00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x40d88480" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40d88480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40d88658"/>
        <function-ref name="dispatch" scoped="" ref="0x40d88738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x41bf2d80" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x41bf2d80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41bf1010"/>
        <function-ref name="invoke" scoped="" ref="0x41bf10f0"/>
        <function-ref name="process" scoped="" ref="0x41bf11d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41bf2630" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41bf2630"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41bf2808"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41bf28e8"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x41bf29c8"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x41bf2aa8"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41bf2b88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x41bf2208" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="LinkControlProtocolC.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x41bf2208"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x41bf23e0"/>
        <function-ref name="dispatch" scoped="" ref="0x41bf24c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x40e72920" loc="56:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40e72920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40e72af8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40e72bd8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40e72cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x40e73740" loc="52:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x40e73740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x404e2010"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x404e2b88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40e72048"/>
        <function-ref name="set" scoped="" ref="0x40e73d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x40e72e18" loc="57:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40e72e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e71010"/>
        <function-ref name="invoke" scoped="" ref="0x40e710f0"/>
        <function-ref name="process" scoped="" ref="0x40e711d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e72288" loc="55:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e72288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e72460"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e72540"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e72620"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e72700"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e727e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x40e71330" loc="58:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40e71330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40e71508"/>
        <function-ref name="invoke" scoped="" ref="0x40e715e8"/>
        <function-ref name="process" scoped="" ref="0x40e716c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40dca9f0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40dca9f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40dcabc8"/>
        <function-ref name="down" scoped="" ref="0x40dcaca8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40dcad88"/>
        <function-ref name="open" scoped="" ref="0x40dcae68"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e73010"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e730f0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e731d0"/>
        <function-ref name="close" scoped="" ref="0x40e732b0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e73390"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e73470"/>
        <function-ref name="up" scoped="" ref="0x40e73550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resumeAutomaton_task" ref="0x41c42c80" loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="resumeAutomaton_task" scoped="" ref="0x41c42c80"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41c42e58"/>
        <function-ref name="runTask" scoped="" ref="0x41c41010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="restartTimerFired_task" ref="0x41c42848" loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="restartTimerFired_task" scoped="" ref="0x41c42848"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41c42a20"/>
        <function-ref name="runTask" scoped="" ref="0x41c42b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x41c46e80" loc="43:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x41c46e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x41c44070"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x41c44150"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x41c44230"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x41c47c98" loc="39:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x41c47c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x404e2010"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x404e2b88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c465a8"/>
        <function-ref name="set" scoped="" ref="0x41c462e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x41c43e08" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x41c43e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c42010"/>
        <function-ref name="invoke" scoped="" ref="0x41c420f0"/>
        <function-ref name="process" scoped="" ref="0x41c421d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41c4ac18" loc="37:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41c4ac18"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41c4adf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41c467e8" loc="42:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41c467e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41c469c0"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41c46aa0"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x41c46b80"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x41c46c60"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41c46d40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RestartTimer" ref="0x41c444b0" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartTimer" scoped="" ref="0x41c444b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c43960"/>
        <function-ref name="fired" scoped="" ref="0x41c43130"/>
        <function-ref name="startAt" scoped="" ref="0x41c43620"/>
        <function-ref name="isRunning" scoped="" ref="0x41c433a8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41c43bd8"/>
        <function-ref name="start" scoped="" ref="0x41c44c00"/>
        <function-ref name="stop" scoped="" ref="0x41c44ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x41c42330" loc="46:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x41c42330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c42508"/>
        <function-ref name="invoke" scoped="" ref="0x41c425e8"/>
        <function-ref name="process" scoped="" ref="0x41c426c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x41c47010" loc="38:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x41c47010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41c471e8"/>
        <function-ref name="down" scoped="" ref="0x41c472c8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x41c473a8"/>
        <function-ref name="open" scoped="" ref="0x41c47488"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x41c47568"/>
        <function-ref name="signalEvent" scoped="" ref="0x41c47648"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x41c47728"/>
        <function-ref name="close" scoped="" ref="0x41c47808"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x41c478e8"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x41c479c8"/>
        <function-ref name="up" scoped="" ref="0x41c47aa8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41c40c70" loc="40:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <component-ref qname="LinkControlProtocolC.LcpAutomatonC.MuxAlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41c40c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c3d150"/>
        <function-ref name="fired" scoped="" ref="0x41c3f908"/>
        <function-ref name="startAt" scoped="" ref="0x41c3fdf8"/>
        <function-ref name="isRunning" scoped="" ref="0x41c3fb80"/>
        <function-ref name="getAlarm" scoped="" ref="0x41c3d3c8"/>
        <function-ref name="start" scoped="" ref="0x41c3f3f0"/>
        <function-ref name="stop" scoped="" ref="0x41c3f690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ClientAlarm" ref="0x40e3e820" loc="47:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C_.nc">
      <component-ref qname="MuxAlarmMilli32C_"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ClientAlarm" scoped="" ref="0x40e3e820"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e3dd58"/>
        <function-ref name="fired" scoped="" ref="0x40e3d528"/>
        <function-ref name="startAt" scoped="" ref="0x40e3da18"/>
        <function-ref name="isRunning" scoped="" ref="0x40e3d7a0"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e3c010"/>
        <function-ref name="start" scoped="" ref="0x40e3d010"/>
        <function-ref name="stop" scoped="" ref="0x40e3d2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e3ab60" loc="49:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e3ab60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e490b8"/>
        <function-ref name="fired" scoped="" ref="0x40e39840"/>
        <function-ref name="startAt" scoped="" ref="0x40e39d50"/>
        <function-ref name="isRunning" scoped="" ref="0x40e39ac8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e49340"/>
        <function-ref name="start" scoped="" ref="0x40e39308"/>
        <function-ref name="stop" scoped="" ref="0x40e395b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e3a650" loc="48:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e3a650"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e3a828"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x40e496c0" loc="50:/opt/tinyos-2.x/tos/lib/timer/VirtualizeAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.VirtualizeAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x40e496c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e48b80"/>
        <function-ref name="fired" scoped="" ref="0x40e48350"/>
        <function-ref name="startAt" scoped="" ref="0x40e48840"/>
        <function-ref name="isRunning" scoped="" ref="0x40e485c8"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e48df8"/>
        <function-ref name="start" scoped="" ref="0x40e49e10"/>
        <function-ref name="stop" scoped="" ref="0x40e480d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x40e77470" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AlarmMilli32C.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x40e77470"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x40e76940"/>
        <function-ref name="fired" scoped="" ref="0x40e76110"/>
        <function-ref name="startAt" scoped="" ref="0x40e76600"/>
        <function-ref name="isRunning" scoped="" ref="0x40e76388"/>
        <function-ref name="getAlarm" scoped="" ref="0x40e76bb8"/>
        <function-ref name="start" scoped="" ref="0x40e77bc0"/>
        <function-ref name="stop" scoped="" ref="0x40e77e60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41c57560" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41c57560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c56ab8"/>
        <function-ref name="fired" scoped="" ref="0x41c56288"/>
        <function-ref name="startAt" scoped="" ref="0x41c56778"/>
        <function-ref name="isRunning" scoped="" ref="0x41c56500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41c56d30"/>
        <function-ref name="start" scoped="" ref="0x41c57cb0"/>
        <function-ref name="stop" scoped="" ref="0x41c56010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41cb1010" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41cb1010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41cb0a68"/>
        <function-ref name="test" scoped="" ref="0x41cb1de8"/>
        <function-ref name="fired" scoped="" ref="0x41cb1b70"/>
        <function-ref name="force" scoped="" ref="0x41cae010"/>
        <function-ref name="get" scoped="" ref="0x41cb1658"/>
        <function-ref name="reset" scoped="" ref="0x41cb0088"/>
        <function-ref name="getMode" scoped="" ref="0x41cb0d08"/>
        <function-ref name="isOn" scoped="" ref="0x41cb07f0"/>
        <function-ref name="set" scoped="" ref="0x41cb18d0"/>
        <function-ref name="start" scoped="" ref="0x41cb0300"/>
        <function-ref name="stop" scoped="" ref="0x41cb0578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41cb6578" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41cb6578"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41cb5ab8"/>
        <function-ref name="fired" scoped="" ref="0x41cb5288"/>
        <function-ref name="startAt" scoped="" ref="0x41cb5778"/>
        <function-ref name="isRunning" scoped="" ref="0x41cb5500"/>
        <function-ref name="getAlarm" scoped="" ref="0x41cb5d30"/>
        <function-ref name="start" scoped="" ref="0x41cb6cc8"/>
        <function-ref name="stop" scoped="" ref="0x41cb5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41cb6140" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41cb6140"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41cb6318"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41cb4010" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41cb4010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41cb2a68"/>
        <function-ref name="test" scoped="" ref="0x41cb4de8"/>
        <function-ref name="get" scoped="" ref="0x41cb4658"/>
        <function-ref name="reset" scoped="" ref="0x41cb2088"/>
        <function-ref name="getMode" scoped="" ref="0x41cb2d08"/>
        <function-ref name="overflow" scoped="" ref="0x41cb4b70"/>
        <function-ref name="isOn" scoped="" ref="0x41cb27f0"/>
        <function-ref name="set" scoped="" ref="0x41cb48d0"/>
        <function-ref name="start" scoped="" ref="0x41cb2300"/>
        <function-ref name="stop" scoped="" ref="0x41cb2578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41c53030" loc="61:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41c53030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c524e0"/>
        <function-ref name="fired" scoped="" ref="0x41c53c98"/>
        <function-ref name="startAt" scoped="" ref="0x41c521a0"/>
        <function-ref name="isRunning" scoped="" ref="0x41c53f10"/>
        <function-ref name="getAlarm" scoped="" ref="0x41c52758"/>
        <function-ref name="start" scoped="" ref="0x41c53780"/>
        <function-ref name="stop" scoped="" ref="0x41c53a20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AlarmFrom" ref="0x41c51d00" loc="73:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AlarmFrom" scoped="" ref="0x41c51d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41c4e1e8"/>
        <function-ref name="fired" scoped="" ref="0x41c50990"/>
        <function-ref name="startAt" scoped="" ref="0x41c50e80"/>
        <function-ref name="isRunning" scoped="" ref="0x41c50c08"/>
        <function-ref name="getAlarm" scoped="" ref="0x41c4e460"/>
        <function-ref name="start" scoped="" ref="0x41c50478"/>
        <function-ref name="stop" scoped="" ref="0x41c50718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x41c52aa8" loc="68:/opt/tinyos-2.x/tos/lib/timer/TransformAlarmC.nc">
      <component-ref qname="MuxAlarmMilli32C_.AlarmMilli32C.TransformAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x41c52aa8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41c51228"/>
        <function-ref name="clearOverflow" scoped="" ref="0x41c51718"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x41c514a0"/>
        <function-ref name="overflow" scoped="" ref="0x41c51990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppIpv6" ref="0x40e65138" loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppIpv6" scoped="" ref="0x40e65138"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppIpv6"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x40e65310"/>
        <function-ref name="linkUp" scoped="" ref="0x40e653f0"/>
        <function-ref name="receive" scoped="" ref="0x40e654d0"/>
        <function-ref name="localIid" scoped="" ref="0x40e655b0"/>
        <function-ref name="remoteIid" scoped="" ref="0x40e65690"/>
        <function-ref name="linkIsUp" scoped="" ref="0x40e65770"/>
        <function-ref name="linkDown" scoped="" ref="0x40e65850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40e63040" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40e63040"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e63218"/>
        <function-ref name="process" scoped="" ref="0x40e632f8"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e633d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppControlProtocol" ref="0x40e65ad8" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControlProtocol" scoped="" ref="0x40e65ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e65cb0"/>
        <function-ref name="process" scoped="" ref="0x40e65d90"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e65e70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e62290" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e62290"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e62468"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e62548"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e62628"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e62708"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e627e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowerLcpAutomaton" ref="0x40e62a78" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e62a78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e62c50"/>
        <function-ref name="down" scoped="" ref="0x40e62d30"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e62e10"/>
        <function-ref name="open" scoped="" ref="0x40e62ef0"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e61010"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e610f0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e611d0"/>
        <function-ref name="close" scoped="" ref="0x40e612b0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e61390"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e61470"/>
        <function-ref name="up" scoped="" ref="0x40e61550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40e63598" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6C.nc">
      <component-ref qname="PppIpv6C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e63598"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e63770"/>
        <function-ref name="down" scoped="" ref="0x40e63850"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e63930"/>
        <function-ref name="open" scoped="" ref="0x40e63a10"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e63af0"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e63bd0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e63cb0"/>
        <function-ref name="close" scoped="" ref="0x40e63d90"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e63e70"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e62010"/>
        <function-ref name="up" scoped="" ref="0x40e620f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x40e8eef0" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40e8eef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40e8d0e0"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40e8d1c0"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40e8d2a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40e60308" loc="36:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40e60308"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40e604e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppIpv6" ref="0x40e60668" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppIpv6" scoped="" ref="0x40e60668"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppIpv6"/>
      </instance>
      <interface-functions>
        <function-ref name="transmit" scoped="" ref="0x40e60840"/>
        <function-ref name="linkUp" scoped="" ref="0x40e60920"/>
        <function-ref name="receive" scoped="" ref="0x40e60a00"/>
        <function-ref name="localIid" scoped="" ref="0x40e60ae0"/>
        <function-ref name="remoteIid" scoped="" ref="0x40e60bc0"/>
        <function-ref name="linkIsUp" scoped="" ref="0x40e60ca0"/>
        <function-ref name="linkDown" scoped="" ref="0x40e60d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="InterfaceIdentifierOption" ref="0x40e8f6d8" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InterfaceIdentifierOption" scoped="" ref="0x40e8f6d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-functions>
        <function-ref name="isNegotiable" scoped="" ref="0x40e8e0f0"/>
        <function-ref name="appendRequest" scoped="" ref="0x40e8f990"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40e8fa70"/>
        <function-ref name="processNakValue" scoped="" ref="0x40e8fb50"/>
        <function-ref name="setRemote" scoped="" ref="0x40e8fc30"/>
        <function-ref name="reset" scoped="" ref="0x40e8fd10"/>
        <function-ref name="setLocal" scoped="" ref="0x40e8fdf0"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40e8fed0"/>
        <function-ref name="getType" scoped="" ref="0x40e8e010"/>
        <function-ref name="considerRequest" scoped="" ref="0x40e8f8b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppControlProtocol" ref="0x40e8f030" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppControlProtocol" scoped="" ref="0x40e8f030"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e8f208"/>
        <function-ref name="process" scoped="" ref="0x40e8f2e8"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e8f3c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40e8e2a0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40e8e2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40e8e478"/>
        <function-ref name="process" scoped="" ref="0x40e8e558"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40e8e638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e8e7d8" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e8e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e8e9b0"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e8ea90"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e8eb70"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e8ec50"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e8ed30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowerLcpAutomaton" ref="0x40e8c700" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowerLcpAutomaton" scoped="" ref="0x40e8c700"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e8c8d8"/>
        <function-ref name="down" scoped="" ref="0x40e8c9b8"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e8ca98"/>
        <function-ref name="open" scoped="" ref="0x40e8cb78"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e8cc58"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e8cd38"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e8ce18"/>
        <function-ref name="close" scoped="" ref="0x40e8cef8"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e8b010"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e8b0f0"/>
        <function-ref name="up" scoped="" ref="0x40e8b1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolCodeCoordinator" ref="0x40e8d4e8" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40e8d4e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40e8d6c0"/>
        <function-ref name="dispatch" scoped="" ref="0x40e8d7a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40e8d960" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6P.nc">
      <component-ref qname="PppIpv6P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e8d960"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e8db38"/>
        <function-ref name="down" scoped="" ref="0x40e8dc18"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e8dcf8"/>
        <function-ref name="open" scoped="" ref="0x40e8ddd8"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e8deb8"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e8c010"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e8c0f0"/>
        <function-ref name="close" scoped="" ref="0x40e8c1d0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40e8c2b0"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40e8c390"/>
        <function-ref name="up" scoped="" ref="0x40e8c470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x40ec4340" loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40ec4340"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40ec4518"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40ec45f8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40ec46d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x40ec4838" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40ec4838"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ec4a10"/>
        <function-ref name="invoke" scoped="" ref="0x40ec4af0"/>
        <function-ref name="process" scoped="" ref="0x40ec4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x40ec2c40" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x40ec2c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ec2e18"/>
        <function-ref name="invoke" scoped="" ref="0x40ec2ef8"/>
        <function-ref name="process" scoped="" ref="0x40ec1010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x40e92b70" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x40e92b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="considerRequest" scoped="" ref="0x40e91550"/>
        <function-ref name="appendRequest" scoped="" ref="0x40e92e38"/>
        <function-ref name="setNegotiable" scoped="" ref="0x40e92f18"/>
        <function-ref name="processNakValue" scoped="" ref="0x40e91010"/>
        <function-ref name="setRemote" scoped="" ref="0x40e910f0"/>
        <function-ref name="reset" scoped="" ref="0x40e911d0"/>
        <function-ref name="setLocal" scoped="" ref="0x40e912b0"/>
        <function-ref name="appendNakValue" scoped="" ref="0x40e91390"/>
        <function-ref name="isNegotiable" scoped="" ref="0x40e92d58"/>
        <function-ref name="getType" scoped="" ref="0x40e91470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x40ec2250" loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x40ec2250"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ec2428"/>
        <function-ref name="invoke" scoped="" ref="0x40ec2508"/>
        <function-ref name="process" scoped="" ref="0x40ec25e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40e92440" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40e92440"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40e92618"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40e926f8"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40e927d8"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40e928b8"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40e92998"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x40ec4d30" loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x40ec4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ec4f08"/>
        <function-ref name="invoke" scoped="" ref="0x40ec2010"/>
        <function-ref name="process" scoped="" ref="0x40ec20f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x40ec2748" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x40ec2748"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ec2920"/>
        <function-ref name="invoke" scoped="" ref="0x40ec2a00"/>
        <function-ref name="process" scoped="" ref="0x40ec2ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x40ec1170" loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40ec1170"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ec1348"/>
        <function-ref name="invoke" scoped="" ref="0x40ec1428"/>
        <function-ref name="process" scoped="" ref="0x40ec1508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x40e91690" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineC.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40e91690"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40e91868"/>
        <function-ref name="down" scoped="" ref="0x40e91948"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40e91a28"/>
        <function-ref name="open" scoped="" ref="0x40e91b08"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40e91be8"/>
        <function-ref name="signalEvent" scoped="" ref="0x40e91cc8"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40e91da8"/>
        <function-ref name="close" scoped="" ref="0x40e91e88"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40ec4010"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40ec40f0"/>
        <function-ref name="up" scoped="" ref="0x40ec41d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppConfigure" ref="0x41c8d658" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x41c8d658"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x41c8d830"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x41c8d910"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x41c8d9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureRequest" ref="0x41c8db50" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x41c8db50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c8dd28"/>
        <function-ref name="invoke" scoped="" ref="0x41c8de08"/>
        <function-ref name="process" scoped="" ref="0x41c8dee8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppProtocolOption" ref="0x41c8fb00" loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolOption" scoped="" ref="0x41c8fb00"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolOption"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getType" scoped="" ref="0x41c8e550"/>
        <function-ref name="appendRequest" scoped="" ref="0x41c8fdc8"/>
        <function-ref name="setNegotiable" scoped="" ref="0x41c8fea8"/>
        <function-ref name="processNakValue" scoped="" ref="0x41c8e010"/>
        <function-ref name="setRemote" scoped="" ref="0x41c8e0f0"/>
        <function-ref name="reset" scoped="" ref="0x41c8e1d0"/>
        <function-ref name="setLocal" scoped="" ref="0x41c8e2b0"/>
        <function-ref name="appendNakValue" scoped="" ref="0x41c8e390"/>
        <function-ref name="isNegotiable" scoped="" ref="0x41c8e470"/>
        <function-ref name="considerRequest" scoped="" ref="0x41c8fce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41c8d340" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41c8d340"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41c8d518"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureNak" ref="0x41c8c558" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureNak" scoped="" ref="0x41c8c558"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c8c730"/>
        <function-ref name="invoke" scoped="" ref="0x41c8c810"/>
        <function-ref name="process" scoped="" ref="0x41c8c8f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateRequest" ref="0x41c8b010" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateRequest" scoped="" ref="0x41c8b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c8b1e8"/>
        <function-ref name="invoke" scoped="" ref="0x41c8b2c8"/>
        <function-ref name="process" scoped="" ref="0x41c8b3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41c8f3d0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41c8f3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41c8f5a8"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41c8f688"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x41c8f768"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x41c8f848"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41c8f928"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureAck" ref="0x41c8c060" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureAck" scoped="" ref="0x41c8c060"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c8c238"/>
        <function-ref name="invoke" scoped="" ref="0x41c8c318"/>
        <function-ref name="process" scoped="" ref="0x41c8c3f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ConfigureReject" ref="0x41c8ca50" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureReject" scoped="" ref="0x41c8ca50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c8cc28"/>
        <function-ref name="invoke" scoped="" ref="0x41c8cd08"/>
        <function-ref name="process" scoped="" ref="0x41c8cde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TerminateAck" ref="0x41c8b508" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x41c8b508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41c8b6e0"/>
        <function-ref name="invoke" scoped="" ref="0x41c8b7c0"/>
        <function-ref name="process" scoped="" ref="0x41c8b8a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LcpAutomaton" ref="0x41c8e690" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppConfigureEngineP.nc">
      <component-ref qname="PppIpv6C.PppConfigureEngineC.PppConfigureEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x41c8e690"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41c8e868"/>
        <function-ref name="down" scoped="" ref="0x41c8e948"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x41c8ea28"/>
        <function-ref name="open" scoped="" ref="0x41c8eb08"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x41c8ebe8"/>
        <function-ref name="signalEvent" scoped="" ref="0x41c8ecc8"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x41c8eda8"/>
        <function-ref name="close" scoped="" ref="0x41c8ee88"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x41c8d010"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x41c8d0f0"/>
        <function-ref name="up" scoped="" ref="0x41c8d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x40ebedb8" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="PppIpv6C.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x40ebedb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40ebd010"/>
        <function-ref name="invoke" scoped="" ref="0x40ebd0f0"/>
        <function-ref name="process" scoped="" ref="0x40ebd1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40ebe668" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="PppIpv6C.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40ebe668"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40ebe840"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40ebe920"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40ebea00"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40ebeae0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40ebebc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x40ebe240" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorC.nc">
      <component-ref qname="PppIpv6C.CoordinatorC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x40ebe240"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x40ebe418"/>
        <function-ref name="dispatch" scoped="" ref="0x40ebe4f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="CodeHandler" ref="0x41d19010" loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CodeHandler" scoped="" ref="0x41d19010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41d191f8"/>
        <function-ref name="invoke" scoped="" ref="0x41d192d8"/>
        <function-ref name="process" scoped="" ref="0x41d193b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41d1a7f0" loc="45:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41d1a7f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41d1a9c8"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41d1aaa8"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x41d1ab88"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x41d1ac68"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41d1ad48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocolCodeCoordinator" ref="0x41d1a3c8" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinatorP.nc">
      <component-ref qname="PppIpv6C.CoordinatorC.PppProtocolCodeCoordinatorP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocolCodeCoordinator" scoped="" ref="0x41d1a3c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
      </instance>
      <interface-functions>
        <function-ref name="rejectPacket" scoped="" ref="0x41d1a5a0"/>
        <function-ref name="dispatch" scoped="" ref="0x41d1a680"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x40eb8920" loc="56:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x40eb8920"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x40eb8af8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x40eb8bd8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x40eb8cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x40eb9740" loc="52:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x40eb9740"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x404e2010"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x404e2b88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40eb8048"/>
        <function-ref name="set" scoped="" ref="0x40eb9d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x40eb8e18" loc="57:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x40eb8e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40eb7010"/>
        <function-ref name="invoke" scoped="" ref="0x40eb70f0"/>
        <function-ref name="process" scoped="" ref="0x40eb71d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40eb8288" loc="55:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40eb8288"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40eb8460"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40eb8540"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40eb8620"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40eb8700"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40eb87e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x40eb7330" loc="58:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x40eb7330"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x40eb7508"/>
        <function-ref name="invoke" scoped="" ref="0x40eb75e8"/>
        <function-ref name="process" scoped="" ref="0x40eb76c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x40eba9e0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonC.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x40eba9e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x40ebabb8"/>
        <function-ref name="down" scoped="" ref="0x40ebac98"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x40ebad78"/>
        <function-ref name="open" scoped="" ref="0x40ebae58"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x40eb9010"/>
        <function-ref name="signalEvent" scoped="" ref="0x40eb90f0"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x40eb91d0"/>
        <function-ref name="close" scoped="" ref="0x40eb92b0"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x40eb9390"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x40eb9470"/>
        <function-ref name="up" scoped="" ref="0x40eb9550"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="resumeAutomaton_task" ref="0x41d01e58" loc="209:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="resumeAutomaton_task" scoped="" ref="0x41d01e58"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41d00050"/>
        <function-ref name="runTask" scoped="" ref="0x41d00130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="restartTimerFired_task" ref="0x41d01a20" loc="230:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="restartTimerFired_task" scoped="" ref="0x41d01a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41d01bf8"/>
        <function-ref name="runTask" scoped="" ref="0x41d01cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PppConfigure" ref="0x41d03010" loc="43:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppConfigure" scoped="" ref="0x41d03010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppConfigure"/>
      </instance>
      <interface-functions>
        <function-ref name="resetOptions" scoped="" ref="0x41d031e8"/>
        <function-ref name="setLocalOptions" scoped="" ref="0x41d032c8"/>
        <function-ref name="setRemoteOptions" scoped="" ref="0x41d033a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpOptions" ref="0x41d06dd8" loc="39:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpOptions" scoped="" ref="0x41d06dd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="GetSetOptions"/>
        <arguments>
          <type-tag size="I:11" alignment="I:1"><struct-ref name="LcpAutomatonOptions_t" ref="0x404e2010"/>
            <typename><typedef-ref name="LcpAutomatonOptions_t" ref="0x404e2b88"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41d04708"/>
        <function-ref name="set" scoped="" ref="0x41d04448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ConfigureRequest" ref="0x41d01010" loc="45:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ConfigureRequest" scoped="" ref="0x41d01010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41d011e8"/>
        <function-ref name="invoke" scoped="" ref="0x41d012c8"/>
        <function-ref name="process" scoped="" ref="0x41d013a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41d09df0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41d09df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41d06010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x41d04948" loc="42:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x41d04948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x41d04b20"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x41d04c00"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x41d04ce0"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x41d04dc0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x41d04ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RestartTimer" ref="0x41d03628" loc="44:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RestartTimer" scoped="" ref="0x41d03628"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41d02af0"/>
        <function-ref name="fired" scoped="" ref="0x41d022c0"/>
        <function-ref name="startAt" scoped="" ref="0x41d027b0"/>
        <function-ref name="isRunning" scoped="" ref="0x41d02538"/>
        <function-ref name="getAlarm" scoped="" ref="0x41d02d68"/>
        <function-ref name="start" scoped="" ref="0x41d03d78"/>
        <function-ref name="stop" scoped="" ref="0x41d02048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TerminateAck" ref="0x41d01508" loc="46:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TerminateAck" scoped="" ref="0x41d01508"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
      </instance>
      <interface-functions>
        <function-ref name="getCode" scoped="" ref="0x41d016e0"/>
        <function-ref name="invoke" scoped="" ref="0x41d017c0"/>
        <function-ref name="process" scoped="" ref="0x41d018a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LcpAutomaton" ref="0x41d06150" loc="38:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomatonP.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.LcpAutomatonP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LcpAutomaton" scoped="" ref="0x41d06150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LcpAutomaton"/>
      </instance>
      <interface-functions>
        <function-ref name="getState" scoped="" ref="0x41d06328"/>
        <function-ref name="down" scoped="" ref="0x41d06408"/>
        <function-ref name="thisLayerUp" scoped="" ref="0x41d064e8"/>
        <function-ref name="open" scoped="" ref="0x41d065c8"/>
        <function-ref name="thisLayerFinished" scoped="" ref="0x41d066a8"/>
        <function-ref name="signalEvent" scoped="" ref="0x41d06788"/>
        <function-ref name="thisLayerDown" scoped="" ref="0x41d06868"/>
        <function-ref name="close" scoped="" ref="0x41d06948"/>
        <function-ref name="thisLayerStarted" scoped="" ref="0x41d06a28"/>
        <function-ref name="transitionCompleted" scoped="" ref="0x41d06b08"/>
        <function-ref name="up" scoped="" ref="0x41d06be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41cffdb0" loc="40:/opt/tinyos-2.x/tos/lib/timer/MuxAlarmMilli32C.nc">
      <component-ref qname="PppIpv6C.LcpAutomatonC.MuxAlarmMilli32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41cffdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41cfc278"/>
        <function-ref name="fired" scoped="" ref="0x41cfda30"/>
        <function-ref name="startAt" scoped="" ref="0x41cfdf20"/>
        <function-ref name="isRunning" scoped="" ref="0x41cfdca8"/>
        <function-ref name="getAlarm" scoped="" ref="0x41cfc4f0"/>
        <function-ref name="start" scoped="" ref="0x41cfd518"/>
        <function-ref name="stop" scoped="" ref="0x41cfd7b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcUart" ref="0x40ead518" loc="40:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <component-ref qname="DefaultHdlcUartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40ead518"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ead6f0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40ead7d0"/>
        <function-ref name="sendDone" scoped="" ref="0x40ead8b0"/>
        <function-ref name="uartError" scoped="" ref="0x40ead990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40ead0c8" loc="39:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartC.nc">
      <component-ref qname="DefaultHdlcUartC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40ead0c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40ead2a0"/>
        <function-ref name="stop" scoped="" ref="0x40ead380"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="streamFeeder_task" ref="0x40ed42a8" loc="125:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="streamFeeder_task" scoped="" ref="0x40ed42a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ed4480"/>
        <function-ref name="runTask" scoped="" ref="0x40ed4560"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SerialControl" ref="0x40eabe38" loc="44:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SerialControl" scoped="" ref="0x40eabe38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40edc050"/>
        <function-ref name="stop" scoped="" ref="0x40edc130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="HdlcUart" ref="0x40eab730" loc="38:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="HdlcUart" scoped="" ref="0x40eab730"/></type-interface>
      <instance>
        <interfacedef-ref qname="HdlcUart"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40eab908"/>
        <function-ref name="receivedByte" scoped="" ref="0x40eab9e8"/>
        <function-ref name="sendDone" scoped="" ref="0x40eabac8"/>
        <function-ref name="uartError" scoped="" ref="0x40eabba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UartStream" ref="0x40edc2d8" loc="45:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UartStream" scoped="" ref="0x40edc2d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="UartStream"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40edc4b0"/>
        <function-ref name="receivedByte" scoped="" ref="0x40edc590"/>
        <function-ref name="receive" scoped="" ref="0x40edc670"/>
        <function-ref name="enableReceiveInterrupt" scoped="" ref="0x40edc750"/>
        <function-ref name="receiveDone" scoped="" ref="0x40edc830"/>
        <function-ref name="disableReceiveInterrupt" scoped="" ref="0x40edc910"/>
        <function-ref name="sendDone" scoped="" ref="0x40edc9f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x40eab2e0" loc="37:/opt/tinyos-2.x/tos/lib/ppp/DefaultHdlcUartP.nc">
      <component-ref qname="DefaultHdlcUartP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40eab2e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40eab4b8"/>
        <function-ref name="stop" scoped="" ref="0x40eab598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40ec5628" loc="67:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <component-ref qname="PppPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40ec5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40ec5800"/>
        <function-ref name="process" scoped="" ref="0x40ec58e0"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40ec59c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40ec5b60" loc="70:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfC.nc">
      <component-ref qname="PppPrintfC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40ec5b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40ec5d38"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40ec5e18"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40ec5ef8"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40ef8010"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40ef80f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendBuffer_task" ref="0x40ef3b50" loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendBuffer_task" scoped="" ref="0x40ef3b50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40ef3d28"/>
        <function-ref name="runTask" scoped="" ref="0x40ef3e08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PppProtocol" ref="0x40ef8b70" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PppProtocol" scoped="" ref="0x40ef8b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="PppProtocol"/>
      </instance>
      <interface-functions>
        <function-ref name="getProtocol" scoped="" ref="0x40ef8d48"/>
        <function-ref name="process" scoped="" ref="0x40ef8e28"/>
        <function-ref name="rejectedByPeer" scoped="" ref="0x40ef8f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ppp" ref="0x40ef5e68" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ppp" scoped="" ref="0x40ef5e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ppp"/>
      </instance>
      <interface-functions>
        <function-ref name="fixOutputFrameLength" scoped="" ref="0x40ef4050"/>
        <function-ref name="outputFrameTransmitted" scoped="" ref="0x40ef4130"/>
        <function-ref name="sendOutputFrame" scoped="" ref="0x40ef4210"/>
        <function-ref name="releaseOutputFrame" scoped="" ref="0x40ef42f0"/>
        <function-ref name="getOutputFrame" scoped="" ref="0x40ef43d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Putchar" ref="0x40ef5af0" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppPrintfP.nc">
      <component-ref qname="PppPrintfP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x40ef5af0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x40ef5cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x40ef6558" loc="43:/opt/tinyos-2.x/tos/lib/printf/PutcharC.nc">
      <component-ref qname="PutcharC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x40ef6558"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x40ef6730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40edf7c0" loc="94:/opt/tinyos-2.x/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40edf7c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40edf998"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Putchar" ref="0x40edfb40" loc="95:/opt/tinyos-2.x/tos/lib/printf/PutcharP.nc">
      <component-ref qname="PutcharP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Putchar" scoped="" ref="0x40edfb40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Putchar"/>
      </instance>
      <interface-functions>
        <function-ref name="putchar" scoped="" ref="0x40edfd18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x40eae9b0" loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x40eae9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40eaeb88"/>
        <function-ref name="stopDone" scoped="" ref="0x40eaec68"/>
        <function-ref name="start" scoped="" ref="0x40eaed48"/>
        <function-ref name="stop" scoped="" ref="0x40eaee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x40f064b8" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x40f064b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x40f06690"/>
        <function-ref name="initiate" scoped="" ref="0x40f06770"/>
        <function-ref name="linkResult" scoped="" ref="0x40f06850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x40f0ec98" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40f0ec98"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x40f0ee70"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x40f0b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x40ee12e0" loc="33:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPRaw" scoped="" ref="0x40ee12e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee14b8"/>
        <function-ref name="recv" scoped="" ref="0x40ee1598"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x40f0a010" loc="41:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x40f0a010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f0a1e8"/>
        <function-ref name="stop" scoped="" ref="0x40f0a2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x40ee1770" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x40ee1770"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x40ee1948"/>
        <function-ref name="lookupRoute" scoped="" ref="0x40ee1a28"/>
        <function-ref name="delRoute" scoped="" ref="0x40ee1b08"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x40ee1be8"/>
        <function-ref name="addRoute" scoped="" ref="0x40ee1cc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x40f06a48" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x40f06a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x40f06c20"/>
        <function-ref name="stop" scoped="" ref="0x40f06d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40f0de60" loc="32:/opt/tinyos-2.x/tos/lib/net/blip/IPStackC.nc">
      <component-ref qname="IPStackC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x40f0de60"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ee1050"/>
        <function-ref name="recv" scoped="" ref="0x40ee1130"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40efd2f0" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40efd2f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40efd4c8"/>
        <function-ref name="changed" scoped="" ref="0x40efd5a8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40efd688"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40efd768"/>
        <function-ref name="setSource" scoped="" ref="0x40efd848"/>
        <function-ref name="removeAddress" scoped="" ref="0x40efd928"/>
        <function-ref name="setAddress" scoped="" ref="0x40efda08"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40efdae8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubIP" ref="0x40efdc98" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubIP" scoped="" ref="0x40efdc98"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40efde70"/>
        <function-ref name="recv" scoped="" ref="0x40f02010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40f021a8" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x40f021a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40f02380"/>
        <function-ref name="delTLV" scoped="" ref="0x40f02460"/>
        <function-ref name="findTLV" scoped="" ref="0x40f02540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40f0ac88" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/IPProtocolsP.nc">
      <component-ref qname="IPProtocolsP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x40f0ac88"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f0ae60"/>
        <function-ref name="recv" scoped="" ref="0x40f03010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingEvents" ref="0x40f268f8" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x40f268f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x40f26ad0"/>
        <function-ref name="initiate" scoped="" ref="0x40f26bb0"/>
        <function-ref name="linkResult" scoped="" ref="0x40f26c90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPForward" ref="0x40f25d90" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x40f25d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f24010"/>
        <function-ref name="recv" scoped="" ref="0x40f240f0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f241d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Pool" ref="0x40f1e928" loc="33:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x40f1e928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40469010"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x40f22aa8"/>
        <function-ref name="maxSize" scoped="" ref="0x40f224c0"/>
        <function-ref name="empty" scoped="" ref="0x40f22010"/>
        <function-ref name="put" scoped="" ref="0x40f22718"/>
        <function-ref name="size" scoped="" ref="0x40f22268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="defaultRouteAddedTask" ref="0x40f145e0" loc="98:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="defaultRouteAddedTask" scoped="" ref="0x40f145e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x40f147b8"/>
        <function-ref name="runTask" scoped="" ref="0x40f14898"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTableEvents" ref="0x40f26148" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTableEvents" scoped="" ref="0x40f26148"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTableEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="defaultRouteAdded" scoped="" ref="0x40f26320"/>
        <function-ref name="defaultRouteRemoved" scoped="" ref="0x40f26400"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPRaw" ref="0x40f252a0" loc="26:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPRaw" scoped="" ref="0x40f252a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f25478"/>
        <function-ref name="recv" scoped="" ref="0x40f25558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f256c8" loc="27:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f256c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40f258a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40f24370" loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40f24370"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40f24548"/>
        <function-ref name="changed" scoped="" ref="0x40f24628"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40f24708"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40f247e8"/>
        <function-ref name="setSource" scoped="" ref="0x40f248c8"/>
        <function-ref name="removeAddress" scoped="" ref="0x40f249a8"/>
        <function-ref name="setAddress" scoped="" ref="0x40f24a88"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40f24b68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x40f22e60" loc="38:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x40f22e60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x40f21050"/>
        <function-ref name="led0Toggle" scoped="" ref="0x40f21130"/>
        <function-ref name="led1On" scoped="" ref="0x40f21210"/>
        <function-ref name="led1Toggle" scoped="" ref="0x40f212f0"/>
        <function-ref name="led3Off" scoped="" ref="0x40f213d0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x40f214b0"/>
        <function-ref name="get" scoped="" ref="0x40f21590"/>
        <function-ref name="led1Off" scoped="" ref="0x40f21670"/>
        <function-ref name="led3Toggle" scoped="" ref="0x40f21750"/>
        <function-ref name="led3On" scoped="" ref="0x40f21830"/>
        <function-ref name="led0On" scoped="" ref="0x40f21910"/>
        <function-ref name="led2Off" scoped="" ref="0x40f219f0"/>
        <function-ref name="led2On" scoped="" ref="0x40f21ad0"/>
        <function-ref name="set" scoped="" ref="0x40f21c30"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ForwardingTable" ref="0x40f099c0" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x40f099c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x40f09b98"/>
        <function-ref name="lookupRoute" scoped="" ref="0x40f09c78"/>
        <function-ref name="delRoute" scoped="" ref="0x40f09d58"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x40f09e38"/>
        <function-ref name="addRoute" scoped="" ref="0x40f09f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x40f24d00" loc="32:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x40f24d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x40f24ed8"/>
        <function-ref name="delTLV" scoped="" ref="0x40f23010"/>
        <function-ref name="findTLV" scoped="" ref="0x40f230f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x40f26de8" loc="25:/opt/tinyos-2.x/tos/lib/net/blip/IPForwardingEngineP.nc">
      <component-ref qname="IPForwardingEngineP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x40f26de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f25010"/>
        <function-ref name="recv" scoped="" ref="0x40f250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x40f75c28" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x40f75c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f75e00"/>
        <function-ref name="recv" scoped="" ref="0x40f75ee0"/>
        <function-ref name="sendDone" scoped="" ref="0x40f79010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x40f73e50" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x40f73e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f78050"/>
        <function-ref name="recv" scoped="" ref="0x40f78130"/>
        <function-ref name="sendDone" scoped="" ref="0x40f78210"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x40f756f0" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryC.nc">
      <component-ref qname="IPNeighborDiscoveryC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x40f756f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x40f758c8"/>
        <function-ref name="matchContext" scoped="" ref="0x40f759a8"/>
        <function-ref name="getContext" scoped="" ref="0x40f75a88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPForward" ref="0x40f78c40" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPForward" scoped="" ref="0x40f78c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPForward"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f78e18"/>
        <function-ref name="recv" scoped="" ref="0x40f78ef8"/>
        <function-ref name="sendDone" scoped="" ref="0x40f70010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x40f6b098" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40f6b098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40f6b270"/>
        <function-ref name="changed" scoped="" ref="0x40f6b350"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f6b430"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f6b510"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f6b5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPLower" ref="0x40f70760" loc="26:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x40f70760"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40f70938"/>
        <function-ref name="recv" scoped="" ref="0x40f70a18"/>
        <function-ref name="sendDone" scoped="" ref="0x40f70af8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x40f70c98" loc="27:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40f70c98"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40f70e70"/>
        <function-ref name="changed" scoped="" ref="0x40f6f010"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40f6f0f0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40f6f1d0"/>
        <function-ref name="setSource" scoped="" ref="0x40f6f2b0"/>
        <function-ref name="removeAddress" scoped="" ref="0x40f6f390"/>
        <function-ref name="setAddress" scoped="" ref="0x40f6f470"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40f6f550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborDiscovery" ref="0x40f70200" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/IPNeighborDiscoveryP.nc">
      <component-ref qname="IPNeighborDiscoveryP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x40f70200"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x40f703d8"/>
        <function-ref name="matchContext" scoped="" ref="0x40f704b8"/>
        <function-ref name="getContext" scoped="" ref="0x40f70598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x40f721a8" loc="25:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressC.nc">
      <component-ref qname="IPAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40f721a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40f72380"/>
        <function-ref name="changed" scoped="" ref="0x40f72460"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40f72540"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40f72620"/>
        <function-ref name="setSource" scoped="" ref="0x40f72700"/>
        <function-ref name="removeAddress" scoped="" ref="0x40f727e0"/>
        <function-ref name="setAddress" scoped="" ref="0x40f728c0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40f729a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154Address" ref="0x40fa2ad8" loc="31:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40fa2ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40fa2cb0"/>
        <function-ref name="changed" scoped="" ref="0x40fa2d90"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40fa2e70"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40fa1010"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40fa10f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPAddress" ref="0x40fa20d0" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/IPAddressP.nc">
      <component-ref qname="IPAddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x40fa20d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x40fa22a8"/>
        <function-ref name="changed" scoped="" ref="0x40fa2388"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x40fa2468"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x40fa2548"/>
        <function-ref name="setSource" scoped="" ref="0x40fa2628"/>
        <function-ref name="removeAddress" scoped="" ref="0x40fa2708"/>
        <function-ref name="setAddress" scoped="" ref="0x40fa27e8"/>
        <function-ref name="isLLAddress" scoped="" ref="0x40fa28c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x40f88248" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressC.nc">
      <component-ref qname="Ieee154AddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40f88248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40f88420"/>
        <function-ref name="changed" scoped="" ref="0x40f88500"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40f885e0"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40f886c0"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40f887a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalIeeeEui64" ref="0x40fdf200" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40fdf200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40fdf3d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Address" ref="0x40fe21e0" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Address" scoped="" ref="0x40fe21e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Address"/>
      </instance>
      <interface-functions>
        <function-ref name="getPanId" scoped="" ref="0x40fe23b8"/>
        <function-ref name="changed" scoped="" ref="0x40fe2498"/>
        <function-ref name="setShortAddr" scoped="" ref="0x40fe2578"/>
        <function-ref name="getExtAddr" scoped="" ref="0x40fe2658"/>
        <function-ref name="getShortAddr" scoped="" ref="0x40fe2738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ShortAddressConfig" ref="0x40fde3e8" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x40fde3e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x40fde5c0"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x40fde6a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x40f88dd0" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/Ieee154AddressP.nc">
      <component-ref qname="Ieee154AddressP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x40f88dd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x40fe2010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalIeeeEui64" ref="0x40fe4948" loc="40:/opt/tinyos-2.x/tos/platforms/ucmini/LocalIeeeEui64C.nc">
      <component-ref qname="LocalIeeeEui64C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalIeeeEui64" scoped="" ref="0x40fe4948"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalIeeeEui64"/>
      </instance>
      <interface-functions>
        <function-ref name="getId" scoped="" ref="0x40fe4b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioControl" ref="0x40ffc740" loc="10:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x40ffc740"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x40ffc918"/>
        <function-ref name="stopDone" scoped="" ref="0x40ffc9f8"/>
        <function-ref name="start" scoped="" ref="0x40ffcad8"/>
        <function-ref name="stop" scoped="" ref="0x40ffcbb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x40ffc068" loc="9:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x40ffc068"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x40ffc240"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x40ffc320"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x40ffc400"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x40ffc4e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShortAddressConfig" ref="0x40ffcdb0" loc="11:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x40ffcdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x41008010"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x410080f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x41005338" loc="6:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x41005338"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41005510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x41006450" loc="5:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x41006450"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41006628"/>
        <function-ref name="cancel" scoped="" ref="0x41006708"/>
        <function-ref name="sendDone" scoped="" ref="0x410067e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x41005718" loc="7:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x41005718"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410058f0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410059d0"/>
        <function-ref name="getPayload" scoped="" ref="0x41005ab0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41005b90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41005c70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x40fff1b8" loc="8:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/BareMessageC.nc">
      <component-ref qname="BareMessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x40fff1b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x40fff390"/>
        <function-ref name="setRetries" scoped="" ref="0x40fff470"/>
        <function-ref name="getRetries" scoped="" ref="0x40fff550"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x40fff630"/>
        <function-ref name="wasDelivered" scoped="" ref="0x40fff710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41008788" loc="42:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41008788"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41008960"/>
        <function-ref name="stopDone" scoped="" ref="0x41008a40"/>
        <function-ref name="start" scoped="" ref="0x41008b20"/>
        <function-ref name="stop" scoped="" ref="0x41008c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x410174d8" loc="85:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x410174d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410150b8"/>
        <function-ref name="get" scoped="" ref="0x41017de0"/>
        <function-ref name="isSet" scoped="" ref="0x41017b20"/>
        <function-ref name="set" scoped="" ref="0x41015378"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Notifier" ref="0x40ff3690" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Notifier" scoped="" ref="0x40ff3690"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40ff3868"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x40ff3da0" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x40ff3da0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x40ff2010"/>
        <function-ref name="immediateRequest" scoped="" ref="0x40ff20f0"/>
        <function-ref name="request" scoped="" ref="0x40ff21d0"/>
        <function-ref name="granted" scoped="" ref="0x40ff22b0"/>
        <function-ref name="isOwner" scoped="" ref="0x40ff2390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x40ff5888" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x40ff5888"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x40ff5a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x40ffa100" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x40ffa100"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x40ffa2d8"/>
        <function-ref name="getPayload" scoped="" ref="0x40ffa3b8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ffa498"/>
        <function-ref name="cancel" scoped="" ref="0x40ffa578"/>
        <function-ref name="sendDone" scoped="" ref="0x40ffa658"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x40ff8178" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x40ff8178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ff8350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41026010" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41026010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x410261e8"/>
        <function-ref name="address" scoped="" ref="0x410262c8"/>
        <function-ref name="destination" scoped="" ref="0x410263a8"/>
        <function-ref name="setSource" scoped="" ref="0x41026488"/>
        <function-ref name="setDestination" scoped="" ref="0x41026568"/>
        <function-ref name="pan" scoped="" ref="0x41026648"/>
        <function-ref name="setPan" scoped="" ref="0x41026728"/>
        <function-ref name="isForMe" scoped="" ref="0x41026808"/>
        <function-ref name="localPan" scoped="" ref="0x410268e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForIeee154Message" ref="0x41026b70" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForIeee154Message" scoped="" ref="0x41026b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41026d48"/>
        <function-ref name="payloadLength" scoped="" ref="0x41026e28"/>
        <function-ref name="getPayload" scoped="" ref="0x41026f08"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41025010"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410250f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x41018010" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x41018010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41018cd8"/>
        <function-ref name="get" scoped="" ref="0x41018a18"/>
        <function-ref name="isSet" scoped="" ref="0x41018758"/>
        <function-ref name="set" scoped="" ref="0x41017010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x410204c0" loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x410204c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41020698"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41020778"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41020858"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41020938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShortAddressConfig" ref="0x41025a48" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x41025a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x41025c20"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x41025d00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketForActiveMessage" ref="0x40ff67d0" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketForActiveMessage" scoped="" ref="0x40ff67d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x40ff69a8"/>
        <function-ref name="payloadLength" scoped="" ref="0x40ff6a88"/>
        <function-ref name="getPayload" scoped="" ref="0x40ff6b68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x40ff6c48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x40ff6d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x40ffaac0" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x40ffaac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ffac98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x40ff31c0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x40ff31c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ff3418"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4100b580" loc="89:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4100b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x410100a8"/>
        <function-ref name="clear" scoped="" ref="0x41010458"/>
        <function-ref name="isValid" scoped="" ref="0x4100bcd0"/>
        <function-ref name="set" scoped="" ref="0x41010808"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x410118a0" loc="88:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x410118a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41011ee8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x41019bd0" loc="83:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x41019bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4101e7b8"/>
        <function-ref name="get" scoped="" ref="0x4101e4f8"/>
        <function-ref name="isSet" scoped="" ref="0x4101e238"/>
        <function-ref name="set" scoped="" ref="0x4101ea78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41025f20" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41025f20"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41020110"/>
        <function-ref name="noAck" scoped="" ref="0x410201f0"/>
        <function-ref name="wasAcked" scoped="" ref="0x410202d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x41027098" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x41027098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41027270"/>
        <function-ref name="getPayload" scoped="" ref="0x41027350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41027430"/>
        <function-ref name="cancel" scoped="" ref="0x41027510"/>
        <function-ref name="sendDone" scoped="" ref="0x410275f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x40ff7010" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x40ff7010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ff71e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x410252f8" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x410252f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x410254d0"/>
        <function-ref name="payloadLength" scoped="" ref="0x410255b0"/>
        <function-ref name="getPayload" scoped="" ref="0x41025690"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41025770"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41025850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x41027788" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x41027788"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41027960"/>
        <function-ref name="cancel" scoped="" ref="0x41027a40"/>
        <function-ref name="sendDone" scoped="" ref="0x41027b20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x4101b580" loc="81:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x4101b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4101b758"/>
        <function-ref name="setChannel" scoped="" ref="0x4101b838"/>
        <function-ref name="getChannel" scoped="" ref="0x4101b918"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x40ff7a60" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x40ff7a60"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x40ff7c38"/>
        <function-ref name="source" scoped="" ref="0x40ff7d18"/>
        <function-ref name="address" scoped="" ref="0x40ff7df8"/>
        <function-ref name="destination" scoped="" ref="0x40ff7ed8"/>
        <function-ref name="setSource" scoped="" ref="0x40ff6010"/>
        <function-ref name="setDestination" scoped="" ref="0x40ff60f0"/>
        <function-ref name="type" scoped="" ref="0x40ff61d0"/>
        <function-ref name="setType" scoped="" ref="0x40ff62b0"/>
        <function-ref name="isForMe" scoped="" ref="0x40ff6390"/>
        <function-ref name="setGroup" scoped="" ref="0x40ff6470"/>
        <function-ref name="localGroup" scoped="" ref="0x40ff6550"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x41020ae0" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x41020ae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x41020cb8"/>
        <function-ref name="setRetries" scoped="" ref="0x41020d98"/>
        <function-ref name="getRetries" scoped="" ref="0x41020e78"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4101f010"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4101f0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x41027d58" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x41027d58"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ff3010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4100c010" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4100c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4100cb10"/>
        <function-ref name="clear" scoped="" ref="0x4100cec0"/>
        <function-ref name="isValid" scoped="" ref="0x4100c760"/>
        <function-ref name="set" scoped="" ref="0x410442a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x41012638" loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x41012638"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x41012810"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x40ff76f0" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioC.nc">
      <component-ref qname="RFA1RadioC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x40ff76f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x40ff78c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="DummyConfig" ref="0x410316f8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DummyConfig" scoped="" ref="0x410316f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x410318d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TrafficMonitorConfig" ref="0x4103b010" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrafficMonitorConfig" scoped="" ref="0x4103b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getBytes" scoped="" ref="0x4103b1e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageConfig" ref="0x41061778" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageConfig" scoped="" ref="0x41061778"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41061950"/>
        <function-ref name="checkFrame" scoped="" ref="0x41061a30"/>
        <function-ref name="source" scoped="" ref="0x41061b10"/>
        <function-ref name="destination" scoped="" ref="0x41061bf0"/>
        <function-ref name="setSource" scoped="" ref="0x41061cd0"/>
        <function-ref name="setDestination" scoped="" ref="0x41061db0"/>
        <function-ref name="setGroup" scoped="" ref="0x41061e90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SlottedCollisionConfig" ref="0x4102cbe0" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SlottedCollisionConfig" scoped="" ref="0x4102cbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getInitialDelay" scoped="" ref="0x4102cdb8"/>
        <function-ref name="getScheduleExponent" scoped="" ref="0x4102ce98"/>
        <function-ref name="getCollisionWindowLength" scoped="" ref="0x41036010"/>
        <function-ref name="getTransmitTime" scoped="" ref="0x410360f0"/>
        <function-ref name="getCollisionWindowStart" scoped="" ref="0x410361d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x4104b800" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x4104b800"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x4104ba58"/>
        <function-ref name="wait" scoped="" ref="0x4104bb38"/>
        <function-ref name="cancel" scoped="" ref="0x4104bc18"/>
        <function-ref name="isFree" scoped="" ref="0x4104bcf8"/>
        <function-ref name="getNow" scoped="" ref="0x4104bdd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x4104d480" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x4104d480"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4104a010"/>
        <function-ref name="clear" scoped="" ref="0x4104a3c0"/>
        <function-ref name="isValid" scoped="" ref="0x4104dbd0"/>
        <function-ref name="set" scoped="" ref="0x4104a770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="CsmaConfig" ref="0x41032268" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="CsmaConfig" scoped="" ref="0x41032268"/></type-interface>
      <instance>
        <interfacedef-ref qname="CsmaConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="requiresSoftwareCCA" scoped="" ref="0x41032440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShortAddressConfig" ref="0x41031ac8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShortAddressConfig" scoped="" ref="0x41031ac8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShortAddressConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setShortAddr" scoped="" ref="0x41031ca0"/>
        <function-ref name="setShortAddrDone" scoped="" ref="0x41031d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareAckConfig" ref="0x41037ad0" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareAckConfig" scoped="" ref="0x41037ad0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x41037ca8"/>
        <function-ref name="createAckPacket" scoped="" ref="0x41037d88"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x41037e68"/>
        <function-ref name="isAckPacket" scoped="" ref="0x4103e010"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x4103e0f0"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x4103e1d0"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4103e2b0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4103e390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4104e2c8" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4104e2c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4104e4a0"/>
        <function-ref name="getDSN" scoped="" ref="0x4104e580"/>
        <function-ref name="setFCF" scoped="" ref="0x4104e660"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4104e740"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4104e820"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4104e900"/>
        <function-ref name="setDSN" scoped="" ref="0x4104e9e0"/>
        <function-ref name="createAckReply" scoped="" ref="0x4104eac0"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4104eba0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4104ec80"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4104ed60"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4104ee40"/>
        <function-ref name="localAddr" scoped="" ref="0x4104ef20"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x41060098"/>
        <function-ref name="localPan" scoped="" ref="0x41060178"/>
        <function-ref name="setDestAddr" scoped="" ref="0x41060258"/>
        <function-ref name="createAckFrame" scoped="" ref="0x41060338"/>
        <function-ref name="setFramePending" scoped="" ref="0x41060418"/>
        <function-ref name="setDestPan" scoped="" ref="0x410604f8"/>
        <function-ref name="isForMe" scoped="" ref="0x410605d8"/>
        <function-ref name="setAckRequired" scoped="" ref="0x410606b8"/>
        <function-ref name="getFCF" scoped="" ref="0x41060798"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41060878"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41060958"/>
        <function-ref name="getFramePending" scoped="" ref="0x41060a38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UniqueConfig" ref="0x41033278" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x41033278"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41033450"/>
        <function-ref name="reportChannelError" scoped="" ref="0x41033530"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x41033610"/>
        <function-ref name="getSender" scoped="" ref="0x410336f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListeningConfig" ref="0x4105e5c0" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListeningConfig" scoped="" ref="0x4105e5c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x4105e798"/>
        <function-ref name="ackRequested" scoped="" ref="0x4105e878"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x4105e958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RandomCollisionConfig" ref="0x4102f118" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RandomCollisionConfig" scoped="" ref="0x4102f118"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x4102f2f0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x4102f3d0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x4102f4b0"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x4102f590"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RFA1Packet" ref="0x41047a68" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1Packet" scoped="" ref="0x41047a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41047c40"/>
        <function-ref name="payloadLength" scoped="" ref="0x41047d20"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41047e00"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41047ee0"/>
        <function-ref name="headerLength" scoped="" ref="0x4104d010"/>
        <function-ref name="metadataLength" scoped="" ref="0x4104d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RFA1DriverConfig" ref="0x4103c8f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1RadioP.nc">
      <component-ref qname="RFA1RadioP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RFA1DriverConfig" scoped="" ref="0x4103c8f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4103cad0"/>
        <function-ref name="headerLength" scoped="" ref="0x4103cbb0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4103cc90"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4103cd70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x41089cd8" loc="4:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1BarePacketP.nc">
      <component-ref qname="RFA1BarePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41089cd8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41089eb0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41085010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x410850f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x410851d0"/>
        <function-ref name="headerLength" scoped="" ref="0x410852b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41085390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BarePacket" ref="0x410895b0" loc="3:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1BarePacketP.nc">
      <component-ref qname="RFA1BarePacketP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x410895b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41089788"/>
        <function-ref name="payloadLength" scoped="" ref="0x41089868"/>
        <function-ref name="getPayload" scoped="" ref="0x41089948"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41089a28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41089b08"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x410ba790" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x410ba790"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x410ba978"/>
        <function-ref name="wait" scoped="" ref="0x410baa58"/>
        <function-ref name="cancel" scoped="" ref="0x410bab38"/>
        <function-ref name="isFree" scoped="" ref="0x410bac18"/>
        <function-ref name="getNow" scoped="" ref="0x410bacf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x410b9088" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmC.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x410b9088"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404bfbe0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4109f5c8"/>
        <function-ref name="fired" scoped="" ref="0x410b9cf0"/>
        <function-ref name="startAt" scoped="" ref="0x4109f288"/>
        <function-ref name="isRunning" scoped="" ref="0x4109f010"/>
        <function-ref name="getAlarm" scoped="" ref="0x4109f840"/>
        <function-ref name="start" scoped="" ref="0x410b97d8"/>
        <function-ref name="stop" scoped="" ref="0x410b9a78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioAlarm" ref="0x41d89938" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41d89938"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41d89b20"/>
        <function-ref name="wait" scoped="" ref="0x41d89c00"/>
        <function-ref name="cancel" scoped="" ref="0x41d89ce0"/>
        <function-ref name="isFree" scoped="" ref="0x41d89dc0"/>
        <function-ref name="getNow" scoped="" ref="0x41d89ea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Alarm" ref="0x41d87150" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41d87150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404bfbe0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41d85600"/>
        <function-ref name="fired" scoped="" ref="0x41d87db8"/>
        <function-ref name="startAt" scoped="" ref="0x41d852c0"/>
        <function-ref name="isRunning" scoped="" ref="0x41d85048"/>
        <function-ref name="getAlarm" scoped="" ref="0x41d85878"/>
        <function-ref name="start" scoped="" ref="0x41d878a0"/>
        <function-ref name="stop" scoped="" ref="0x41d87b40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41d85a88" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarmP.nc">
      <component-ref qname="RFA1RadioC.RadioAlarmC.RadioAlarmP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41d85a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41d85c60"/>
        <function-ref name="suspend" scoped="" ref="0x41d85d40"/>
        <function-ref name="resume" scoped="" ref="0x41d85e20"/>
        <function-ref name="run" scoped="" ref="0x41d85f00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Tasklet" ref="0x410a1220" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/TaskletC.nc">
      <component-ref qname="TaskletC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x410a1220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x410a13f8"/>
        <function-ref name="suspend" scoped="" ref="0x410a14d8"/>
        <function-ref name="resume" scoped="" ref="0x410a15b8"/>
        <function-ref name="run" scoped="" ref="0x410a1698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41127330" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41127330"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41127508"/>
        <function-ref name="cancel" scoped="" ref="0x411275e8"/>
        <function-ref name="sendDone" scoped="" ref="0x411276c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41127828" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41127828"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41127a00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x41128010" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x41128010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x411281f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x4112a930" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x4112a930"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4112ab08"/>
        <function-ref name="payloadLength" scoped="" ref="0x4112abe8"/>
        <function-ref name="getPayload" scoped="" ref="0x4112acc8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4112ada8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4112ae88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41129088" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41129088"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41129270"/>
        <function-ref name="getPayload" scoped="" ref="0x41129350"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41129430"/>
        <function-ref name="cancel" scoped="" ref="0x41129510"/>
        <function-ref name="sendDone" scoped="" ref="0x411295f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x41129ba8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x41129ba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41129d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41128b48" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41128b48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41128d20"/>
        <function-ref name="payloadLength" scoped="" ref="0x41128e00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41128ee0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41127010"/>
        <function-ref name="headerLength" scoped="" ref="0x411270f0"/>
        <function-ref name="metadataLength" scoped="" ref="0x411271d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41127b60" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41127b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41127d38"/>
        <function-ref name="checkFrame" scoped="" ref="0x41127e18"/>
        <function-ref name="source" scoped="" ref="0x41127ef8"/>
        <function-ref name="destination" scoped="" ref="0x41125010"/>
        <function-ref name="setSource" scoped="" ref="0x411250f0"/>
        <function-ref name="setDestination" scoped="" ref="0x411251d0"/>
        <function-ref name="setGroup" scoped="" ref="0x411252b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x411297c8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x411297c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411299b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x411283f0" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x411283f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411285d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x4112bd38" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x4112bd38"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x4112bf10"/>
        <function-ref name="source" scoped="" ref="0x4112a010"/>
        <function-ref name="address" scoped="" ref="0x4112a0f0"/>
        <function-ref name="destination" scoped="" ref="0x4112a1d0"/>
        <function-ref name="setSource" scoped="" ref="0x4112a2b0"/>
        <function-ref name="setDestination" scoped="" ref="0x4112a390"/>
        <function-ref name="type" scoped="" ref="0x4112a470"/>
        <function-ref name="setType" scoped="" ref="0x4112a550"/>
        <function-ref name="isForMe" scoped="" ref="0x4112a630"/>
        <function-ref name="setGroup" scoped="" ref="0x4112a710"/>
        <function-ref name="localGroup" scoped="" ref="0x4112a7f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x411287d0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerC.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x411287d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411289b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41d74748" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41d74748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d74920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41d74250" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41d74250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41d74428"/>
        <function-ref name="cancel" scoped="" ref="0x41d74508"/>
        <function-ref name="sendDone" scoped="" ref="0x41d745e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x41d76ef0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x41d76ef0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x41d750f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41d77850" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41d77850"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41d77a28"/>
        <function-ref name="payloadLength" scoped="" ref="0x41d77b08"/>
        <function-ref name="getPayload" scoped="" ref="0x41d77be8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d77cc8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41d77da8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMSend" ref="0x41d76010" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMSend" scoped="" ref="0x41d76010"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMSend"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41d761f8"/>
        <function-ref name="getPayload" scoped="" ref="0x41d762d8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d763b8"/>
        <function-ref name="cancel" scoped="" ref="0x41d76498"/>
        <function-ref name="sendDone" scoped="" ref="0x41d76578"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Snoop" ref="0x41d76b30" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Snoop" scoped="" ref="0x41d76b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d76d18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41d784c8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41d784c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41d786a0"/>
        <function-ref name="payloadLength" scoped="" ref="0x41d78780"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d78860"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41d78940"/>
        <function-ref name="headerLength" scoped="" ref="0x41d78a20"/>
        <function-ref name="metadataLength" scoped="" ref="0x41d78b00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41d74a80" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41d74a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41d74cd8"/>
        <function-ref name="checkFrame" scoped="" ref="0x41d74db8"/>
        <function-ref name="source" scoped="" ref="0x41d74e98"/>
        <function-ref name="destination" scoped="" ref="0x41d73010"/>
        <function-ref name="setSource" scoped="" ref="0x41d730f0"/>
        <function-ref name="setDestination" scoped="" ref="0x41d731d0"/>
        <function-ref name="setGroup" scoped="" ref="0x41d732b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x41d733f0" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41d733f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x41d735c8"/>
        <function-ref name="changed" scoped="" ref="0x41d736a8"/>
        <function-ref name="amGroup" scoped="" ref="0x41d73788"/>
        <function-ref name="setAddress" scoped="" ref="0x41d73868"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41d75a40" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41d75a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41d75c18"/>
        <function-ref name="payloadLength" scoped="" ref="0x41d75cf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41d75dd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41d75eb8"/>
        <function-ref name="headerLength" scoped="" ref="0x41d74010"/>
        <function-ref name="metadataLength" scoped="" ref="0x41d740f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41d76750" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41d76750"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d76938"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReceiveDefault" ref="0x41d752e8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReceiveDefault" scoped="" ref="0x41d752e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d754d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="AMPacket" ref="0x41d78c40" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AMPacket" scoped="" ref="0x41d78c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="AMPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="group" scoped="" ref="0x41d78e18"/>
        <function-ref name="source" scoped="" ref="0x41d78ef8"/>
        <function-ref name="address" scoped="" ref="0x41d77010"/>
        <function-ref name="destination" scoped="" ref="0x41d770f0"/>
        <function-ref name="setSource" scoped="" ref="0x41d771d0"/>
        <function-ref name="setDestination" scoped="" ref="0x41d772b0"/>
        <function-ref name="type" scoped="" ref="0x41d77390"/>
        <function-ref name="setType" scoped="" ref="0x41d77470"/>
        <function-ref name="isForMe" scoped="" ref="0x41d77550"/>
        <function-ref name="setGroup" scoped="" ref="0x41d77630"/>
        <function-ref name="localGroup" scoped="" ref="0x41d77710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SnoopDefault" ref="0x41d756c8" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageLayerP.nc">
      <component-ref qname="RFA1RadioC.ActiveMessageLayerC.ActiveMessageLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SnoopDefault" scoped="" ref="0x41d756c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41d758b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ActiveMessageAddress" ref="0x410f8198" loc="54:/opt/tinyos-2.x/tos/system/ActiveMessageAddressC.nc">
      <component-ref qname="ActiveMessageAddressC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x410f8198"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x410f8370"/>
        <function-ref name="changed" scoped="" ref="0x410f8450"/>
        <function-ref name="amGroup" scoped="" ref="0x410f8530"/>
        <function-ref name="setAddress" scoped="" ref="0x410f8610"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41121c40" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41121c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41121e18"/>
        <function-ref name="cancel" scoped="" ref="0x41121ef8"/>
        <function-ref name="sendDone" scoped="" ref="0x41120010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Resource" ref="0x41120150" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41120150"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41120328"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41120408"/>
        <function-ref name="request" scoped="" ref="0x411204e8"/>
        <function-ref name="granted" scoped="" ref="0x411205c8"/>
        <function-ref name="isOwner" scoped="" ref="0x411206a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x41121718" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/AutoResourceAcquireLayerC.nc">
      <component-ref qname="RFA1RadioC.AutoResourceAcquireLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x41121718"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411218f0"/>
        <function-ref name="cancel" scoped="" ref="0x411219d0"/>
        <function-ref name="sendDone" scoped="" ref="0x41121ab0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x4116db60" loc="86:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x4116db60"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x4116dd48"/>
        <function-ref name="immediateRequested" scoped="" ref="0x4116de28"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x4116c4c0" loc="89:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x4116c4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x4116c6a8"/>
        <function-ref name="configure" scoped="" ref="0x4116c788"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x4116d420" loc="85:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x4116d420"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x4116d608"/>
        <function-ref name="immediateRequest" scoped="" ref="0x4116d6e8"/>
        <function-ref name="request" scoped="" ref="0x4116d7c8"/>
        <function-ref name="granted" scoped="" ref="0x4116d8a8"/>
        <function-ref name="isOwner" scoped="" ref="0x4116d988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x4116c010" loc="87:/opt/tinyos-2.x/tos/system/SimpleFcfsArbiterC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x4116c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x4116c1e8"/>
        <function-ref name="userId" scoped="" ref="0x4116c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41db54b8" loc="44:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41db54b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41db5690"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="FcfsQueue" ref="0x41db57f0" loc="45:/opt/tinyos-2.x/tos/system/FcfsResourceQueueC.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Queue"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FcfsQueue" scoped="" ref="0x41db57f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41db59c8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41db5aa8"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41db5b88"/>
        <function-ref name="dequeue" scoped="" ref="0x41db5c68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ResourceRequested" ref="0x41db2010" loc="52:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceRequested" scoped="" ref="0x41db2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceRequested"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="requested" scoped="" ref="0x41db21f8"/>
        <function-ref name="immediateRequested" scoped="" ref="0x41db22d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ResourceConfigure" ref="0x41db28d8" loc="56:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ResourceConfigure" scoped="" ref="0x41db28d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceConfigure"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="unconfigure" scoped="" ref="0x41db2ac0"/>
        <function-ref name="configure" scoped="" ref="0x41db2ba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Queue" ref="0x41db2d00" loc="57:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41db2d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="ResourceQueue"/>
      </instance>
      <interface-functions>
        <function-ref name="enqueue" scoped="" ref="0x41db2ed8"/>
        <function-ref name="isEmpty" scoped="" ref="0x41db1010"/>
        <function-ref name="isEnqueued" scoped="" ref="0x41db10f0"/>
        <function-ref name="dequeue" scoped="" ref="0x41db11d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Resource" ref="0x41db37f0" loc="51:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Resource" scoped="" ref="0x41db37f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x41db39d8"/>
        <function-ref name="immediateRequest" scoped="" ref="0x41db3ab8"/>
        <function-ref name="request" scoped="" ref="0x41db3b98"/>
        <function-ref name="granted" scoped="" ref="0x41db3c78"/>
        <function-ref name="isOwner" scoped="" ref="0x41db3d58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ArbiterInfo" ref="0x41db2418" loc="53:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ArbiterInfo" scoped="" ref="0x41db2418"/></type-interface>
      <instance>
        <interfacedef-ref qname="ArbiterInfo"/>
      </instance>
      <interface-functions>
        <function-ref name="inUse" scoped="" ref="0x41db25f0"/>
        <function-ref name="userId" scoped="" ref="0x41db26d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="grantedTask" ref="0x41db1350" loc="69:/opt/tinyos-2.x/tos/system/SimpleArbiterP.nc">
      <component-ref qname="RFA1RadioC.SendResourceC.Arbiter"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="grantedTask" scoped="" ref="0x41db1350"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41db1528"/>
        <function-ref name="runTask" scoped="" ref="0x41db1608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4118b9e8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4118b9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4118bbc0"/>
        <function-ref name="cancel" scoped="" ref="0x4118bca0"/>
        <function-ref name="sendDone" scoped="" ref="0x4118bd80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4118bee0" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4118bee0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4118a0e0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x4118d488" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x4118d488"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x4118d660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x411693b0" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x411693b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41169588"/>
        <function-ref name="payloadLength" scoped="" ref="0x41169668"/>
        <function-ref name="getPayload" scoped="" ref="0x41169748"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41169828"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41169908"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioPacket" ref="0x4118b250" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4118b250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4118b428"/>
        <function-ref name="payloadLength" scoped="" ref="0x4118b508"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4118b5e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4118b6c8"/>
        <function-ref name="headerLength" scoped="" ref="0x4118b7a8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4118b888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Ieee154PacketLayer" ref="0x4118d7d0" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x4118d7d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x4118d9a8"/>
        <function-ref name="getDSN" scoped="" ref="0x4118da88"/>
        <function-ref name="setFCF" scoped="" ref="0x4118db68"/>
        <function-ref name="isAckFrame" scoped="" ref="0x4118dc48"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x4118dd28"/>
        <function-ref name="createDataFrame" scoped="" ref="0x4118de08"/>
        <function-ref name="setDSN" scoped="" ref="0x4118dee8"/>
        <function-ref name="createAckReply" scoped="" ref="0x4118c010"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x4118c0f0"/>
        <function-ref name="isDataFrame" scoped="" ref="0x4118c1d0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x4118c2b0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x4118c390"/>
        <function-ref name="localAddr" scoped="" ref="0x4118c470"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x4118c5d0"/>
        <function-ref name="localPan" scoped="" ref="0x4118c6b0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x4118c790"/>
        <function-ref name="createAckFrame" scoped="" ref="0x4118c870"/>
        <function-ref name="setFramePending" scoped="" ref="0x4118c950"/>
        <function-ref name="setDestPan" scoped="" ref="0x4118ca30"/>
        <function-ref name="isForMe" scoped="" ref="0x4118cb10"/>
        <function-ref name="setAckRequired" scoped="" ref="0x4118cbf0"/>
        <function-ref name="getFCF" scoped="" ref="0x4118ccd0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x4118cdb0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x4118ce90"/>
        <function-ref name="getFramePending" scoped="" ref="0x4118b010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x41169a48" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x41169a48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41169c20"/>
        <function-ref name="getPayload" scoped="" ref="0x41169d00"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41169de0"/>
        <function-ref name="cancel" scoped="" ref="0x41169ec0"/>
        <function-ref name="sendDone" scoped="" ref="0x4118d010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x4118d170" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154MessageLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154MessageLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x4118d170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4118d348"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x411a6280" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x411a6280"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x411a6458"/>
        <function-ref name="cancel" scoped="" ref="0x411a6538"/>
        <function-ref name="sendDone" scoped="" ref="0x411a6618"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x411a6778" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x411a6778"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411a6950"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41187a58" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41187a58"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41187c30"/>
        <function-ref name="payloadLength" scoped="" ref="0x41187d10"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41187df0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41187ed0"/>
        <function-ref name="headerLength" scoped="" ref="0x41186010"/>
        <function-ref name="metadataLength" scoped="" ref="0x411860f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosReceive" ref="0x41186748" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosReceive" scoped="" ref="0x41186748"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41186920"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x411a6ab0" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x411a6ab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x411a6c88"/>
        <function-ref name="payloadLength" scoped="" ref="0x411a6d68"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x411a6e48"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x411a6f28"/>
        <function-ref name="headerLength" scoped="" ref="0x411a5018"/>
        <function-ref name="metadataLength" scoped="" ref="0x411a50f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosSend" ref="0x41186250" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosSend" scoped="" ref="0x41186250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41186428"/>
        <function-ref name="cancel" scoped="" ref="0x41186508"/>
        <function-ref name="sendDone" scoped="" ref="0x411865e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x41187228" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x41187228"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41187400"/>
        <function-ref name="cancel" scoped="" ref="0x411874e0"/>
        <function-ref name="sendDone" scoped="" ref="0x411875c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x41187720" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x41187720"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x411878f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="TinyosPacket" ref="0x41186a80" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TinyosNetworkLayerC.nc">
      <component-ref qname="RFA1RadioC.TinyosNetworkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TinyosPacket" scoped="" ref="0x41186a80"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41186c58"/>
        <function-ref name="payloadLength" scoped="" ref="0x41186d38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41186e18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41186ef8"/>
        <function-ref name="headerLength" scoped="" ref="0x411a6010"/>
        <function-ref name="metadataLength" scoped="" ref="0x411a60f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41210170" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41210170"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x41210348"/>
        <function-ref name="address" scoped="" ref="0x41210428"/>
        <function-ref name="destination" scoped="" ref="0x41210508"/>
        <function-ref name="setSource" scoped="" ref="0x412105e8"/>
        <function-ref name="setDestination" scoped="" ref="0x412106c8"/>
        <function-ref name="pan" scoped="" ref="0x412107a8"/>
        <function-ref name="setPan" scoped="" ref="0x41210888"/>
        <function-ref name="isForMe" scoped="" ref="0x41210968"/>
        <function-ref name="localPan" scoped="" ref="0x41210a48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41210b88" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41210b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41210d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x41210e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41210f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4120f018"/>
        <function-ref name="headerLength" scoped="" ref="0x4120f0f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x4120f1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x411d2658" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x411d2658"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x411d2830"/>
        <function-ref name="getDSN" scoped="" ref="0x411d2910"/>
        <function-ref name="setFCF" scoped="" ref="0x411d29f0"/>
        <function-ref name="isAckFrame" scoped="" ref="0x411d2ad0"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x411d2bb0"/>
        <function-ref name="createDataFrame" scoped="" ref="0x411d2c90"/>
        <function-ref name="setDSN" scoped="" ref="0x411d2d70"/>
        <function-ref name="createAckReply" scoped="" ref="0x411d2e50"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x411d1010"/>
        <function-ref name="isDataFrame" scoped="" ref="0x411d10f0"/>
        <function-ref name="getAckRequired" scoped="" ref="0x411d11d0"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x411d12b0"/>
        <function-ref name="localAddr" scoped="" ref="0x411d1390"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x411d14f0"/>
        <function-ref name="localPan" scoped="" ref="0x411d15d0"/>
        <function-ref name="setDestAddr" scoped="" ref="0x411d16b0"/>
        <function-ref name="createAckFrame" scoped="" ref="0x411d1790"/>
        <function-ref name="setFramePending" scoped="" ref="0x411d1870"/>
        <function-ref name="setDestPan" scoped="" ref="0x411d1950"/>
        <function-ref name="isForMe" scoped="" ref="0x411d1a30"/>
        <function-ref name="setAckRequired" scoped="" ref="0x411d1b10"/>
        <function-ref name="getFCF" scoped="" ref="0x411d1bf0"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x411d1cd0"/>
        <function-ref name="getDestAddr" scoped="" ref="0x411d1db0"/>
        <function-ref name="getFramePending" scoped="" ref="0x411d1e90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4120f368" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerC.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4120f368"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4120f540"/>
        <function-ref name="payloadLength" scoped="" ref="0x4120f620"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4120f700"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4120f7e0"/>
        <function-ref name="headerLength" scoped="" ref="0x4120f8c0"/>
        <function-ref name="metadataLength" scoped="" ref="0x4120f9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41de9e38" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41de9e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x41de8050"/>
        <function-ref name="address" scoped="" ref="0x41de8130"/>
        <function-ref name="destination" scoped="" ref="0x41de8210"/>
        <function-ref name="setSource" scoped="" ref="0x41de82f0"/>
        <function-ref name="setDestination" scoped="" ref="0x41de83d0"/>
        <function-ref name="pan" scoped="" ref="0x41de84b0"/>
        <function-ref name="setPan" scoped="" ref="0x41de8590"/>
        <function-ref name="isForMe" scoped="" ref="0x41de8670"/>
        <function-ref name="localPan" scoped="" ref="0x41de8750"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41de8890" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41de8890"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41de8a68"/>
        <function-ref name="payloadLength" scoped="" ref="0x41de8b48"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41de8c28"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41de8d08"/>
        <function-ref name="headerLength" scoped="" ref="0x41de8de8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41de8ec8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154PacketLayer" ref="0x41dea490" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154PacketLayer" scoped="" ref="0x41dea490"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
      </instance>
      <interface-functions>
        <function-ref name="getDestPan" scoped="" ref="0x41dea668"/>
        <function-ref name="getDSN" scoped="" ref="0x41dea748"/>
        <function-ref name="setFCF" scoped="" ref="0x41dea828"/>
        <function-ref name="isAckFrame" scoped="" ref="0x41dea908"/>
        <function-ref name="setSrcAddr" scoped="" ref="0x41dea9e8"/>
        <function-ref name="createDataFrame" scoped="" ref="0x41deaac8"/>
        <function-ref name="setDSN" scoped="" ref="0x41deaba8"/>
        <function-ref name="createAckReply" scoped="" ref="0x41deac88"/>
        <function-ref name="getSrcAddr" scoped="" ref="0x41dead68"/>
        <function-ref name="isDataFrame" scoped="" ref="0x41deae48"/>
        <function-ref name="getAckRequired" scoped="" ref="0x41deaf28"/>
        <function-ref name="verifyAckReply" scoped="" ref="0x41de9018"/>
        <function-ref name="localAddr" scoped="" ref="0x41de90f8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x41de9258"/>
        <function-ref name="localPan" scoped="" ref="0x41de9338"/>
        <function-ref name="setDestAddr" scoped="" ref="0x41de9418"/>
        <function-ref name="createAckFrame" scoped="" ref="0x41de94f8"/>
        <function-ref name="setFramePending" scoped="" ref="0x41de95d8"/>
        <function-ref name="setDestPan" scoped="" ref="0x41de96b8"/>
        <function-ref name="isForMe" scoped="" ref="0x41de9798"/>
        <function-ref name="setAckRequired" scoped="" ref="0x41de9878"/>
        <function-ref name="getFCF" scoped="" ref="0x41de9958"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41de9a38"/>
        <function-ref name="getDestAddr" scoped="" ref="0x41de9b18"/>
        <function-ref name="getFramePending" scoped="" ref="0x41de9bf8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ActiveMessageAddress" ref="0x41de7070" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ActiveMessageAddress" scoped="" ref="0x41de7070"/></type-interface>
      <instance>
        <interfacedef-ref qname="ActiveMessageAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="amAddress" scoped="" ref="0x41de7248"/>
        <function-ref name="changed" scoped="" ref="0x41de7328"/>
        <function-ref name="amGroup" scoped="" ref="0x41de7408"/>
        <function-ref name="setAddress" scoped="" ref="0x41de74e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41de7648" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayerP.nc">
      <component-ref qname="RFA1RadioC.Ieee154PacketLayerC.Ieee154PacketLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41de7648"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41de7820"/>
        <function-ref name="payloadLength" scoped="" ref="0x41de7900"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41de79e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41de7ac0"/>
        <function-ref name="headerLength" scoped="" ref="0x41de7ba0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41de7c80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4120cd30" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4120cd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4120cf08"/>
        <function-ref name="cancel" scoped="" ref="0x41214010"/>
        <function-ref name="sendDone" scoped="" ref="0x412140f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41214250" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41214250"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41214428"/>
        <function-ref name="header" scoped="" ref="0x41214508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4120c410" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4120c410"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4120c5e8"/>
        <function-ref name="cancel" scoped="" ref="0x4120c6c8"/>
        <function-ref name="sendDone" scoped="" ref="0x4120c7a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41214668" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41214668"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41214840"/>
        <function-ref name="reportChannelError" scoped="" ref="0x41214920"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x41214a00"/>
        <function-ref name="getSender" scoped="" ref="0x41214ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4120c8e8" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4120c8e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4120cac0"/>
        <function-ref name="header" scoped="" ref="0x4120cba0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41e2d010" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41e2d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e2d1e8"/>
        <function-ref name="cancel" scoped="" ref="0x41e2d2c8"/>
        <function-ref name="sendDone" scoped="" ref="0x41e2d3a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41e2d508" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41e2d508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e2d6e0"/>
        <function-ref name="header" scoped="" ref="0x41e2d7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborhoodFlag" ref="0x41e2b580" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41e2b580"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41e2b758"/>
        <function-ref name="clearAll" scoped="" ref="0x41e2b838"/>
        <function-ref name="get" scoped="" ref="0x41e2b918"/>
        <function-ref name="set" scoped="" ref="0x41e2b9f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41e2e300" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41e2e300"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e2e4d8"/>
        <function-ref name="cancel" scoped="" ref="0x41e2e5b8"/>
        <function-ref name="sendDone" scoped="" ref="0x41e2e698"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Neighborhood" ref="0x41e2deb8" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x41e2deb8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x41e2b0c0"/>
        <function-ref name="insertNode" scoped="" ref="0x41e2b1a0"/>
        <function-ref name="getNode" scoped="" ref="0x41e2b280"/>
        <function-ref name="evicted" scoped="" ref="0x41e2b360"/>
        <function-ref name="getIndex" scoped="" ref="0x41e2b440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41e2e7d8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41e2e7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e2e9b0"/>
        <function-ref name="header" scoped="" ref="0x41e2ea90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41e2ebd0" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41e2ebd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41e2eda8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UniqueConfig" ref="0x41e2d900" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueLayerP.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.UniqueLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UniqueConfig" scoped="" ref="0x41e2d900"/></type-interface>
      <instance>
        <interfacedef-ref qname="UniqueConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="setSequenceNumber" scoped="" ref="0x41e2dad8"/>
        <function-ref name="reportChannelError" scoped="" ref="0x41e2dbb8"/>
        <function-ref name="getSequenceNumber" scoped="" ref="0x41e2dc98"/>
        <function-ref name="getSender" scoped="" ref="0x41e2dd78"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x41231540" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodC.nc">
      <component-ref qname="NeighborhoodC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x41231540"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x41231718"/>
        <function-ref name="insertNode" scoped="" ref="0x412317f8"/>
        <function-ref name="getNode" scoped="" ref="0x412318d8"/>
        <function-ref name="evicted" scoped="" ref="0x412319b8"/>
        <function-ref name="getIndex" scoped="" ref="0x41231a98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x4122b010" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x4122b010"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4122b1e8"/>
        <function-ref name="clearAll" scoped="" ref="0x4122b2c8"/>
        <function-ref name="get" scoped="" ref="0x4122b3a8"/>
        <function-ref name="set" scoped="" ref="0x4122b488"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Neighborhood" ref="0x4122c510" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Neighborhood" scoped="" ref="0x4122c510"/></type-interface>
      <instance>
        <interfacedef-ref qname="Neighborhood"/>
      </instance>
      <interface-functions>
        <function-ref name="getAge" scoped="" ref="0x4122c6e8"/>
        <function-ref name="insertNode" scoped="" ref="0x4122c7c8"/>
        <function-ref name="getNode" scoped="" ref="0x4122c8a8"/>
        <function-ref name="evicted" scoped="" ref="0x4122c988"/>
        <function-ref name="getIndex" scoped="" ref="0x4122ca68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4122c178" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodP.nc">
      <component-ref qname="NeighborhoodP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4122c178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4122c350"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="NeighborhoodFlag" ref="0x41e2a9c0" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlagC.nc">
      <component-ref qname="RFA1RadioC.UniqueLayerC.NeighborhoodFlagC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborhoodFlag" scoped="" ref="0x41e2a9c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborhoodFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41e2ab98"/>
        <function-ref name="clearAll" scoped="" ref="0x41e2ac78"/>
        <function-ref name="get" scoped="" ref="0x41e2ad58"/>
        <function-ref name="set" scoped="" ref="0x41e2ae38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x4125d7d8" loc="85:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x4125d7d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4125d9b0"/>
        <function-ref name="cancel" scoped="" ref="0x4125da90"/>
        <function-ref name="sendDone" scoped="" ref="0x4125db70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x4125dcd0" loc="86:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x4125dcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4125dea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x4125f108" loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x4125f108"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4125f2e0"/>
        <function-ref name="cancel" scoped="" ref="0x4125f3c0"/>
        <function-ref name="sendDone" scoped="" ref="0x4125f4a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x4125d010" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x4125d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4125d1e8"/>
        <function-ref name="payloadLength" scoped="" ref="0x4125d2c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4125d3a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4125d488"/>
        <function-ref name="headerLength" scoped="" ref="0x4125d568"/>
        <function-ref name="metadataLength" scoped="" ref="0x4125d648"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x4125c030" loc="87:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x4125c030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4125c208"/>
        <function-ref name="payloadLength" scoped="" ref="0x4125c2e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4125c3c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x4125c4a8"/>
        <function-ref name="headerLength" scoped="" ref="0x4125c588"/>
        <function-ref name="metadataLength" scoped="" ref="0x4125c668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x4125f600" loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x4125f600"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4125f7d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x4125c7a8" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x4125c7a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x4125c980"/>
        <function-ref name="noAck" scoped="" ref="0x4125ca60"/>
        <function-ref name="wasAcked" scoped="" ref="0x4125cb40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x4125f918" loc="79:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x4125f918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x4125faf0"/>
        <function-ref name="setRetries" scoped="" ref="0x4125fbd0"/>
        <function-ref name="getRetries" scoped="" ref="0x4125fcb0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x4125fd90"/>
        <function-ref name="wasDelivered" scoped="" ref="0x4125fe70"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41e19520" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41e19520"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e196f8"/>
        <function-ref name="cancel" scoped="" ref="0x41e197d8"/>
        <function-ref name="sendDone" scoped="" ref="0x41e198b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="send" ref="0x41e169f8" loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="send" scoped="" ref="0x41e169f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41e16bd0"/>
        <function-ref name="runTask" scoped="" ref="0x41e16cb0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayTimer" ref="0x41e18010" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayTimer" scoped="" ref="0x41e18010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41e17b00"/>
        <function-ref name="fired" scoped="" ref="0x41e18d90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41e174c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41e17268"/>
        <function-ref name="getdt" scoped="" ref="0x41e16010"/>
        <function-ref name="gett0" scoped="" ref="0x41e17d58"/>
        <function-ref name="isRunning" scoped="" ref="0x41e17010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41e18638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41e177e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x41e188b8"/>
        <function-ref name="stop" scoped="" ref="0x41e18b38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41e1b170" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41e1b170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e1b348"/>
        <function-ref name="cancel" scoped="" ref="0x41e1b428"/>
        <function-ref name="sendDone" scoped="" ref="0x41e1b508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41e1bce0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41e1bce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41e1beb8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41e19010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41e190f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41e191d0"/>
        <function-ref name="headerLength" scoped="" ref="0x41e192b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41e19390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41e16240" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41e16240"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41e16418"/>
        <function-ref name="payloadLength" scoped="" ref="0x41e164f8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41e165d8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41e166b8"/>
        <function-ref name="headerLength" scoped="" ref="0x41e16798"/>
        <function-ref name="metadataLength" scoped="" ref="0x41e16878"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x41e199f8" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41e199f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41e19bd0"/>
        <function-ref name="noAck" scoped="" ref="0x41e19cb0"/>
        <function-ref name="wasAcked" scoped="" ref="0x41e19d90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x41e1b648" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/PacketLinkLayerP.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.PacketLinkLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x41e1b648"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x41e1b820"/>
        <function-ref name="setRetries" scoped="" ref="0x41e1b900"/>
        <function-ref name="getRetries" scoped="" ref="0x41e1b9e0"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x41e1bac0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x41e1bba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41e140a0" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RFA1RadioC.PacketLinkLayerC.DelayTimerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41e140a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41e12b88"/>
        <function-ref name="fired" scoped="" ref="0x41e14e20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41e12548"/>
        <function-ref name="isOneShot" scoped="" ref="0x41e122f0"/>
        <function-ref name="getdt" scoped="" ref="0x41e11048"/>
        <function-ref name="gett0" scoped="" ref="0x41e12de0"/>
        <function-ref name="isRunning" scoped="" ref="0x41e12098"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41e146c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41e12868"/>
        <function-ref name="startOneShot" scoped="" ref="0x41e14948"/>
        <function-ref name="stop" scoped="" ref="0x41e14bc8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412bfac0" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412bfac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412bfc98"/>
        <function-ref name="stopDone" scoped="" ref="0x412bfd78"/>
        <function-ref name="start" scoped="" ref="0x412bfe58"/>
        <function-ref name="stop" scoped="" ref="0x412f6010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x412f4d30" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x412f4d30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412f4f08"/>
        <function-ref name="cancel" scoped="" ref="0x412f3010"/>
        <function-ref name="sendDone" scoped="" ref="0x412f30f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x412f3250" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x412f3250"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412f3428"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412f6170" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412f6170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412f6348"/>
        <function-ref name="cancel" scoped="" ref="0x412f6428"/>
        <function-ref name="sendDone" scoped="" ref="0x412f6508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x412f6980" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x412f6980"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412f6b58"/>
        <function-ref name="payloadLength" scoped="" ref="0x412f6c38"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412f6d18"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412f6df8"/>
        <function-ref name="headerLength" scoped="" ref="0x412f6ed8"/>
        <function-ref name="metadataLength" scoped="" ref="0x412f4010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x412f4150" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x412f4150"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x412f4328"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x412f4408"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x412f44e8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x412f45c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x412f4758" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x412f4758"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412f4930"/>
        <function-ref name="stopDone" scoped="" ref="0x412f4a10"/>
        <function-ref name="start" scoped="" ref="0x412f4af0"/>
        <function-ref name="stop" scoped="" ref="0x412f4bd0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412f6668" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412f6668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412f6840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x412f3588" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x412f3588"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x412f3760"/>
        <function-ref name="payloadLength" scoped="" ref="0x412f3840"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x412f3920"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x412f3a00"/>
        <function-ref name="headerLength" scoped="" ref="0x412f3ae0"/>
        <function-ref name="metadataLength" scoped="" ref="0x412f3bc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x412f3d20" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x412f3d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x412f3ef8"/>
        <function-ref name="ackRequested" scoped="" ref="0x412f2010"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x412f20f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x412f2230" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x412f2230"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x412f2408"/>
        <function-ref name="noAck" scoped="" ref="0x412f24e8"/>
        <function-ref name="wasAcked" scoped="" ref="0x412f25c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41e6bed8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41e6bed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41e660c0"/>
        <function-ref name="stopDone" scoped="" ref="0x41e661a0"/>
        <function-ref name="start" scoped="" ref="0x41e66280"/>
        <function-ref name="stop" scoped="" ref="0x41e66360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41e64170" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41e64170"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e64348"/>
        <function-ref name="cancel" scoped="" ref="0x41e64428"/>
        <function-ref name="sendDone" scoped="" ref="0x41e64508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41e64668" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41e64668"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e64840"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SystemLowPowerListening" ref="0x41e60d68" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x41e60d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x41e5f010"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x41e5f0f0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x41e5f1d0"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x41e5f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41e664c0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41e664c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e66698"/>
        <function-ref name="cancel" scoped="" ref="0x41e66778"/>
        <function-ref name="sendDone" scoped="" ref="0x41e66858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41e66cd0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41e66cd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41e66ea8"/>
        <function-ref name="payloadLength" scoped="" ref="0x41e65010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41e650f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41e651d0"/>
        <function-ref name="headerLength" scoped="" ref="0x41e652b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41e65390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41e654d0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41e654d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41e656a8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41e65788"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41e65868"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x41e65948"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41e63648" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41e63648"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getListenLength" scoped="" ref="0x41e63820"/>
        <function-ref name="ackRequested" scoped="" ref="0x41e63900"/>
        <function-ref name="needsAutoAckRequest" scoped="" ref="0x41e639e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41e649a0" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41e649a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41e64b78"/>
        <function-ref name="payloadLength" scoped="" ref="0x41e64c58"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41e64d38"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41e64e18"/>
        <function-ref name="headerLength" scoped="" ref="0x41e64ef8"/>
        <function-ref name="metadataLength" scoped="" ref="0x41e63010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x41e65ad8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x41e65ad8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41e65cb0"/>
        <function-ref name="stopDone" scoped="" ref="0x41e65d90"/>
        <function-ref name="start" scoped="" ref="0x41e65e70"/>
        <function-ref name="stop" scoped="" ref="0x41e64010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="transition" ref="0x41e5e3d0" loc="111:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="transition" scoped="" ref="0x41e5e3d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41e5e5a8"/>
        <function-ref name="runTask" scoped="" ref="0x41e5e688"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41e669b8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41e669b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e66b90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41e5f3f0" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41e5f3f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41e5f5c8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41e5f6a8"/>
        <function-ref name="led1On" scoped="" ref="0x41e5f788"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41e5f868"/>
        <function-ref name="led3Off" scoped="" ref="0x41e5f948"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41e5fa28"/>
        <function-ref name="get" scoped="" ref="0x41e5fb08"/>
        <function-ref name="led1Off" scoped="" ref="0x41e5fbe8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41e5fcc8"/>
        <function-ref name="led3On" scoped="" ref="0x41e5fda8"/>
        <function-ref name="led0On" scoped="" ref="0x41e5fe88"/>
        <function-ref name="led2Off" scoped="" ref="0x41e5e010"/>
        <function-ref name="led2On" scoped="" ref="0x41e5e0f0"/>
        <function-ref name="set" scoped="" ref="0x41e5e250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketAcknowledgements" ref="0x41e63150" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41e63150"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41e63328"/>
        <function-ref name="noAck" scoped="" ref="0x41e63408"/>
        <function-ref name="wasAcked" scoped="" ref="0x41e634e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x41e63bb0" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningLayerP.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.LowPowerListeningLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41e63bb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41e606a8"/>
        <function-ref name="fired" scoped="" ref="0x41e62948"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41e60068"/>
        <function-ref name="isOneShot" scoped="" ref="0x41e62df8"/>
        <function-ref name="getdt" scoped="" ref="0x41e60b58"/>
        <function-ref name="gett0" scoped="" ref="0x41e60900"/>
        <function-ref name="isRunning" scoped="" ref="0x41e62ba0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41e621f0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41e60388"/>
        <function-ref name="startOneShot" scoped="" ref="0x41e62470"/>
        <function-ref name="stop" scoped="" ref="0x41e626f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41e5c3b8" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RFA1RadioC.LowPowerListeningLayerC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41e5c3b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41e5be98"/>
        <function-ref name="fired" scoped="" ref="0x41e5b150"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41e5b858"/>
        <function-ref name="isOneShot" scoped="" ref="0x41e5b600"/>
        <function-ref name="getdt" scoped="" ref="0x41e59368"/>
        <function-ref name="gett0" scoped="" ref="0x41e59110"/>
        <function-ref name="isRunning" scoped="" ref="0x41e5b3a8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41e5c9e0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41e5bb78"/>
        <function-ref name="startOneShot" scoped="" ref="0x41e5cc60"/>
        <function-ref name="stop" scoped="" ref="0x41e5cee0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x412caa88" loc="3:/opt/tinyos-2.x/tos/system/SystemLowPowerListeningC.nc">
      <component-ref qname="SystemLowPowerListeningC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x412caa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x412cac60"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x412cad40"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x412cae20"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x412caf00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SystemLowPowerListening" ref="0x412c76f8" loc="5:/opt/tinyos-2.x/tos/system/SystemLowPowerListeningP.nc">
      <component-ref qname="SystemLowPowerListeningP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SystemLowPowerListening" scoped="" ref="0x412c76f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SystemLowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setDefaultRemoteWakeupInterval" scoped="" ref="0x412c78d0"/>
        <function-ref name="getDefaultRemoteWakeupInterval" scoped="" ref="0x412c79b0"/>
        <function-ref name="getDelayAfterReceive" scoped="" ref="0x412c7a90"/>
        <function-ref name="setDelayAfterReceive" scoped="" ref="0x412c7b70"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x412c6908" loc="46:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x412c6908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x412c6ae0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Leds" ref="0x412c6c70" loc="47:/opt/tinyos-2.x/tos/platforms/ucmini/NoLedsC.nc">
      <component-ref qname="NoLedsC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x412c6c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x412c6e48"/>
        <function-ref name="led0Toggle" scoped="" ref="0x412c6f28"/>
        <function-ref name="led1On" scoped="" ref="0x412be018"/>
        <function-ref name="led1Toggle" scoped="" ref="0x412be0f8"/>
        <function-ref name="led3Off" scoped="" ref="0x412be1d8"/>
        <function-ref name="led2Toggle" scoped="" ref="0x412be2b8"/>
        <function-ref name="get" scoped="" ref="0x412be398"/>
        <function-ref name="led1Off" scoped="" ref="0x412be478"/>
        <function-ref name="led3Toggle" scoped="" ref="0x412be558"/>
        <function-ref name="led3On" scoped="" ref="0x412be638"/>
        <function-ref name="led0On" scoped="" ref="0x412be718"/>
        <function-ref name="led2Off" scoped="" ref="0x412be7f8"/>
        <function-ref name="led2On" scoped="" ref="0x412be8d8"/>
        <function-ref name="set" scoped="" ref="0x412bea38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x412ee010" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x412ee010"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x412ee1e8"/>
        <function-ref name="stopDone" scoped="" ref="0x412ee2c8"/>
        <function-ref name="start" scoped="" ref="0x412ee3a8"/>
        <function-ref name="stop" scoped="" ref="0x412ee488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x4133a340" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x4133a340"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x4133a518"/>
        <function-ref name="turnOn" scoped="" ref="0x4133a5f8"/>
        <function-ref name="setChannel" scoped="" ref="0x4133a6d8"/>
        <function-ref name="done" scoped="" ref="0x4133a7b8"/>
        <function-ref name="standby" scoped="" ref="0x4133a898"/>
        <function-ref name="getChannel" scoped="" ref="0x4133a978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x412ee5e8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x412ee5e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x412ee7c0"/>
        <function-ref name="cancel" scoped="" ref="0x412ee8a0"/>
        <function-ref name="sendDone" scoped="" ref="0x412ee980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41339010" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41339010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413391e8"/>
        <function-ref name="header" scoped="" ref="0x413392c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x412eeae0" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x412eeae0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x412eecb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x4133aab8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4133aab8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4133ac90"/>
        <function-ref name="ready" scoped="" ref="0x4133ad70"/>
        <function-ref name="sendDone" scoped="" ref="0x4133ae50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x412eedf8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerC.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x412eedf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x4133a010"/>
        <function-ref name="setChannel" scoped="" ref="0x4133a0f0"/>
        <function-ref name="getChannel" scoped="" ref="0x4133a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41e9e110" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41e9e110"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41e9e2e8"/>
        <function-ref name="stopDone" scoped="" ref="0x41e9e3c8"/>
        <function-ref name="start" scoped="" ref="0x41e9e4a8"/>
        <function-ref name="stop" scoped="" ref="0x41e9e588"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x41e9e6e8" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x41e9e6e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41e9e8c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioState" ref="0x41e9d750" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41e9d750"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41e9d928"/>
        <function-ref name="turnOn" scoped="" ref="0x41e9da08"/>
        <function-ref name="setChannel" scoped="" ref="0x41e9dae8"/>
        <function-ref name="done" scoped="" ref="0x41e9dbc8"/>
        <function-ref name="standby" scoped="" ref="0x41e9dca8"/>
        <function-ref name="getChannel" scoped="" ref="0x41e9dd88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Send" ref="0x41e9ea20" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Send" scoped="" ref="0x41e9ea20"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e9ebf8"/>
        <function-ref name="cancel" scoped="" ref="0x41e9ecd8"/>
        <function-ref name="sendDone" scoped="" ref="0x41e9edb8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x41e9b270" loc="189:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x41e9b270"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41e9b448"/>
        <function-ref name="runTask" scoped="" ref="0x41e9b528"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioReceive" ref="0x41e9c978" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41e9c978"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e9cb50"/>
        <function-ref name="header" scoped="" ref="0x41e9cc30"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="stateDoneTask" ref="0x41e9b6a8" loc="144:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="stateDoneTask" scoped="" ref="0x41e9b6a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41e9b880"/>
        <function-ref name="runTask" scoped="" ref="0x41e9b960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Receive" ref="0x41e9ef18" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Receive" scoped="" ref="0x41e9ef18"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e9d108"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="deliverTask" ref="0x41e9cdb0" loc="322:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="deliverTask" scoped="" ref="0x41e9cdb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41e9b010"/>
        <function-ref name="runTask" scoped="" ref="0x41e9b0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioSend" ref="0x41e9c4a0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41e9c4a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e9c678"/>
        <function-ref name="ready" scoped="" ref="0x41e9c758"/>
        <function-ref name="sendDone" scoped="" ref="0x41e9c838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x41e9d248" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x41e9d248"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41e9d420"/>
        <function-ref name="setChannel" scoped="" ref="0x41e9d500"/>
        <function-ref name="getChannel" scoped="" ref="0x41e9d5e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41e9dec8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MessageBufferLayerP.nc">
      <component-ref qname="RFA1RadioC.MessageBufferLayerC.MessageBufferLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41e9dec8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41e9c0c0"/>
        <function-ref name="suspend" scoped="" ref="0x41e9c1a0"/>
        <function-ref name="resume" scoped="" ref="0x41e9c280"/>
        <function-ref name="run" scoped="" ref="0x41e9c360"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413362f0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413362f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413364c8"/>
        <function-ref name="ready" scoped="" ref="0x413365a8"/>
        <function-ref name="sendDone" scoped="" ref="0x41336688"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413367e8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413367e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413369c0"/>
        <function-ref name="header" scoped="" ref="0x41336aa0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x41336be0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41336be0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41336db8"/>
        <function-ref name="wait" scoped="" ref="0x41336e98"/>
        <function-ref name="cancel" scoped="" ref="0x41355010"/>
        <function-ref name="isFree" scoped="" ref="0x413550f0"/>
        <function-ref name="getNow" scoped="" ref="0x413551d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41355330" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41355330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41355508"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x413555e8"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x413556c8"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x413557a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41337e90" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41337e90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41336080"/>
        <function-ref name="header" scoped="" ref="0x41336160"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x413379b8" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerC.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x413379b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41337b90"/>
        <function-ref name="ready" scoped="" ref="0x41337c70"/>
        <function-ref name="sendDone" scoped="" ref="0x41337d50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41e7cb08" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41e7cb08"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e7cce0"/>
        <function-ref name="ready" scoped="" ref="0x41e7cdc0"/>
        <function-ref name="sendDone" scoped="" ref="0x41e7cea0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41e7b030" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41e7b030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e7b208"/>
        <function-ref name="header" scoped="" ref="0x41e7b2e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x41e7b428" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41e7b428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41e7b600"/>
        <function-ref name="wait" scoped="" ref="0x41e7b6e0"/>
        <function-ref name="cancel" scoped="" ref="0x41e7b7c0"/>
        <function-ref name="isFree" scoped="" ref="0x41e7b8a0"/>
        <function-ref name="getNow" scoped="" ref="0x41e7b980"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41e7bac0" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41e7bac0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41e7bc98"/>
        <function-ref name="rand32" scoped="" ref="0x41e7bd78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41e7bed8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41e7bed8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RandomCollisionConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="getCongestionBackoff" scoped="" ref="0x41e7a0c0"/>
        <function-ref name="getInitialBackoff" scoped="" ref="0x41e7a1a0"/>
        <function-ref name="getMinimumBackoff" scoped="" ref="0x41e7a280"/>
        <function-ref name="getTransmitBarrier" scoped="" ref="0x41e7a360"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41e7c6c0" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41e7c6c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41e7c898"/>
        <function-ref name="header" scoped="" ref="0x41e7c978"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x41e7c1e8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x41e7c1e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41e7c3c0"/>
        <function-ref name="ready" scoped="" ref="0x41e7c4a0"/>
        <function-ref name="sendDone" scoped="" ref="0x41e7c580"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="calcNextRandom" ref="0x41e7a4e0" loc="78:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionLayerP.nc">
      <component-ref qname="RFA1RadioC.CollisionAvoidanceLayerC.RandomCollisionLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="calcNextRandom" scoped="" ref="0x41e7a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41e7a6b8"/>
        <function-ref name="runTask" scoped="" ref="0x41e7a798"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x41357e98" loc="46:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41357e98"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x413590c0"/>
        <function-ref name="rand32" scoped="" ref="0x413591a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x413575d8" loc="45:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x413575d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41357c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4135c330" loc="44:/opt/tinyos-2.x/tos/system/RandomC.nc">
      <component-ref qname="RandomC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4135c330"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4135c508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Random" ref="0x41354948" loc="48:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41354948"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x41354b20"/>
        <function-ref name="rand32" scoped="" ref="0x41354c00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SeedInit" ref="0x41354088" loc="47:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SeedInit" scoped="" ref="0x41354088"/></type-interface>
      <instance>
        <interfacedef-ref qname="ParameterInit"/>
        <arguments>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413546b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41359b40" loc="46:/opt/tinyos-2.x/tos/system/RandomMlcgC.nc">
      <component-ref qname="RandomMlcgC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41359b40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41359d18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x41349538" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x41349538"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41349710"/>
        <function-ref name="ready" scoped="" ref="0x413497f0"/>
        <function-ref name="sendDone" scoped="" ref="0x413498d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x41349a30" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x41349a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41349c08"/>
        <function-ref name="header" scoped="" ref="0x41349ce8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioAlarm" ref="0x41349e28" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioAlarm" scoped="" ref="0x41349e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioAlarm"/>
      </instance>
      <interface-functions>
        <function-ref name="fired" scoped="" ref="0x41376050"/>
        <function-ref name="wait" scoped="" ref="0x41376130"/>
        <function-ref name="cancel" scoped="" ref="0x41376210"/>
        <function-ref name="isFree" scoped="" ref="0x413762f0"/>
        <function-ref name="getNow" scoped="" ref="0x413763d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AckReceivedFlag" ref="0x41376e88" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AckReceivedFlag" scoped="" ref="0x41376e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41375070"/>
        <function-ref name="get" scoped="" ref="0x41375150"/>
        <function-ref name="setValue" scoped="" ref="0x41375230"/>
        <function-ref name="set" scoped="" ref="0x41375310"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41376530" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41376530"/></type-interface>
      <instance>
        <interfacedef-ref qname="SoftwareAckConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="reportChannelError" scoped="" ref="0x41376708"/>
        <function-ref name="createAckPacket" scoped="" ref="0x413767e8"/>
        <function-ref name="requiresAckWait" scoped="" ref="0x413768c8"/>
        <function-ref name="isAckPacket" scoped="" ref="0x413769a8"/>
        <function-ref name="verifyAckPacket" scoped="" ref="0x41376a88"/>
        <function-ref name="getAckTimeout" scoped="" ref="0x41376b68"/>
        <function-ref name="setAckRequired" scoped="" ref="0x41376c48"/>
        <function-ref name="requiresAckReply" scoped="" ref="0x41376d28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x4134ab90" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x4134ab90"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x4134ad68"/>
        <function-ref name="header" scoped="" ref="0x4134ae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x4134a6b8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x4134a6b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4134a890"/>
        <function-ref name="ready" scoped="" ref="0x4134a970"/>
        <function-ref name="sendDone" scoped="" ref="0x4134aa50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41349010" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckLayerC.nc">
      <component-ref qname="RFA1RadioC.SoftwareAckLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41349010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x413491e8"/>
        <function-ref name="noAck" scoped="" ref="0x413492c8"/>
        <function-ref name="wasAcked" scoped="" ref="0x413493a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413702b0" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413702b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41370488"/>
        <function-ref name="stopDone" scoped="" ref="0x41370568"/>
        <function-ref name="start" scoped="" ref="0x41370648"/>
        <function-ref name="stop" scoped="" ref="0x41370728"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x41364150" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x41364150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x41364328"/>
        <function-ref name="request" scoped="" ref="0x41364408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413a96a0" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413a96a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413a9878"/>
        <function-ref name="ready" scoped="" ref="0x413a9958"/>
        <function-ref name="sendDone" scoped="" ref="0x413a9a38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413a9b98" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413a9b98"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413a9d70"/>
        <function-ref name="header" scoped="" ref="0x413a9e50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x41366070" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x41366070"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x41366248"/>
        <function-ref name="turnOn" scoped="" ref="0x41366328"/>
        <function-ref name="setChannel" scoped="" ref="0x41366408"/>
        <function-ref name="done" scoped="" ref="0x413664e8"/>
        <function-ref name="standby" scoped="" ref="0x413665c8"/>
        <function-ref name="getChannel" scoped="" ref="0x413666a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41364548" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41364548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41364720"/>
        <function-ref name="payloadLength" scoped="" ref="0x41364800"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413648e0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413649c0"/>
        <function-ref name="headerLength" scoped="" ref="0x41364aa0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41364b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x41363e68" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x41363e68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413a90e0"/>
        <function-ref name="turnOn" scoped="" ref="0x413a91c0"/>
        <function-ref name="setChannel" scoped="" ref="0x413a92a0"/>
        <function-ref name="done" scoped="" ref="0x413a9380"/>
        <function-ref name="standby" scoped="" ref="0x413a9460"/>
        <function-ref name="getChannel" scoped="" ref="0x413a9540"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x41364ce0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x41364ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x41364eb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41366cc0" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41366cc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41366e98"/>
        <function-ref name="header" scoped="" ref="0x41364010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x41363b30" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x41363b30"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41363d08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x41363060" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x41363060"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x41363238"/>
        <function-ref name="stopDone" scoped="" ref="0x41363318"/>
        <function-ref name="start" scoped="" ref="0x413633f8"/>
        <function-ref name="stop" scoped="" ref="0x413634d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413a8428" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413a8428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413a8600"/>
        <function-ref name="payloadLength" scoped="" ref="0x413a86e0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413a87c0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413a88a0"/>
        <function-ref name="headerLength" scoped="" ref="0x413a8980"/>
        <function-ref name="metadataLength" scoped="" ref="0x413a8a60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x41370d40" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x41370d40"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41370f18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x413a8bc0" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x413a8bc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x413a8d98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x41363638" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x41363638"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41363810"/>
        <function-ref name="cancel" scoped="" ref="0x413638f0"/>
        <function-ref name="sendDone" scoped="" ref="0x413639d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x413667e8" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x413667e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413669c0"/>
        <function-ref name="ready" scoped="" ref="0x41366aa0"/>
        <function-ref name="sendDone" scoped="" ref="0x41366b80"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x413a8010" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x413a8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x413a81e8"/>
        <function-ref name="request" scoped="" ref="0x413a82c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x41370868" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.CsmaLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x41370868"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41370a40"/>
        <function-ref name="cancel" scoped="" ref="0x41370b20"/>
        <function-ref name="sendDone" scoped="" ref="0x41370c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x413af338" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x413af338"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413af510"/>
        <function-ref name="get" scoped="" ref="0x413af5f0"/>
        <function-ref name="setValue" scoped="" ref="0x413af6d0"/>
        <function-ref name="set" scoped="" ref="0x413af7b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413b29f8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413b29f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413b2bd0"/>
        <function-ref name="payloadLength" scoped="" ref="0x413b2cb0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413b2d90"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413b2e70"/>
        <function-ref name="headerLength" scoped="" ref="0x413b0010"/>
        <function-ref name="metadataLength" scoped="" ref="0x413b00f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413b0b88" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413b0b88"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413b0d60"/>
        <function-ref name="payloadLength" scoped="" ref="0x413b0e40"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413b0f20"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413af018"/>
        <function-ref name="headerLength" scoped="" ref="0x413af0f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x413af1d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x413b3378" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x413b3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x413b3e78"/>
        <function-ref name="clear" scoped="" ref="0x413b2250"/>
        <function-ref name="isValid" scoped="" ref="0x413b3ac8"/>
        <function-ref name="set" scoped="" ref="0x413b2600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x413b0310" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x413b0310"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413b0958"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x413a3b10" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerC.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x413a3b10"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x413be6b8"/>
        <function-ref name="clear" scoped="" ref="0x413bea68"/>
        <function-ref name="isValid" scoped="" ref="0x413be308"/>
        <function-ref name="set" scoped="" ref="0x413bee18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeStampFlag" ref="0x41ec2af8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeStampFlag" scoped="" ref="0x41ec2af8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41ec2cd0"/>
        <function-ref name="get" scoped="" ref="0x41ec2db0"/>
        <function-ref name="setValue" scoped="" ref="0x41ec2e90"/>
        <function-ref name="set" scoped="" ref="0x41ec0010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41ec2330" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41ec2330"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41ec2508"/>
        <function-ref name="payloadLength" scoped="" ref="0x41ec25e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41ec26c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41ec27a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41ec2888"/>
        <function-ref name="metadataLength" scoped="" ref="0x41ec2968"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x41ebf430" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x41ebf430"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41ebf608"/>
        <function-ref name="payloadLength" scoped="" ref="0x41ebf6e8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41ebf7c8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41ebf8a8"/>
        <function-ref name="headerLength" scoped="" ref="0x41ebf988"/>
        <function-ref name="metadataLength" scoped="" ref="0x41ebfa68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x41ec4ca8" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x41ec4ca8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41ec37c0"/>
        <function-ref name="clear" scoped="" ref="0x41ec3b70"/>
        <function-ref name="isValid" scoped="" ref="0x41ec3410"/>
        <function-ref name="set" scoped="" ref="0x41ec3f20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeRadio" ref="0x41ec0200" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x41ec0200"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ec0848"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTimeMilli" ref="0x41ec0b08" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeMilli" scoped="" ref="0x41ec0b08"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41ebf200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x41ec54f0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TimeStampingLayerP.nc">
      <component-ref qname="RFA1RadioC.TimeStampingLayerC.TimeStampingLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x41ec54f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41ec4010"/>
        <function-ref name="clear" scoped="" ref="0x41ec43c0"/>
        <function-ref name="isValid" scoped="" ref="0x41ec5c40"/>
        <function-ref name="set" scoped="" ref="0x41ec4770"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x413c0b18" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTimeMilliC.nc">
      <component-ref qname="LocalTimeMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x413c0b18"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413bd200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x413bc010" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x413bc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413bc658"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x413bc9a8" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTimeMilliC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x413bc9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413bb120"/>
        <function-ref name="clearOverflow" scoped="" ref="0x413bb610"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x413bb398"/>
        <function-ref name="overflow" scoped="" ref="0x413bb888"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413ac650" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413ac650"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413ac828"/>
        <function-ref name="payloadLength" scoped="" ref="0x413ac908"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413ac9e8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413acac8"/>
        <function-ref name="headerLength" scoped="" ref="0x413acba8"/>
        <function-ref name="metadataLength" scoped="" ref="0x413acc88"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413ace18" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413ace18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413ab010"/>
        <function-ref name="payloadLength" scoped="" ref="0x413ab0f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413ab1d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413ab2b0"/>
        <function-ref name="headerLength" scoped="" ref="0x413ab390"/>
        <function-ref name="metadataLength" scoped="" ref="0x413ab470"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketFlag" ref="0x413ac088" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/MetadataFlagsLayerC.nc">
      <component-ref qname="RFA1RadioC.MetadataFlagsLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketFlag" scoped="" ref="0x413ac088"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413ac270"/>
        <function-ref name="get" scoped="" ref="0x413ac350"/>
        <function-ref name="setValue" scoped="" ref="0x413ac430"/>
        <function-ref name="set" scoped="" ref="0x413ac510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413e0618" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413e0618"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413e07f0"/>
        <function-ref name="stopDone" scoped="" ref="0x413e08d0"/>
        <function-ref name="start" scoped="" ref="0x413e09b0"/>
        <function-ref name="stop" scoped="" ref="0x413e0a90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x413de548" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x413de548"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x413de720"/>
        <function-ref name="request" scoped="" ref="0x413de800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413dcb60" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413dcb60"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413dcd38"/>
        <function-ref name="ready" scoped="" ref="0x413dce18"/>
        <function-ref name="sendDone" scoped="" ref="0x413dcef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413da090" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413da090"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413da268"/>
        <function-ref name="header" scoped="" ref="0x413da348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x413df468" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x413df468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413df640"/>
        <function-ref name="turnOn" scoped="" ref="0x413df720"/>
        <function-ref name="setChannel" scoped="" ref="0x413df800"/>
        <function-ref name="done" scoped="" ref="0x413df8e0"/>
        <function-ref name="standby" scoped="" ref="0x413df9c0"/>
        <function-ref name="getChannel" scoped="" ref="0x413dfaa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413de940" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413de940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413deb18"/>
        <function-ref name="payloadLength" scoped="" ref="0x413debf8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413decd8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413dedb8"/>
        <function-ref name="headerLength" scoped="" ref="0x413dee98"/>
        <function-ref name="metadataLength" scoped="" ref="0x413dd010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x413dc348" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x413dc348"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413dc5a0"/>
        <function-ref name="turnOn" scoped="" ref="0x413dc680"/>
        <function-ref name="setChannel" scoped="" ref="0x413dc760"/>
        <function-ref name="done" scoped="" ref="0x413dc840"/>
        <function-ref name="standby" scoped="" ref="0x413dc920"/>
        <function-ref name="getChannel" scoped="" ref="0x413dca00"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x413dd170" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x413dd170"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x413dd348"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x413de150" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x413de150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413de328"/>
        <function-ref name="header" scoped="" ref="0x413de408"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x413dc010" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x413dc010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413dc1e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x413dd4d8" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x413dd4d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413dd6b0"/>
        <function-ref name="stopDone" scoped="" ref="0x413dd790"/>
        <function-ref name="start" scoped="" ref="0x413dd870"/>
        <function-ref name="stop" scoped="" ref="0x413dd950"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413da8c0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413da8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413daa98"/>
        <function-ref name="payloadLength" scoped="" ref="0x413dab78"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413dac58"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413dad38"/>
        <function-ref name="headerLength" scoped="" ref="0x413dae18"/>
        <function-ref name="metadataLength" scoped="" ref="0x413daef8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x413df150" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x413df150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413df328"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x413d9090" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x413d9090"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x413d9268"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x413ddab0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x413ddab0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413ddc88"/>
        <function-ref name="cancel" scoped="" ref="0x413ddd68"/>
        <function-ref name="sendDone" scoped="" ref="0x413dde48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x413dfbe0" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x413dfbe0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413dfdb8"/>
        <function-ref name="ready" scoped="" ref="0x413dfe98"/>
        <function-ref name="sendDone" scoped="" ref="0x413de010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x413da4a8" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x413da4a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x413da680"/>
        <function-ref name="request" scoped="" ref="0x413da760"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x413e0bd0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.TrafficMonitorLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x413e0bd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413e0da8"/>
        <function-ref name="cancel" scoped="" ref="0x413e0e88"/>
        <function-ref name="sendDone" scoped="" ref="0x413df010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x413d7b70" loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x413d7b70"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d7d48"/>
        <function-ref name="stopDone" scoped="" ref="0x413d7e28"/>
        <function-ref name="start" scoped="" ref="0x413d7f08"/>
        <function-ref name="stop" scoped="" ref="0x413d6010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x413d5a20" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x413d5a20"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x413d5bf8"/>
        <function-ref name="request" scoped="" ref="0x413d5cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSend" ref="0x413d2010" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSend" scoped="" ref="0x413d2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413d21e8"/>
        <function-ref name="ready" scoped="" ref="0x413d22c8"/>
        <function-ref name="sendDone" scoped="" ref="0x413d23a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubReceive" ref="0x413d2508" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubReceive" scoped="" ref="0x413d2508"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413d26e0"/>
        <function-ref name="header" scoped="" ref="0x413d27c0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x413d6940" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x413d6940"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413d6b18"/>
        <function-ref name="turnOn" scoped="" ref="0x413d6bf8"/>
        <function-ref name="setChannel" scoped="" ref="0x413d6cd8"/>
        <function-ref name="done" scoped="" ref="0x413d6db8"/>
        <function-ref name="standby" scoped="" ref="0x413d6e98"/>
        <function-ref name="getChannel" scoped="" ref="0x413d5010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413d5e18" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413d5e18"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413d4010"/>
        <function-ref name="payloadLength" scoped="" ref="0x413d40f0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413d41d0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413d42b0"/>
        <function-ref name="headerLength" scoped="" ref="0x413d4390"/>
        <function-ref name="metadataLength" scoped="" ref="0x413d4470"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubState" ref="0x413d3760" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubState" scoped="" ref="0x413d3760"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413d39b8"/>
        <function-ref name="turnOn" scoped="" ref="0x413d3a98"/>
        <function-ref name="setChannel" scoped="" ref="0x413d3b78"/>
        <function-ref name="done" scoped="" ref="0x413d3c58"/>
        <function-ref name="standby" scoped="" ref="0x413d3d38"/>
        <function-ref name="getChannel" scoped="" ref="0x413d3e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UnconnectedConfig" ref="0x413d45d0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UnconnectedConfig" scoped="" ref="0x413d45d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x413d47a8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x413d5628" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x413d5628"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413d5800"/>
        <function-ref name="header" scoped="" ref="0x413d58e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareReceive" ref="0x413d3428" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareReceive" scoped="" ref="0x413d3428"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413d3600"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubControl" ref="0x413d4938" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubControl" scoped="" ref="0x413d4938"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x413d4b10"/>
        <function-ref name="stopDone" scoped="" ref="0x413d4bf0"/>
        <function-ref name="start" scoped="" ref="0x413d4cd0"/>
        <function-ref name="stop" scoped="" ref="0x413d4db0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubPacket" ref="0x413d2d38" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubPacket" scoped="" ref="0x413d2d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413d2f10"/>
        <function-ref name="payloadLength" scoped="" ref="0x413d0010"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413d00f0"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413d01d0"/>
        <function-ref name="headerLength" scoped="" ref="0x413d02b0"/>
        <function-ref name="metadataLength" scoped="" ref="0x413d0390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareReceive" ref="0x413d6628" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x413d6628"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413d6800"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x413d04f0" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x413d04f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="DummyConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="nothing" scoped="" ref="0x413d06c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubBareSend" ref="0x413d4f10" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubBareSend" scoped="" ref="0x413d4f10"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413d3108"/>
        <function-ref name="cancel" scoped="" ref="0x413d31e8"/>
        <function-ref name="sendDone" scoped="" ref="0x413d32c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x413d5150" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x413d5150"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413d5328"/>
        <function-ref name="ready" scoped="" ref="0x413d5408"/>
        <function-ref name="sendDone" scoped="" ref="0x413d54e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRadioCCA" ref="0x413d2920" loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRadioCCA" scoped="" ref="0x413d2920"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x413d2af8"/>
        <function-ref name="request" scoped="" ref="0x413d2bd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BareSend" ref="0x413d6150" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyLayerC.nc">
      <component-ref qname="RFA1RadioC.RadioDriverDebugLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x413d6150"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413d6328"/>
        <function-ref name="cancel" scoped="" ref="0x413d6408"/>
        <function-ref name="sendDone" scoped="" ref="0x413d64e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x41413a68" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x41413a68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x41413c40"/>
        <function-ref name="request" scoped="" ref="0x41413d20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x41411bf8" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x41411bf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414107f8"/>
        <function-ref name="get" scoped="" ref="0x41410538"/>
        <function-ref name="isSet" scoped="" ref="0x41410278"/>
        <function-ref name="set" scoped="" ref="0x41410ab8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x41405918" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x41405918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41405af0"/>
        <function-ref name="get" scoped="" ref="0x41405bd0"/>
        <function-ref name="setValue" scoped="" ref="0x41405cb0"/>
        <function-ref name="set" scoped="" ref="0x41405d90"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x414079f0" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x414079f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x414065b0"/>
        <function-ref name="clear" scoped="" ref="0x41406960"/>
        <function-ref name="isValid" scoped="" ref="0x41406200"/>
        <function-ref name="set" scoped="" ref="0x41406d10"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x413ce888" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x413ce888"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413cea60"/>
        <function-ref name="turnOn" scoped="" ref="0x413ceb40"/>
        <function-ref name="setChannel" scoped="" ref="0x413cec20"/>
        <function-ref name="done" scoped="" ref="0x413ced00"/>
        <function-ref name="standby" scoped="" ref="0x413cede0"/>
        <function-ref name="getChannel" scoped="" ref="0x413ceec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x41412888" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x41412888"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41411470"/>
        <function-ref name="get" scoped="" ref="0x414111b0"/>
        <function-ref name="isSet" scoped="" ref="0x41412ed0"/>
        <function-ref name="set" scoped="" ref="0x41411730"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x41413ed0" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x41413ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414120c0"/>
        <function-ref name="payloadLength" scoped="" ref="0x414121a0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41412280"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41412360"/>
        <function-ref name="headerLength" scoped="" ref="0x41412440"/>
        <function-ref name="metadataLength" scoped="" ref="0x41412520"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x41407168" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x41407168"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414073c0"/>
        <function-ref name="headerLength" scoped="" ref="0x414074a0"/>
        <function-ref name="metadataLength" scoped="" ref="0x41407580"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x41407660"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x41413618" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x41413618"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414137f0"/>
        <function-ref name="header" scoped="" ref="0x414138d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x4140a618" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x4140a618"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404bfbe0"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41409af0"/>
        <function-ref name="fired" scoped="" ref="0x414092c0"/>
        <function-ref name="startAt" scoped="" ref="0x414097b0"/>
        <function-ref name="isRunning" scoped="" ref="0x41409538"/>
        <function-ref name="getAlarm" scoped="" ref="0x41409d68"/>
        <function-ref name="start" scoped="" ref="0x4140ad68"/>
        <function-ref name="stop" scoped="" ref="0x41409048"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x4140e010" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x4140e010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4140ebd8"/>
        <function-ref name="get" scoped="" ref="0x4140e918"/>
        <function-ref name="isSet" scoped="" ref="0x4140e658"/>
        <function-ref name="set" scoped="" ref="0x4140ee98"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4140bb78" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4140bb78"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4140a200"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x414130c0" loc="44:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x414130c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41413298"/>
        <function-ref name="ready" scoped="" ref="0x41413378"/>
        <function-ref name="sendDone" scoped="" ref="0x41413458"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x4140d3d8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x4140d3d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4140b010"/>
        <function-ref name="get" scoped="" ref="0x4140dce0"/>
        <function-ref name="isSet" scoped="" ref="0x4140da20"/>
        <function-ref name="set" scoped="" ref="0x4140b2d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x41404010" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x41404010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414041e8"/>
        <function-ref name="get" scoped="" ref="0x414042c8"/>
        <function-ref name="setValue" scoped="" ref="0x414043a8"/>
        <function-ref name="set" scoped="" ref="0x41404488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x41405280" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x41405280"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41405458"/>
        <function-ref name="get" scoped="" ref="0x41405538"/>
        <function-ref name="setValue" scoped="" ref="0x41405618"/>
        <function-ref name="set" scoped="" ref="0x414056f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x4140b680" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerC.nc">
      <component-ref qname="RFA1DriverLayerC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x4140b680"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x4140b858"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioCCA" ref="0x413fedf8" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioCCA" scoped="" ref="0x413fedf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioCCA"/>
      </instance>
      <interface-functions>
        <function-ref name="done" scoped="" ref="0x413fd010"/>
        <function-ref name="request" scoped="" ref="0x413fd0f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x413fa010" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x413fa010"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fabd8"/>
        <function-ref name="get" scoped="" ref="0x413fa918"/>
        <function-ref name="isSet" scoped="" ref="0x413fa658"/>
        <function-ref name="set" scoped="" ref="0x413fae98"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BusyWait" ref="0x413f53f0" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BusyWait" scoped="" ref="0x413f53f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BusyWait"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404c2288"/>
            <typename><typedef-ref name="TMicro" ref="0x404c2450"/></typename>
          </type-tag>
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="wait" scoped="" ref="0x413f5b40"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SoftwareInit" ref="0x413ff878" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SoftwareInit" scoped="" ref="0x413ff878"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413ffa50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RSSIFlag" ref="0x41439778" loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RSSIFlag" scoped="" ref="0x41439778"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41439950"/>
        <function-ref name="get" scoped="" ref="0x41439a30"/>
        <function-ref name="setValue" scoped="" ref="0x41439b10"/>
        <function-ref name="set" scoped="" ref="0x41439bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketTimeStamp" ref="0x41438680" loc="77:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStamp" scoped="" ref="0x41438680"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x41437198"/>
        <function-ref name="clear" scoped="" ref="0x41437548"/>
        <function-ref name="isValid" scoped="" ref="0x41438dd0"/>
        <function-ref name="set" scoped="" ref="0x414378f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioState" ref="0x413ffbf8" loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioState" scoped="" ref="0x413ffbf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioState"/>
      </instance>
      <interface-functions>
        <function-ref name="turnOff" scoped="" ref="0x413ffdd0"/>
        <function-ref name="turnOn" scoped="" ref="0x413ffeb0"/>
        <function-ref name="setChannel" scoped="" ref="0x413fe010"/>
        <function-ref name="done" scoped="" ref="0x413fe0f0"/>
        <function-ref name="standby" scoped="" ref="0x413fe1d0"/>
        <function-ref name="getChannel" scoped="" ref="0x413fe2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LocalTime" ref="0x413f5ea8" loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x413f5ea8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x413f4508"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x413fdc40" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x413fdc40"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fc818"/>
        <function-ref name="get" scoped="" ref="0x413fc558"/>
        <function-ref name="isSet" scoped="" ref="0x413fc298"/>
        <function-ref name="set" scoped="" ref="0x413fcad8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioPacket" ref="0x413fd2a0" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioPacket" scoped="" ref="0x413fd2a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413fd478"/>
        <function-ref name="payloadLength" scoped="" ref="0x413fd558"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x413fd638"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x413fd718"/>
        <function-ref name="headerLength" scoped="" ref="0x413fd7f8"/>
        <function-ref name="metadataLength" scoped="" ref="0x413fd8d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Config" ref="0x4143a9d0" loc="71:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Config" scoped="" ref="0x4143a9d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RFA1DriverConfig"/>
      </instance>
      <interface-functions>
        <function-ref name="maxPayloadLength" scoped="" ref="0x4143aba8"/>
        <function-ref name="headerLength" scoped="" ref="0x4143ac88"/>
        <function-ref name="metadataLength" scoped="" ref="0x4143ad68"/>
        <function-ref name="requiresRssiCca" scoped="" ref="0x4143ae48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioReceive" ref="0x413fe9a8" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioReceive" scoped="" ref="0x413fe9a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x413feb80"/>
        <function-ref name="header" scoped="" ref="0x413fec60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="McuPowerOverride" ref="0x413f6de8" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerOverride" scoped="" ref="0x413f6de8"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerOverride"/>
      </instance>
      <interface-functions>
        <function-ref name="lowestState" scoped="" ref="0x413f5050"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeSyncOffset" ref="0x413f93f8" loc="58:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeSyncOffset" scoped="" ref="0x413f93f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413f8010"/>
        <function-ref name="get" scoped="" ref="0x413f9d00"/>
        <function-ref name="isSet" scoped="" ref="0x413f9a40"/>
        <function-ref name="set" scoped="" ref="0x413f82d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PlatformInit" ref="0x413ff218" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PlatformInit" scoped="" ref="0x413ff218"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x413ff3f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioSend" ref="0x413fe450" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioSend" scoped="" ref="0x413fe450"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x413fe628"/>
        <function-ref name="ready" scoped="" ref="0x413fe708"/>
        <function-ref name="sendDone" scoped="" ref="0x413fe7e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x413f87e0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x413f87e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x413f63b8"/>
        <function-ref name="get" scoped="" ref="0x413f60f8"/>
        <function-ref name="isSet" scoped="" ref="0x413f8e28"/>
        <function-ref name="set" scoped="" ref="0x413f6678"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="McuPowerState" ref="0x41435398" loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="McuPowerState" scoped="" ref="0x41435398"/></type-interface>
      <instance>
        <interfacedef-ref qname="McuPowerState"/>
      </instance>
      <interface-functions>
        <function-ref name="update" scoped="" ref="0x41435570"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SfdCapture" ref="0x413f4910" loc="69:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SfdCapture" scoped="" ref="0x413f4910"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCapture"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x4143a418"/>
        <function-ref name="test" scoped="" ref="0x413f27a0"/>
        <function-ref name="fired" scoped="" ref="0x413f2528"/>
        <function-ref name="get" scoped="" ref="0x413f2010"/>
        <function-ref name="reset" scoped="" ref="0x413f2a18"/>
        <function-ref name="getMode" scoped="" ref="0x4143a6b8"/>
        <function-ref name="isOn" scoped="" ref="0x4143a1a0"/>
        <function-ref name="set" scoped="" ref="0x413f2288"/>
        <function-ref name="start" scoped="" ref="0x413f2c90"/>
        <function-ref name="stop" scoped="" ref="0x413f2f08"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TimeSyncFlag" ref="0x41439e38" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TimeSyncFlag" scoped="" ref="0x41439e38"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41438050"/>
        <function-ref name="get" scoped="" ref="0x41438130"/>
        <function-ref name="setValue" scoped="" ref="0x41438210"/>
        <function-ref name="set" scoped="" ref="0x414382f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TransmitPowerFlag" ref="0x414390e0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TransmitPowerFlag" scoped="" ref="0x414390e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketFlag"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414392b8"/>
        <function-ref name="get" scoped="" ref="0x41439398"/>
        <function-ref name="setValue" scoped="" ref="0x41439478"/>
        <function-ref name="set" scoped="" ref="0x41439558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LinkPacketMetadata" ref="0x413f6a28" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LinkPacketMetadata" scoped="" ref="0x413f6a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LinkPacketMetadata"/>
      </instance>
      <interface-functions>
        <function-ref name="highChannelQuality" scoped="" ref="0x413f6c00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Tasklet" ref="0x41437d38" loc="79:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverLayerP.nc">
      <component-ref qname="RFA1DriverLayerP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Tasklet" scoped="" ref="0x41437d38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Tasklet"/>
      </instance>
      <interface-functions>
        <function-ref name="schedule" scoped="" ref="0x41437f10"/>
        <function-ref name="suspend" scoped="" ref="0x41435010"/>
        <function-ref name="resume" scoped="" ref="0x414350f0"/>
        <function-ref name="run" scoped="" ref="0x414351d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x41402c38" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/LocalTime62khzC.nc">
      <component-ref qname="LocalTime62khzC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x41402c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414a3298"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTime" ref="0x414a2058" loc="48:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTime" scoped="" ref="0x414a2058"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414a26a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Counter" ref="0x414a29f0" loc="49:/opt/tinyos-2.x/tos/lib/timer/CounterToLocalTimeC.nc">
      <component-ref qname="LocalTime62khzC.CounterToLocalTimeC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Counter" scoped="" ref="0x414a29f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Counter"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414a1200"/>
        <function-ref name="clearOverflow" scoped="" ref="0x414a16f0"/>
        <function-ref name="isOverflowPending" scoped="" ref="0x414a1478"/>
        <function-ref name="overflow" scoped="" ref="0x414a1968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x414a5378" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/Alarm62khz32C.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x414a5378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414a4840"/>
        <function-ref name="fired" scoped="" ref="0x414a4010"/>
        <function-ref name="startAt" scoped="" ref="0x414a4500"/>
        <function-ref name="isRunning" scoped="" ref="0x414a4288"/>
        <function-ref name="getAlarm" scoped="" ref="0x414a4ab8"/>
        <function-ref name="start" scoped="" ref="0x414a5ac8"/>
        <function-ref name="stop" scoped="" ref="0x414a5d68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCompare" ref="0x41f055e8" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCompare" scoped="" ref="0x41f055e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCompare"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41f02068"/>
        <function-ref name="test" scoped="" ref="0x41f033e8"/>
        <function-ref name="fired" scoped="" ref="0x41f03170"/>
        <function-ref name="force" scoped="" ref="0x41f02580"/>
        <function-ref name="get" scoped="" ref="0x41f05c30"/>
        <function-ref name="reset" scoped="" ref="0x41f03660"/>
        <function-ref name="getMode" scoped="" ref="0x41f02308"/>
        <function-ref name="isOn" scoped="" ref="0x41f03dc8"/>
        <function-ref name="set" scoped="" ref="0x41f05ea8"/>
        <function-ref name="start" scoped="" ref="0x41f038d8"/>
        <function-ref name="stop" scoped="" ref="0x41f03b50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Alarm" ref="0x41f09c40" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Alarm" scoped="" ref="0x41f09c40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Alarm"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="T62khz" ref="0x404c19c0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41f070f8"/>
        <function-ref name="fired" scoped="" ref="0x41f088b8"/>
        <function-ref name="startAt" scoped="" ref="0x41f08da8"/>
        <function-ref name="isRunning" scoped="" ref="0x41f08b30"/>
        <function-ref name="getAlarm" scoped="" ref="0x41f07370"/>
        <function-ref name="start" scoped="" ref="0x41f083a0"/>
        <function-ref name="stop" scoped="" ref="0x41f08640"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41f09808" loc="39:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41f09808"/></type-interface>
      <attribute-value>
        <attribute-ref name="exactlyonce" ref="0x4034f7d0"/>
        <value-structured>
          <type-tag size="I:0" alignment="I:1"><attribute-ref name="exactlyonce" ref="0x4034f7d0"/></type-tag>
        </value-structured>
      </attribute-value>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41f099e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="AtmegaCounter" ref="0x41f07640" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompareP.nc">
      <component-ref qname="RFA1DriverLayerC.Alarm62khz32C.AtmegaCompareP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="AtmegaCounter" scoped="" ref="0x41f07640"/></type-interface>
      <instance>
        <interfacedef-ref qname="AtmegaCounter"/>
        <arguments>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="setMode" scoped="" ref="0x41f050a8"/>
        <function-ref name="test" scoped="" ref="0x41f06438"/>
        <function-ref name="get" scoped="" ref="0x41f07c88"/>
        <function-ref name="reset" scoped="" ref="0x41f066b0"/>
        <function-ref name="getMode" scoped="" ref="0x41f05348"/>
        <function-ref name="overflow" scoped="" ref="0x41f061c0"/>
        <function-ref name="isOn" scoped="" ref="0x41f06e18"/>
        <function-ref name="set" scoped="" ref="0x41f07f00"/>
        <function-ref name="start" scoped="" ref="0x41f06928"/>
        <function-ref name="stop" scoped="" ref="0x41f06ba0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x414ca528" loc="32:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x414ca528"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414ca700"/>
        <function-ref name="stopDone" scoped="" ref="0x414ca7e0"/>
        <function-ref name="start" scoped="" ref="0x414ca8c0"/>
        <function-ref name="stop" scoped="" ref="0x414ca9a0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x414c8010" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x414c8010"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x414ce998"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x414ceda0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414c88d8"/>
        <function-ref name="get" scoped="" ref="0x414c8638"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x414cab28" loc="33:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchC.nc">
      <component-ref qname="IPDispatchC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x414cab28"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414cad00"/>
        <function-ref name="recv" scoped="" ref="0x414cade0"/>
        <function-ref name="sendDone" scoped="" ref="0x414caec0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x414c0c78" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x414c0c78"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414c0e50"/>
        <function-ref name="stopDone" scoped="" ref="0x414bf010"/>
        <function-ref name="start" scoped="" ref="0x414bf0f0"/>
        <function-ref name="stop" scoped="" ref="0x414bf1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x414be568" loc="52:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x414be568"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x414be740"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendInfoPool" ref="0x414bae40" loc="80:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendInfoPool" scoped="" ref="0x414bae40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414b5010"/>
        <function-ref name="maxSize" scoped="" ref="0x414b7968"/>
        <function-ref name="empty" scoped="" ref="0x414b74b8"/>
        <function-ref name="put" scoped="" ref="0x414b7bc0"/>
        <function-ref name="size" scoped="" ref="0x414b7710"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x414bf9f8" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x414bf9f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:9" alignment="I:1"><nx_struct-ref ref="0x414ce998"/>
            <typename><typedef-ref name="ip_statistics_t" ref="0x414ceda0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414be2e8"/>
        <function-ref name="get" scoped="" ref="0x414be048"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RadioControl" ref="0x414be9b0" loc="56:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioControl" scoped="" ref="0x414be9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x414beb88"/>
        <function-ref name="stopDone" scoped="" ref="0x414bec68"/>
        <function-ref name="start" scoped="" ref="0x414bed48"/>
        <function-ref name="stop" scoped="" ref="0x414bee28"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPLower" ref="0x414bf368" loc="46:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPLower" scoped="" ref="0x414bf368"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPLower"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414bf540"/>
        <function-ref name="recv" scoped="" ref="0x414bf620"/>
        <function-ref name="sendDone" scoped="" ref="0x414bf700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ReadLqi" ref="0x414b9408" loc="74:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadLqi" scoped="" ref="0x414b9408"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x414b95e0"/>
        <function-ref name="readLqi" scoped="" ref="0x414b96c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="LowPowerListening" ref="0x414bb010" loc="76:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x414bb010"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x414bb1e8"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x414bb2c8"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x414bb3a8"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x414bb488"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x414aef20" loc="82:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x414aef20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x414b3c68"/>
        <function-ref name="enqueue" scoped="" ref="0x414ad380"/>
        <function-ref name="element" scoped="" ref="0x414ad6d0"/>
        <function-ref name="maxSize" scoped="" ref="0x414b3a10"/>
        <function-ref name="dequeue" scoped="" ref="0x414ad010"/>
        <function-ref name="empty" scoped="" ref="0x414b3560"/>
        <function-ref name="size" scoped="" ref="0x414b37b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ExpireTimer" ref="0x414adbc8" loc="85:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ExpireTimer" scoped="" ref="0x414adbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x414f76d8"/>
        <function-ref name="fired" scoped="" ref="0x414f8970"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x414f7098"/>
        <function-ref name="isOneShot" scoped="" ref="0x414f8e20"/>
        <function-ref name="getdt" scoped="" ref="0x414f7b88"/>
        <function-ref name="gett0" scoped="" ref="0x414f7930"/>
        <function-ref name="isRunning" scoped="" ref="0x414f8bc8"/>
        <function-ref name="startPeriodic" scoped="" ref="0x414f8218"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x414f73b8"/>
        <function-ref name="startOneShot" scoped="" ref="0x414f8498"/>
        <function-ref name="stop" scoped="" ref="0x414f8718"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BareReceive" ref="0x414bdcd0" loc="62:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareReceive" scoped="" ref="0x414bdcd0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareReceive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x414bdea8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x414f6d90" loc="90:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x414f6d90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x414f4010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="NeighborDiscovery" ref="0x414bc110" loc="72:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="NeighborDiscovery" scoped="" ref="0x414bc110"/></type-interface>
      <instance>
        <interfacedef-ref qname="NeighborDiscovery"/>
      </instance>
      <interface-functions>
        <function-ref name="resolveAddress" scoped="" ref="0x414bc2e8"/>
        <function-ref name="matchContext" scoped="" ref="0x414bc3c8"/>
        <function-ref name="getContext" scoped="" ref="0x414bc4a8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendTask" ref="0x4161e5e0" loc="642:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendTask" scoped="" ref="0x4161e5e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4161e7b8"/>
        <function-ref name="runTask" scoped="" ref="0x4161e898"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="FragPool" ref="0x414bb770" loc="79:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="FragPool" scoped="" ref="0x414bb770"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
            <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414ba8c8"/>
        <function-ref name="maxSize" scoped="" ref="0x414ba2e0"/>
        <function-ref name="empty" scoped="" ref="0x414bbe18"/>
        <function-ref name="put" scoped="" ref="0x414ba538"/>
        <function-ref name="size" scoped="" ref="0x414ba088"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x414f7dc8" loc="87:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x414f7dc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x414f6010"/>
        <function-ref name="led0Toggle" scoped="" ref="0x414f60f0"/>
        <function-ref name="led1On" scoped="" ref="0x414f61d0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x414f62b0"/>
        <function-ref name="led3Off" scoped="" ref="0x414f6390"/>
        <function-ref name="led2Toggle" scoped="" ref="0x414f6470"/>
        <function-ref name="get" scoped="" ref="0x414f6550"/>
        <function-ref name="led1Off" scoped="" ref="0x414f6630"/>
        <function-ref name="led3Toggle" scoped="" ref="0x414f6710"/>
        <function-ref name="led3On" scoped="" ref="0x414f67f0"/>
        <function-ref name="led0On" scoped="" ref="0x414f68d0"/>
        <function-ref name="led2Off" scoped="" ref="0x414f69b0"/>
        <function-ref name="led2On" scoped="" ref="0x414f6a90"/>
        <function-ref name="set" scoped="" ref="0x414f6bf0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BarePacket" ref="0x414bd098" loc="58:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BarePacket" scoped="" ref="0x414bd098"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x414bd270"/>
        <function-ref name="payloadLength" scoped="" ref="0x414bd350"/>
        <function-ref name="getPayload" scoped="" ref="0x414bd430"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x414bd510"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x414bd5f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="BareSend" ref="0x414bd788" loc="61:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BareSend" scoped="" ref="0x414bd788"/></type-interface>
      <instance>
        <interfacedef-ref qname="BareSend"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x414bd960"/>
        <function-ref name="cancel" scoped="" ref="0x414bda40"/>
        <function-ref name="sendDone" scoped="" ref="0x414bdb20"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PacketLink" ref="0x414b9868" loc="75:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x414b9868"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x414b9a40"/>
        <function-ref name="setRetries" scoped="" ref="0x414b9b20"/>
        <function-ref name="getRetries" scoped="" ref="0x414b9c00"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x414b9ce0"/>
        <function-ref name="wasDelivered" scoped="" ref="0x414b9dc0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendEntryPool" ref="0x414b5598" loc="81:/opt/tinyos-2.x/tos/lib/net/blip/IPDispatchP.nc">
      <component-ref qname="IPDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendEntryPool" scoped="" ref="0x414b5598"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x414b4670"/>
        <function-ref name="maxSize" scoped="" ref="0x414b4088"/>
        <function-ref name="empty" scoped="" ref="0x414b5bc0"/>
        <function-ref name="put" scoped="" ref="0x414b42e0"/>
        <function-ref name="size" scoped="" ref="0x414b5e18"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x416566a8" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/ReadLqiC.nc">
      <component-ref qname="ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadLqi" scoped="" ref="0x416566a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x41656880"/>
        <function-ref name="readLqi" scoped="" ref="0x41656960"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ReadLqi" ref="0x41650408" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <component-ref qname="RFA1ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ReadLqi" scoped="" ref="0x41650408"/></type-interface>
      <instance>
        <interfacedef-ref qname="ReadLqi"/>
      </instance>
      <interface-functions>
        <function-ref name="readRssi" scoped="" ref="0x416505e0"/>
        <function-ref name="readLqi" scoped="" ref="0x416506c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubLqi" ref="0x416509c8" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <component-ref qname="RFA1ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubLqi" scoped="" ref="0x416509c8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4164f5c8"/>
        <function-ref name="get" scoped="" ref="0x4164f308"/>
        <function-ref name="isSet" scoped="" ref="0x4164f048"/>
        <function-ref name="set" scoped="" ref="0x4164f888"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubRssi" ref="0x4164fd50" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/platform/RFA1ReadLqiC.nc">
      <component-ref qname="RFA1ReadLqiC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubRssi" scoped="" ref="0x4164fd50"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4164d960"/>
        <function-ref name="get" scoped="" ref="0x4164d6a0"/>
        <function-ref name="isSet" scoped="" ref="0x4164d3e0"/>
        <function-ref name="set" scoped="" ref="0x4164dc20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x41653400" loc="45:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x41653400"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x416535d8"/>
        <function-ref name="stopDone" scoped="" ref="0x416536b8"/>
        <function-ref name="start" scoped="" ref="0x41653798"/>
        <function-ref name="stop" scoped="" ref="0x41653878"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketRSSI" ref="0x41641918" loc="63:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketRSSI" scoped="" ref="0x41641918"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4163f590"/>
        <function-ref name="get" scoped="" ref="0x4163f2d0"/>
        <function-ref name="isSet" scoped="" ref="0x4163f010"/>
        <function-ref name="set" scoped="" ref="0x4163f850"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendResource" ref="0x41647ec0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendResource" scoped="" ref="0x41647ec0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Resource"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="release" scoped="" ref="0x416460c0"/>
        <function-ref name="immediateRequest" scoped="" ref="0x416461a0"/>
        <function-ref name="request" scoped="" ref="0x41646280"/>
        <function-ref name="granted" scoped="" ref="0x41646360"/>
        <function-ref name="isOwner" scoped="" ref="0x41646440"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SendNotifier" ref="0x416485e0" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendNotifier" scoped="" ref="0x416485e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="SendNotifier"/>
      </instance>
      <interface-functions>
        <function-ref name="aboutToSend" scoped="" ref="0x416487b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Packet" ref="0x41647430" loc="52:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Packet" scoped="" ref="0x41647430"/></type-interface>
      <instance>
        <interfacedef-ref qname="Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41647608"/>
        <function-ref name="payloadLength" scoped="" ref="0x416476e8"/>
        <function-ref name="getPayload" scoped="" ref="0x416477c8"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x416478a8"/>
        <function-ref name="setPayloadLength" scoped="" ref="0x41647988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Packet" ref="0x41648980" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Packet" scoped="" ref="0x41648980"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Packet"/>
      </instance>
      <interface-functions>
        <function-ref name="source" scoped="" ref="0x41648b58"/>
        <function-ref name="address" scoped="" ref="0x41648c38"/>
        <function-ref name="destination" scoped="" ref="0x41648d18"/>
        <function-ref name="setSource" scoped="" ref="0x41648df8"/>
        <function-ref name="setDestination" scoped="" ref="0x41648ed8"/>
        <function-ref name="pan" scoped="" ref="0x41647010"/>
        <function-ref name="setPan" scoped="" ref="0x416470f0"/>
        <function-ref name="isForMe" scoped="" ref="0x416471d0"/>
        <function-ref name="localPan" scoped="" ref="0x416472b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTransmitPower" ref="0x41642530" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTransmitPower" scoped="" ref="0x41642530"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41641190"/>
        <function-ref name="get" scoped="" ref="0x41642eb8"/>
        <function-ref name="isSet" scoped="" ref="0x41642bf8"/>
        <function-ref name="set" scoped="" ref="0x41641450"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LowPowerListening" ref="0x41646be8" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LowPowerListening" scoped="" ref="0x41646be8"/></type-interface>
      <instance>
        <interfacedef-ref qname="LowPowerListening"/>
      </instance>
      <interface-functions>
        <function-ref name="setRemoteWakeupInterval" scoped="" ref="0x41646dc0"/>
        <function-ref name="getRemoteWakeupInterval" scoped="" ref="0x41646ea0"/>
        <function-ref name="getLocalWakeupInterval" scoped="" ref="0x41645010"/>
        <function-ref name="setLocalWakeupInterval" scoped="" ref="0x416450f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampRadio" ref="0x4163e8e0" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampRadio" scoped="" ref="0x4163e8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4163d3f8"/>
        <function-ref name="clear" scoped="" ref="0x4163d7a8"/>
        <function-ref name="isValid" scoped="" ref="0x4163d048"/>
        <function-ref name="set" scoped="" ref="0x4163db58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="LocalTimeRadio" ref="0x4163fd28" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="LocalTimeRadio" scoped="" ref="0x4163fd28"/></type-interface>
      <instance>
        <interfacedef-ref qname="LocalTime"/>
        <arguments>
          <type-tag size="I:0" alignment="I:1"><struct-ref name="T62khz" ref="0x404c1818"/>
            <typename><typedef-ref name="TRadio" ref="0x404bf938"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4163e390"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLinkQuality" ref="0x416430e0" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLinkQuality" scoped="" ref="0x416430e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketField"/>
        <arguments>
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41643ca8"/>
        <function-ref name="get" scoped="" ref="0x416439e8"/>
        <function-ref name="isSet" scoped="" ref="0x41643728"/>
        <function-ref name="set" scoped="" ref="0x41642010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketAcknowledgements" ref="0x41646660" loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketAcknowledgements" scoped="" ref="0x41646660"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketAcknowledgements"/>
      </instance>
      <interface-functions>
        <function-ref name="requestAck" scoped="" ref="0x41646838"/>
        <function-ref name="noAck" scoped="" ref="0x41646918"/>
        <function-ref name="wasAcked" scoped="" ref="0x416469f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Send" ref="0x41653a28" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Send" scoped="" ref="0x41653a28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Ieee154Send"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41653c00"/>
        <function-ref name="getPayload" scoped="" ref="0x41653ce0"/>
        <function-ref name="maxPayloadLength" scoped="" ref="0x41653dc0"/>
        <function-ref name="cancel" scoped="" ref="0x41653ea0"/>
        <function-ref name="sendDone" scoped="" ref="0x41648010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketLink" ref="0x41645298" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketLink" scoped="" ref="0x41645298"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketLink"/>
      </instance>
      <interface-functions>
        <function-ref name="getRetryDelay" scoped="" ref="0x41645470"/>
        <function-ref name="setRetries" scoped="" ref="0x41645550"/>
        <function-ref name="getRetries" scoped="" ref="0x41645630"/>
        <function-ref name="setRetryDelay" scoped="" ref="0x41645710"/>
        <function-ref name="wasDelivered" scoped="" ref="0x416457f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RadioChannel" ref="0x416459b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RadioChannel" scoped="" ref="0x416459b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RadioChannel"/>
      </instance>
      <interface-functions>
        <function-ref name="setChannelDone" scoped="" ref="0x41645b88"/>
        <function-ref name="setChannel" scoped="" ref="0x41645c68"/>
        <function-ref name="getChannel" scoped="" ref="0x41645d48"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Ieee154Receive" ref="0x41648248" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Ieee154Receive" scoped="" ref="0x41648248"/></type-interface>
      <instance>
        <interfacedef-ref qname="Receive"/>
      </instance>
      <interface-functions>
        <function-ref name="receive" scoped="" ref="0x41648420"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="PacketTimeStampMilli" ref="0x4163b2a8" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1Ieee154MessageC.nc">
      <component-ref qname="RFA1Ieee154MessageC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PacketTimeStampMilli" scoped="" ref="0x4163b2a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="timestamp" scoped="" ref="0x4163bda8"/>
        <function-ref name="clear" scoped="" ref="0x4163a170"/>
        <function-ref name="isValid" scoped="" ref="0x4163b9f8"/>
        <function-ref name="set" scoped="" ref="0x4163a520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41655360" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="IPDispatchC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41655360"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41654e38"/>
        <function-ref name="fired" scoped="" ref="0x416540f0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x416547f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x416545a0"/>
        <function-ref name="getdt" scoped="" ref="0x41682310"/>
        <function-ref name="gett0" scoped="" ref="0x416820b8"/>
        <function-ref name="isRunning" scoped="" ref="0x41654348"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41655988"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41654b18"/>
        <function-ref name="startOneShot" scoped="" ref="0x41655c08"/>
        <function-ref name="stop" scoped="" ref="0x41655e88"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4167f828" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.FragPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4167f828"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
            <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4167e8f8"/>
        <function-ref name="maxSize" scoped="" ref="0x4167e310"/>
        <function-ref name="empty" scoped="" ref="0x4167fe50"/>
        <function-ref name="put" scoped="" ref="0x4167e568"/>
        <function-ref name="size" scoped="" ref="0x4167e0b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41eef108" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41eef108"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
            <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41eed1d8"/>
        <function-ref name="maxSize" scoped="" ref="0x41eefbe0"/>
        <function-ref name="empty" scoped="" ref="0x41eef730"/>
        <function-ref name="put" scoped="" ref="0x41eefe38"/>
        <function-ref name="size" scoped="" ref="0x41eef988"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41ef0d48" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.FragPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41ef0d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41ef0f20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41668b60" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendEntryPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41668b60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41667c78"/>
        <function-ref name="maxSize" scoped="" ref="0x41667690"/>
        <function-ref name="empty" scoped="" ref="0x416671e0"/>
        <function-ref name="put" scoped="" ref="0x416678e8"/>
        <function-ref name="size" scoped="" ref="0x41667438"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41f5a888" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41f5a888"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41f59970"/>
        <function-ref name="maxSize" scoped="" ref="0x41f59388"/>
        <function-ref name="empty" scoped="" ref="0x41f5aeb0"/>
        <function-ref name="put" scoped="" ref="0x41f595e0"/>
        <function-ref name="size" scoped="" ref="0x41f59130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41f5a4e0" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendEntryPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41f5a4e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41f5a6b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x41665928" loc="43:/opt/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="IPDispatchC.QueueC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x41665928"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="send_entry" ref="0x404d7158"/></type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x41664718"/>
        <function-ref name="enqueue" scoped="" ref="0x41664df8"/>
        <function-ref name="element" scoped="" ref="0x416a8188"/>
        <function-ref name="maxSize" scoped="" ref="0x416644c0"/>
        <function-ref name="dequeue" scoped="" ref="0x41664a88"/>
        <function-ref name="empty" scoped="" ref="0x41664010"/>
        <function-ref name="size" scoped="" ref="0x41664268"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416a7468" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPDispatchC.SendInfoPool"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416a7468"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416a55f8"/>
        <function-ref name="maxSize" scoped="" ref="0x416a5010"/>
        <function-ref name="empty" scoped="" ref="0x416a7a90"/>
        <function-ref name="put" scoped="" ref="0x416a5268"/>
        <function-ref name="size" scoped="" ref="0x416a7ce8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41f4a868" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41f4a868"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41f49950"/>
        <function-ref name="maxSize" scoped="" ref="0x41f49368"/>
        <function-ref name="empty" scoped="" ref="0x41f4ae90"/>
        <function-ref name="put" scoped="" ref="0x41f495c0"/>
        <function-ref name="size" scoped="" ref="0x41f49110"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41f4a4c0" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPDispatchC.SendInfoPool.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41f4a4c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41f4a698"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="SplitControl" ref="0x416a12a8" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SplitControl" scoped="" ref="0x416a12a8"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x416a1480"/>
        <function-ref name="stopDone" scoped="" ref="0x416a1560"/>
        <function-ref name="start" scoped="" ref="0x416a1640"/>
        <function-ref name="stop" scoped="" ref="0x416a1720"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SubSplitControl" ref="0x4169e368" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SubSplitControl" scoped="" ref="0x4169e368"/></type-interface>
      <instance>
        <interfacedef-ref qname="SplitControl"/>
      </instance>
      <interface-functions>
        <function-ref name="startDone" scoped="" ref="0x4169e540"/>
        <function-ref name="stopDone" scoped="" ref="0x4169e620"/>
        <function-ref name="start" scoped="" ref="0x4169e700"/>
        <function-ref name="stop" scoped="" ref="0x4169e7e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x4169e980" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x4169e980"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x4169eb58"/>
        <function-ref name="changed" scoped="" ref="0x4169ec38"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x4169ed18"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x4169edf8"/>
        <function-ref name="setSource" scoped="" ref="0x4169eed8"/>
        <function-ref name="removeAddress" scoped="" ref="0x4169d010"/>
        <function-ref name="setAddress" scoped="" ref="0x4169d0f0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x4169d1d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RoutingControl" ref="0x416a1e08" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RoutingControl" scoped="" ref="0x416a1e08"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4169e010"/>
        <function-ref name="stop" scoped="" ref="0x4169e0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="StdControl" ref="0x416a18f8" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/IPStackControlP.nc">
      <component-ref qname="IPStackControlP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x416a18f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416a1ad0"/>
        <function-ref name="stop" scoped="" ref="0x416a1bb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMP_IP" ref="0x416892c0" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMP_IP" scoped="" ref="0x416892c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41689498"/>
        <function-ref name="recv" scoped="" ref="0x41689578"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x41689b68" loc="54:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x41689b68"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41689d40"/>
        <function-ref name="changed" scoped="" ref="0x41689e20"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x41689f00"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x41688010"/>
        <function-ref name="setSource" scoped="" ref="0x416880f0"/>
        <function-ref name="removeAddress" scoped="" ref="0x416881d0"/>
        <function-ref name="setAddress" scoped="" ref="0x416882b0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41688390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41688500" loc="55:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41688500"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x416886d8"/>
        <function-ref name="led0Toggle" scoped="" ref="0x416887b8"/>
        <function-ref name="led1On" scoped="" ref="0x41688898"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41688978"/>
        <function-ref name="led3Off" scoped="" ref="0x41688a58"/>
        <function-ref name="led2Toggle" scoped="" ref="0x41688b38"/>
        <function-ref name="get" scoped="" ref="0x41688c18"/>
        <function-ref name="led1Off" scoped="" ref="0x41688cf8"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41688dd8"/>
        <function-ref name="led3On" scoped="" ref="0x41688eb8"/>
        <function-ref name="led0On" scoped="" ref="0x41687010"/>
        <function-ref name="led2Off" scoped="" ref="0x416870f0"/>
        <function-ref name="led2On" scoped="" ref="0x416871d0"/>
        <function-ref name="set" scoped="" ref="0x41687330"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x41689710" loc="53:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCoreP.nc">
      <component-ref qname="ICMPCoreP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x41689710"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416898e8"/>
        <function-ref name="recv" scoped="" ref="0x416899c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IPPacket" ref="0x416c71c0" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/IPPacketC.nc">
      <component-ref qname="IPPacketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x416c71c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x416c7398"/>
        <function-ref name="delTLV" scoped="" ref="0x416c7478"/>
        <function-ref name="findTLV" scoped="" ref="0x416c7558"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x416c9c28" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x416c9c28"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40469010"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x416b9d10"/>
        <function-ref name="maxSize" scoped="" ref="0x416b9728"/>
        <function-ref name="empty" scoped="" ref="0x416b9278"/>
        <function-ref name="put" scoped="" ref="0x416b9980"/>
        <function-ref name="size" scoped="" ref="0x416b94d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x41f40100" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x41f40100"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:8" alignment="I:1"><struct-ref name="in6_iid" ref="0x40469010"/></type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41f3e1d8"/>
        <function-ref name="maxSize" scoped="" ref="0x41f40bd8"/>
        <function-ref name="empty" scoped="" ref="0x41f40728"/>
        <function-ref name="put" scoped="" ref="0x41f40e30"/>
        <function-ref name="size" scoped="" ref="0x41f40980"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x41f41d20" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="IPStackC.FwdAddrPoolC.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x41f41d20"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41f41ef8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x416b7c90" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <component-ref qname="NoDhcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x416b7c90"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x416b7e68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x416b4040" loc="45:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/NoDhcpC.nc">
      <component-ref qname="NoDhcpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x416b4040"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x416b4218"/>
        <function-ref name="changed" scoped="" ref="0x416b42f8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x416b43d8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x416b44b8"/>
        <function-ref name="setSource" scoped="" ref="0x416b4598"/>
        <function-ref name="removeAddress" scoped="" ref="0x416b4678"/>
        <function-ref name="setAddress" scoped="" ref="0x416b4758"/>
        <function-ref name="isLLAddress" scoped="" ref="0x416b4838"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x41701c50" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x41701c50"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x41701e28"/>
        <function-ref name="setRoot" scoped="" ref="0x41701f08"/>
        <function-ref name="unsetRoot" scoped="" ref="0x416fe010"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x417017e8" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingC.nc">
      <component-ref qname="RPLRoutingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x417017e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x417019c0"/>
        <function-ref name="stop" scoped="" ref="0x41701aa0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRank" ref="0x416f4468" loc="76:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRank" scoped="" ref="0x416f4468"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x416f4640"/>
        <function-ref name="isRoot" scoped="" ref="0x416f4720"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x416f4800"/>
        <function-ref name="hasParent" scoped="" ref="0x416f48e0"/>
        <function-ref name="validInstance" scoped="" ref="0x416f49c0"/>
        <function-ref name="declareRoot" scoped="" ref="0x416f4aa0"/>
        <function-ref name="getRank" scoped="" ref="0x416f4b80"/>
        <function-ref name="getEtx" scoped="" ref="0x416f4c60"/>
        <function-ref name="isLeaf" scoped="" ref="0x416f4d40"/>
        <function-ref name="compareAddr" scoped="" ref="0x416f4e20"/>
        <function-ref name="isParent" scoped="" ref="0x416f4f00"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x416fb010"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x416fb0f0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x416fb250"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x416fbba8" loc="80:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMP_RA" scoped="" ref="0x416fbba8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416fbd80"/>
        <function-ref name="recv" scoped="" ref="0x416fbe60"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x416fb3f8" loc="77:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x416fb3f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x416fb5d0"/>
        <function-ref name="stop" scoped="" ref="0x416fb6b0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x416fe6d0" loc="75:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankC.nc">
      <component-ref qname="RPLRankC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x416fe6d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x416fe8a8"/>
        <function-ref name="recv" scoped="" ref="0x416fe988"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x4171fbc8" loc="95:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x4171fbc8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x4171fda0"/>
        <function-ref name="initiate" scoped="" ref="0x4171fe80"/>
        <function-ref name="linkResult" scoped="" ref="0x4171e010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x41725a10" loc="93:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x41725a10"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41725be8"/>
        <function-ref name="changed" scoped="" ref="0x41725cc8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x41725da8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x41725e88"/>
        <function-ref name="setSource" scoped="" ref="0x4171f010"/>
        <function-ref name="removeAddress" scoped="" ref="0x4171f0f0"/>
        <function-ref name="setAddress" scoped="" ref="0x4171f1d0"/>
        <function-ref name="isLLAddress" scoped="" ref="0x4171f2b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x41728ed0" loc="89:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO" scoped="" ref="0x41728ed0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x417270c0"/>
        <function-ref name="recv" scoped="" ref="0x417271a0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLOF" ref="0x41719d48" loc="96:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLOF" scoped="" ref="0x41719d48"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x41719f20"/>
        <function-ref name="OCP" scoped="" ref="0x4171d018"/>
        <function-ref name="objectSupported" scoped="" ref="0x4171d0f8"/>
        <function-ref name="getRank" scoped="" ref="0x4171d1d8"/>
        <function-ref name="resetRank" scoped="" ref="0x4171d2b8"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x4171d398"/>
        <function-ref name="getObjectValue" scoped="" ref="0x4171d478"/>
        <function-ref name="getParent" scoped="" ref="0x4171d558"/>
        <function-ref name="recalculateRank" scoped="" ref="0x4171d638"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41726a40" loc="92:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41726a40"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41726c18"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41726cf8"/>
        <function-ref name="led1On" scoped="" ref="0x41726dd8"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41726eb8"/>
        <function-ref name="led3Off" scoped="" ref="0x41725010"/>
        <function-ref name="led2Toggle" scoped="" ref="0x417250f0"/>
        <function-ref name="get" scoped="" ref="0x417251d0"/>
        <function-ref name="led1Off" scoped="" ref="0x417252b0"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41725390"/>
        <function-ref name="led3On" scoped="" ref="0x41725470"/>
        <function-ref name="led0On" scoped="" ref="0x41725550"/>
        <function-ref name="led2Off" scoped="" ref="0x41725630"/>
        <function-ref name="led2On" scoped="" ref="0x41725710"/>
        <function-ref name="set" scoped="" ref="0x41725870"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRankInfo" ref="0x4172a970" loc="83:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRankInfo" scoped="" ref="0x4172a970"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x4172ab48"/>
        <function-ref name="isRoot" scoped="" ref="0x4172ac28"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x4172ad08"/>
        <function-ref name="hasParent" scoped="" ref="0x4172ade8"/>
        <function-ref name="validInstance" scoped="" ref="0x4172aec8"/>
        <function-ref name="declareRoot" scoped="" ref="0x41729010"/>
        <function-ref name="getRank" scoped="" ref="0x417290f0"/>
        <function-ref name="getEtx" scoped="" ref="0x417291d0"/>
        <function-ref name="isLeaf" scoped="" ref="0x417292b0"/>
        <function-ref name="compareAddr" scoped="" ref="0x41729390"/>
        <function-ref name="isParent" scoped="" ref="0x41729470"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x41729550"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x41729630"/>
        <function-ref name="cancelRoot" scoped="" ref="0x41729790"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLParentTable" ref="0x41728b00" loc="86:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLParentTable" scoped="" ref="0x41728b00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x41728cd8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RouteInfo" ref="0x41720cf8" loc="91:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RouteInfo" scoped="" ref="0x41720cf8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x41720ed0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x417267f0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x417268d0"/>
        <function-ref name="hasDODAG" scoped="" ref="0x417261d0"/>
        <function-ref name="validInstance" scoped="" ref="0x417262b0"/>
        <function-ref name="inconsistency" scoped="" ref="0x41726390"/>
        <function-ref name="getRank" scoped="" ref="0x41726470"/>
        <function-ref name="getDodagId" scoped="" ref="0x41726550"/>
        <function-ref name="getDTSN" scoped="" ref="0x417260f0"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x41726630"/>
        <function-ref name="getInstanceID" scoped="" ref="0x41726710"/>
        <function-ref name="setDTSN" scoped="" ref="0x41726010"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x4171f488" loc="94:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x4171f488"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x4171f660"/>
        <function-ref name="lookupRoute" scoped="" ref="0x4171f740"/>
        <function-ref name="delRoute" scoped="" ref="0x4171f820"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x4171f900"/>
        <function-ref name="addRoute" scoped="" ref="0x4171f9e0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x41727338" loc="90:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x41727338"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x41727510"/>
        <function-ref name="delTLV" scoped="" ref="0x417275f0"/>
        <function-ref name="findTLV" scoped="" ref="0x417276d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="newParentSearch" ref="0x417479a0" loc="362:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="newParentSearch" scoped="" ref="0x417479a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x41747bf8"/>
        <function-ref name="runTask" scoped="" ref="0x41747cd8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x41729938" loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x41729938"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x41729b10"/>
        <function-ref name="stop" scoped="" ref="0x41729bf0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP_DIO_Filter" ref="0x41729df0" loc="85:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRankP.nc">
      <component-ref qname="RPLRankP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO_Filter" scoped="" ref="0x41729df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41728010"/>
        <function-ref name="recv" scoped="" ref="0x417280f0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x417a55f8" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x417a55f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x417a57d0"/>
        <function-ref name="setRoot" scoped="" ref="0x417a58b0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x417a5990"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRoutingEngine" ref="0x417a2010" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRoutingEngine" scoped="" ref="0x417a2010"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x417a21e8"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x417a2aa8"/>
        <function-ref name="resetTrickle" scoped="" ref="0x417a2b88"/>
        <function-ref name="hasDODAG" scoped="" ref="0x417a2488"/>
        <function-ref name="validInstance" scoped="" ref="0x417a2568"/>
        <function-ref name="inconsistency" scoped="" ref="0x417a2648"/>
        <function-ref name="getRank" scoped="" ref="0x417a2728"/>
        <function-ref name="getDodagId" scoped="" ref="0x417a2808"/>
        <function-ref name="getDTSN" scoped="" ref="0x417a23a8"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x417a28e8"/>
        <function-ref name="getInstanceID" scoped="" ref="0x417a29c8"/>
        <function-ref name="setDTSN" scoped="" ref="0x417a22c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x417a5b38" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineC.nc">
      <component-ref qname="RPLRoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x417a5b38"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x417a5d10"/>
        <function-ref name="stop" scoped="" ref="0x417a5df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RootControl" ref="0x4182da78" loc="46:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x4182da78"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x4182dc50"/>
        <function-ref name="setRoot" scoped="" ref="0x4182dd30"/>
        <function-ref name="unsetRoot" scoped="" ref="0x4182de10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIS" ref="0x4182b5b8" loc="52:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIS" scoped="" ref="0x4182b5b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4182b790"/>
        <function-ref name="recv" scoped="" ref="0x4182b870"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAORoutingEngine" ref="0x4181f270" loc="62:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4181f270"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x4181f448"/>
        <function-ref name="getStoreState" scoped="" ref="0x4181f528"/>
        <function-ref name="startDAO" scoped="" ref="0x4181f608"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="computeRemaining" ref="0x4181f788" loc="167:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="computeRemaining" scoped="" ref="0x4181f788"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4181f960"/>
        <function-ref name="runTask" scoped="" ref="0x4181fa40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="InitDISTimer" ref="0x41828ce0" loc="55:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="InitDISTimer" scoped="" ref="0x41828ce0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418268a8"/>
        <function-ref name="fired" scoped="" ref="0x41827aa8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41826268"/>
        <function-ref name="isOneShot" scoped="" ref="0x41826010"/>
        <function-ref name="getdt" scoped="" ref="0x41826d58"/>
        <function-ref name="gett0" scoped="" ref="0x41826b00"/>
        <function-ref name="isRunning" scoped="" ref="0x41827d00"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41827350"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41826588"/>
        <function-ref name="startOneShot" scoped="" ref="0x418275d0"/>
        <function-ref name="stop" scoped="" ref="0x41827850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x41822220" loc="57:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x41822220"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x418223f8"/>
        <function-ref name="rand32" scoped="" ref="0x418224d8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="TrickleTimer" ref="0x4182ba60" loc="54:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="TrickleTimer" scoped="" ref="0x4182ba60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41828570"/>
        <function-ref name="fired" scoped="" ref="0x4182a810"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4182af18"/>
        <function-ref name="isOneShot" scoped="" ref="0x4182acc0"/>
        <function-ref name="getdt" scoped="" ref="0x41828a20"/>
        <function-ref name="gett0" scoped="" ref="0x418287c8"/>
        <function-ref name="isRunning" scoped="" ref="0x4182aa68"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4182a0b8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41828250"/>
        <function-ref name="startOneShot" scoped="" ref="0x4182a338"/>
        <function-ref name="stop" scoped="" ref="0x4182a5b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="init" ref="0x4181d010" loc="121:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="init" scoped="" ref="0x4181d010"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4181d1e8"/>
        <function-ref name="runTask" scoped="" ref="0x4181d2c8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x41821550" loc="59:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x41821550"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41821728"/>
        <function-ref name="changed" scoped="" ref="0x41821808"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x418218e8"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x418219c8"/>
        <function-ref name="setSource" scoped="" ref="0x41821aa8"/>
        <function-ref name="removeAddress" scoped="" ref="0x41821b88"/>
        <function-ref name="setAddress" scoped="" ref="0x41821c68"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41821d48"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDISTask" ref="0x4181d448" loc="120:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDISTask" scoped="" ref="0x4181d448"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4181d620"/>
        <function-ref name="runTask" scoped="" ref="0x4181d700"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DIO" ref="0x4182b1a0" loc="51:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DIO" scoped="" ref="0x4182b1a0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4182b378"/>
        <function-ref name="recv" scoped="" ref="0x4182b458"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRankInfo" ref="0x41822638" loc="58:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRankInfo" scoped="" ref="0x41822638"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRank"/>
      </instance>
      <interface-functions>
        <function-ref name="parentRankChange" scoped="" ref="0x41822810"/>
        <function-ref name="isRoot" scoped="" ref="0x418228f0"/>
        <function-ref name="setQueuingDelay" scoped="" ref="0x418229d0"/>
        <function-ref name="hasParent" scoped="" ref="0x41822ab0"/>
        <function-ref name="validInstance" scoped="" ref="0x41822b90"/>
        <function-ref name="declareRoot" scoped="" ref="0x41822c70"/>
        <function-ref name="getRank" scoped="" ref="0x41822d50"/>
        <function-ref name="getEtx" scoped="" ref="0x41822e30"/>
        <function-ref name="isLeaf" scoped="" ref="0x41822f10"/>
        <function-ref name="compareAddr" scoped="" ref="0x41821010"/>
        <function-ref name="isParent" scoped="" ref="0x418210f0"/>
        <function-ref name="inconsistencyDetected" scoped="" ref="0x418211d0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x418212b0"/>
        <function-ref name="cancelRoot" scoped="" ref="0x41821410"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41821e88" loc="60:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41821e88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41820070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41820150"/>
        <function-ref name="led1On" scoped="" ref="0x41820230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41820310"/>
        <function-ref name="led3Off" scoped="" ref="0x418203f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x418204d0"/>
        <function-ref name="get" scoped="" ref="0x418205b0"/>
        <function-ref name="led1Off" scoped="" ref="0x41820690"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41820770"/>
        <function-ref name="led3On" scoped="" ref="0x41820850"/>
        <function-ref name="led0On" scoped="" ref="0x41820930"/>
        <function-ref name="led2Off" scoped="" ref="0x41820a10"/>
        <function-ref name="led2On" scoped="" ref="0x41820af0"/>
        <function-ref name="set" scoped="" ref="0x41820c50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDIO" ref="0x4181fbc0" loc="122:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="initDIO" scoped="" ref="0x4181fbc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4181fd98"/>
        <function-ref name="runTask" scoped="" ref="0x4181fe78"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDIOTask" ref="0x4181d880" loc="119:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDIOTask" scoped="" ref="0x4181d880"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x4181da58"/>
        <function-ref name="runTask" scoped="" ref="0x4181db38"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IncreaseVersionTimer" ref="0x41824030" loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IncreaseVersionTimer" scoped="" ref="0x41824030"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41823b38"/>
        <function-ref name="fired" scoped="" ref="0x41824db0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418234f8"/>
        <function-ref name="isOneShot" scoped="" ref="0x418232a0"/>
        <function-ref name="getdt" scoped="" ref="0x41822010"/>
        <function-ref name="gett0" scoped="" ref="0x41823d90"/>
        <function-ref name="isRunning" scoped="" ref="0x41823048"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41824658"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41823818"/>
        <function-ref name="startOneShot" scoped="" ref="0x418248d8"/>
        <function-ref name="stop" scoped="" ref="0x41824b58"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLRouteInfo" ref="0x4182c428" loc="48:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRouteInfo" scoped="" ref="0x4182c428"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x4182c600"/>
        <function-ref name="getInstanceID" scoped="" ref="0x4182cec0"/>
        <function-ref name="setDTSN" scoped="" ref="0x4182b010"/>
        <function-ref name="hasDODAG" scoped="" ref="0x4182c8a0"/>
        <function-ref name="validInstance" scoped="" ref="0x4182c980"/>
        <function-ref name="inconsistency" scoped="" ref="0x4182ca60"/>
        <function-ref name="getRank" scoped="" ref="0x4182cb40"/>
        <function-ref name="getDodagId" scoped="" ref="0x4182cc20"/>
        <function-ref name="getDTSN" scoped="" ref="0x4182cd00"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x4182cde0"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x4182c6e0"/>
        <function-ref name="resetTrickle" scoped="" ref="0x4182c7c0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RankControl" ref="0x41820db0" loc="61:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RankControl" scoped="" ref="0x41820db0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4181f050"/>
        <function-ref name="stop" scoped="" ref="0x4181f130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4182c010" loc="47:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngineP.nc">
      <component-ref qname="RPLRoutingEngineC.Routing"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4182c010"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4182c1e8"/>
        <function-ref name="stop" scoped="" ref="0x4182c2c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x4181aa88" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.TrickleTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4181aa88"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41818650"/>
        <function-ref name="fired" scoped="" ref="0x41819830"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41818010"/>
        <function-ref name="isOneShot" scoped="" ref="0x41819ce0"/>
        <function-ref name="getdt" scoped="" ref="0x41818b00"/>
        <function-ref name="gett0" scoped="" ref="0x418188a8"/>
        <function-ref name="isRunning" scoped="" ref="0x41819a88"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418190d8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41818330"/>
        <function-ref name="startOneShot" scoped="" ref="0x41819358"/>
        <function-ref name="stop" scoped="" ref="0x418195d8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41817908" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.InitDISTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41817908"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418144c8"/>
        <function-ref name="fired" scoped="" ref="0x41815768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41815e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41815c18"/>
        <function-ref name="getdt" scoped="" ref="0x41814978"/>
        <function-ref name="gett0" scoped="" ref="0x41814720"/>
        <function-ref name="isRunning" scoped="" ref="0x418159c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41815010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418141a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41815290"/>
        <function-ref name="stop" scoped="" ref="0x41815510"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41813780" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLRoutingEngineC.VersionTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41813780"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41810330"/>
        <function-ref name="fired" scoped="" ref="0x41812520"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41812c28"/>
        <function-ref name="isOneShot" scoped="" ref="0x418129d0"/>
        <function-ref name="getdt" scoped="" ref="0x418107e0"/>
        <function-ref name="gett0" scoped="" ref="0x41810588"/>
        <function-ref name="isRunning" scoped="" ref="0x41812778"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41813da8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41810010"/>
        <function-ref name="startOneShot" scoped="" ref="0x41812048"/>
        <function-ref name="stop" scoped="" ref="0x418122c8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORoutingEngine" ref="0x4180c120" loc="45:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAORoutingEngine" scoped="" ref="0x4180c120"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x4180c2f8"/>
        <function-ref name="getStoreState" scoped="" ref="0x4180c3d8"/>
        <function-ref name="startDAO" scoped="" ref="0x4180c4b8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMP_RA" ref="0x4180c9b0" loc="48:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMP_RA" scoped="" ref="0x4180c9b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4180cb88"/>
        <function-ref name="recv" scoped="" ref="0x4180cc68"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4180fbb0" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineC.nc">
      <component-ref qname="RPLDAORoutingEngineC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4180fbb0"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4180fd88"/>
        <function-ref name="stop" scoped="" ref="0x4180fe68"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RootControl" ref="0x418b9d68" loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RootControl" scoped="" ref="0x418b9d68"/></type-interface>
      <instance>
        <interfacedef-ref qname="RootControl"/>
      </instance>
      <interface-functions>
        <function-ref name="isRoot" scoped="" ref="0x418b8010"/>
        <function-ref name="setRoot" scoped="" ref="0x418b80f0"/>
        <function-ref name="unsetRoot" scoped="" ref="0x418b81d0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendPool" ref="0x418bcbf0" loc="54:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendPool" scoped="" ref="0x418bcbf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418bbcf0"/>
        <function-ref name="maxSize" scoped="" ref="0x418bb708"/>
        <function-ref name="empty" scoped="" ref="0x418bb258"/>
        <function-ref name="put" scoped="" ref="0x418bb960"/>
        <function-ref name="size" scoped="" ref="0x418bb4b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_DAO" ref="0x418bf250" loc="51:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_DAO" scoped="" ref="0x418bf250"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418bf428"/>
        <function-ref name="recv" scoped="" ref="0x418bf508"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Random" ref="0x418c0df0" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Random" scoped="" ref="0x418c0df0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Random"/>
      </instance>
      <interface-functions>
        <function-ref name="rand16" scoped="" ref="0x418bf010"/>
        <function-ref name="rand32" scoped="" ref="0x418bf0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="sendDAO" ref="0x418b62b0" loc="107:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="sendDAO" scoped="" ref="0x418b62b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418b6488"/>
        <function-ref name="runTask" scoped="" ref="0x418b6568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RemoveTimer" ref="0x4186a9b8" loc="48:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RemoveTimer" scoped="" ref="0x4186a9b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418684c8"/>
        <function-ref name="fired" scoped="" ref="0x41869768"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41869e70"/>
        <function-ref name="isOneShot" scoped="" ref="0x41869c18"/>
        <function-ref name="getdt" scoped="" ref="0x41868978"/>
        <function-ref name="gett0" scoped="" ref="0x41868720"/>
        <function-ref name="isRunning" scoped="" ref="0x418699c0"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41869010"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418681a8"/>
        <function-ref name="startOneShot" scoped="" ref="0x41869290"/>
        <function-ref name="stop" scoped="" ref="0x41869510"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="SendQueue" ref="0x418be070" loc="53:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="SendQueue" scoped="" ref="0x418be070"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x418beda0"/>
        <function-ref name="enqueue" scoped="" ref="0x418bc4a0"/>
        <function-ref name="element" scoped="" ref="0x418bc7f0"/>
        <function-ref name="maxSize" scoped="" ref="0x418beb48"/>
        <function-ref name="dequeue" scoped="" ref="0x418bc130"/>
        <function-ref name="empty" scoped="" ref="0x418be698"/>
        <function-ref name="size" scoped="" ref="0x418be8f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x418bf648" loc="52:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x418bf648"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x418bf820"/>
        <function-ref name="changed" scoped="" ref="0x418bf900"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x418bf9e0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x418bfac0"/>
        <function-ref name="setSource" scoped="" ref="0x418bfba0"/>
        <function-ref name="removeAddress" scoped="" ref="0x418bfc80"/>
        <function-ref name="setAddress" scoped="" ref="0x418bfd60"/>
        <function-ref name="isLLAddress" scoped="" ref="0x418bfe40"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="initDAO" ref="0x418b7e50" loc="190:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="initDAO" scoped="" ref="0x418b7e50"/></type-interface>
      <instance>
        <interfacedef-ref qname="TaskBasic"/>
      </instance>
      <interface-functions>
        <function-ref name="postTask" scoped="" ref="0x418b6050"/>
        <function-ref name="runTask" scoped="" ref="0x418b6130"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLDAORouteInfo" ref="0x4186ecc0" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAORouteInfo" scoped="" ref="0x4186ecc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x4186ee98"/>
        <function-ref name="getStoreState" scoped="" ref="0x4186d010"/>
        <function-ref name="startDAO" scoped="" ref="0x4186d0f0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x418b8f00" loc="59:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x418b8f00"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x418b70f0"/>
        <function-ref name="led0Toggle" scoped="" ref="0x418b71d0"/>
        <function-ref name="led1On" scoped="" ref="0x418b72b0"/>
        <function-ref name="led1Toggle" scoped="" ref="0x418b7390"/>
        <function-ref name="led3Off" scoped="" ref="0x418b7470"/>
        <function-ref name="led2Toggle" scoped="" ref="0x418b7550"/>
        <function-ref name="get" scoped="" ref="0x418b7630"/>
        <function-ref name="led1Off" scoped="" ref="0x418b7710"/>
        <function-ref name="led3Toggle" scoped="" ref="0x418b77f0"/>
        <function-ref name="led3On" scoped="" ref="0x418b78d0"/>
        <function-ref name="led0On" scoped="" ref="0x418b79b0"/>
        <function-ref name="led2Off" scoped="" ref="0x418b7a90"/>
        <function-ref name="led2On" scoped="" ref="0x418b7b70"/>
        <function-ref name="set" scoped="" ref="0x418b7cd0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="DelayDAOTimer" ref="0x4186d708" loc="47:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="DelayDAOTimer" scoped="" ref="0x4186d708"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4186a248"/>
        <function-ref name="fired" scoped="" ref="0x4186c4e8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4186cbf0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4186c998"/>
        <function-ref name="getdt" scoped="" ref="0x4186a6f8"/>
        <function-ref name="gett0" scoped="" ref="0x4186a4a0"/>
        <function-ref name="isRunning" scoped="" ref="0x4186c740"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4186dd30"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4186cf10"/>
        <function-ref name="startOneShot" scoped="" ref="0x4186c010"/>
        <function-ref name="stop" scoped="" ref="0x4186c290"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="GenerateDAOTimer" ref="0x41868c38" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="GenerateDAOTimer" scoped="" ref="0x41868c38"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418c0730"/>
        <function-ref name="fired" scoped="" ref="0x418679d0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418c00f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41867e80"/>
        <function-ref name="getdt" scoped="" ref="0x418c0be0"/>
        <function-ref name="gett0" scoped="" ref="0x418c0988"/>
        <function-ref name="isRunning" scoped="" ref="0x41867c28"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41867278"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418c0410"/>
        <function-ref name="startOneShot" scoped="" ref="0x418674f8"/>
        <function-ref name="stop" scoped="" ref="0x41867778"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRouteInfo" ref="0x418b90b0" loc="55:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRouteInfo" scoped="" ref="0x418b90b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x418b9288"/>
        <function-ref name="getInstanceID" scoped="" ref="0x418b9b48"/>
        <function-ref name="setDTSN" scoped="" ref="0x418b9c28"/>
        <function-ref name="hasDODAG" scoped="" ref="0x418b9528"/>
        <function-ref name="validInstance" scoped="" ref="0x418b9608"/>
        <function-ref name="inconsistency" scoped="" ref="0x418b96e8"/>
        <function-ref name="getRank" scoped="" ref="0x418b97c8"/>
        <function-ref name="getDodagId" scoped="" ref="0x418b98a8"/>
        <function-ref name="getDTSN" scoped="" ref="0x418b9988"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x418b9a68"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x418b9368"/>
        <function-ref name="resetTrickle" scoped="" ref="0x418b9448"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x418b8310" loc="57:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x418b8310"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x418b8568"/>
        <function-ref name="delTLV" scoped="" ref="0x418b8648"/>
        <function-ref name="findTLV" scoped="" ref="0x418b8728"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x418b8868" loc="58:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x418b8868"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x418b8a40"/>
        <function-ref name="lookupRoute" scoped="" ref="0x418b8b20"/>
        <function-ref name="delRoute" scoped="" ref="0x418b8c00"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x418b8ce0"/>
        <function-ref name="addRoute" scoped="" ref="0x418b8dc0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="StdControl" ref="0x4186d230" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngineP.nc">
      <component-ref qname="RPLDAORoutingEngineC.DAORouting"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="StdControl" scoped="" ref="0x4186d230"/></type-interface>
      <instance>
        <interfacedef-ref qname="StdControl"/>
      </instance>
      <interface-functions>
        <function-ref name="start" scoped="" ref="0x4186d408"/>
        <function-ref name="stop" scoped="" ref="0x4186d4e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x418b3378" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.DelayDAOTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x418b3378"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418b2e58"/>
        <function-ref name="fired" scoped="" ref="0x418b2110"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418b2818"/>
        <function-ref name="isOneShot" scoped="" ref="0x418b25c0"/>
        <function-ref name="getdt" scoped="" ref="0x418b1348"/>
        <function-ref name="gett0" scoped="" ref="0x418b10f0"/>
        <function-ref name="isRunning" scoped="" ref="0x418b2368"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418b39a0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418b2b38"/>
        <function-ref name="startOneShot" scoped="" ref="0x418b3c20"/>
        <function-ref name="stop" scoped="" ref="0x418b3ea0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x418af188" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.GenerateDAOTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x418af188"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418aec70"/>
        <function-ref name="fired" scoped="" ref="0x418aff08"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418ae630"/>
        <function-ref name="isOneShot" scoped="" ref="0x418ae3d8"/>
        <function-ref name="getdt" scoped="" ref="0x418ad150"/>
        <function-ref name="gett0" scoped="" ref="0x418aeec8"/>
        <function-ref name="isRunning" scoped="" ref="0x418ae180"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418af7b0"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418ae950"/>
        <function-ref name="startOneShot" scoped="" ref="0x418afa30"/>
        <function-ref name="stop" scoped="" ref="0x418afcb0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x418ac010" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RPLDAORoutingEngineC.RemoveTimer"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x418ac010"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x418abb00"/>
        <function-ref name="fired" scoped="" ref="0x418acd90"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x418ab4c0"/>
        <function-ref name="isOneShot" scoped="" ref="0x418ab268"/>
        <function-ref name="getdt" scoped="" ref="0x418a9010"/>
        <function-ref name="gett0" scoped="" ref="0x418abd58"/>
        <function-ref name="isRunning" scoped="" ref="0x418ab010"/>
        <function-ref name="startPeriodic" scoped="" ref="0x418ac638"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x418ab7e0"/>
        <function-ref name="startOneShot" scoped="" ref="0x418ac8b8"/>
        <function-ref name="stop" scoped="" ref="0x418acb38"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Queue" ref="0x418a6570" loc="43:/opt/tinyos-2.x/tos/system/QueueC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendQueueP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Queue" scoped="" ref="0x418a6570"/></type-interface>
      <instance>
        <interfacedef-ref qname="Queue"/>
        <arguments>
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
              <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
            </type-tag>
          </type-pointer>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="head" scoped="" ref="0x418a52c0"/>
        <function-ref name="enqueue" scoped="" ref="0x418a59a0"/>
        <function-ref name="element" scoped="" ref="0x418a5cf0"/>
        <function-ref name="maxSize" scoped="" ref="0x418a5068"/>
        <function-ref name="dequeue" scoped="" ref="0x418a5630"/>
        <function-ref name="empty" scoped="" ref="0x418a6b98"/>
        <function-ref name="size" scoped="" ref="0x418a6df0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x418a2178" loc="42:/opt/tinyos-2.x/tos/system/PoolC.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x418a2178"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418a1260"/>
        <function-ref name="maxSize" scoped="" ref="0x418a2c50"/>
        <function-ref name="empty" scoped="" ref="0x418a27a0"/>
        <function-ref name="put" scoped="" ref="0x418a2ea8"/>
        <function-ref name="size" scoped="" ref="0x418a29f8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Pool" ref="0x4201dc60" loc="56:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Pool" scoped="" ref="0x4201dc60"/></type-interface>
      <instance>
        <interfacedef-ref qname="Pool"/>
        <arguments>
          <type-tag size="I:118" alignment="I:1"><struct-ref ref="0x416dc978"/>
            <typename><typedef-ref name="dao_entry_t" ref="0x416dcc00"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x4201bd60"/>
        <function-ref name="maxSize" scoped="" ref="0x4201b778"/>
        <function-ref name="empty" scoped="" ref="0x4201b2c8"/>
        <function-ref name="put" scoped="" ref="0x4201b9d0"/>
        <function-ref name="size" scoped="" ref="0x4201b520"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x4201d8b8" loc="55:/opt/tinyos-2.x/tos/system/PoolP.nc">
      <component-ref qname="RPLDAORoutingEngineC.SendPoolP.PoolP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x4201d8b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x4201da90"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x4189b8e0" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x4189b8e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4189bac8"/>
        <function-ref name="recv" scoped="" ref="0x4189bba8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x420122e0" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RA" scoped="" ref="0x420122e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x420124b8"/>
        <function-ref name="recv" scoped="" ref="0x42012598"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x42014e80" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingEngineC.ICMP_RS.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x42014e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x42012080"/>
        <function-ref name="recv" scoped="" ref="0x42012160"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ParentTable" ref="0x418e3e28" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ParentTable" scoped="" ref="0x418e3e28"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLParentTable"/>
      </instance>
      <interface-functions>
        <function-ref name="get" scoped="" ref="0x418e2050"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLDAO" ref="0x418e22d0" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLDAO" scoped="" ref="0x418e22d0"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="newParent" scoped="" ref="0x418e24a8"/>
        <function-ref name="getStoreState" scoped="" ref="0x418e2588"/>
        <function-ref name="startDAO" scoped="" ref="0x418e2668"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RPLOF" ref="0x418e7d00" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLOF" scoped="" ref="0x418e7d00"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLOF"/>
      </instance>
      <interface-functions>
        <function-ref name="recomputeRoutes" scoped="" ref="0x418e7ed8"/>
        <function-ref name="OCP" scoped="" ref="0x418e4010"/>
        <function-ref name="objectSupported" scoped="" ref="0x418e40f0"/>
        <function-ref name="getRank" scoped="" ref="0x418e41d0"/>
        <function-ref name="resetRank" scoped="" ref="0x418e42b0"/>
        <function-ref name="setMinHopRankIncrease" scoped="" ref="0x418e4390"/>
        <function-ref name="getObjectValue" scoped="" ref="0x418e4470"/>
        <function-ref name="getParent" scoped="" ref="0x418e4550"/>
        <function-ref name="recalculateRank" scoped="" ref="0x418e4630"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RPLRoute" ref="0x418e3030" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RPLRoute" scoped="" ref="0x418e3030"/></type-interface>
      <instance>
        <interfacedef-ref qname="RPLRoutingEngine"/>
      </instance>
      <interface-functions>
        <function-ref name="getMOP" scoped="" ref="0x418e3208"/>
        <function-ref name="getDefaultRoute" scoped="" ref="0x418e3ac8"/>
        <function-ref name="resetTrickle" scoped="" ref="0x418e3ba8"/>
        <function-ref name="hasDODAG" scoped="" ref="0x418e34a8"/>
        <function-ref name="validInstance" scoped="" ref="0x418e3588"/>
        <function-ref name="inconsistency" scoped="" ref="0x418e3668"/>
        <function-ref name="getRank" scoped="" ref="0x418e3748"/>
        <function-ref name="getDodagId" scoped="" ref="0x418e3828"/>
        <function-ref name="getDTSN" scoped="" ref="0x418e33c8"/>
        <function-ref name="setDODAGConfig" scoped="" ref="0x418e3908"/>
        <function-ref name="getInstanceID" scoped="" ref="0x418e39e8"/>
        <function-ref name="setDTSN" scoped="" ref="0x418e32e8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x418e4828" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF0P.nc">
      <component-ref qname="RPLOF0P"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x418e4828"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x418e4a00"/>
        <function-ref name="lookupRoute" scoped="" ref="0x418e4ae0"/>
        <function-ref name="delRoute" scoped="" ref="0x418e4bc0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x418e4ca0"/>
        <function-ref name="addRoute" scoped="" ref="0x418e4d80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x418c2750" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchC.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x418c2750"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x418c2938"/>
        <function-ref name="recv" scoped="" ref="0x418c2a18"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RA" ref="0x4200c6b0" loc="36:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RA" scoped="" ref="0x4200c6b0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4200c888"/>
        <function-ref name="recv" scoped="" ref="0x4200c968"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="IP" ref="0x4200c268" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPCodeDispatchP.nc">
      <component-ref qname="RPLRoutingC.ICMP_RA.ICMPCodeDispatchP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x4200c268"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x4200c450"/>
        <function-ref name="recv" scoped="" ref="0x4200c530"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingEvents" ref="0x416ff4b8" loc="19:RplBorderRouterP.nc">
      <component-ref qname="RplBorderRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingEvents" scoped="" ref="0x416ff4b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingEvents"/>
      </instance>
      <interface-functions>
        <function-ref name="approve" scoped="" ref="0x416ff690"/>
        <function-ref name="initiate" scoped="" ref="0x416ff770"/>
        <function-ref name="linkResult" scoped="" ref="0x416ff850"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPPacket" ref="0x416ff9e8" loc="20:RplBorderRouterP.nc">
      <component-ref qname="RplBorderRouterP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPPacket" scoped="" ref="0x416ff9e8"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPPacket"/>
      </instance>
      <interface-functions>
        <function-ref name="findHeader" scoped="" ref="0x416ffbc0"/>
        <function-ref name="delTLV" scoped="" ref="0x416ffca0"/>
        <function-ref name="findTLV" scoped="" ref="0x416ffd80"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x41912840" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/UdpSocketC.nc">
      <component-ref qname="UDPShellC.UdpSocketC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x41912840"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x41912a18"/>
        <function-ref name="bind" scoped="" ref="0x41912af8"/>
        <function-ref name="sendtov" scoped="" ref="0x41912bd8"/>
        <function-ref name="recvfrom" scoped="" ref="0x41912cb8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x4190a4f8" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x4190a4f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x414ca010"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x414ca298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x4190adc0"/>
        <function-ref name="get" scoped="" ref="0x4190ab20"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x4190bd30" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/UdpC.nc">
      <component-ref qname="UdpC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x4190bd30"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x4190bf08"/>
        <function-ref name="bind" scoped="" ref="0x4190a010"/>
        <function-ref name="sendtov" scoped="" ref="0x4190a0f0"/>
        <function-ref name="recvfrom" scoped="" ref="0x4190a1d0"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="BlipStatistics" ref="0x419055c0" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="BlipStatistics" scoped="" ref="0x419055c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="BlipStatistics"/>
        <arguments>
          <type-tag size="I:6" alignment="I:1"><nx_struct-ref ref="0x414ca010"/>
            <typename><typedef-ref name="udp_statistics_t" ref="0x414ca298"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="clear" scoped="" ref="0x41905e88"/>
        <function-ref name="get" scoped="" ref="0x41905be8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Init" ref="0x419050c0" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Init" scoped="" ref="0x419050c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Init"/>
      </instance>
      <interface-functions>
        <function-ref name="init" scoped="" ref="0x41905298"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x41904558" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x41904558"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x41904730"/>
        <function-ref name="changed" scoped="" ref="0x41904810"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x419048f0"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x419049d0"/>
        <function-ref name="setSource" scoped="" ref="0x41904ab0"/>
        <function-ref name="removeAddress" scoped="" ref="0x41904b90"/>
        <function-ref name="setAddress" scoped="" ref="0x41904c70"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41904d50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="UDP" ref="0x41908a88" loc="9:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x41908a88"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x41908c60"/>
        <function-ref name="bind" scoped="" ref="0x41908d40"/>
        <function-ref name="sendtov" scoped="" ref="0x41908e20"/>
        <function-ref name="recvfrom" scoped="" ref="0x41908f00"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP" ref="0x419040e0" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/UdpP.nc">
      <component-ref qname="UdpP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP" scoped="" ref="0x419040e0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x419042b8"/>
        <function-ref name="recv" scoped="" ref="0x41904398"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Boot" ref="0x41937560" loc="46:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Boot" scoped="" ref="0x41937560"/></type-interface>
      <instance>
        <interfacedef-ref qname="Boot"/>
      </instance>
      <interface-functions>
        <function-ref name="booted" scoped="" ref="0x41937738"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="UDP" ref="0x41937898" loc="47:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="UDP" scoped="" ref="0x41937898"/></type-interface>
      <instance>
        <interfacedef-ref qname="UDP"/>
      </instance>
      <interface-functions>
        <function-ref name="sendto" scoped="" ref="0x41937a70"/>
        <function-ref name="bind" scoped="" ref="0x41937b50"/>
        <function-ref name="sendtov" scoped="" ref="0x41937c30"/>
        <function-ref name="recvfrom" scoped="" ref="0x41937d10"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Leds" ref="0x41937e80" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Leds" scoped="" ref="0x41937e80"/></type-interface>
      <instance>
        <interfacedef-ref qname="Leds"/>
      </instance>
      <interface-functions>
        <function-ref name="led0Off" scoped="" ref="0x41934070"/>
        <function-ref name="led0Toggle" scoped="" ref="0x41934150"/>
        <function-ref name="led1On" scoped="" ref="0x41934230"/>
        <function-ref name="led1Toggle" scoped="" ref="0x41934310"/>
        <function-ref name="led3Off" scoped="" ref="0x419343f0"/>
        <function-ref name="led2Toggle" scoped="" ref="0x419344d0"/>
        <function-ref name="get" scoped="" ref="0x419345b0"/>
        <function-ref name="led1Off" scoped="" ref="0x41934690"/>
        <function-ref name="led3Toggle" scoped="" ref="0x41934770"/>
        <function-ref name="led3On" scoped="" ref="0x41934850"/>
        <function-ref name="led0On" scoped="" ref="0x41934930"/>
        <function-ref name="led2Off" scoped="" ref="0x41934a10"/>
        <function-ref name="led2On" scoped="" ref="0x41934af0"/>
        <function-ref name="set" scoped="" ref="0x41934c50"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShellCommand" ref="0x41938220" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShellCommand" scoped="" ref="0x41938220"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShellCommand"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x419383f8"/>
        <function-ref name="eval" scoped="" ref="0x419384d8"/>
        <function-ref name="write" scoped="" ref="0x419385b8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="RegisterShellCommand" ref="0x419371d8" loc="43:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RegisterShellCommand" scoped="" ref="0x419371d8"/></type-interface>
      <instance>
        <interfacedef-ref qname="RegisterShellCommand"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="getCommandName" scoped="" ref="0x419373b0"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ICMPPing" ref="0x4192fa50" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/shell/UDPShellP.nc">
      <component-ref qname="UDPShellP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMPPing" scoped="" ref="0x4192fa50"/></type-interface>
      <instance>
        <interfacedef-ref qname="ICMPPing"/>
      </instance>
      <interface-functions>
        <function-ref name="pingDone" scoped="" ref="0x4192fc28"/>
        <function-ref name="pingReply" scoped="" ref="0x4192fd08"/>
        <function-ref name="ping" scoped="" ref="0x4192fde8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMPPing" ref="0x4190f8c0" loc="42:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingC.nc">
      <component-ref qname="ICMPPingC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMPPing" scoped="" ref="0x4190f8c0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ICMPPing"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="pingDone" scoped="" ref="0x4190fa98"/>
        <function-ref name="pingReply" scoped="" ref="0x4190fb78"/>
        <function-ref name="ping" scoped="" ref="0x4190fc58"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IP_ECHO" ref="0x41952e70" loc="38:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IP_ECHO" scoped="" ref="0x41952e70"/></type-interface>
      <instance>
        <interfacedef-ref qname="IP"/>
      </instance>
      <interface-functions>
        <function-ref name="send" scoped="" ref="0x41951070"/>
        <function-ref name="recv" scoped="" ref="0x41951150"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="IPAddress" ref="0x419512f0" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="IPAddress" scoped="" ref="0x419512f0"/></type-interface>
      <instance>
        <interfacedef-ref qname="IPAddress"/>
      </instance>
      <interface-functions>
        <function-ref name="getLLAddr" scoped="" ref="0x419514c8"/>
        <function-ref name="changed" scoped="" ref="0x419515a8"/>
        <function-ref name="isLocalAddress" scoped="" ref="0x41951688"/>
        <function-ref name="getGlobalAddr" scoped="" ref="0x41951768"/>
        <function-ref name="setSource" scoped="" ref="0x41951848"/>
        <function-ref name="removeAddress" scoped="" ref="0x41951928"/>
        <function-ref name="setAddress" scoped="" ref="0x41951a08"/>
        <function-ref name="isLLAddress" scoped="" ref="0x41951ae8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ICMPPing" ref="0x41957560" loc="35:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ICMPPing" scoped="" ref="0x41957560"/></type-interface>
      <instance>
        <interfacedef-ref qname="ICMPPing"/>
      </instance>
      <interface-parameters>
        <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
          <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
        </type-int>
      </interface-parameters>
      <interface-functions>
        <function-ref name="pingDone" scoped="" ref="0x41957738"/>
        <function-ref name="pingReply" scoped="" ref="0x41957818"/>
        <function-ref name="ping" scoped="" ref="0x419578f8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="PingTimer" ref="0x41957bf0" loc="37:/opt/tinyos-2.x/tos/lib/net/blip/icmp/ICMPPingP.nc">
      <component-ref qname="ICMPPingP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="PingTimer" scoped="" ref="0x41957bf0"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41952730"/>
        <function-ref name="fired" scoped="" ref="0x419549b0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x419520f0"/>
        <function-ref name="isOneShot" scoped="" ref="0x41954e60"/>
        <function-ref name="getdt" scoped="" ref="0x41952be0"/>
        <function-ref name="gett0" scoped="" ref="0x41952988"/>
        <function-ref name="isRunning" scoped="" ref="0x41954c08"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41954258"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41952410"/>
        <function-ref name="startOneShot" scoped="" ref="0x419544d8"/>
        <function-ref name="stop" scoped="" ref="0x41954758"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x41956a30" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="ICMPPingC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x41956a30"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x41996528"/>
        <function-ref name="fired" scoped="" ref="0x419557c0"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x41955ec8"/>
        <function-ref name="isOneShot" scoped="" ref="0x41955c70"/>
        <function-ref name="getdt" scoped="" ref="0x419969d8"/>
        <function-ref name="gett0" scoped="" ref="0x41996780"/>
        <function-ref name="isRunning" scoped="" ref="0x41955a18"/>
        <function-ref name="startPeriodic" scoped="" ref="0x41955068"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x41996208"/>
        <function-ref name="startOneShot" scoped="" ref="0x419552e8"/>
        <function-ref name="stop" scoped="" ref="0x41955568"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ShellCommand" ref="0x41913830" loc="38:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShellCommand" scoped="" ref="0x41913830"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShellCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x41913a08"/>
        <function-ref name="eval" scoped="" ref="0x41913ae8"/>
        <function-ref name="write" scoped="" ref="0x41913bc8"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="ForwardingTable" ref="0x41913dc0" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ForwardingTable" scoped="" ref="0x41913dc0"/></type-interface>
      <instance>
        <interfacedef-ref qname="ForwardingTable"/>
      </instance>
      <interface-functions>
        <function-ref name="getTable" scoped="" ref="0x4198f010"/>
        <function-ref name="lookupRoute" scoped="" ref="0x4198f0f0"/>
        <function-ref name="delRoute" scoped="" ref="0x4198f1d0"/>
        <function-ref name="lookupRouteKey" scoped="" ref="0x4198f2b0"/>
        <function-ref name="addRoute" scoped="" ref="0x4198f390"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="Timer" ref="0x4198f5f8" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/shell/RouteCmdP.nc">
      <component-ref qname="RouteCmdP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x4198f5f8"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x4198d110"/>
        <function-ref name="fired" scoped="" ref="0x4198e3a8"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x4198eab0"/>
        <function-ref name="isOneShot" scoped="" ref="0x4198e858"/>
        <function-ref name="getdt" scoped="" ref="0x4198d5c0"/>
        <function-ref name="gett0" scoped="" ref="0x4198d368"/>
        <function-ref name="isRunning" scoped="" ref="0x4198e600"/>
        <function-ref name="startPeriodic" scoped="" ref="0x4198fc20"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x4198edd0"/>
        <function-ref name="startOneShot" scoped="" ref="0x4198fea0"/>
        <function-ref name="stop" scoped="" ref="0x4198e150"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="ShellCommand" ref="0x419d66b8" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandC.nc">
      <component-ref qname="RouteCmdC.ShellCommandC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="ShellCommand" scoped="" ref="0x419d66b8"/></type-interface>
      <instance>
        <interfacedef-ref qname="ShellCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="getBuffer" scoped="" ref="0x419d6890"/>
        <function-ref name="eval" scoped="" ref="0x419d6970"/>
        <function-ref name="write" scoped="" ref="0x419d6a50"/>
      </interface-functions>
    </interface>
    <interface provided="0" name="RegisterShellCommand" ref="0x42000210" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommandP.nc">
      <component-ref qname="RouteCmdC.ShellCommandC.ShellCommandP"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="RegisterShellCommand" scoped="" ref="0x42000210"/></type-interface>
      <instance>
        <interfacedef-ref qname="RegisterShellCommand"/>
      </instance>
      <interface-functions>
        <function-ref name="getCommandName" scoped="" ref="0x420003e8"/>
      </interface-functions>
    </interface>
    <interface provided="1" name="Timer" ref="0x419d5c70" loc="45:/opt/tinyos-2.x/tos/system/TimerMilliC.nc">
      <component-ref qname="RouteCmdC.TimerMilliC"/>
      <type-interface size="I:2" alignment="I:1"><interface-ref name="Timer" scoped="" ref="0x419d5c70"/></type-interface>
      <instance>
        <interfacedef-ref qname="Timer"/>
        <arguments>
          <type-tag size="I:2" alignment="I:1"><struct-ref ref="0x404b8928"/>
            <typename><typedef-ref name="TMilli" ref="0x404b8af0"/></typename>
          </type-tag>
        </arguments>
      </instance>
      <interface-functions>
        <function-ref name="getNow" scoped="" ref="0x419ce790"/>
        <function-ref name="fired" scoped="" ref="0x419d0a20"/>
        <function-ref name="startPeriodicAt" scoped="" ref="0x419ce150"/>
        <function-ref name="isOneShot" scoped="" ref="0x419d0ed0"/>
        <function-ref name="getdt" scoped="" ref="0x419cec40"/>
        <function-ref name="gett0" scoped="" ref="0x419ce9e8"/>
        <function-ref name="isRunning" scoped="" ref="0x419d0c78"/>
        <function-ref name="startPeriodic" scoped="" ref="0x419d02c8"/>
        <function-ref name="startOneShotAt" scoped="" ref="0x419ce470"/>
        <function-ref name="startOneShot" scoped="" ref="0x419d0548"/>
        <function-ref name="stop" scoped="" ref="0x419d07c8"/>
      </interface-functions>
    </interface>
  </interfaces>
  <interfacedefs>
    <interfacedef qname="LcpAutomaton" loc="40:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <short> Manage the Link Control Protocol automaton.</short>
        <long> Manage the Link Control Protocol automaton.&#10;&#10; This interface is subject to change, as it is unclear which actions&#10; should be publicly available.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getState" ref="0x404eded0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Obtain the current state of the automaton *</short>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonState_e" ref="0x404df4a8"/>
            <typename><typedef-ref name="LcpAutomatonState_e" ref="0x404e5b78"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="down" ref="0x404ec7c0" loc="65:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Externally indicate that the layer is ready.</short>
          <long> Externally indicate that the layer is ready.&#10;&#10; This command is normally invoked only by the Ppp daemon when&#10; closing down the link, and by an LCP automaton when all upper&#10; layers have closed. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerUp" ref="0x404f5280" loc="110:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to upper layers that the&#10; automaton has entered the Opened state.</short>
          <long> Raised by the automaton to indicate to upper layers that the&#10; automaton has entered the Opened state.&#10;&#10; Normally, upper layers should respond by invoking the up()&#10; command on themselves.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="open" ref="0x404ecc90" loc="75:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Administratively enable the automaton.</short>
          <long> Administratively enable the automaton.&#10;&#10; This is normally invoked during application initialization, to&#10; indicate that the corresponding protocol should be enabled as&#10; soon as enough of PPP is up to allow messages to get to it.&#10;&#10; @return SUCCESS if automaton transition succeeded.  ERETRY if the&#10; automaton is busy, and the attempt should repeated. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerFinished" ref="0x404f4210" loc="128:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="125:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Initial, Closed, or Stopped states, and&#10; the lower layer is no longer needed for the link.</short>
          <long> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Initial, Closed, or Stopped states, and&#10; the lower layer is no longer needed for the link. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="signalEvent" ref="0x404eaad8" loc="101:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Notify the automaton of an event to be executed.</short>
          <long> Notify the automaton of an event to be executed.&#10;&#10; @param evt The event that is inducing a state transition.&#10;&#10; @param params Pointer to an event-specific structure required to&#10; complete the actions associated with the transition.  Note that&#10; the parameters may include resources, the responsibility for&#10; which is normally transferred to the automaton.&#10;&#10; @note If this command returns ERETRY, any resource included in&#10; the params was not accepted by the automaton, and the caller must&#10; dispose of it.  For SUCCESS and for all non-ERETRY error returns,&#10; the automaton accepts resource parameters and is responsible for&#10; releasing them.&#10;&#10; @return The result of the signal operation.  If ERETRY, the&#10; automaton is busy, but the event may be re-signaled later.  For&#10; all other returns, the event should not be re-signalled. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonEvent_e" ref="0x404e5e88"/>
              <typename><typedef-ref name="LcpAutomatonEvent_e" ref="0x404e3cb8"/></typename>
            </type-tag>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="evt" ref="0x404ea790" loc="101:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonEvent_e" ref="0x404e5e88"/>
              <typename><typedef-ref name="LcpAutomatonEvent_e" ref="0x404e3cb8"/></typename>
            </type-tag>
          </variable>
          <variable name="params" ref="0x404ea978" loc="102:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerDown" ref="0x404f5790" loc="118:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to upper layers that the&#10; automaton is leaving the Opened state.</short>
          <long> Raised by the automaton to indicate to upper layers that the&#10; automaton is leaving the Opened state.&#10;&#10; Normally, upper layers should respond by invoking the down()&#10; command on themselves.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="close" ref="0x404ea210" loc="81:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Administratively disable the automaton.</short>
          <long> Administratively disable the automaton.&#10;&#10; @return SUCCESS if automaton transition succeeded.  ERETRY if the&#10; automaton is busy, and the attempt should repeated. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="thisLayerStarted" ref="0x404f5cc0" loc="123:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="120:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Starting state and the lower layer is&#10; needed.</short>
          <long> Raised by the automaton to indicate to lower layers that the&#10; automaton is entering the Starting state and the lower layer is&#10; needed. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="transitionCompleted" ref="0x404ed948" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Raised upon completion of the transition actions associated with&#10; an automaton event.</short>
          <long> Raised upon completion of the transition actions associated with&#10; an automaton event.&#10;&#10; @param state The resulting state of the automaton.  May be the&#10; same as the previous state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonState_e" ref="0x404df4a8"/>
              <typename><typedef-ref name="LcpAutomatonState_e" ref="0x404e5b78"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="state" ref="0x404ed7f0" loc="48:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="LcpAutomatonState_e" ref="0x404df4a8"/>
              <typename><typedef-ref name="LcpAutomatonState_e" ref="0x404e5b78"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="up" ref="0x404ec2f0" loc="58:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/ppp/LcpAutomaton.nc">
          <short> Externally indicate that the layer is ready.</short>
          <long> Externally indicate that the layer is ready.&#10;&#10; This command is normally invoked only by the Ppp daemon when&#10; bringing up LCP, and by an LCP automaton when a lower layer is&#10; ready to carry packets. *</long>
        </documentation>
        <interfacedef-ref qname="LcpAutomaton"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPForward" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
      <function command="" provided="0" name="send" ref="0x404d6010" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x404d7a30" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x404d7c90" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x404d7e68" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x404e0010" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x404d69a8" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x404d6b88" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x404d6e00" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x404d65b0" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
        <interfacedef-ref qname="IPForward"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x404d6458" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPForward.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Boot" loc="50:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <short>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.</short>
        <long>&#10; Interface that notifies components when TinyOS has booted&#10; (initialized all of its components), as discussed in TEP 107.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10;</long>
      </documentation>
      <function event="" provided="0" name="booted" ref="0x404e0cf0" loc="60:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/Boot.nc">
          <short>&#10; Signaled when the system has booted successfully.</short>
          <long>&#10; Signaled when the system has booted successfully. Components can&#10; assume the system has been initialized properly. Services may&#10; need to be started to work, however.&#10;&#10; @see StdControl&#10; @see SplitConrol&#10; @see TEP 107: Boot Sequence&#10;</long>
        </documentation>
        <interfacedef-ref qname="Boot"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RootControl" loc="40:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <short> Controls whether the current node is a root of the tree&#10;  </short>
        <long> Controls whether the current node is a root of the tree&#10;  @author Rodrigo Fonseca&#10;  @date   $Date: 2006-12-12 18:23:29 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isRoot" ref="0x404fd7c8" loc="43:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setRoot" ref="0x404fd010" loc="41:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="unsetRoot" ref="0x404fd408" loc="42:/opt/tinyos-2.x/tos/lib/net/RootControl.nc">
        <interfacedef-ref qname="RootControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPPacket" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
      <function command="" provided="0" name="findHeader" ref="0x40507678" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="payload" ref="0x40507088" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="first_type" ref="0x405072c0" loc="15:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="search_type" ref="0x40507510" loc="15:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delTLV" ref="0x40505988" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40505430" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x40505620" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="type" ref="0x40505820" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="findTLV" ref="0x40505018" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
        <interfacedef-ref qname="IPPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="header" ref="0x40507aa8" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ext_offset" ref="0x40507c98" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="type" ref="0x40507e98" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppIpv6" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <short> Interface supporting RFC5072 IPv6-over-PPP using the OSIAN/TinyOS&#10; PPP daemon.</short>
        <long> Interface supporting RFC5072 IPv6-over-PPP using the OSIAN/TinyOS&#10; PPP daemon.&#10;&#10; This interface is intended as a bridge between the PPP daemon and a&#10; specific implementation of IPv6, such as blip or OIP.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="transmit" ref="0x404f27b8" loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Transmit data to the remote end.</short>
          <long> Transmit data to the remote end.&#10;&#10; @param message Pointer to a sequence of octets to be transmitted.&#10;&#10; @param len The number of bytes to transmit.&#10;&#10; @return SUCCESS iff a frame could be allocated and the message&#10; transmitted. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x404f2490" loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404f2658" loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkUp" ref="0x404f00c8" loc="72:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Signal that the PPP link has come up *</short>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receive" ref="0x404f0c70" loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Signal that a message has been received over the PPP link.</short>
          <long> Signal that a message has been received over the PPP link.&#10;&#10; @param message Sequence of octets received, after all&#10; PPP-relevant framing has been removed.&#10;&#10; @param len Number of octets received.&#10;&#10; @return SUCCESS if the recipient has successfully processed the&#10; message.  Non-SUCCESS values may be used for purposes as defined&#10; by PppProtocol.process(). *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="message" ref="0x404f0948" loc="87:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404f0b10" loc="88:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localIid" ref="0x404de970" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Return the negotiated IID for the local (TinyOS) end of the PPP&#10; link.</short>
          <long> Return the negotiated IID for the local (TinyOS) end of the PPP&#10; link.&#10;&#10; @return Pointer to configured IID; null pointer if the link is&#10; not up. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="ppp_ipv6cp_iid_t" ref="0x404aed88"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref name="ppp_ipv6cp_iid_t" ref="0x404ae968"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="remoteIid" ref="0x404deef8" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Return the negotiated IID for the remote (PC) end of the PPP&#10; link.</short>
          <long> Return the negotiated IID for the remote (PC) end of the PPP&#10; link.&#10;&#10; @return Pointer to configured remote IID; null pointer if the&#10; link is not up. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-qualified const="">
                <typename><typedef-ref name="ppp_ipv6cp_iid_t" ref="0x404aed88"/></typename>
              <type-tag size="I:8" alignment="I:1"><struct-ref name="ppp_ipv6cp_iid_t" ref="0x404ae968"/></type-tag>
            </type-qualified>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="linkIsUp" ref="0x404f2cb0" loc="69:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> </short>
          <long> @return TRUE iff the LCP automaton is in a link-up state. *</long>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="linkDown" ref="0x404f04a8" loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppIpv6.nc">
          <short> Signal that the PPP link has gone down *</short>
        </documentation>
        <interfacedef-ref qname="PppIpv6"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Leds" loc="53:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/types/Leds.h">
        <short>&#10; Constants for manipulating LEDs.</short>
        <long>&#10; Constants for manipulating LEDs.&#10;&#10; @author Philip Levis&#10; @date   March 21, 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="led0Off" ref="0x4043abc0" loc="63:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 0.</short>
          <long>&#10; Turn off LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0Toggle" ref="0x40439038" loc="69:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 0; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1On" ref="0x404394b8" loc="74:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 1.</short>
          <long>&#10; Turn on LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Toggle" ref="0x40439d28" loc="85:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 1; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Off" ref="0x404402f8" loc="113:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="110:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 3.</short>
          <long>&#10; Turn off LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Toggle" ref="0x40438a38" loc="102:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 2; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40440be8" loc="134:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Get the current LED settings as a bitmask.</short>
          <long>&#10; Get the current LED settings as a bitmask. Each bit corresponds to&#10; whether an LED is on; bit 0 is LED 0, bit 1 is LED 1, etc. You can&#10; also use the enums LED_LED0, LED_LED1. For example, this expression&#10; will determine whether LED 2 is on:&#10;&#10; &#60;pre> (call Leds.get() &#38; LEDS_LED2) &#60;/pre>&#10;&#10; This command supports up to 8 LEDs; if a platform has fewer, then&#10; those LEDs should always be off (their bit is zero). Also see&#10; &#60;tt>set()&#60;/tt>.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led1Off" ref="0x404398e0" loc="79:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 1.</short>
          <long>&#10; Turn off LED 1. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3Toggle" ref="0x40440740" loc="119:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.</short>
          <long>&#10; Toggle LED 3; if it was off, turn it on, if was on, turn it off.&#10; The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led3On" ref="0x40438eb8" loc="108:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 3.</short>
          <long>&#10; Turn on LED 3. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led0On" ref="0x4043a798" loc="58:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 0.</short>
          <long>&#10; Turn on LED 0. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2Off" ref="0x404385f0" loc="96:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="93:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn off LED 2.</short>
          <long>&#10; Turn off LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="led2On" ref="0x404381c8" loc="91:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Turn on LED 2.</short>
          <long>&#10; Turn on LED 2. The color of this LED depends on the platform.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4043f380" loc="149:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
          <short>&#10; Set the current LED configuration using a bitmask.</short>
          <long>&#10; Set the current LED configuration using a bitmask.  Each bit&#10; corresponds to whether an LED is on; bit 0 is LED 0, bit 1 is LED&#10; 1, etc. You can also use the enums LEDS_LED0, LEDS_LED1. For example,&#10; this statement will configure the LEDs so LED 0 and LED 2 are on:&#10;&#10; &#60;pre> call Leds.set(LEDS_LED0 | LEDS_LED2); &#60;/pre>&#10;&#10; This statement will turn LED 1 on if it was not already:&#10;&#10; &#60;pre>call Leds.set(call Leds.get() | LEDS_LED1);&#60;/pre>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Leds"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x4043f228" loc="149:/opt/tinyos-2.x/tos/platforms/ucmini/Leds.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SplitControl" loc="87:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the split-phase counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  For each &#60;code>start()&#60;/code> or&#10; &#60;code>stop()&#60;/code> command, if the command returns SUCCESS, then a&#10; corresponding  &#60;code>startDone()&#60;/code> or &#60;code>stopDone()&#60;/code> event&#10; must be signalled.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function event="" provided="0" name="startDone" ref="0x404dd398" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.</short>
          <long> &#10; Notify caller that the component has been started and is ready to&#10; receive other commands.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned on, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404dd240" loc="113:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="stopDone" ref="0x404dc168" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Notify caller that the component has been stopped.</short>
          <long>&#10; Notify caller that the component has been stopped.&#10;&#10; @param &#60;b>error&#60;/b> -- SUCCESS if the component was successfully&#10;                        turned off, FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x404dc010" loc="138:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x404d9b28" loc="104:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="89:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         starting or the device was off and the device is now ready to turn &#10;         on.  After receiving this return value, you should expect a &#10;         &#60;code>startDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering down&#10;               i.e. a &#60;code>stop()&#60;/code> command has been called,&#10;               and a &#60;code>stopDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already on &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x404dd8a8" loc="130:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/SplitControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.  Return&#10; values of SUCCESS will always result in a &#60;code>startDone()&#60;/code>&#10; event being signalled.&#10;&#10; @return SUCCESS if the device is already in the process of &#10;         stopping or the device was on and the device is now ready to turn &#10;         off.  After receiving this return value, you should expect a &#10;         &#60;code>stopDone&#60;/code> event in the near future.&#60;br>&#10;         EBUSY if the component is in the middle of powering up&#10;               i.e. a &#60;code>start()&#60;/code> command has been called,&#10;               and a &#60;code>startDone()&#60;/code> event is pending&#60;br>&#10;         EALREADY if the device is already off &#60;br>&#10;         FAIL Otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="SplitControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ppp" loc="40:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <short> Core functions provided by the PPP infrastructure: specifically,&#10; management of the internal buffers used for outgoing and incoming&#10; messages.</short>
        <long> Core functions provided by the PPP infrastructure: specifically,&#10; management of the internal buffers used for outgoing and incoming&#10; messages.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="fixOutputFrameLength" ref="0x404f95b0" loc="81:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="76:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Mark the maximum length of the frame.</short>
          <long> Mark the maximum length of the frame.&#10;&#10; frame_end must lie within the frame identified by the given key.&#10;&#10; This may release memory for use in other output frames. *</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable ref="0x404f91f0" loc="81:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
          </variable>
          <variable name="frame_end" ref="0x404f9450" loc="81:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="outputFrameTransmitted" ref="0x404f7d78" loc="112:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Indication that transmission of an output message has been&#10; resolved.</short>
          <long> Indication that transmission of an output message has been&#10; resolved.  The caller may read the message contents until the&#10; event returns.&#10;&#10; @param key The key that identifies the frame that was transmitted&#10; @param result The disposition of the transmission *</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x404f7a08" loc="112:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
          </variable>
          <variable name="result" ref="0x404f7c18" loc="113:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendOutputFrame" ref="0x404f9c58" loc="97:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Transmit an output frame.</short>
          <long> Transmit an output frame.&#10;&#10; @TODO@ Auto-fix length of buffer&#10;&#10; The frame will be submitted for transmission.  If this command&#10; returns SUCCESS, transmission will continue in the background and&#10; its completion will be indicated by the outputFrameTransmitted&#10; event.  With any other return value the transmission failed.&#10;&#10; The caller is not permitted to modify the memory of this frame&#10; after invoking this command.  If this command returns SUCCESS,&#10; the caller may hold on to the frame_end value until the&#10; subsequent outputFrameTransmitted event is signalled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x404f9b00" loc="97:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releaseOutputFrame" ref="0x404f74c8" loc="104:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Cancel transmission of an output frame.</short>
          <long> Cancel transmission of an output frame.&#10;&#10; The caller is not permitted to access the memory of this frame&#10; after invoking this command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x404f7370" loc="104:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
              <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getOutputFrame" ref="0x404fa818" loc="71:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
          <short> Obtain storage for an outbound message.</short>
          <long> Obtain storage for an outbound message.&#10;&#10; The frame is initialized to hold a message associated with the&#10; given protocol.  It is the callers responsibility to fill in the&#10; remainder of the message, then to invoke either sendOutputFrame&#10; if the message is to be transmitted or releaseOutputFrame if the&#10; message is to be dropped.&#10;&#10; It is implementation-defined whether multiple output frames are&#10; available for use.  If no output frames are available, this&#10; command will return a null pointer.&#10;&#10; @return A pointer to the information field of the output message,&#10; or a null pointer if no output buffers are available.&#10; &#10; @param protocol The protocol to which the message will belong.&#10;&#10; @param frame_endp Secondary output value specyfing the address at&#10; which the frame ends.  Attempts to store at or beyond this&#10; address result in undefined behavior.&#10;&#10; @param inhibit_compression Indicate that, for this protocol, all&#10; non-default compression should be inhibited: in particular this&#10; means the protocol will always require two octets, and the&#10; address and control fields will be present.  Required for LCP.&#10;&#10; @param keyp Where to store the key that must be used to identify&#10; this output frame to the other output-related commands.  Assigned&#10; only if this command returns a non-null pointer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ppp"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="protocol" ref="0x404e6f10" loc="71:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="frame_endp" ref="0x404fa1c8" loc="72:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="inhibit_compression" ref="0x404fa440" loc="73:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
          <variable name="keyp" ref="0x404fa688" loc="74:/opt/tinyos-2.x/tos/lib/ppp/Ppp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTable" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
      <function command="" provided="0" name="getTable" ref="0x404fe188" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:37" alignment="I:1"><struct-ref name="route_entry" ref="0x4046ac38"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="size" ref="0x404fe010" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRoute" ref="0x405004e0" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:37" alignment="I:1"><struct-ref name="route_entry" ref="0x4046ac38"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x40500150" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40500360" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="delRoute" ref="0x40501c00" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Remove a routing table entry previously inserted using addRoute&#10;</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x4046aa68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x40501aa8" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x4046aa68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="lookupRouteKey" ref="0x40500b18" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:37" alignment="I:1"><struct-ref name="route_entry" ref="0x4046ac38"/></type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x4046aa68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="key" ref="0x405009a0" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1">
              <typename><typedef-ref name="route_key_t" ref="0x4046aa68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="addRoute" ref="0x40501610" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
        <documentation loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
          <short>&#10; Insert a forwarding-table mapping for the given prefix, with the&#10; given next-hop.</short>
        </documentation>
        <interfacedef-ref qname="ForwardingTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="route_key_t" ref="0x4046aa68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="prefix" ref="0x404f6d68" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="prefix_len_bits" ref="0x40501010" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="next_hop" ref="0x40501298" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ifindex" ref="0x405014a0" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Dhcp6Info" loc="40:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
        <short>&#10; Interface for getting information about a client's status.</short>
        <long>&#10; Interface for getting information about a client's status.&#10;&#10; @author Stephen Dawson-Haggerty &#60;stevedh@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDuid" ref="0x404fc738" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
          <short>&#10; Get the DHCP Unique Identifier of the server the client is talking to.</short>
          <long>&#10; Get the DHCP Unique Identifier of the server the client is talking to.&#10;&#10; @buf return buffer&#10; @len length of buf&#10; @return number of bytes written, or -1 on error&#10;</long>
        </documentation>
        <interfacedef-ref qname="Dhcp6Info"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x404fc440" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x404fc5d8" loc="48:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="useUnicast" ref="0x40508368" loc="60:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
          <short>&#10; controls weather or not the client sends unicast messages to dhcp&#10; servers.</short>
          <long>&#10; controls weather or not the client sends unicast messages to dhcp&#10; servers.  default is yes; if no, the client will always use the&#10; link-local all dhcp agents multicast group (ff02::1:a)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Dhcp6Info"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="yes" ref="0x40508210" loc="60:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTimers" ref="0x404fcdc0" loc="53:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
          <short>&#10; </short>
          <long>&#10; @t struct containing the current state of timers associated with our lease.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Dhcp6Info"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="dh6_timers" ref="0x404afb40"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t" ref="0x404fcc68" loc="53:/opt/tinyos-2.x/tos/lib/net/blip/dhcp/Dhcp6Info.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="dh6_timers" ref="0x404afb40"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Init" loc="51:/opt/tinyos-2.x/tos/interfaces/Init.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40522138" loc="62:/opt/tinyos-2.x/tos/interfaces/Init.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/Init.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components.  &#10; &#10; @return SUCCESS if initialized properly, FAIL otherwise.&#10; @see TEP 107: Boot Sequence&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="Init"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128Calibrate" loc="26:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
      <documentation loc="11:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <short>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent.</short>
        <long>&#10; This interface provides functions to compute ATmega128 configuration&#10; values that are clock-rate dependent. These include:&#60;ul>&#10; &#60;li>the ADC prescaler value necessary for full precision&#10; &#60;li>values for the UBRR registers to achieve a specific baud rate&#10; &#60;li>any adjustment necessary to values passed to some platform-provided&#10;   AlarmMicroXXC components to get more accurate timing&#10; &#60;li>the number of cycles per 1/32768s (a typical implementation of this&#10;   interface will measure this value at boot time and use it to compute&#10;   the values above)&#10; &#60;/ul>&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="baudrateRegister" ref="0x4052a360" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate.</short>
          <long>&#10; Return the value to use for the baudrate register to achieve a&#10; particular baud rate. Assumes U2X=1 (the USART is being run at&#10; double speed).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="baudrate" ref="0x4052a208" loc="60:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cyclesPerJiffy" ref="0x405219c0" loc="31:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return CPU cycles per 1/32768s.</short>
          <long>&#10; Return CPU cycles per 1/32768s.&#10; @return CPU cycles.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="calibrateMicro" ref="0x4051e010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="33:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.</short>
          <long>&#10; Convert n microseconds into a value suitable for use with&#10; AlarmMicro32C Alarms.&#10; @param n Time in microseconds.&#10; @return AlarmMicro argument that best approximates n microseconds.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x40521ea0" loc="39:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="actualMicro" ref="0x4051e6d8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.</short>
          <long>&#10; Convert values used by AlarmMicro32C Alarms into actual microseconds.&#10; @param n A time expressed in AlarmMicro time units.&#10; @return Time in microseconds that corresponds to AlarmMicro argument n.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="n" ref="0x4051e580" loc="46:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="adcPrescaler" ref="0x4051ec30" loc="53:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/chips/atm128/timer/Atm128Calibrate.nc">
          <short>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.</short>
          <long>&#10; Return the smallest ADC prescaler value which guaranteers full&#10; ADC precision.&#10; @return ADC prescaler value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128Calibrate"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GeneralIO" loc="38:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <short>&#10; </short>
        <long>&#10; @author Joe Polastre&#10;</long>
      </documentation>
      <function command="" provided="0" name="makeInput" ref="0x405507a0" loc="44:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isInput" ref="0x40550b88" loc="45:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40550010" loc="42:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOutput" ref="0x4055c408" loc="47:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x405503d0" loc="43:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="makeOutput" ref="0x4055c010" loc="46:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40553880" loc="40:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clr" ref="0x40553c10" loc="41:/opt/tinyos-2.x/tos/interfaces/GeneralIO.nc">
        <interfacedef-ref qname="GeneralIO"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Read" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <short>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values.</short>
        <long>&#10; The Read interface is intended for split-phase low-rate or&#10; high-latency reading of small values. The type of the value is&#10; given as a template argument. Because this interface is&#10; split-phase, these values may be backed by hardware, or a&#10; long-running computation.&#10;&#10; &#60;p>&#10; See TEP114 - SIDs: Source and Sink Independent Drivers for details.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:14 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x405c6980" loc="49:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <interfacedef-ref qname="Read"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405c6980"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x405c6e30" loc="55:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x405d15f0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Read.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="Read"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405c6980"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x405d12c0" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x405d1490" loc="63:/opt/tinyos-2.x/tos/interfaces/Read.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x405c6980"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Timer" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <short>&#10; A Timer is TinyOS's general purpose timing interface.</short>
        <long>&#10; A Timer is TinyOS's general purpose timing interface. For more precise&#10; timing, you may wish to use a (platform-specific) component offering&#10; an Alarm interface.&#10;&#10; &#60;p>A Timer is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405cdc40" loc="53:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <interfacedef-ref qname="Timer"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405cdc40"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405d7520" loc="136:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="132:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405d9210" loc="83:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).</short>
          <long>&#10; Signaled when the timer expires (one-shot) or repeats (periodic).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodicAt" ref="0x405d8378" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. The &#60;code>fired&#60;/code> will be signaled every&#10; dt units (first event at t0+dt units). Periodic timers set in the past&#10; will get a bunch of events in succession, until the timer &#34;catches up&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405d8030" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405d8218" loc="114:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isOneShot" ref="0x405d9b60" loc="98:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="94:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if this is a one-shot timer.</short>
          <long>&#10; Check if this is a one-shot timer.&#10; @return TRUE for one-shot timers, FALSE for periodic timers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getdt" ref="0x405d7e98" loc="151:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="146:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the delay or period for the previously started timer.</short>
          <long>&#10; Return the delay or period for the previously started timer. The next&#10; fired event will occur at gett0() + getdt().&#10; @return Timer's interval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="gett0" ref="0x405d7968" loc="144:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers.</short>
          <long>&#10; Return the time anchor for the previously started timer or the time of&#10; the previous event for periodic timers. The next fired event will occur&#10; at gett0() + getdt().&#10; @return Timer's base time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405d96a0" loc="92:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Check if timer is running.</short>
          <long>&#10; Check if timer is running. Periodic timers run until stopped or&#10; replaced, one-shot timers run until their deadline expires.&#10;&#10; @return TRUE if the timer is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startPeriodic" ref="0x405da2b0" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a periodic timer to repeat every dt time units.</short>
          <long>&#10; Set a periodic timer to repeat every dt time units. Replaces any&#10; current timer settings. Equivalent to startPeriodicAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled every dt units (first&#10; event in dt units).&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405da158" loc="64:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShotAt" ref="0x405d8d60" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="116:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to time t0+dt.</short>
          <long>&#10; Set a single-short timer to time t0+dt. Replaces any current timer&#10; settings. The &#60;code>fired&#60;/code> will be signaled when the timer&#10; expires. Timers set in the past will fire &#34;soon&#34;.&#10;&#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for timer.&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405d8a18" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
          <variable name="dt" ref="0x405d8c00" loc="129:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="startOneShot" ref="0x405da948" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Set a single-short timer to some time units in the future.</short>
          <long>&#10; Set a single-short timer to some time units in the future. Replaces&#10; any current timer settings. Equivalent to startOneShotAt(getNow(),&#10; dt). The &#60;code>fired&#60;/code> will be signaled when the timer expires.&#10;&#10; @param dt Time until the timer fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405da7f0" loc="73:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405dae18" loc="78:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Timer.nc">
          <short>&#10; Cancel a timer.</short>
          <long>&#10; Cancel a timer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Timer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Alarm" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <short>&#10; An Alarm is a low-level interface intended for precise timing.</short>
        <long>&#10; An Alarm is a low-level interface intended for precise timing.&#10;&#10; &#60;p>An Alarm is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>An Alarm's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as an Alarm parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Alarm.&#10; @param size_type An integer type representing time values for this Alarm.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x405e8a68" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x405e8a68"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x405e8bd0" loc="56:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <interfacedef-ref qname="Alarm"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="getNow" ref="0x405f1eb0" loc="109:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the current time.</short>
          <long>&#10; Return the current time.&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x405f3b58" loc="78:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Signaled when the alarm expires.</short>
          <long>&#10; Signaled when the alarm expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startAt" ref="0x405f1868" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to time t0+dt.</short>
          <long>&#10; Set a single-short alarm to time t0+dt. Replaces any current alarm&#10; time. The &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10; Alarms set in the past will fire &#34;soon&#34;.&#10; &#10; &#60;p>Because the current time may wrap around, it is possible to use&#10; values of t0 greater than the &#60;code>getNow&#60;/code>'s result. These&#10; values represent times in the past, i.e., the time at which getNow()&#10; would last of returned that value.&#10;&#10; @param t0 Base time for alarm.&#10; @param dt Alarm time as offset from t0.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="t0" ref="0x405f1518" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          </variable>
          <variable name="dt" ref="0x405f1708" loc="103:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isRunning" ref="0x405f1010" loc="88:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Check if alarm is running.</short>
          <long>&#10; Check if alarm is running. Note that a FALSE return does not indicate&#10; that the &#60;code>fired&#60;/code> event will not be signaled (it may have&#10; already started executing, but not reached your code yet).&#10;&#10; @return TRUE if the alarm is still running.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getAlarm" ref="0x405f0368" loc="116:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="111:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.</short>
          <long>&#10; Return the time the currently running alarm will fire or the time that&#10; the previously running alarm was set to fire.&#10; @return Alarm time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x405f3218" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Set a single-short alarm to some time units in the future.</short>
          <long>&#10; Set a single-short alarm to some time units in the future. Replaces&#10; any current alarm time. Equivalent to start(getNow(), dt). The&#10; &#60;code>fired&#60;/code> will be signaled when the alarm expires.&#10;&#10; @param dt Time until the alarm fires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x405f30c0" loc="66:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405e8bd0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x405f36f8" loc="73:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/timer/Alarm.nc">
          <short>&#10; Cancel an alarm.</short>
          <long>&#10; Cancel an alarm. Note that the &#60;code>fired&#60;/code> event may have&#10; already been signaled (even if your code has not yet started&#10; executing).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Alarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCompare" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
      <parameters>
        <typedef name="size_type" ref="0x40603cf0" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
          <interfacedef-ref qname="AtmegaCompare"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603cf0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4060a390" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4060a238" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x4060cef8" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4060cb18" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="force" ref="0x4060ab68" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4060c210" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603cf0"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x4060b2c8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4060a7a0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4060be20" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4060c750" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603cf0"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x4060c5f8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40603cf0"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4060b690" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4060ba40" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCompare.nc">
        <interfacedef-ref qname="AtmegaCompare"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCounter" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
      <parameters>
        <typedef name="size_type" ref="0x405f5c80" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
          <interfacedef-ref qname="AtmegaCounter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5c80"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x405ff348" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x405ff1f0" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x40602eb0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x406021a8" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5c80"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40600288" loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x405ff758" loc="75:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40602ad0" loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x40600de0" loc="67:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x406026e8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5c80"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40602590" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x405f5c80"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x40600650" loc="61:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x40600a00" loc="64:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCounter.nc">
        <interfacedef-ref qname="AtmegaCounter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AtmegaCapture" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
      <parameters>
        <typedef name="size_type" ref="0x406217d8" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
          <interfacedef-ref qname="AtmegaCapture"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406217d8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="setMode" ref="0x4062fe90" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mode" ref="0x4062fd38" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="test" ref="0x406309e0" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x40630600" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40621cd0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406217d8"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40630d98" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMode" ref="0x4062d2c0" loc="73:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOn" ref="0x4062f938" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40630238" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406217d8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x406300e0" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x406217d8"/></type-var>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="start" ref="0x4062f1a8" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x4062f558" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/timer/AtmegaCapture.nc">
        <interfacedef-ref qname="AtmegaCapture"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerOverride" loc="50:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/platforms/ucmini/hardware.h">
        <short>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.</short>
        <long>                                                                     &#10;  IMPORTANT: READ BEFORE DOWNLOADING, COPYING, INSTALLING OR USING.  By&#10;  downloading, copying, installing or using the software you agree to&#10;  this license.  If you do not agree to this license, do not download,&#10;  install, copy or use the software.&#10;&#10;  Copyright (c) 2004-2005 Crossbow Technology, Inc.&#10;  Copyright (c) 2002-2003 Intel Corporation.&#10;  Copyright (c) 2000-2003 The Regents of the University  of California.    &#10;  All rights reserved.&#10;&#10;  Permission to use, copy, modify, and distribute this software and its&#10;  documentation for any purpose, without fee, and without written&#10;  agreement is hereby granted, provided that the above copyright&#10;  notice, the (updated) modification history and the author appear in&#10;  all copies of this source code.&#10;&#10;  Permission is also granted to distribute this software under the&#10;  standard BSD license as contained in the TinyOS distribution.&#10;&#10;  THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS&#10;  ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT&#10;  LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A&#10;  PARTICULAR PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE INTEL OR ITS&#10;  CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL,&#10;  EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO,&#10;  PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR&#10;  PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF&#10;  LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING&#10;  NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS&#10;  SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.&#10;&#10;  @author Jason Hill, Philip Levis, Nelson Lee, David Gay&#10;  @author Alan Broad &#60;abroad@xbow.com>&#10;  @author Matt Miller &#60;mmiller@xbow.com>&#10;  @author Martin Turon &#60;mturon@xbow.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="lowestState" ref="0x4043c350" loc="62:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerOverride.nc">
          <short>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound.</short>
          <long>&#10; Called when computing the low power state, in order to allow&#10; a high-level component to institute a lower bound. Because&#10; this command originates deep within the basic TinyOS scheduling&#10; mechanisms, it should be used very sparingly. Refer to TEP 112 for&#10; details.&#10;&#10; @return    the lowest power state the system can enter to meet the &#10;            requirements of this component&#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerOverride"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="mcu_power_t" ref="0x4040e470"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuPowerState" loc="46:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
      <documentation loc="35:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <short>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed.</short>
        <long>&#10; Interface to instruct TinyOS that the low-power state of the MCU&#10; may have changed. TEP 112 describes how an MCU computes this state&#10; and how the Scheduler uses this interface to manage system power&#10; draw.&#10; &#10; @author Philip Levis&#10; @date   Oct 26, 2005&#10; @see    TEP 112: Microcontroller Power Management&#10;</long>
      </documentation>
      <function command="" provided="0" name="update" ref="0x4035be88" loc="52:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/McuPowerState.nc">
          <short> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed.</short>
          <long> &#10; Called by any component to tell TinyOS that the MCU low&#10; power state may have changed. Generally, this should be&#10; called whenever a peripheral/timer is started/stopped. &#10;</long>
        </documentation>
        <interfacedef-ref qname="McuPowerState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="McuSleep" loc="74:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <short>&#10; Interface to instruct the MCU to enter a low power state.</short>
        <long>&#10; Interface to instruct the MCU to enter a low power state. TEP112&#10; describes how an MCU computes this state and how the Scheduler uses&#10; this interface to manage system power draw.&#10; &#10; @author Philip Levis&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @date   Oct 26, 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="sleep" ref="0x4041fa98" loc="76:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/McuSleep.nc">
          <short> Called by the scheduler to put the MCU to sleep.</short>
          <long> Called by the scheduler to put the MCU to sleep. *</long>
        </documentation>
        <interfacedef-ref qname="McuSleep"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Counter" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <short>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.</short>
        <long>&#10; A Counter counts time in some units and in some width, signaling&#10; overflow.&#10;&#10; &#60;p>A Counter is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>A Counter's second parameter is its &#34;width&#34;, i.e., the number of&#10; bits used to represent time values. Width is indicated by including&#10; the appropriate size integer type as a Counter parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10; @param size_type An integer type representing time values for this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x406923c8" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x406923c8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40692530" loc="57:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <interfacedef-ref qname="Counter"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40692530"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40692a18" loc="64:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return counter value.</short>
          <long> &#10; Return counter value. Counters start at boot - some time sources may&#10; stop counting while the processor is in low-power mode.&#10; @return Current counter value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40692530"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="clearOverflow" ref="0x40690510" loc="76:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Cancel a pending overflow interrupt.</short>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOverflowPending" ref="0x40690010" loc="71:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="66:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.</short>
          <long> &#10; Return TRUE if an overflow event will occur after the outermost atomic&#10; block is exits.  FALSE otherwise.&#10; @return Counter pending overflow status.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="overflow" ref="0x40690910" loc="82:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/lib/timer/Counter.nc">
          <short>&#10; Signals that the current time has overflowed.</short>
          <long>&#10; Signals that the current time has overflowed.  That is, the current&#10; time has wrapped around from its maximum value to zero.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Counter"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TaskBasic" loc="55:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
      <function command="" provided="0" name="postTask" ref="0x4035c888" loc="67:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Post this task to the TinyOS scheduler.</short>
          <long>&#10; Post this task to the TinyOS scheduler. At some later time,&#10; depending on the scheduling policy, the scheduler will signal the&#10; &#60;tt>run()&#60;/tt> event. &#10;&#10; @return SUCCESS if task was successfuly&#10; posted; the semantics of a non-SUCCESS return value depend on the&#10; implementation of this interface (the class of task).&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="runTask" ref="0x4035cda0" loc="75:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/TaskBasic.nc">
          <short>&#10; Event from the scheduler to run this task.</short>
          <long>&#10; Event from the scheduler to run this task. Following the TinyOS&#10; concurrency model, the codes invoked from &#60;tt>run()&#60;/tt> signals&#10; execute atomically with respect to one another, but can be&#10; preempted by async commands/events.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TaskBasic"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceConfigure" loc="54:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10; &#10; This interface is provided by a Resource arbiter in order to allow&#10; users of a shared resource to configure that resource just before being&#10; granted access to it.  It will always be parameterized along side &#10; a parameterized Resource interface, with the ids from one mapping directly&#10; onto the ids of the other.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="unconfigure" ref="0x407454d0" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to unconfigure a resource just before releasing it.</short>
          <long>&#10; Used to unconfigure a resource just before releasing it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="configure" ref="0x40745010" loc="59:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceConfigure.nc">
          <short>&#10; Used to configure a resource just before being granted access to it.</short>
          <long>&#10; Used to configure a resource just before being granted access to it.&#10; Must always be used in conjuntion with the Resource interface.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcConfig" loc="19:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
      <documentation loc="13:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <short>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.</short>
        <long>&#10; Clients of the higher-level A/D system must implement this interface to&#10; specify which channel to sample, and with what parameters.&#10;&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRefVoltage" ref="0x40731a48" loc="32:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="27:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain reference voltage&#10; </short>
          <long>&#10; Obtain reference voltage&#10; @return The reference voltage to use. Must be one of the &#10;   ATM128_ADC_VREF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40731550" loc="25:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="20:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain channel.</short>
          <long>&#10; Obtain channel.&#10; @return The A/D channel to use. Must be one of the ATM128_ADC_SNGL_xxx&#10;   or ATM128_ADC_DIFF_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPrescaler" ref="0x40746010" loc="39:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
        <documentation loc="34:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcConfig.nc">
          <short>&#10; Obtain prescaler value.</short>
          <long>&#10; Obtain prescaler value.&#10; @return The prescaler value to use. Must be one of the &#10;   ATM128_ADC_PRESCALE_xxx values from Atm128Adc.h.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadNow" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <short>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values.</short>
        <long>&#10; The ReadNow interface is intended for split-phase low-latency&#10; reading of small values. The type of the value is given as a&#10; template argument. Because this interface is split-phase, these&#10; values may be backed by hardware. Providers of this interface&#10; should also provide a Resource interface, and this interface should&#10; only be used after the resource has been acquired. Otherwise, the&#10; low-latency requirement may be impossible to meet.&#10;&#10; &#60;p>&#10; This interface has the same calling semantics as the Read interface&#10; described in TEP 114, except that it is async.&#10; &#10; @param val_t the type of the object that will be returned&#10;&#10; @author Gilman Tolle &#60;gtolle@archrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-16 18:58:51 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="val_t" ref="0x407425c8" loc="52:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <interfacedef-ref qname="ReadNow"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x407425c8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="read" ref="0x40742a98" loc="58:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Initiates a read of the value.</short>
          <long>&#10; Initiates a read of the value.&#10; &#10; @return SUCCESS if a readDone() event will eventually come back.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="readDone" ref="0x4073f340" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
          <short>&#10; Signals the completion of the read().</short>
          <long>&#10; Signals the completion of the read().&#10;&#10; @param result SUCCESS if the read() was successful&#10; @param val the value that has been read&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReadNow"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x407425c8"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x4073f010" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
          <variable name="val" ref="0x4073f1e0" loc="66:/opt/tinyos-2.x/tos/interfaces/ReadNow.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="val_t" scoped="" ref="0x407425c8"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Resource" loc="77:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
      <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The Resource interface can be used to gain access to&#10; shared resources.  It is always offered as a parameterized&#10; interface, and its users gain access to the resource through some&#10; predefined arbitration policy.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.6 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40751538" loc="120:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="104:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Release a shared resource you previously acquired.</short>
          <long>&#10; Release a shared resource you previously acquired.  &#10;&#10; @return SUCCESS The resource has been released &#60;br>&#10;         FAIL You tried to release but you are not the&#10;              owner of the resource &#10;&#10; @note This command should never be called between putting in a request &#9;  &#10;       and waiting for a granted event.  Doing so will result in a&#10;       potential race condition.  There are ways to guarantee that no&#10;       race will occur, but they are clumsy and overly complicated.&#10;       Since it doesn't logically make since to be calling&#10;       &#60;code>release&#60;/code> before receiving a &#60;code>granted&#60;/code> event, &#10;       we have opted to keep thing simple and warn you about the potential &#10;       race.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="immediateRequest" ref="0x4073dc00" loc="97:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request immediate access to a shared resource.</short>
          <long>&#10; Request immediate access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. &#60;br>&#10;            FAIL The request cannot be fulfilled&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4073d600" loc="88:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="78:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; Request access to a shared resource.</short>
          <long>&#10; Request access to a shared resource. You must call release()&#10; when you are done with it.&#10;&#10; @return SUCCESS When a request has been accepted. The granted()&#10;                 event will be signaled once you have control of the&#10;                 resource.&#60;br>&#10;         EBUSY You have already requested this resource and a&#10;               granted event is pending&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407510c8" loc="102:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="99:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10; You are now in control of the resource.</short>
          <long>&#10; You are now in control of the resource.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x40751c30" loc="128:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/interfaces/Resource.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10;  @return TRUE  It is the owner &#60;br>&#10;             FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="Resource"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcMultiple" loc="77:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring data&#10; from multiple channels using the ATmega128's free-running mode.&#10; &#60;p>&#10; Because of the possibility that samples may be imprecise after &#10; switching channels and/or reference voltages, and because there&#10; is a one sample delay on swithcing channels and reference voltages,&#10; Atm128ADCMultiple is complex. Two straightforward uses are:&#10; &#60;ol type=&#34;A&#34;>&#10; &#60;li>Acquire N samples from channel C:&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C at the desired rate&#10;       (note that the choice of prescalers is very limited, so you&#10;       don't have many choices for sampling rate)&#10;    &#60;li>ignore the first dataReady event&#10;    &#60;li>use the results of the next N dataReady() events, return FALSE&#10;       on the last one&#10;    &#60;/ol>&#10; &#60;li>Acquire one sample each from channels C1, ..., Cn (this pseudocode&#10;    assumes that none of these channels are differential)&#10;    &#60;ol>&#10;    &#60;li>call getData to start sampling on channel C1&#10;    &#60;li>on the ith dataReady event switch to channel Ci+1 by changing&#10;       *newChannel&#10;    &#60;li>the data passed to the ith dataReady event is for channel Ci-1&#10;       (the data from the first dataReady event is ignored)&#10;    &#60;/ol>&#10; &#60;/ol>&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x407485c8" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.</short>
          <long>&#10; Initiates free-running ADC conversions, with the ability to switch &#10; channels and reference-voltage with a one sample delay.&#10;&#10; @param channel Initial A/D conversion channel. The channel can &#10;   be changed in the dataReady event, though these changes happen&#10;   with a one-sample delay (this is a hardware restriction).&#10; @param refVoltage Initial A/D reference voltage. See the&#10;   ATM128_ADC_VREF_xxx constants in Atm128ADC.h. Like the channel,&#10;   the reference voltage can be changed in the dataReady event with&#10;   a one-sample delay.&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in reference voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4074ed90" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x40748010" loc="100:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x40748238" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x40748458" loc="101:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40747930" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
        <documentation loc="103:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
          <short>&#10; Returns the next sample in a free-running conversion.</short>
          <long>&#10; Returns the next sample in a free-running conversion. Allow the user&#10; to switch channels and/or reference voltages with a one sample delay.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if this conversion was precise, FALSE if it wasn't &#10;   (we assume that the second conversion after a change of reference&#10;   voltage or after switching to a differential channel is precise)&#10; @param channel Channel this sample was from.&#10; @param newChannel Change this parameter to switch to a new channel&#10;   for the second next sample.&#10; @param newRefVoltage Change this parameter to change the reference &#10;   voltage for the second next sample.&#10;&#10; @return TRUE to continue sampling, FALSE to stop.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcMultiple"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40748ee8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x407470f0" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
          <variable name="channel" ref="0x407472f8" loc="119:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="newChannel" ref="0x40747550" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="newRefVoltage" ref="0x407477b8" loc="120:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcMultiple.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Atm128AdcSingle" loc="52:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <short>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.</short>
        <long>&#10; Hardware Abstraction Layer interface of Atmega128 for acquiring&#10; a single sample from a channel.&#10;&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="getData" ref="0x4074c7f0" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Initiates an ADC conversion on a given channel.</short>
          <long>&#10; Initiates an ADC conversion on a given channel.&#10;&#10; @param channel A/D conversion channel.&#10; @param refVoltage Select reference voltage for A/D conversion. See&#10;   the ATM128_ADC_VREF_xxx constants in Atm128ADC.h&#10; @param leftJustify TRUE to place A/D result in high-order bits &#10;   (i.e., shifted left by 6 bits), low to place it in the low-order bits&#10; @param prescaler Prescaler value for the A/D conversion clock. If you &#10;  specify ATM128_ADC_PRESCALE, a prescaler will be chosen that guarantees&#10;  full precision. Other prescalers can be used to get faster conversions. &#10;  See the ATmega128 manual for details.&#10; @return TRUE if the conversion will be precise, FALSE if it will be &#10;   imprecise (due to a change in refernce voltage, or switching to a&#10;   differential input channel)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4074c010" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="refVoltage" ref="0x4074c238" loc="70:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="leftJustify" ref="0x4074c460" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
          <variable name="prescaler" ref="0x4074c680" loc="71:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4074b8e8" loc="91:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Cancel an outstanding getData operation.</short>
          <long>&#10; Cancel an outstanding getData operation. Use with care, to&#10; avoid problems with races between the dataReady event and cancel.&#10; @return TRUE if a conversion was in-progress or an interrupt&#10;   was pending. dataReady will not be signaled. FALSE if the&#10;   conversion was already complete. dataReady will be (or has&#10;   already been) signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x4074b360" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
          <short>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.</short>
          <long>&#10; Indicates a sample has been recorded by the ADC as the result&#10; of a &#60;code>getData()&#60;/code> command.&#10;&#10; @param data a 2 byte unsigned data value sampled by the ADC.&#10; @param precise if the conversion precise, FALSE if it wasn't. This&#10;   values matches the result from the &#60;code>getData&#60;/code> call.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Atm128AdcSingle"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4074b010" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="precise" ref="0x4074b200" loc="81:/opt/tinyos-2.x/tos/chips/atm128/adc/Atm128AdcSingle.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Adc" loc="48:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <short>&#10; HPL interface to the Atmega128 A/D conversion subsystem.</short>
        <long>&#10; HPL interface to the Atmega128 A/D conversion subsystem. Please see the&#10; Atmega128 manual for full details on the functioning of this subsystem.&#10; &#60;p>&#10; A word of warning: the Atmega128 SLEEP instruction initiates an A/D&#10; conversion when the ADC and ADC interrupt are enabled.&#10;&#10; @author Martin Turon &#60;mturon@xbow.com>&#10; @author Hu Siquan &#60;husq@xbow.com>&#10; @author David Gay&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40766b70" loc="140:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="137:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isAdlarOn" ref="0x40755d98" loc="72:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns ADLAR (ADC left adjust result) status&#10; </short>
          <long>&#10; Returns ADLAR (ADC left adjust result) status&#10; @returns TRUE if ADLAR is on.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPrescaler" ref="0x40764010" loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="161:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set ADC prescaler selection bits&#10; </short>
          <long>&#10; Set ADC prescaler selection bits&#10; @param scale New ADC prescaler. Must be one of the ATM128_ADC_PRESCALE_xxx&#10;   values from Atm128Adc.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="scale" ref="0x40765e78" loc="166:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40765010" loc="148:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="144:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is ADC enabled?&#10; </short>
          <long>&#10; Is ADC enabled?&#10; @return TRUE if the ADC is enabled, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4075ae90" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the ADC channel&#10; </short>
          <long>&#10; Sets the ADC channel&#10; @param mux New channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="mux" ref="0x4075ad38" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableAdc" ref="0x40753c40" loc="108:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdlar" ref="0x407558f0" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; </short>
          <long>&#10; Turns ADLAR (ADC left adjust result) on/off&#10; @param adlarOn TRUE turns on ADLAR, FALSE turns it off&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adlarOn" ref="0x40755798" loc="66:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableInterruption" ref="0x407524c0" loc="117:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isComplete" ref="0x40765928" loc="159:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="154:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.</short>
          <long>&#10; Is A/D conversion complete? Note that this flag is automatically&#10; cleared when an A/D interrupt occurs.&#10; @return TRUE if the A/D conversion is complete, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x407644b8" loc="176:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="168:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Cancel A/D conversion and any pending A/D interrupt.</short>
          <long>&#10; Cancel A/D conversion and any pending A/D interrupt. Also disables the&#10; ADC interruption (otherwise a sample might start at the next sleep&#10; instruction). This command can assume that the A/D converter is enabled. &#10; @return TRUE if an A/D conversion was in progress or an A/D interrupt&#10;   was pending, FALSE otherwise. In single conversion mode, a return&#10;   of TRUE implies that the dataReady event will not be signaled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableAdc" ref="0x40752070" loc="112:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRef" ref="0x407547e8" loc="84:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current reference voltage&#10; </short>
          <long>&#10; Returns the current reference voltage&#10; @returns the current reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableInterruption" ref="0x40752918" loc="121:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="118:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Disable ADC interrupt&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetInterrupt" ref="0x40752dc8" loc="125:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Clear the ADC interrupt flag&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startConversion" ref="0x407662a8" loc="132:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Start ADC conversion.</short>
          <long>&#10; Start ADC conversion. If ADC interrupts are enabled, the dataReady event&#10; will be signaled once (in non-continuous mode) or repeatedly (in&#10; continuous mode).&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isStarted" ref="0x40765480" loc="153:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Is A/D conversion in progress?&#10; </short>
          <long>&#10; Is A/D conversion in progress?&#10; @return TRUE if the A/D conversion is in progress, FALSE otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x40755330" loc="60:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Returns the current ADC channel&#10; </short>
          <long>&#10; Returns the current ADC channel&#10; @return Current channel&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAdcsra" ref="0x40753330" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Set the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Set the ADCSRA (ADC control) register&#10; @param adcsra New ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40422658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40422a00"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="adcsra" ref="0x407531d8" loc="95:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40422658"/>
              <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40422a00"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRef" ref="0x40754380" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Sets the reference voltage&#10; </short>
          <long>&#10; Sets the reference voltage&#10; @param ref New reference voltage&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ref" ref="0x40754228" loc="78:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAdcsra" ref="0x40754ce0" loc="90:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="86:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the ADCSRA (ADC control) register&#10; </short>
          <long>&#10; Read the ADCSRA (ADC control) register&#10; @return Current ADCSRA value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:1" alignment="I:1"><struct-ref ref="0x40422658"/>
            <typename><typedef-ref name="Atm128Adcsra_t" ref="0x40422a00"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setContinuous" ref="0x40766770" loc="136:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Enable continuous sampling&#10;</short>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getValue" ref="0x407537e0" loc="101:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; Read the latest A/D conversion result&#10; </short>
          <long>&#10; Read the latest A/D conversion result&#10; @return A/D value&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReady" ref="0x40764c08" loc="182:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
        <documentation loc="178:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
          <short>&#10; A/D interrupt occured&#10; </short>
          <long>&#10; A/D interrupt occured&#10; @param data Latest A/D conversion result&#10;</long>
        </documentation>
        <interfacedef-ref qname="HplAtm128Adc"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40764ab0" loc="182:/opt/tinyos-2.x/tos/chips/atm128rfa1/adc/HplAtm128Adc.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AsyncStdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This is the asynchronous counterpart to the StdContol interface.  It&#10; should be used for switching between the on and off power states of&#10; the component providing it.  This interface differs from the&#10; StdControl interface only in the fact that any of its commands can&#10; be called from asynchronous context.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x4075be88" loc="95:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x407583e0" loc="105:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/AsyncStdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="AsyncStdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceRequested" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ResourceRequested interface can be used in conjunction with the &#10; Resource interface in order to receive events based on other users&#10; requests.&#10; &#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10; @version $Revision: 1.5 $&#10; @date $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function event="" provided="0" name="requested" ref="0x407b8458" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x407b8a30" loc="61:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceRequested.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceRequested"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceDefaultOwner" loc="40:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
      <documentation loc="31:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; </short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; @author Kevin Klues (klues@tkn.tu-berlin.edu)&#10; @version $ $&#10; @date $Date: 2007-02-04 20:06:42 $ &#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x407b61a8" loc="56:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Release control of the resource&#10;&#10; </short>
          <long>&#10; Release control of the resource&#10;&#10; @return SUCCESS The resource has been released and pending requests&#10;                 can resume. &#60;br>&#10;             FAIL You tried to release but you are not the&#10;                  owner of the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="requested" ref="0x407b6b90" loc="73:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.request() command. You may want to&#10; consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="granted" ref="0x407a2c40" loc="46:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle.</short>
          <long>&#10; Event sent to the resource controller giving it control whenever a resource&#10; goes idle. That is to say, whenever no one currently owns the resource,&#10; and there are no more pending requests&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isOwner" ref="0x407b66b8" loc="65:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  </short>
          <long>&#10;  Check if the user of this interface is the current&#10;  owner of the Resource&#10; &#10;  @return TRUE  It is the owner &#60;br>&#10;          FALSE It is not the owner&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="immediateRequested" ref="0x407b41a8" loc="81:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/ResourceDefaultOwner.nc">
          <short>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command.</short>
          <long>&#10; This event is signalled whenever the user of this interface&#10; currently has control of the resource, and another user requests&#10; it through the Resource.immediateRequest() command. You may&#10; want to consider releasing a resource based on this event&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceDefaultOwner"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ArbiterInfo" loc="82:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
      <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <short>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.</short>
        <long>&#10; Please refer to TEP 108 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; The ArbiterInfo interface allows a component to query the current &#10; status of an arbiter.  It must be provided by ALL arbiter implementations,&#10; and can be used for a variety of different purposes.  Normally it will be&#10; used in conjunction with the Resource interface for performing run time&#10; checks on access rights to a particular shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="inUse" ref="0x407b34e8" loc="90:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Check whether a resource is currently allocated.</short>
          <long>&#10; Check whether a resource is currently allocated.&#10;&#10; @return TRUE If the resource being arbitrated is currently allocated&#10;              to any of its users&#60;br>&#10;         FALSE Otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="userId" ref="0x407b39e8" loc="98:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/ArbiterInfo.nc">
          <short>&#10; Get the id of the client currently using a resource.</short>
          <long>&#10; Get the id of the client currently using a resource.&#10; &#10; @return Id of the current owner of the resource&#60;br>&#10;         0xFF if no one currently owns the resource&#10;</long>
        </documentation>
        <interfacedef-ref qname="ArbiterInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ResourceQueue" loc="45:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <short>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration.</short>
        <long>&#10;  A queue interface for managing client ids when performing resource &#10;  arbitration. A single slot in the queue is guaranteed to each resource&#10;  client, with the actual queing policy determined by the implementation&#10;  of the interface.&#10;&#10;  @author Kevin Klues &#60;klueska@cs.wustl.edu>&#10;  @date   $Date: 2010-06-29 22:07:46 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="enqueue" ref="0x407c5840" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Enqueue a client id&#10;&#10; </short>
          <long>&#10; Enqueue a client id&#10;&#10; @param clientId - the client id to enqueue&#10; @return SUCCESS if the client id was enqueued successfully &#60;br>&#10;         EBUSY   if it has already been enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407b11f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407c56e8" loc="79:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407b11f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isEmpty" ref="0x407ae4c8" loc="53:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if the queue is empty.</short>
          <long>&#10; Check to see if the queue is empty.&#10;&#10; @return TRUE  if the queue is empty. &#60;br>&#10;         FALSE if there is at least one entry in the queue&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnqueued" ref="0x407aeb88" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.</short>
          <long>&#10; Check to see if a given client id has already been enqueued&#10; and is waiting to be processed.&#10;&#10; @return TRUE  if the client id is in the queue. &#60;br>&#10;         FALSE if it does not&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407b11f0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x407aea30" loc="62:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="resource_client_id_t" ref="0x407b11f0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x407c5158" loc="70:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/interfaces/ResourceQueue.nc">
          <short>&#10; Retreive the client id of the next resource in the queue.</short>
          <long>&#10; Retreive the client id of the next resource in the queue. &#10; If the queue is empty, the return value is undefined.&#10;&#10; @return The client id at the head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ResourceQueue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="resource_client_id_t" ref="0x407b11f0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PowerDownCleanup" loc="55:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
      <documentation loc="41:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface exists to allow a Resource user to cleanup any state&#10; information before a shared Resource is shutdown.  It should be provided&#10; by the user of a shared Resource, and used by the&#10; power managment component for that Resource.  The &#60;code>cleanup()&#60;/code>&#10; command will be called by the power manager just before powering down&#10; the shared resource.&#10;&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="cleanup" ref="0x407fe4d8" loc="62:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/power/PowerDownCleanup.nc">
          <short>&#10; This command will be called by the power management component of&#10; a shared Resource.</short>
          <long>&#10; This command will be called by the power management component of&#10; a shared Resource.  The implementation of this command defines&#10; what must be done just before that shared Resource is shut off.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PowerDownCleanup"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BusyWait" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <short>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.</short>
        <long>&#10; BusyWait is a low-level interface intended for busy waiting for short&#10; durations.&#10;&#10; &#60;p>BusyWait is parameterised by its &#34;precision&#34; (milliseconds,&#10; microseconds, etc), identified by a type. This prevents, e.g.,&#10; unintentionally mixing components expecting milliseconds with those&#10; expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>BusyWait's second parameter is its &#34;width&#34;, i.e., the number of bits&#10; used to represent time values. Width is indicated by including the&#10; appropriate size integer type as a BusyWait parameter.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this BusyWait&#10;   interface.&#10; @param size_type An integer type representing time values for this &#10;   BusyWait interface.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x408044c0" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x408044c0"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x40804628" loc="59:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <interfacedef-ref qname="BusyWait"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40804628"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="wait" ref="0x40804c40" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
          <short>&#10; Busy wait for (at least) dt time units.</short>
          <long>&#10; Busy wait for (at least) dt time units. Use sparingly, when the&#10; cost of using an Alarm or Timer would be too high.&#10; @param dt Time to busy wait for.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BusyWait"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40804628"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dt" ref="0x40804ae8" loc="66:/opt/tinyos-2.x/tos/lib/timer/BusyWait.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x40804628"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GpioInterrupt" loc="43:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui&#10; @author Joe Polastre&#10; Revision:  $Revision: 1.5 $&#10;&#10; Provides a microcontroller-independent presentation of interrupts&#10;</long>
      </documentation>
      <function event="" provided="0" name="fired" ref="0x409210c8" loc="68:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>&#10; Fired when an edge interrupt occurs.</short>
          <long>&#10; Fired when an edge interrupt occurs.&#10;&#10; NOTE: Interrupts keep running until &#34;disable()&#34; is called&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40922c30" loc="61:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; </short>
          <long>  &#10; Diables an edge interrupt or capture interrupt&#10; &#10; @return SUCCESS if the interrupt has been disabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableFallingEdge" ref="0x40922820" loc="54:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRisingEdge" ref="0x409222b8" loc="53:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/GpioInterrupt.nc">
          <short> &#10; Enable an edge based interrupt.</short>
          <long> &#10; Enable an edge based interrupt. Calls to these functions are&#10; not cumulative: only the transition type of the last called function&#10; will be monitored for.&#10;&#10;&#10; @return SUCCESS if the interrupt has been enabled&#10;</long>
        </documentation>
        <interfacedef-ref qname="GpioInterrupt"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtmegaPinChange" loc="35:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
      <function command="" provided="0" name="test" ref="0x409371a8" loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="fired" ref="0x4093cda0" loc="40:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disable" ref="0x40937cf8" loc="54:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isEnabled" ref="0x40936138" loc="57:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40937560" loc="46:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMask" ref="0x40936aa8" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="value" ref="0x40936950" loc="65:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enable" ref="0x40937930" loc="51:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getPins" ref="0x40936ec8" loc="70:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getMask" ref="0x40936558" loc="62:/opt/tinyos-2.x/tos/chips/atm128rfa1/pins/HplAtmegaPinChange.nc">
        <interfacedef-ref qname="HplAtmegaPinChange"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMSend" loc="58:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40964cb8" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param 'message_t* ONE msg'    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40964758" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40964970" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40964b50" loc="80:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40960a88" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="126:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  'message_t* ONE msg'    the packet&#10; @return 'void* COUNT(len)'      the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40960728" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40960908" loc="135:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x409601c8" loc="123:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40961b80" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  'message_t* ONE msg'    the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40961a28" loc="96:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x4095f898" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
        <documentation loc="98:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  'message_t* ONE msg'   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095f540" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x4095f738" loc="110:/opt/tinyos-2.x/tos/interfaces/AMSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Packet" loc="55:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <short> &#10; The basic message data type accessors.</short>
        <long> &#10; The basic message data type accessors. Protocols may use&#10; additional packet interfaces for their protocol specific&#10; data/metadata.&#10;&#10; @author Philip Levis&#10; @date   January 5 2005&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x40977580" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Clear out this packet.</short>
          <long>&#10; Clear out this packet.  Note that this is a deep operation and&#10; total operation: calling clear() on any layer will completely&#10; clear the packet for reuse.&#10; @param  'message_t* ONE msg'    the packet to clear&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40977428" loc="65:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x40976010" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the length of the payload of msg.</short>
          <long>&#10; Return the length of the payload of msg. This value may be less&#10; than what maxPayloadLength() returns, if the packet is smaller than&#10; the MTU. If a communication component does not support variably&#10; sized data regions, then payloadLength() will always return&#10; the same value as maxPayloadLength(). &#10;&#10; @param  'message_t* ONE msg'    the packet to examine&#10; @return        the length of its current payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40977df8" loc="78:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40973010" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; If the caller intends to write to the payload region then&#10; the &#60;tt>len&#60;/tt> parameter must reflect the maximum required&#10; length. If the caller (only) wants to read from the payload&#10; region, then &#60;tt>len&#60;/tt> may be set to the value of&#10; payloadLength(). If the payload region is smaller than &#10; &#60;tt>len&#60;/tt> this command returns NULL. The offset where&#10; the payload region starts within a packet is fixed, i.e. for&#10; a given &#60;tt>msg&#60;/tt> this command will always return the same&#10; pointer or NULL.&#10;&#10; @param 'message_t* ONE msg'   the packet &#10; @param len   the length of payload required&#10; @return 'void* COUNT_NOK(len)'     a pointer to the packet's data payload for this layer&#10;              or NULL if &#60;tt>len&#60;/tt> is too big&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40974c58" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40974e38" loc="126:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40974670" loc="106:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. Note that, depending on protocol fields, a given&#10; request to send a packet may not be able to send the maximum&#10; payload length (e.g., if there are variable length&#10; fields). Protocols may provide specialized interfaces for these&#10; circumstances.&#10;&#10; @return   the maximum size payload allowed by this layer&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x40976c70" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
          <short>&#10; Set the length field of the packet.</short>
          <long>&#10; Set the length field of the packet. This value is not checked&#10; for validity (e.g., if it is larger than the maximum payload&#10; size). This command is not used when sending packets, as calls&#10; to send include a length parameter. Rather, it is used by&#10; components, such as queues, that need to buffer requests to&#10; send.  This command allows the component to store the length&#10; specified in the request and later recover it when actually&#10; sending.&#10;&#10; @param 'message_t* ONE msg'   the packet&#10; @param len   the value to set its length field to&#10;</long>
        </documentation>
        <interfacedef-ref qname="Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40976930" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40976b10" loc="94:/opt/tinyos-2.x/tos/interfaces/Packet.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Receive" loc="56:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function event="" provided="0" name="receive" ref="0x4095d930" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
          <short>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception.</short>
          <long>&#10; Receive a packet buffer, returning a buffer for the signaling&#10; component to use for the next reception. The return value&#10; can be the same as &#60;tt>msg&#60;/tt>, as long as the handling&#10; component copies out the data it needs.&#10;&#10; &#60;b>Note&#60;/b> that misuse of this interface is one of the most&#10; common bugs in TinyOS code. For example, if a component both calls a&#10; send on the passed message and returns it, then it is possible&#10; the buffer will be reused before the send occurs, overwriting&#10; the component's data. This would cause the mote to possibly&#10; instead send a packet it most recently received.&#10;&#10; @param  'message_t* ONE msg'        the receied packet&#10; @param  'void* COUNT(len) payload'  a pointer to the packet's payload&#10; @param  len      the length of the data region pointed to by payload&#10; @return 'message_t* ONE'              a packet buffer for the stack to use for the next&#10;                  received packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Receive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
              <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4095d3e8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4095d5c8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4095d7a8" loc="78:/opt/tinyos-2.x/tos/interfaces/Receive.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketAcknowledgements" loc="44:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <short>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.</short>
        <long>&#10; This interface allows a component to enable or disable acknowledgments&#10; on a per-packet basis.&#10;&#10; @author Jonathan Hui&#10; @author Philip Levis&#10; @author Joe Polastre&#10; @date   June 21 2006&#10;</long>
      </documentation>
      <function command="" provided="0" name="requestAck" ref="0x40979f28" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should use synchronous&#10; acknowledgments.&#10; The acknowledgment is synchronous as the caller can check whether the&#10; ack was received through the wasAcked() command as soon as a send operation&#10; completes.&#10;&#10; @param 'message_t* ONE msg' - A message which should be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are enabled, EBUSY&#10; if the communication layer cannot enable them at this time, FAIL&#10; if it does not support them.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40979dd0" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="noAck" ref="0x40985a30" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.</short>
          <long>&#10; Tell a protocol that when it sends this packet, it should not use&#10; synchronous acknowledgments.&#10;&#10; @param 'message_t* ONE msg' - A message which should not be acknowledged when transmitted.&#10; @return SUCCESS if acknowledgements are disabled, EBUSY&#10; if the communication layer cannot disable them at this time, FAIL&#10; if it cannot support unacknowledged communication.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409858d8" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasAcked" ref="0x409844e0" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
          <short>&#10; Tell a caller whether or not a transmitted packet was acknowledged.</short>
          <long>&#10; Tell a caller whether or not a transmitted packet was acknowledged.&#10; If acknowledgments on the packet had been disabled through noAck(),&#10; then the return value is undefined. If a packet&#10; layer does not support acknowledgements, this command must return always&#10; return FALSE.&#10;&#10; @param 'message_t* ONE msg' - A transmitted message.&#10; @return Whether the packet was acknowledged.&#10;&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketAcknowledgements"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40984388" loc="85:/opt/tinyos-2.x/tos/interfaces/PacketAcknowledgements.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="AMPacket" loc="61:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <short>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets.</short>
        <long>&#10; The Active Message accessors, which provide the AM local address and&#10; functionality for querying packets. Active Messages are a single-hop&#10; communication protocol. Therefore, fields such as source and destination&#10; represent the single-hop source and destination. Multihop sources and&#10; destinations are defined by the corresponding multihop protocol (if any).&#10; Also see the Packet interface.&#10;&#10; @author Philip Levis &#10; @date   January 18 2005&#10; @see    Packet&#10; @see    AMSend&#10; @see    TEP 116: Packet Protocols&#10;</long>
      </documentation>
      <function command="" provided="0" name="group" ref="0x4096c230" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Get the AM group of the AM packet.</short>
          <long>&#10; Get the AM group of the AM packet. The AM group is a logical&#10; identifier that distinguishes sets of nodes which may share&#10; a physical communication medium but wish to not communicate.&#10; The AM group logically separates the sets of nodes. When&#10; a node sends a packet, it fills in its AM group, and typically&#10; nodes only receive packets whose AM group field matches their&#10; own.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @return the AM group of this packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4096c0d8" loc="177:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x40971b68" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the source of the AM packet.</short>
          <long>&#10; Return the AM address of the source of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'  the packet&#10; @return      the source address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40971a10" loc="88:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40962a10" loc="68:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the node's active message address associated with this AM stack.</short>
          <long>&#10; Return the node's active message address associated with this AM stack.&#10; @return The address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x40971168" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM address of the destination of the AM packet.</short>
          <long>&#10; Return the AM address of the destination of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10; @param 'message_t* ONE amsg'    the packet&#10; @return        the destination address of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40971010" loc="78:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x409704c0" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="105:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the source field of the AM packet.</short>
          <long>&#10; Set the AM address of the source field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the source address&#10; and then recover it when actually sending. As an AM layer generally&#10; sets the source address to be the local address, this interface&#10; is not commonly used except when a system is bypassing the AM&#10; layer (e.g., a protocol bridge). If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40970158" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x40970360" loc="121:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4096f780" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM address of the destination field of the AM packet.</short>
          <long>&#10; Set the AM address of the destination field of the AM packet.  As&#10; the AM address is set as part of sending with the AMSend&#10; interface, this command is not used for sending packets.  Rather,&#10; it is used when a component, such as a queue, needs to buffer a&#10; request to send. The component can save the destination address&#10; and then recover it when actually sending. If &#60;tt>amsg&#60;/tt> is&#10; not an AM packet, the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @param  addr   the address&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4096f418" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4096f620" loc="103:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="type" ref="0x4096dbc0" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return the AM type of the AM packet.</short>
          <long>&#10; Return the AM type of the AM packet.&#10; If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of this command&#10; are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4096da68" loc="147:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setType" ref="0x4096b720" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="149:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM type of the AM packet.</short>
          <long>&#10; Set the AM type of the AM packet.  As the AM type is set as part&#10; of sending with the AMSend interface, this command is not used&#10; for sending packets. Instead, it is used when a component, such&#10; as a queue, needs to buffer a request to send. The component can&#10; save the AM type in the packet then recover it when actually&#10; sending. If &#60;tt>amsg&#60;/tt> is not an AM packet, the results of&#10; this command are undefined.&#10; &#10; @param  'message_t* ONE amsg'    the packet&#10; @param  t       the AM type&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4096b3f0" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="t" ref="0x4096b5c0" loc="162:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_id_t" ref="0x404bda78"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4096d088" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="123:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote.</short>
          <long>&#10; Return whether &#60;tt>amsg&#60;/tt> is destined for this mote. This is&#10; partially a shortcut for testing whether the return value of&#10; &#60;tt>destination&#60;/tt> and &#60;tt>address&#60;/tt> are the same. It&#10; may, however, include additional logic. For example, there&#10; may be an AM broadcast address: &#60;tt>destination&#60;/tt> will return&#10; the broadcast address, but &#60;tt>address&#60;/tt> will still be&#10; the mote's local address. If &#60;tt>amsg&#60;/tt> is not an AM packet,&#10; the results of this command are undefined.&#10;&#10; @param  'message_t* ONE amsg'   the packet&#10; @return        whether the packet is addressed to this AM stack&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x40970f08" loc="136:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x4096ceb0" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="179:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Set the AM group field of a packet.</short>
          <long>&#10; Set the AM group field of a packet. Note that most data link&#10; stacks will set this field automatically on a send request, which&#10; may overwrite changes made with this command.&#10;&#10; @param 'message_t* ONE amsg' the packet&#10; @param group the packet's new AM group value&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="amsg" ref="0x4096cb50" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x4096cd50" loc="187:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localGroup" ref="0x40987780" loc="195:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
        <documentation loc="189:/opt/tinyos-2.x/tos/interfaces/AMPacket.nc">
          <short>&#10; Provides the current AM group of this communication interface.</short>
          <long>&#10; Provides the current AM group of this communication interface.&#10;&#10; @return The AM group.&#10;</long>
        </documentation>
        <interfacedef-ref qname="AMPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Send" loc="55:/opt/tinyos-2.x/tos/interfaces/Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x4097eac0" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt>. To determine&#10; the maximum available size, use the Packet interface of the&#10; component providing Send. If send returns SUCCESS, then the&#10; component will signal the sendDone event in the future; if send&#10; returns an error, it will not signal sendDone.  Note that a&#10; component may accept a send request which it later finds it&#10; cannot satisfy; in this case, it will signal sendDone with an&#10; appropriate error code.&#10;&#10; @param   'message_t* ONE msg'     the packet to send&#10; @param   len     the length of the packet payload&#10; @return          SUCCESS if the request was accepted and will issue&#10;                  a sendDone event, EBUSY if the component cannot accept&#10;                  the request now but will be able to later, FAIL&#10;                  if the stack is in a state that cannot accept requests&#10;                  (e.g., it's off).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4097e780" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4097e960" loc="75:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40996628" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="115:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet which&#10; at least a certain length.  If the payload region is smaller than&#10; the len parameter, then getPayload returns NULL. This command&#10; behaves identicallt to &#60;tt>Packet.getPayload&#60;/tt> and is&#10; included in this interface as a convenience.&#10;&#10; @param   'message_t* ONE msg'    the packet&#10; @return  'void* COUNT_NOK(len)'  a pointer to the packet's payload&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409962c8" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x409964a8" loc="125:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40997d00" loc="112:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return  the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40998730" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;&#10; @param   'message_t* ONE msg'    the packet whose transmission should be cancelled&#10; @return         SUCCESS if the packet was successfully cancelled, FAIL&#10;                 otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409985d8" loc="89:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x409973e0" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt>&#10; is the sent buffer, and &#60;tt>error&#60;/tt> indicates whether the&#10; send was succesful, and if not, the cause of the failure.&#10; &#10; @param 'message_t* ONE msg'   the message which was requested to send&#10; @param error SUCCESS if it was transmitted successfully, FAIL if&#10;              it was not, ECANCEL if it was cancelled via &#60;tt>cancel&#60;/tt>&#10;</long>
        </documentation>
        <interfacedef-ref qname="Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40997088" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40997280" loc="100:/opt/tinyos-2.x/tos/interfaces/Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialPacketInfo" loc="10:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
      <documentation loc="1:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <short>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.</short>
        <long>&#10; Accessor methods used by a serial dispatcher to communicate with various&#10; message_t link formats over a serial port.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="upperLength" ref="0x409c08d0" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="24:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.</short>
          <long>&#10; Get the size of the payload (in bytes) given the size of the datalink&#10; packet (dataLinkLen) embedded in the message_t.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param dataLinkLength The size of the datalink packet.&#10; @return Returns the size of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409c0540" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dataLinkLen" ref="0x409c0770" loc="31:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="offset" ref="0x409c3628" loc="15:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="11:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the offset into a message_t where the header information begins.</short>
          <long>&#10; Get the offset into a message_t where the header information begins.&#10; @return Returns the offset.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dataLinkLength" ref="0x409c3ef8" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
          <short>&#10; Get the size of the datalink packet embedded in the message_t, in bytes.</short>
          <long>&#10; Get the size of the datalink packet embedded in the message_t, in bytes. &#10; This is the sum of the payload (upperLen) and the size of the link header.&#10; @param msg A pointer to the message_t to interrogate. (unused)&#10; @param upperLen The size of the payload.&#10; @return Returns the size of the datalink packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialPacketInfo"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x409c3b80" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="upperLen" ref="0x409c3d98" loc="23:/opt/tinyos-2.x/tos/lib/serial/SerialPacketInfo.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="StdControl" loc="86:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
      <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <short>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.</short>
        <long>&#10; Please refer to TEP 115 for more information about this interface and its&#10; intended use.&#60;br>&#60;br>&#10;&#10; This interface is used to switch between&#10; the on and off power states of the component providing it.  A call to the&#10; &#60;code>start()&#60;/code> command is a request to switch a component into the&#10; on state, and a call to the &#60;code>stop()&#60;/code> is a request to switch a&#10; component into the off state.&#10;&#10; @author Joe Polastre&#10; @author Kevin Klues (klueska@cs.wustl.edu)&#10;</long>
      </documentation>
      <function command="" provided="0" name="start" ref="0x409cb760" loc="95:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="88:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Start this component and all of its subcomponents.</short>
          <long>&#10; Start this component and all of its subcomponents.&#10;&#10; @return SUCCESS if the component was either already on or was &#10;         successfully turned on&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="stop" ref="0x409cbc28" loc="105:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/interfaces/StdControl.nc">
          <short>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).</short>
          <long>&#10; Stop the component and any pertinent subcomponents (not all&#10; subcomponents may be turned off due to wakeup timers, etc.).&#10;&#10; @return SUCCESS if the component was either already off or was &#10;         successfully turned off&#60;br>&#10;         FAIL otherwise&#10;</long>
        </documentation>
        <interfacedef-ref qname="StdControl"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFlush" loc="43:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <short>&#10; A basic interface to flush the serial port.</short>
        <long>&#10; A basic interface to flush the serial port.&#10;&#10; @author Ben Greenstein&#10; @author Philip Levis&#10; @date January 23 2006&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="flushDone" ref="0x409e2e18" loc="54:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Split phase event to indicate that the serial hardware is now idle.</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="flush" ref="0x409e29e0" loc="49:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/serial/SerialFlush.nc">
          <short> &#10; Request that the serial device signal when no more transmissions&#10; are pending (i.e., when the device is idle)&#10;</short>
        </documentation>
        <interfacedef-ref qname="SerialFlush"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SerialFrameComm" loc="47:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <short>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component.</short>
        <long>&#10;&#10; This interface sits between a serial byte encoding component and a&#10; framing/packetizing component. It is to be used with framing protocols&#10; that place delimiters between frames. This interface separates the tasks&#10; of interpreting and coding delimiters and escape bytes from the rest of&#10; the wire protocol.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date   August 7 2005&#10;</long>
      </documentation>
      <function command="" provided="0" name="putDelimiter" ref="0x409e51a8" loc="56:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent.</short>
          <long>&#10; Used by the upper layer to request that an interframe delimiter&#10; be sent. The lower layer is responsible for the determining the&#10; actual byte(s) that must be sent to delimit the frame.&#10; @return Returns a error_t code that indicates if the lower layer&#10; was able to put an interframe delimiter to serial (SUCCESS) or&#10; not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetSend" ref="0x409e5e08" loc="72:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with send-side frame&#10; delimiting or escaping be reset. Used to initialize the lower&#10; layer's send path and/or cancel a frame mid-transmission.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="dataReceived" ref="0x409e3010" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="87:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection.</short>
          <long>&#10; Signals the upper layer that a byte of data has been received&#10; from the serial connection. It passes this byte as a function&#10; parameter.  &#10; @param data The byte of data that has been received&#10; from the serial connection&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409e4e50" loc="94:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetReceive" ref="0x409e43f0" loc="79:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset.</short>
          <long>&#10; Requests that any underlying state associated with receive-side&#10; frame or escaping be reset. Used to initialize the lower layer's&#10; receive path and/or cancel a frame mid-reception when sync is lost.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="putData" ref="0x409e58d8" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.</short>
          <long>&#10;  Used by the upper layer to request that a byte of data be sent&#10;  over serial.&#10;  @param data The byte to be sent&#10;  @return Returns an error_t code that indicates if the lower layer&#10;  has accepted the byte for sending (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409e5780" loc="65:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="putDone" ref="0x409e3518" loc="100:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Split-phase event to signal when the lower layer has finished writing&#10; the last request (either putDelimiter or putData) to serial.</short>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="delimiterReceived" ref="0x409e4950" loc="85:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/lib/serial/SerialFrameComm.nc">
          <short>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.</short>
          <long>&#10; Signals the upper layer that an inter-frame delimiter has been &#10; received from the serial connection.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SerialFrameComm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendBytePacket" loc="53:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <short>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses.</short>
        <long>&#10; This is an interface that a serial framing protocol provides and a serial&#10; dispatcher uses. The call sequence should be as follows:&#10; The dispatcher should call startSend, specifying the first byte to&#10; send. The framing protocol can then signal as many nextBytes as it&#10; wants/needs, to spool in the bytes. It continues to do so until it receives&#10; a sendComplete call, which will almost certainly happen within a nextByte&#10; signal (i.e., re-entrant to the framing protocol).&#10; This allows the framing protocol to buffer as many bytes as it needs to to meet&#10; timing requirements, jitter, etc. &#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="completeSend" ref="0x409ca318" loc="71:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend.</short>
          <long>&#10; The dispatcher must indicate when the end-of-packet has been reached and does&#10; so by calling completeSend. The function may be called from within the&#10; implementation of a nextByte event.&#10; @return Returns an error_t code indicating whether the framer accepts&#10; this notification (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="nextByte" ref="0x409ca8e0" loc="81:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; Used by the framer to request the next byte to transmit.</short>
          <long>&#10; Used by the framer to request the next byte to transmit. The&#10; framer may allocate a buffer to pre-spool some or all of a&#10; packet; or it may request and transmit a byte at a time. If there&#10; are no more bytes to send, the dispatcher must call completeSend&#10; before returning from this function.&#10; @return The dispatcher must return the next byte to transmit&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startSend" ref="0x409cdcf0" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.</short>
          <long>&#10; The dispatcher may initiate a serial transmission by calling this function&#10; and passing the first byte to be transmitted.&#10; @param first_byte The first byte to be transmitted.&#10; @return Returns an error_t code indicating either that the framer&#10; has the resources available to transmit the frame (SUCCESS) or&#10; not (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="first_byte" ref="0x409cdb98" loc="62:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendCompleted" ref="0x409c9058" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
          <short>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf.</short>
          <long>&#10; The framer signals sendCompleted to indicate that it is done transmitting a&#10; packet on the dispatcher's behalf. A non-SUCCESS error_t code indicates that&#10; there was a problem in transmission.&#10; @param error The framer indicates whether it has successfully&#10; accepted the entirety of the packet from the dispatcher (SUCCESS)&#10; or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x409caec0" loc="91:/opt/tinyos-2.x/tos/lib/serial/SendBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReceiveBytePacket" loc="48:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <short>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses.</short>
        <long>&#10; This is the data interface that a serial protocol provides and&#10; a serial dispatcher uses. The dispatcher expects the following pattern&#10; of calls: ((startPacket)+ (byteReceived)* (endPacket)+)*&#10; It should ignore any signals that do not follow this pattern.&#10; The interface is used to separate the state machine of the wire protocol&#10; from the complexities of dispatch.&#10;&#10; @author Philip Levis&#10; @author Ben Greenstein&#10; @date August 7 2005&#10;&#10;</long>
      </documentation>
      <function event="" provided="0" name="startPacket" ref="0x409e81c8" loc="62:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer to indicate that reception of a frame has begun.</short>
          <long>&#10; Signals the upper layer to indicate that reception of a frame has begun.&#10; Used by the upper layer to prepare for packet reception. If the upper&#10; layer does not want to receive a packet (or isn't ready) it may&#10; return a non-SUCCESS code  such as EBUSY to the lower layer to discard&#10; the frame. The underlying layer may signal endPacket in response to&#10; such a discard request.&#10; @return Returns an error_t code indicating whether the&#10; dispatcher would like to receive a packet (SUCCESS), or not&#10; perhaps because it isn't ready (EBUSY).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="byteReceived" ref="0x409e89b0" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received.</short>
          <long>&#10; Signals the upper layer that a byte of the encapsulated packet has been&#10; received. Passes this byte as a parameter to the function.&#10; @param data A byte of the encapsulated packet that has been received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x409e8858" loc="69:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="endPacket" ref="0x409e6088" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
        <documentation loc="70:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
          <short>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received.</short>
          <long>&#10; Signalled to indicate that a packet encapsulated withing a serial&#10; frame has been received. SUCCESS should be passed by the lower layer&#10; following verification that the packet has been received correctly.&#10; A value of error_t indicating an error should be passed when the lower&#10; layer's verification test fails or when the lower layer loses sync.&#10; @param result An error_t code indicating whether the framer has&#10; passed all bytes of an encapsulated packet it receives from&#10; serial to the dispatcher (SUCCESS) or not (FAIL).&#10;</long>
        </documentation>
        <interfacedef-ref qname="ReceiveBytePacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="result" ref="0x409e8ef0" loc="80:/opt/tinyos-2.x/tos/lib/serial/ReceiveBytePacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartStream" loc="37:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a85060" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin transmission of a UART stream.</short>
          <long>&#10; Begin transmission of a UART stream. If SUCCESS is returned,&#10; &#60;code>sendDone&#60;/code> will be signalled when transmission is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes to send.&#10; @param len Number of bytes to send.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a88cd8" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a88ec8" loc="48:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40a83410" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signals the receipt of a byte.</short>
          <long>&#10; Signals the receipt of a byte.&#10;&#10; @param byte The byte received.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a832b8" loc="79:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a83c18" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="81:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Begin reception of a UART stream.</short>
          <long>&#10; Begin reception of a UART stream. If SUCCESS is returned,&#10; &#60;code>receiveDone&#60;/code> will be signalled when reception is&#10; complete.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for received bytes.&#10; @param len Number of bytes to receive.&#10; @return SUCCESS if request was accepted, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a838c8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a83ab8" loc="90:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="enableReceiveInterrupt" ref="0x40a84850" loc="65:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Enable the receive byte interrupt.</short>
          <long>&#10; Enable the receive byte interrupt. The &#60;code>receive&#60;/code> event&#10; is signalled each time a byte is received.&#10;&#10; @return SUCCESS if interrupt was enabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="receiveDone" ref="0x40a80aa8" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of receiving a stream.</short>
          <long>&#10; Signal completion of receiving a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Buffer for bytes received.&#10; @param len Number of bytes received.&#10; @param error SUCCESS if the reception was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a80558" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a80748" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a80940" loc="99:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="disableReceiveInterrupt" ref="0x40a84dd8" loc="72:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Disable the receive byte interrupt.</short>
          <long>&#10; Disable the receive byte interrupt.&#10;&#10; @return SUCCESS if interrupt was disabled, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40a85ec0" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
          <short>&#10; Signal completion of sending a stream.</short>
          <long>&#10; Signal completion of sending a stream.&#10;&#10; @param 'uint8_t* COUNT(len) buf' Bytes sent.&#10; @param len Number of bytes sent.&#10; @param error SUCCESS if the transmission was successful, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartStream"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40a85970" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40a85b60" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="error" ref="0x40a85d58" loc="57:/opt/tinyos-2.x/tos/interfaces/UartStream.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UartByte" loc="37:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <short>&#10; </short>
        <long>&#10; @author Jonathan Hui &#60;jhui@archedrock.com>&#10; @version $Revision: 1.5 $ $Date: 2008-06-04 03:00:35 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40a932b8" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Send a single uart byte.</short>
          <long>&#10; Send a single uart byte. The call blocks until it is ready to&#10; accept another byte for sending.&#10;&#10; @param byte The byte to send.&#10; @return SUCCESS if byte was sent, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a93160" loc="46:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="receive" ref="0x40a93b50" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
          <short>&#10; Receive a single uart byte.</short>
          <long>&#10; Receive a single uart byte. The call blocks until a byte is&#10; received.&#10;&#10; @param 'uint8_t* ONE byte' Where to place received byte.&#10; @param timeout How long in byte times to wait.&#10; @return SUCCESS if a byte was received, FAIL if timed out.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UartByte"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40a937e8" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="timeout" ref="0x40a939f0" loc="56:/opt/tinyos-2.x/tos/interfaces/UartByte.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HplAtm128Uart" loc="38:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <short>&#10; </short>
        <long>&#10; @author Alec Woo &#60;awoo@archrock.com>&#10; @author Jonathan Hui &#60;jhui@archrock.com>&#10; @version $Revision: 1.4 $ $Date: 2006-12-12 18:23:03 $&#10;</long>
      </documentation>
      <function command="" provided="0" name="isTxEmpty" ref="0x40aa90f8" loc="44:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableRxIntr" ref="0x40aaa890" loc="42:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="rxDone" ref="0x40aa86d8" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aa8580" loc="49:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="txDone" ref="0x40aa9db0" loc="47:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enableTxIntr" ref="0x40aaa018" loc="40:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableTxIntr" ref="0x40aaa458" loc="41:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="disableRxIntr" ref="0x40aaacd0" loc="43:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRxEmpty" ref="0x40aa94f8" loc="45:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="tx" ref="0x40aa9a00" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40aa98a8" loc="46:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rx" ref="0x40aa81a8" loc="48:/opt/tinyos-2.x/tos/chips/atm128/HplAtm128Uart.nc">
        <interfacedef-ref qname="HplAtm128Uart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Scheduler" loc="52:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
      <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <short> &#10; The interface to a TinyOS task scheduler.</short>
        <long> &#10; The interface to a TinyOS task scheduler.&#10;&#10; @author Philip Levis&#10; @date   January 19 2005&#10; @see TEP 106: Tasks and Schedulers&#10; @see TEP 107: Boot Sequence&#10;</long>
      </documentation>
      <function command="" provided="0" name="init" ref="0x40356010" loc="57:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Initialize the scheduler.</short>
          <long> &#10; Initialize the scheduler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="taskLoop" ref="0x40356918" loc="72:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short>&#10; Enter an infinite task-running loop.</short>
          <long>&#10; Enter an infinite task-running loop. Put the MCU into a low power&#10; state when the processor is idle (task queue empty, waiting for&#10; interrupts). This call never returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="runNextTask" ref="0x40356450" loc="65:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/Scheduler.nc">
          <short> &#10; Run the next task if one is waiting, otherwise return immediately.</short>
          <long> &#10; Run the next task if one is waiting, otherwise return immediately. &#10;&#10; @return        whether a task was run -- TRUE indicates a task&#10;                ran, FALSE indicates there was no task to run.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Scheduler"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocol" loc="43:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <short> Basic interface used by the PPP infrastructure to connect to an&#10; arbitrary protocol.</short>
        <long> Basic interface used by the PPP infrastructure to connect to an&#10; arbitrary protocol.&#10;&#10; Components that provide this interface should generally define an&#10; enumeration value named Protocol in their specification, so that&#10; applications can wire the interface into the PppC Protocols&#10; subsystem using the correct protocol value.  See&#10; LinkControlProtocolC for a canonical example.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getProtocol" ref="0x40b6eda8" loc="54:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
          <short> Return the protocol code for this protocol.</short>
          <long> Return the protocol code for this protocol.&#10;&#10; This is primarily used to detect unrecognized protocols: a&#10; default implementation is defined that returns protocol 0, which&#10; is an illegal protocol value.  Upon detection of this situation,&#10; the PppC component delegates handling to a module that implements&#10; PppProtocolReject.&#10;&#10; @return A non-zero value for a registered protocol; zero if the&#10; protocol is unknown to the system. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="process" ref="0x40b6b938" loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
          <short> Process an incoming packet with the given information payload.</short>
          <long> Process an incoming packet with the given information payload.&#10;&#10; The packet memory is owned by the PppC component to which this&#10; protocol has been wired.  Normally, that memory is released for&#10; re-use upon return of this command.  There are cases where the&#10; protocol requires continued access to the data after this command&#10; completes (for example, to await completion of a PPP&#10; transmission).  The called component must invoke the&#10; Ppp.holdInputFrame() command during this command if it requires&#10; continued access to the input buffer.&#10;&#10; @param information A pointer to the start of the information&#10; field for the message.&#10;&#10; @param information_length The number of octets in the information&#10; field.  This may incorporate padding; the protocol must determine&#10; this.&#10;&#10; @return SUCCESS if packet was processed.  ERETRY if the system is&#10; busy but the packet might be processable again later.  Other errors&#10; indicate the packet should not be re-processed. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="information" ref="0x40b6b578" loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="information_length" ref="0x40b6b7d8" loc="78:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="rejectedByPeer" ref="0x40b6a5d8" loc="94:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
        <documentation loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
          <short> Invoked to inform protocol that the peer rejected it.</short>
          <long> Invoked to inform protocol that the peer rejected it.&#10;&#10; Poor, sad, lonely protocol.&#10;&#10; @param data If not null, this begins the start of the information&#10; field from the message that caused the peer to reject the&#10; protocol.  If null, this is being invoked by the engine after the&#10; link has been reset, indicating that the protocol may re-enable&#10; itself.&#10;&#10; @param data_end Points past the end of whatever portion of the&#10; rejected message was returned by the peer.  Null if data is null.&#10;&#10; @return SUCCESS, please. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b6a210" loc="94:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="data_end" ref="0x40b6a478" loc="95:/opt/tinyos-2.x/tos/lib/ppp/PppProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HdlcUart" loc="50:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <short> Provide basic UART-related functions required for the HdlcFramingC&#10; infrastructure.</short>
        <long> Provide basic UART-related functions required for the HdlcFramingC&#10; infrastructure.&#10;&#10; The HDLC framing infrastructure needs the ability to send blocks of&#10; characters, and to receive characters one-by-one as soon as they&#10; arrive.  The processing done on each received character is fairly&#10; complex.&#10;&#10; The UartStream interface's send command and receiveByte interface&#10; technically meet these needs.  However, both are async operations.&#10; At high serial data rates and when serving as a bridge for a&#10; high-data-rate radio interface, interrupt-driven reception causes&#10; dropped packets.  DMA-based reception can work around this, but the&#10; lack of an a-priori length for received messages makes the&#10; translation to a per-byte reception event complex.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40b6de68" loc="55:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Send len bytes from the given address over the UART.</short>
          <long> Send len bytes from the given address over the UART.&#10;&#10; This command is essentially forwarded to UartStream.send. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buf" ref="0x40b6db08" loc="55:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b6dd08" loc="56:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedByte" ref="0x40b66188" loc="73:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Notification of a newly received byte.</short>
          <long> Notification of a newly received byte.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="byte" ref="0x40b66030" loc="73:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b68490" loc="60:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Notification of the result of the most recent send that returned&#10; SUCCESS.</short>
          <long> Notification of the result of the most recent send that returned&#10; SUCCESS. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b68338" loc="60:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="uartError" ref="0x40b68a98" loc="69:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
          <short> Notification of an error detected in serial processing.</short>
          <long> Notification of an error detected in serial processing.&#10;&#10; The event is raised once for each detected character drop, with&#10; an error value of ENOMEM.  It is raised with the error value&#10; SUCCESS when the infrastructure recovers from dropped characters&#10; and subsequent data is known to be good.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcUart"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40b68940" loc="69:/opt/tinyos-2.x/tos/lib/ppp/HdlcUart.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="GetSetOptions" loc="37:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
        <short> Interface to help with configuring the options associated with a&#10; component.</short>
        <long> Interface to help with configuring the options associated with a&#10; component.  Rather like the GetSet interface, but slightly&#10; different to handle options expressed as a structure.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <parameters>
        <typedef name="type_t" ref="0x40b69c60" loc="37:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
          <interfacedef-ref qname="GetSetOptions"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b69c60"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40b63760" loc="47:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
          <short> Get the current option configuration.</short>
          <long> Get the current option configuration.&#10;&#10; @return A copy of the currently configured options. *</long>
        </documentation>
        <interfacedef-ref qname="GetSetOptions"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b69c60"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b63308" loc="42:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
          <short> Configure a subsystem.</short>
          <long> Configure a subsystem.&#10;&#10; @param options The proposed options&#10; @return SUCCESS if options are acceptable; EINVAL otherwise. *</long>
        </documentation>
        <interfacedef-ref qname="GetSetOptions"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b69c60"/></type-var>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="options" ref="0x40b631b0" loc="42:/opt/tinyos-2.x/tos/lib/ppp/GetSetOptions.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                <type-var size="U:" alignment="U:"><typedef-ref name="type_t" scoped="" ref="0x40b69c60"/></type-var>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolCodeSupport" loc="48:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <short> Most PPP control protocols are modeled on RFC1661's Link Control&#10; Protocol, and use a packet format comprising:&#10; - A one-octet Code field&#10; - A one-octet Identifier field&#10; - A two-octet Length field&#10; - A data field of varying length.</short>
        <long> Most PPP control protocols are modeled on RFC1661's Link Control&#10; Protocol, and use a packet format comprising:&#10; - A one-octet Code field&#10; - A one-octet Identifier field&#10; - A two-octet Length field&#10; - A data field of varying length.&#10;&#10; The code determines the specific format of the data field and how&#10; it should be interpreted.  This interface allows an application to&#10; determine which codes will be supported by only wiring in the ones&#10; that are necessary.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getCode" ref="0x40b806f0" loc="55:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
          <short> Return the code for this handler.</short>
          <long> Return the code for this handler.&#10;&#10; This is primarily used to detect unrecognized codes: a default&#10; implementation is defined that returns code 0, which is an&#10; illegal code value.  Upon detection of this situation, the&#10; control protocol will generate a Code-Reject message. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="invoke" ref="0x40b7fb00" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
          <short> Invoke some code-specific operation.</short>
          <long> Invoke some code-specific operation.&#10;&#10; Generally it involves building and transmitting a message.  If&#10; so, the key for detection completion of that message should be&#10; returned.&#10;&#10; @param param A code-specific structure, if needed to pass external information&#10;&#10; @param keyp A destination into which the output frame key should&#10; be provided if invocation of this handler results in the&#10; transmission of a message. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x40b7f758" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="keyp" ref="0x40b7f9a0" loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="process" ref="0x40b7f2d0" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
          <short> Process an incoming packet with the given identifer and data&#10; region.</short>
          <long> Process an incoming packet with the given identifer and data&#10; region. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeSupport"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="identifier" ref="0x40b80c80" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b80ec0" loc="60:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="data_end" ref="0x40b7f168" loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeSupport.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolReject" loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
        <short> Allow custom reaction to unrecognized protocols.</short>
        <long> Allow custom reaction to unrecognized protocols.&#10;&#10; If a Link Control Protocol component is available, its&#10; Protocol-Reject message can be used to inform the remote that a&#10; protocol is unrecognized.  Other PPP components may chose to just&#10; drop the message.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <function command="" provided="0" name="process" ref="0x40b7d7d0" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
          <short> Do something when a message with an unrecognized protocol has been received.</short>
          <long> Do something when a message with an unrecognized protocol has been received.&#10;&#10; @param protocol The protocol value from the PPP message&#10;&#10; @param information The start of the information field from the&#10; message&#10;&#10; @param length The number of octets in the information field,&#10; including any subsequent padding&#10;</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolReject"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="protocol" ref="0x40b7d200" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="information" ref="0x40b7d480" loc="52:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x40b7d668" loc="53:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolReject.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppRejectedProtocol" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
        <short> Support to inform the PPP primary engine that one of the&#10; registered protocols was rejected by the peer.</short>
        <long> Support to inform the PPP primary engine that one of the&#10; registered protocols was rejected by the peer.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="rejected" ref="0x40b94f00" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
          <short> Inform main engine that a ProtocolReject message was received.</short>
          <long> Inform main engine that a ProtocolReject message was received.&#10;&#10; @param protocol The protocol value from the rejected message&#10;&#10; @param data The information field of the rejected message&#10;&#10; @param data_end First byte past the end of whatever portion of&#10; the original message could be returned.&#10;&#10; @return The result of informing the protocol that it has been&#10; rejected (see PppProtocol.rejectedByPeer). *</long>
        </documentation>
        <interfacedef-ref qname="PppRejectedProtocol"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="protocol" ref="0x40b948f0" loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="data" ref="0x40b94b30" loc="50:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="data_end" ref="0x40b94d98" loc="51:/opt/tinyos-2.x/tos/lib/ppp/PppRejectedProtocol.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="MultiLed" loc="41:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <short> An interface to control a series of LEDs.</short>
        <long> An interface to control a series of LEDs.&#10;&#10; Allows use of a series of LEDs as a visual binary register.  Bit i&#10; of the value is a 1 iff LED i is on.&#10;&#10; This interface is generically implemented by the LedC component.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="setSingle" ref="0x40ba6170" loc="60:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.set() function for the specified LED.</short>
          <long> Invoke the Led.set() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0&#10; @param turn_on if TRUE, turn LED on; otherwise turn it off *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40ba7e08" loc="60:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="turn_on" ref="0x40ba6010" loc="60:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="toggle" ref="0x40ba6788" loc="64:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.toggle() function for the specified LED.</short>
          <long> Invoke the Led.toggle() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40ba6630" loc="64:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x40b8c8c8" loc="44:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Read the value represented by the on status of the LEDs.</short>
          <long> Read the value represented by the on status of the LEDs. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x40ba73b0" loc="51:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.on() function for the specified LED.</short>
          <long> Invoke the Led.on() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40ba7258" loc="51:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40b8ce30" loc="47:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Set the LEDs to represent the given value.</short>
          <long> Set the LEDs to represent the given value. *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x40b8ccd8" loc="47:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40ba7968" loc="55:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
          <short> Invoke the Led.off() function for the specified LED.</short>
          <long> Invoke the Led.off() function for the specified LED.&#10; @param led_id Position of LED to turn on, starting with LED 0 *</long>
        </documentation>
        <interfacedef-ref qname="MultiLed"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="led_id" ref="0x40ba7810" loc="55:/opt/tinyos-2.x/tos/interfaces/MultiLed.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FragmentPool" loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <short> Support for a memory pool that fragments a large block into&#10; arbitrarily sized smaller blocks based on need.</short>
        <long> Support for a memory pool that fragments a large block into&#10; arbitrarily sized smaller blocks based on need.&#10;&#10; The use case is buffer management for arbitrarily-sized messages,&#10; such as HDLC frames received.  A client requests a block of memory,&#10; fills part of it, then returns the remainder to the pool.  It may&#10; then request a new block, while the newly received message is&#10; processed.  Ultimately, the fragment is released back to the pool.&#10; The largest available fragment is returned for each request.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="release" ref="0x40b83810" loc="110:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="102:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Release the fragment at the given address.</short>
          <long> Release the fragment at the given address.&#10;&#10; @param start The address returned as start from a previous&#10; request that has not been released.&#10;&#10; @return SUCCESS if the fragment was freed.  EINVAL if the start&#10; address does not correspond to a fragment.  EALREADY if the&#10; fragment had already been released. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="start" ref="0x40b836b8" loc="110:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="slotCount" ref="0x40b86688" loc="51:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Number of slots for the pool&#10;&#10; This imposes an upper limit on the number of fragments allowed.</short>
          <long> Number of slots for the pool&#10;&#10; This imposes an upper limit on the number of fragments allowed. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="available" ref="0x40b83ec0" loc="120:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Notification that a new fragment is available.</short>
          <long> Notification that a new fragment is available.&#10;&#10; Clients that require a minimum buffer length in order to function&#10; may link to this event to be notified when a candidate is&#10; created.&#10;&#10; @param length The number of bytes in the newly released&#10; fragment. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="length" ref="0x40b83d68" loc="120:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x40b851d0" loc="75:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Get the longest available fragment in the pool.</short>
          <long> Get the longest available fragment in the pool.&#10;&#10; @note No error checking is done on the pointers passed to this&#10; method.  You must provide addresses for both the start and the&#10; end fragment pointer.&#10;&#10; @param start Pointer to where the start of the fragment should be&#10; written.  The address will be 16-bit aligned.  The stored value&#10; is valid only when this function returns SUCCESS.&#10;&#10; @param end Pointer to where the end of the fragment should be&#10; written.  This is the offset at which writing is no longer&#10; permitted.  The stored value is valid only when this function&#10; returns SUCCESS.&#10;&#10; @param minimum_size Minimum size, in bytes, that is useful to&#10; the caller.  If the largest available fragment is not at least&#10; this size, returns ENOMEM.&#10;&#10; @return SUCCESS if a fragment is available.  ENOMEM if no&#10; fragments are available.  start and end are updated only if this&#10; returns SUCCESS. *</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="start" ref="0x40b86bd0" loc="75:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="end" ref="0x40b86e00" loc="76:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                </type-int>
              </type-pointer>
            </type-pointer>
          </variable>
          <variable name="minimum_size" ref="0x40b85068" loc="77:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="poolSize" ref="0x40b86268" loc="46:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Size of the pool, in bytes *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="freeze" ref="0x40b85d90" loc="99:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
        <documentation loc="79:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
          <short> Release part of a previously allocated fragment.</short>
          <long> Release part of a previously allocated fragment.&#10;&#10; Note that a lack of available slots may prevent the fragment from&#10; being split, so there is no guarantee that the remainder of the&#10; fragment is available for re-use.  If it is, available() will be&#10; signaled.  If it is not, the entire fragment remains allocated&#10; until it is released.&#10;&#10; @param start Pointer to the fragment start.  Must be a value&#10; previously returned by request but which has not been released or&#10; frozen.&#10;&#10; @param end Pointer to the first byte of the released portion of&#10; the fragment.&#10;&#10; @return SUCCESS in absence of an error, whether or not the&#10; remainder of the fragment could be made available.  EINVAL if the&#10; provided start does not correspond to a fragment, or if the end&#10; is outside the fragment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="FragmentPool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="start" ref="0x40b85a00" loc="99:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="end" ref="0x40b85c30" loc="100:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="HdlcFraming" loc="39:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <short> Interface to support RFC1662-conformant HDLC-like framing of&#10; packets for the Point-to-Point Protocol.</short>
        <long> Interface to support RFC1662-conformant HDLC-like framing of&#10; packets for the Point-to-Point Protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function event="" provided="0" name="receivedFrame" ref="0x40b89978" loc="94:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Indicate that a frame has been successfully received.</short>
          <long> Indicate that a frame has been successfully received.&#10;&#10; This event is signalled by a task, not within the UART interrupt&#10; handler.  The signal is asynchronous to any receivedDelimiter()&#10; and receptionError() events.  Regardless of the number of frames&#10; received, a subsequent receivedFrame() event shall not occur&#10; until after the releaseReceivedFrame() command releases the&#10; buffer.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b89650" loc="94:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b89818" loc="95:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receivedDelimiter" ref="0x40b88828" loc="120:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Notification that a flag sequence byte has been received.</short>
          <long> Notification that a flag sequence byte has been received.&#10;&#10; @warning This event is signalled while processing the UART&#10; interrupt.  Act quickly and return.&#10;&#10; It is guaranteed that this event will be signaled prior to the&#10; receivedFrame event. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="sendFrame" ref="0x40b8b1f0" loc="65:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Initiate transmission of a frame of data.</short>
          <long> Initiate transmission of a frame of data.&#10;&#10; This command starts the state machine and begins to transmit the&#10; provided data.  RFC1662-required delimeters, HDLC address and&#10; control fields, the payload with transparency conversions, and&#10; the 16-bit CRC are all added as the frame is transmitted.&#10;&#10; If this command returns SUCCESS, the sendDone event will be&#10; signaled to indicate the ultimate success/failure of the&#10; transmission.  The pointer passed to this command will be&#10; provided in the event, so components may more easily detect&#10; completion of transmissions they initiated.&#10;&#10; @param data Pointer to a block of data that is to be transmitted.&#10;&#10; @param len Number of octets in the data block.&#10;&#10; @param inhibit_accomp If TRUE, send the address and control&#10; fields even if the implementing component is configured to&#10; suppress them.&#10;&#10; @return SUCCESS if the frame transmission has begun.  EBUSY if&#10; the system is already transmitting a frame.  Other errors if the&#10; underlying UART is unable to transmit data.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b92c60" loc="65:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b92e28" loc="66:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="inhibit_accomp" ref="0x40b8b088" loc="67:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40b89010" loc="81:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Notification that the attempt to transmit a frame of data has&#10; completed.</short>
          <long> Notification that the attempt to transmit a frame of data has&#10; completed.&#10;&#10; @note This event is raised by the HdlcFramingC task.&#10;&#10; @param data The original data pointer provided to sendFrame.&#10;&#10; @param len The original frame length provided to sendFrame.&#10;&#10; @param err The disposition of the transmission: SUCCESS if&#10; succeeded, other values indicating failure in the state machine&#10; or underlying serial transport. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x40b8ba38" loc="81:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40b8bc00" loc="82:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="err" ref="0x40b8bdf0" loc="83:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="releaseReceivedFrame" ref="0x40b881c0" loc="111:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="97:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Inform the framer that it can reclaim space used by the given&#10; frame.</short>
          <long> Inform the framer that it can reclaim space used by the given&#10; frame.&#10;&#10; Each received frame must be released before the next frame will&#10; be signalled.&#10;&#10; It is guaranteed that the next receivedFrame() signal will not&#10; occur during this call.  This allows the caller to release state&#10; after this command without having to worry that the state was&#10; overwritten by the next frame.&#10;&#10; @param data Pointer to the start of a received frame, as provided&#10; through the most recent receiveFrame() event.&#10;</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="buffer" ref="0x40b88068" loc="111:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="receptionError" ref="0x40b88f18" loc="133:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
          <short> Notification that an error occurred during frame reception.</short>
          <long> Notification that an error occurred during frame reception.&#10;&#10; Note that a reception error does not release the received buffer.&#10; The system will resynchronize on the next frame delimiter.&#10;&#10; @warning This event is signalled while processing the UART&#10; interrupt.  Act quickly and return.&#10;&#10; It is guaranteed that this event will signaled prior to the&#10; receivedDelimiter event if an unexpected delimiter is the cause&#10; of the error. *</long>
        </documentation>
        <interfacedef-ref qname="HdlcFraming"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-tag size="I:2" alignment="I:1"><enum-ref name="HdlcError_e" ref="0x40b4adb8"/>
              <typename><typedef-ref name="HdlcError_e" ref="0x40b6e2a8"/></typename>
            </type-tag>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="code" ref="0x40b88dc0" loc="133:/opt/tinyos-2.x/tos/lib/ppp/HdlcFraming.nc">
            <type-tag size="I:2" alignment="I:1"><enum-ref name="HdlcError_e" ref="0x40b4adb8"/>
              <typename><typedef-ref name="HdlcError_e" ref="0x40b6e2a8"/></typename>
            </type-tag>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="FragmentPoolStorage" loc="43:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <short> Provide the core configuration information for a specific pool.</short>
        <long> Provide the core configuration information for a specific pool.&#10;&#10; This interface allows each pool to have a different buffer size and&#10; number of available slots.  On software initialization, the overall&#10; pool manager collects the basic information for each pool and&#10; initializes the data structures.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="slotCount" ref="0x40bf2e18" loc="57:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Number of slots for the pool *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="slots" ref="0x40bf29e8" loc="54:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Pointer to the array of slots for the pool *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:4" alignment="I:1"><struct-ref name="FragmentPoolSlot_t" ref="0x40bd34c8"/>
              <typename><typedef-ref name="FragmentPoolSlot_t" ref="0x40bd39f8"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="id" ref="0x40bf5cb8" loc="45:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> The identifier for the pool; debug use only *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1">
            <typename><typedef-ref name="fragment_pool_id_t" ref="0x40bd31b0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="poolSize" ref="0x40bf2538" loc="51:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Size of the pool, in bytess *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="pool" ref="0x40bf2118" loc="48:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/fragpool/FragmentPoolStorage.nc">
          <short> Address of the start of the pool *</short>
        </documentation>
        <interfacedef-ref qname="FragmentPoolStorage"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Led" loc="41:/opt/tinyos-2.x/tos/interfaces/Led.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <short> An interface to control a single LED.</short>
        <long> An interface to control a single LED.&#10;&#10; Provides the ability to turn on, turn off, and toggle an LED.&#10;&#10; Implementations of this interface are provided by the LedC&#10; component, both as positional names (Led0) and by color (Green).&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="toggle" ref="0x40c971d8" loc="53:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Toggle the LED.</short>
          <long> Toggle the LED. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="on" ref="0x40c98438" loc="43:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Turn the LED on.</short>
          <long> Turn the LED on. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="off" ref="0x40c98808" loc="46:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Turn the LED off.</short>
          <long> Turn the LED off. *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x40c98d58" loc="50:/opt/tinyos-2.x/tos/interfaces/Led.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Led.nc">
          <short> Turn the LED on or off, depending on parameter.</short>
          <long> Turn the LED on or off, depending on parameter.&#10; @param turn_on if TRUE, turn LED on; otherwise turn LED off *</long>
        </documentation>
        <interfacedef-ref qname="Led"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="turn_on" ref="0x40c98c00" loc="50:/opt/tinyos-2.x/tos/interfaces/Led.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolOption" loc="39:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <short> Operations that should be supported for each option that can be&#10; configured through an LCP-style automaton negotiation.</short>
        <long> Operations that should be supported for each option that can be&#10; configured through an LCP-style automaton negotiation.&#10;&#10; @note We currently do not support options that can appear multiple&#10; times in a single request.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com> *</long>
      </documentation>
      <function command="" provided="0" name="considerRequest" ref="0x40cc8c30" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="68:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Determine whether the proposed remote value is acceptable to the&#10; protocol.</short>
          <long> Determine whether the proposed remote value is acceptable to the&#10; protocol.&#10; @return PppControlProtocolCode_Configure{Ack,Nak,Reject},&#10; depending on whether the option value specified at dp is&#10; acceptable to this end of the link. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40cc88a0" loc="74:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cc8ad0" loc="75:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="appendRequest" ref="0x40cc75a8" loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Add a proposed local value to a message.</short>
          <long> Add a proposed local value to a message.  The option type and&#10; length fields are already incorporated; only the data portion is&#10; to be stored. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40cc71f8" loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cc7428" loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setNegotiable" ref="0x40cc8268" loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Set whether the local value of the option should be negotiated,&#10; based on protocol activity.</short>
          <long> Set whether the local value of the option should be negotiated,&#10; based on protocol activity.&#10;&#10; Option negotiation is set to FALSE upon receipt of a&#10; Configure-Reject message identifying the option, and upon a&#10; Reject return from considerRequest.  It is set to TRUE upon&#10; receipt of a non-Reject return from considerRequest. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="is_negotiable" ref="0x40cc8110" loc="66:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="processNakValue" ref="0x40cc4d50" loc="138:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="128:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Process a proposed alternative local value.</short>
          <long> Process a proposed alternative local value.&#10;&#10; This operation is invoked when the remote sends a Configure-Nak&#10; in response to local's Configure-Request.  Generally, the&#10; response should be to replace the original local value with the&#10; value proposed by the peer, or to mark the option non-negotiable.&#10;&#10; @param dp Start of the option value.&#10;&#10; @param dpe First octet past option value. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40cc49c0" loc="138:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cc4bf0" loc="139:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRemote" ref="0x40cc36d0" loc="152:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="141:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Set (reset) the option's remote value.</short>
          <long> Set (reset) the option's remote value.&#10;&#10; The set operation is invoked on each option present in a&#10; transmitted Configure-Ack message (i.e., the remote node&#10; requested the value).  This is done after transmission.  The&#10; reset operation is invoked upon receipt of a Configure-Request.&#10;&#10; @param dp Start of the option value.  If passed as a null&#10; pointer, option is reset to its default.&#10;&#10; @param dpe First octet past option value. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40cc3340" loc="152:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cc3570" loc="153:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reset" ref="0x40cc5a60" loc="112:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="106:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Completely reset the option prior to a new negotiation sequence.</short>
          <long> Completely reset the option prior to a new negotiation sequence.&#10;&#10; This brings things back to their power-up default, and is&#10; executed when the link goes down.  It re-enables options for&#10; negotiation, and restores default proposed local and remote&#10; values. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocal" ref="0x40cc43a0" loc="125:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="114:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Set (reset) the option's local value.</short>
          <long> Set (reset) the option's local value.&#10;&#10; The set operation is invoked on each option present in a received&#10; Configure-Ack message (i.e., this node requested the value).  The&#10; reset operation is invoked prior to transmission of a&#10; Configure-Request (need permission for value).&#10;&#10; @param dp Start of the option value.  If passed as a null&#10; pointer, option is reset to its default.&#10;&#10; @param dpe First octet past option value. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40cc4010" loc="125:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cc4240" loc="126:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="appendNakValue" ref="0x40cc53d0" loc="101:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Add an alternative suggestion to a Nak message.</short>
          <long> Add an alternative suggestion to a Nak message.  The option type&#10; and length fields are already reserved; only the data portion is&#10; to be stored.&#10;&#10; If the option cannot express an acceptable alternative within the&#10; buffer indicated by dp to dpe, the command should return a null&#10; pointer.  Otherwise, the command should return a pointer just&#10; past the last octet of its proposed alternative.&#10;&#10; @param sp The value in the Configure-Request message, in case&#10; that's useful when proposing an alternative&#10;&#10; @param spe Indidates the end of the requested option value&#10;&#10; @param dp Where the proposed alternative should be stored&#10;&#10; @param dpe The limit up to which the proposed alternative may be&#10; written. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="sp" ref="0x40cc7af8" loc="101:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="spe" ref="0x40cc7d28" loc="102:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dp" ref="0x40cc5010" loc="103:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40cc5240" loc="104:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getType" ref="0x40cc9560" loc="47:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Return the option type code for this option within its protocol.</short>
          <long> Return the option type code for this option within its protocol.&#10;&#10; This is primarily used to detect unrecognized options: a default&#10; implementation is defined that returns option 0, which is an&#10; illegal option value.  Upon detection of this situation, the&#10; configuration processing implementation will generate a&#10; Configure-Reject message. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isNegotiable" ref="0x40cc9b10" loc="57:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolOption.nc">
          <short> Return TRUE iff the option should be added to outgoing&#10; Configure-Request messages.</short>
          <long> Return TRUE iff the option should be added to outgoing&#10; Configure-Request messages.&#10;&#10; If the option is negotiable, appendRequest will invoked to append&#10; the proposed local value to the outgoing request message.&#10;&#10; @note Negotiability of remote values for options is indicated by&#10; the return value of considerRequest. *</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolOption"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppProtocolCodeCoordinator" loc="42:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
        <short> Common support for all protocols that use code-based handlers.</short>
        <long> Common support for all protocols that use code-based handlers.&#10;&#10; The set of codes recognized by each protocol is different, but the&#10; process of identifying the code and dispatching to the appropriate&#10; handler is the same.  Similarly, most such protocols produce an&#10; error response via a Code-Reject packet when an unrecognized code&#10; is encountered.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="rejectPacket" ref="0x40cbd5f8" loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
          <short> Generate the appropriate reject packet for an unrecognized input.</short>
          <long> Generate the appropriate reject packet for an unrecognized input.&#10;&#10; @param rejected_protocol Normally zero, indicating a Code-Reject&#10; packet should be produced.  If non-zero, represents an&#10; unrecognized protocol, and generates a Protocol-Reject packet.&#10; This should only be non-zero when invoked from&#10; LinkControlProtocol.&#10;&#10; @param ip pointer to the start of the rejected packet information field&#10;&#10; @param ipe pointer to the first octet following the rejected&#10; packet's information field&#10;&#10; @param keyp where to store the HDLC transmission frame key for&#10; the transmitted packet.  Passing a null pointer indicates the&#10; frame key is not saved (meaning nobody needs to know when the&#10; transmission completes).&#10;</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="rejected_protocol" ref="0x40cbed38" loc="79:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="ip" ref="0x40cbd010" loc="80:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="ipe" ref="0x40cbd240" loc="81:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="keyp" ref="0x40cbd488" loc="82:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-qualified const="">
                    <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                  <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
                </type-qualified>
                <typename><typedef-ref name="frame_key_t" ref="0x40472330"/></typename>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="dispatch" ref="0x40cbe640" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
          <short> Extract the code information from an information field and&#10; dispatch it to the appropriate handler.</short>
          <long> Extract the code information from an information field and&#10; dispatch it to the appropriate handler.&#10;&#10; If the code is not recognized, this produces a Code-Reject packet&#10; in the given protocol.&#10;&#10; @param information the information section of a PPP packet&#10;&#10; @param information_length the number of octets in the information section&#10;&#10; @return The result of invoking the&#10; PppProtocolCodeSupport.process() command for the appropriate&#10; handler (or of submitting the Code-Reject packet)&#10;</long>
        </documentation>
        <interfacedef-ref qname="PppProtocolCodeCoordinator"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="information" ref="0x40cbe280" loc="58:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="information_length" ref="0x40cbe4e0" loc="59:/opt/tinyos-2.x/tos/lib/ppp/PppProtocolCodeCoordinator.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PppConfigure" loc="37:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <short> Provide facility to set a complete set of options for a given&#10; protocol.</short>
        <long> Provide facility to set a complete set of options for a given&#10; protocol.&#10;&#10; @author Peter A. Bigot &#60;pab@peoplepowerco.com>&#10;</long>
      </documentation>
      <function command="" provided="0" name="resetOptions" ref="0x40d1e460" loc="44:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
          <short> Completely reset all options prior to a new negotiation sequence.</short>
          <long> Completely reset all options prior to a new negotiation sequence.&#10;&#10; This brings things back to their power-up default, and is&#10; executed when the link goes down.  This includes default proposed&#10; local and remote values, as well as resetting whether the option&#10; is negotiable. *</long>
        </documentation>
        <interfacedef-ref qname="PppConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalOptions" ref="0x40d1d010" loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
          <short> Set (reset) the local value for a protocol's options.</short>
          <long> Set (reset) the local value for a protocol's options.&#10;&#10; This is invoked to set options by passing an encoded option set&#10; extracted from a received Configure-Ack; to convey proposed&#10; alternatives from a Configure-Nak; and to disable negotiation&#10; from a Configure-Reject.  If the code is for Configure-Ack, the&#10; content of this set must match the previously transmitted&#10; Configure-Request.&#10;&#10; This is invoked with null pointers to reset the local values&#10; prior to transmission of a Configure-Request.&#10;&#10; @param code The message type from which the options were received.&#10; @param dp Start of the encoded option sequence; null for reset&#10; @param dpe End of the encoded option sequence; null for reset *</long>
        </documentation>
        <interfacedef-ref qname="PppConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="code" ref="0x40d1e9e0" loc="61:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="dp" ref="0x40d1ec08" loc="62:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40d1ee38" loc="63:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRemoteOptions" ref="0x40d1daf0" loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
          <short> Set (reset) the remote value for a protocol's options.</short>
          <long> Set (reset) the remote value for a protocol's options.&#10;&#10; This is invoked to set options by passing an encoded option set&#10; extracted from a transmitted Configure-Ack (equivalently, an&#10; accepted received Configure-Request).&#10;&#10; This is invoked with null pointers to reset the remote values&#10; upon receipt of a Configure-Request.&#10;&#10; @param dp Start of the encoded option sequence&#10; @param dpe End of the encoded option sequence *</long>
        </documentation>
        <interfacedef-ref qname="PppConfigure"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dp" ref="0x40d1d760" loc="76:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
          <variable name="dpe" ref="0x40d1d990" loc="77:/opt/tinyos-2.x/tos/lib/ppp/PppConfigure.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-qualified const="">
                  <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
                <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1"></type-int>
              </type-qualified>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Putchar" loc="44:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
        <short> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.</short>
        <long> Interface to be implemented by any low-level component that&#10; provides character output for libc-based printf in TinyOS.  The&#10; component providing this interface should be wired to PutcharC from&#10; $(TOSDIR)/lib/printf.&#10;&#10; @note On some platforms inclusion of &#60;stdio.h> may define putchar&#10; as a macro.  Any need for this should be eliminated by the&#10; implementation in PutcharP.nc, so &#34;#undef putchar&#34; prior to your&#10; use of this identifier when implementing this interface.&#10;&#10; @author Peter A. Bigot &#60;pabigot@users.sourceforge.net>&#10;</long>
      </documentation>
      <function command="" provided="0" name="putchar" ref="0x40ef58e8" loc="49:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
          <short> Send the unsigned char represented by c to the output.</short>
          <long> Send the unsigned char represented by c to the output.  Return&#10; -1 on error, and c if successful. *</long>
        </documentation>
        <interfacedef-ref qname="Putchar"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="c" ref="0x40ef5790" loc="49:/opt/tinyos-2.x/tos/lib/printf/Putchar.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingEvents" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
      <function event="" provided="0" name="approve" ref="0x40f08500" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled for each packet being forwarded.</short>
          <long>&#10; Signaled for each packet being forwarded.&#10;&#10; For datapath validation.  Allows the routing protocol to look at&#10; a packet as it flows through.  If the event returns FALSE the&#10; packet is dropped.  The routing protocol may change fields in the&#10; packet header such as the flow label.&#10;&#10; @pkt the packet being forwarded&#10; @next_hop the ipv6 address of the next hop, as determined by the &#10;    forwarding engine.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40f08118" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40f083a0" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="initiate" ref="0x40f0bbb0" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="7:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled when initiating a new flow (not forwarding).</short>
          <long>&#10; Signaled when initiating a new flow (not forwarding).&#10;&#10; This allows higher-layer components to modify the payload or&#10; insert new headers before the packet is sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="pkt" ref="0x40f0b7c8" loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="next_hop" ref="0x40f0ba50" loc="14:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="linkResult" ref="0x40f08ed0" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
          <short>&#10; Signaled once per packet.</short>
          <long>&#10; Signaled once per packet.  The send_info structure allows upper&#10; layers to see how many fragments were attempted, and how many&#10; transmissions were required.&#10;&#10; Allows a higher-level component to maintain&#10; statistics on the link behavior of their routes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40f08b18" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="info" ref="0x40f08d70" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingEvents.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ForwardingTableEvents" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
      <function event="" provided="0" name="defaultRouteAdded" ref="0x40f0e4c8" loc="43:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.</short>
          <long>&#10; Signaled when a default route is added to the table; that is,&#10; when the stack transitions from not having a default route to&#10; having one.&#10;&#10; This event is not signaled again if the default route changes.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="defaultRouteRemoved" ref="0x40f0ea48" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ForwardingTableEvents.nc">
          <short>&#10; Signaled when the default route is removed from the routing&#10; table.</short>
          <long>&#10; Signaled when the default route is removed from the routing&#10; table.  If the route is removed, defaultRouteAdded() be signeled&#10; when the route is re-added.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ForwardingTableEvents"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IP" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
      <function command="" provided="0" name="send" ref="0x40ee2e10" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ee2cb8" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40f0d9d8" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
        <interfacedef-ref qname="IP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x400324a8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40f0d230" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="packet" ref="0x40f0d408" loc="23:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40f0d5f0" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-int cname="unsigned int" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="size_t" ref="0x400324a8"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x40f0d868" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPAddress" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
      <function command="" provided="0" name="getLLAddr" ref="0x40f038e8" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="26:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Get the preferred link-local interface for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f03790" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40efd188" loc="56:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="valid" ref="0x40efd030" loc="56:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLocalAddress" ref="0x40f00ba8" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="41:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE if the address is assigned to a local interface&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f00a50" loc="44:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getGlobalAddr" ref="0x40f03f18" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="31:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short> &#10; Get the preferred global IPv6 address for this node&#10;</short>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f03dc0" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x40f00518" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="36:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; Choose a source address for a packet originating at this node.</short>
          <long>&#10; Choose a source address for a packet originating at this node.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="hdr" ref="0x40f003c0" loc="39:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="removeAddress" ref="0x40efec58" loc="54:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x40efe838" loc="52:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40efe6e0" loc="52:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isLLAddress" ref="0x40efe200" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return TRUE of the address is a link local address not requiring&#10; routing.&#10;</long>
        </documentation>
        <interfacedef-ref qname="IPAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40efe0a8" loc="50:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPAddress.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Pool" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <short>&#10;  An allocation pool of a specific type memory objects.</short>
        <long>&#10;  An allocation pool of a specific type memory objects.&#10;  The Pool allows components to allocate (&#60;code>get&#60;/code>)&#10;  and deallocate (&#60;code>put&#60;/code>) elements. The pool&#10;  does not require that deallocations be items which were&#10;  originally allocated. E.g., a program can create two&#10;  pools of the same type and pass items between them.&#10;  This allows, for example, a component to allocate a pool&#10;  of message buffers and freely buffer swap them on&#10;  Receive.receive events.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x40f236f0" loc="50:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <interfacedef-ref qname="Pool"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f236f0"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x40f1e398" loc="97:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="91:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Allocate an element from the pool.</short>
          <long>&#10; Allocate an element from the pool.&#10;&#10; @return 't* ONE_NOK' A pointer if the pool is not empty, NULL if&#10; the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f236f0"/></type-var>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x40f20600" loc="80:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).</short>
          <long>&#10; Returns the maximum number of elements in the pool&#10; (the size of a full pool).&#10;&#10; @return Maximum size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x40f23b90" loc="61:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns whether there any elements remaining in the pool.</short>
          <long>&#10; Returns whether there any elements remaining in the pool.&#10; If empty returns TRUE, then &#60;code>get&#60;/code> will return&#10; NULL. If empty returns FALSE, then &#60;code>get&#60;/code> will&#10; return a pointer to an object.&#10;&#10; @return Whether the pool is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="put" ref="0x40f20c08" loc="89:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Deallocate an object, putting it back into the pool.</short>
          <long>&#10; Deallocate an object, putting it back into the pool.&#10;&#10; @param 't* ONE newVal'&#10; @return SUCCESS if the entry was put in successfully, FAIL&#10; if the pool is full.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f236f0"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x40f20ab0" loc="89:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x40f236f0"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x40f200c8" loc="72:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
        <documentation loc="63:/opt/tinyos-2.x/tos/interfaces/Pool.nc">
          <short>&#10; Returns how many elements are in the pool.</short>
          <long>&#10; Returns how many elements are in the pool. If size&#10; returns 0, empty() will return TRUE. If size returns&#10; a non-zero value, empty() will return FALSE. The&#10; return value of size is always &#38;lte; the return&#10; value of maxSize().&#10;&#10; @return How many elements are in the pool.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Pool"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="IPLower" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
      <function command="" provided="0" name="send" ref="0x40f79d58" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:20" alignment="I:1"><struct-ref name="ieee154_frame_addr" ref="0x40448b08"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x40f797b8" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:20" alignment="I:1"><struct-ref name="ieee154_frame_addr" ref="0x40448b08"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="msg" ref="0x40f79a18" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:44" alignment="I:1"><struct-ref name="ip6_packet" ref="0x4046d1c8"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="data" ref="0x40f79bf0" loc="20:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recv" ref="0x40f73ce8" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="iph" ref="0x40f73728" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:40" alignment="I:1"><struct-ref name="ip6_hdr" ref="0x40464348"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x40f73908" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="meta" ref="0x40f73b80" loc="28:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40f73330" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
        <interfacedef-ref qname="IPLower"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="status" ref="0x40f731d8" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/IPLower.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="send_info" ref="0x404d8480"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborDiscovery" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
      <function command="" provided="0" name="resolveAddress" ref="0x40f77510" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Map the IPv6 address to a link-layer address.</short>
          <long>&#10; Map the IPv6 address to a link-layer address.&#10; @return FAIL if the address cannot be resolved, either becasue &#10; it is not known or because the given IPv6 address is not on the link.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x404480d0"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x404482f8"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f77128" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="link_addr" ref="0x40f773b0" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:9" alignment="I:1"><struct-ref ref="0x404480d0"/>
                <typename><typedef-ref name="ieee154_addr_t" ref="0x404482f8"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="matchContext" ref="0x40f77dc8" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <documentation loc="13:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
          <short>&#10; Match &#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f77a68" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="ctx" ref="0x40f77c68" loc="16:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
                <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
              </type-int>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getContext" ref="0x40f75588" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
        <interfacedef-ref qname="NeighborDiscovery"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="context" ref="0x40f751e8" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="ctx" ref="0x40f75428" loc="17:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/NeighborDiscovery.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Address" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
      <function command="" provided="0" name="getPanId" ref="0x40f6fca8" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40449178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x40f6cf08" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setShortAddr" ref="0x40f6cb70" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40f6ca18" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getExtAddr" ref="0x40f6c588" loc="7:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40436a18"/>
            <typename><typedef-ref name="ieee154_laddr_t" ref="0x404496d0"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getShortAddr" ref="0x40f6c138" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/Ieee154Address.nc">
        <interfacedef-ref qname="Ieee154Address"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalIeeeEui64" loc="43:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
      <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
        <short>&#10; Interface to read the 64-bit IEEE EUI.</short>
        <long>&#10; Interface to read the 64-bit IEEE EUI.&#10;&#10;</long>
      </documentation>
      <function command="" provided="0" name="getId" ref="0x40fdf010" loc="48:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/interfaces/LocalIeeeEui64.nc">
          <short>&#10; Get the 64-bit IEEE EUI.</short>
          <long>&#10; Get the 64-bit IEEE EUI.&#10; @returns the 64-bit IEEE EUI type, defined in tos/types/IeeeEui64.h&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalIeeeEui64"/>
        <type-function size="I:1" alignment="I:1">
          <type-tag size="I:8" alignment="I:1"><struct-ref name="ieee_eui64" ref="0x40436a18"/>
            <typename><typedef-ref name="ieee_eui64_t" ref="0x40436ea8"/></typename>
          </type-tag>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ShortAddressConfig" loc="1:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
      <function command="" provided="0" name="setShortAddr" ref="0x40fdfcb0" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
        <interfacedef-ref qname="ShortAddressConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="address" ref="0x40fdfb58" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="setShortAddrDone" ref="0x40fde280" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
        <interfacedef-ref qname="ShortAddressConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x40fde128" loc="5:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ShortAddressConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListening" loc="41:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <short>&#10; Low Power Listening interface&#10;&#10; </short>
        <long>&#10; Low Power Listening interface&#10;&#10; @author Jonathan Hui&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="setRemoteWakeupInterval" ref="0x40ffd090" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.</short>
          <long>&#10; Configure this outgoing message so it can be transmitted to a neighbor mote&#10; with the specified wakeup interval.&#10; @param 'message_t* ONE msg' Pointer to the message that will be sent&#10; @param intervalMs The receiving node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ffecc0" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="intervalMs" ref="0x40ffeef8" loc="65:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRemoteWakeupInterval" ref="0x40ffdb50" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the destination node's wakeup interval configured in this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ffd9f8" loc="71:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getLocalWakeupInterval" ref="0x40ffe7e8" loc="57:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; </short>
          <long>&#10; @return the local node's wakeup interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setLocalWakeupInterval" ref="0x40ffe168" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
          <short>&#10; Set this this node's radio wakeup interval, in milliseconds.</short>
          <long>&#10; Set this this node's radio wakeup interval, in milliseconds. After&#10; each interval, the node will wakeup and check for radio activity.&#10;&#10; Note: The wakeup interval can be set to 0 to indicate that the radio&#10; should stay on all the time but in order to get a startDone this&#10; should only be done when the duty-cycling is off (after a stopDone).&#10;&#10; @param intervalMs the length of this node's Rx check interval, in [ms]&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x40ffe010" loc="52:/opt/tinyos-2.x/tos/interfaces/LowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareReceive" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
      <function event="" provided="0" name="receive" ref="0x410050a8" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
              <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41006f10" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BareSend" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
      <function command="" provided="0" name="send" ref="0x41007088" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a task. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4100af00" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x41006168" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was cancelled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully cancelled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41006010" loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x410079f8" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="BareSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410076a0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x41007898" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/BareSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketLink" loc="37:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <short>&#10; </short>
        <long>&#10; @author David Moss&#10; @author Jon Wyant&#10;</long>
      </documentation>
      <function command="" provided="0" name="getRetryDelay" ref="0x41001380" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return the delay between retry attempts in ms for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41001228" loc="65:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetries" ref="0x41004780" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; </short>
          <long>&#10; Set the maximum number of times attempt message delivery&#10; Default is 0&#10; @param 'message_t* ONE msg'&#10; @param maxRetries the maximum number of attempts to deliver&#10;     the message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410043e8" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="maxRetries" ref="0x41004620" loc="46:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRetries" ref="0x41002a20" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short> &#10; </short>
          <long> &#10; @param 'message_t* ONE msg'&#10; @return the maximum number of retry attempts for this message&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410028c8" loc="59:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setRetryDelay" ref="0x410023a8" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; Set a delay between each retry attempt&#10; </short>
          <long>&#10; Set a delay between each retry attempt&#10; @param msg&#10; @param retryDelay the delay betweeen retry attempts, in milliseconds&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41002010" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="retryDelay" ref="0x41002248" loc="53:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="wasDelivered" ref="0x41001ca0" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t* ONE msg'&#10; @return TRUE if the message was delivered.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketLink"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41001b48" loc="71:/opt/tinyos-2.x/tos/interfaces/PacketLink.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketField" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
      <parameters>
        <typedef name="value_type" ref="0x4101bd68" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <interfacedef-ref qname="PacketField"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4101bd68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x41019058" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Clears the isSet flag.</short>
          <long>&#10; Clears the isSet flag.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4101aed8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x4101aa10" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns the stored value of this field in the message.</short>
          <long>&#10; Returns the stored value of this field in the message. If the&#10; value is not set, then the returned value is undefined.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4101bd68"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4101a8b8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isSet" ref="0x4101a3f0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Returns TRUE if the value is set for this message.</short>
          <long>&#10; Returns TRUE if the value is set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4101a298" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41019800" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
          <short>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.</short>
          <long>&#10; Sets the isSet false to TRUE and the time stamp value to the &#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketField"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4101bd68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41019488" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x410196a0" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketField.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="value_type" scoped="" ref="0x4101bd68"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SendNotifier" loc="50:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <short> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.</short>
        <long> &#10; The radio stack notifies the entire system that it is about to send&#10; a packet.  Other modules in the system can call back within this event&#10; to modify the packet's metadata. For example, we can setup a module&#10; in the system to make every CTP data packet send with low power listening&#10; enabled:&#10;&#10;   event void SendNotifier.aboutToSend[AM_COLLECTION_DATA](uint8_t dest,&#10;       message_t *msg) {&#10;     call LowPowerListening.setRxSleepInterval(msg, 512);&#10;   }&#10; &#10; @author David Moss&#10;</long>
      </documentation>
      <function event="" provided="0" name="aboutToSend" ref="0x40ff5018" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
          <short>&#10; The system is about to send this message.</short>
          <long>&#10; The system is about to send this message. Fill in any last modifications&#10; and the message will be sent.&#10; &#10; @param dest The destination address of the messsage&#10; @param 'message_t* ONE msg' The message about to be transmitted&#10;</long>
        </documentation>
        <interfacedef-ref qname="SendNotifier"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x40ff8c88" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40ff8ea0" loc="59:/opt/tinyos-2.x/tos/interfaces/SendNotifier.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Packet" loc="35:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
      <function command="" provided="0" name="source" ref="0x41024738" loc="41:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410245e0" loc="41:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="address" ref="0x40ff2ac8" loc="37:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x41024168" loc="39:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41024010" loc="39:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x410226d0" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41022330" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x41022570" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x41024f08" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41024b68" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x41024da8" loc="43:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="pan" ref="0x41021220" loc="49:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40449178"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410210c8" loc="49:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setPan" ref="0x41021990" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40449178"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41021600" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x41021830" loc="51:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_panid_t" ref="0x40449178"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x41022c40" loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41022ae8" loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x41021dd0" loc="53:/opt/tinyos-2.x/tos/interfaces/Ieee154Packet.nc">
        <interfacedef-ref qname="Ieee154Packet"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40449178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketTimeStamp" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
      <parameters>
        <typedef name="precision_tag" ref="0x410144b8" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x410144b8"/></type-var>
        </typedef>
        <typedef name="size_type" ref="0x41014620" loc="35:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <interfacedef-ref qname="PacketTimeStamp"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41014620"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="timestamp" ref="0x4100d818" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to get timestamp from.&#10;&#10; Return the time stamp for the given message. Please check with the&#10; isValid command if this value can be relied upon. If this command is&#10; called after transmission, then the transmit time of the packet&#10; is returned (the time when the frame synchronization byte was&#10; transmitted). If this command is called after the message is received,&#10; the tne receive time of the message is returned. It is recommended that&#10; the timestamp command be called only from the receive or sendDone event&#10; handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41014620"/></type-var>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4100d6c0" loc="63:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clear" ref="0x4100e2e0" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to FALSE.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4100e188" loc="70:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isValid" ref="0x41014ca8" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to examine.&#10;&#10; Returns TRUE if the time stamp of the message is valid. Under special&#10; circumstances the radio chip might not be able to correctly assign a&#10; precise time value to an incoming packet (e.g. under very heavy traffic&#10; multiple interrupts can occur before they could be serviced, and even&#10; if capture registers are used, it is not possible to get the time stamp&#10; for the first or last unserviced event), in which case the time stamp&#10; value should not be used. It is recommended that the isValid command be&#10; called from the receive or sendDone event handler.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41014b50" loc="49:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x4100eda0" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
        <documentation loc="72:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
          <short>&#10; </short>
          <long>&#10; @param 'message_t *ONE msg' Message to modify.&#10;&#10; Sets the isValid flag to TRUE and the time stamp value to the&#10; specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketTimeStamp"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41014620"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4100ea30" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x4100ec40" loc="78:/opt/tinyos-2.x/tos/interfaces/PacketTimeStamp.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="size_type" scoped="" ref="0x41014620"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LocalTime" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
      <documentation loc="36:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <short>&#10; A LocalTime interface counts time in some units.</short>
        <long>&#10; A LocalTime interface counts time in some units. If you need to detect&#10; time overflow, you should use a component offering the Counter&#10; interface.&#10;&#10; &#60;p>The LocalTime interface is parameterised by its &#34;precision&#34;&#10; (milliseconds, microseconds, etc), identified by a type. This prevents,&#10; e.g., unintentionally mixing components expecting milliseconds with&#10; those expecting microseconds as those interfaces have a different type.&#10;&#10; &#60;p>See TEP102 for more details.&#10;&#10; @param precision_tag A type indicating the precision of this Counter.&#10;&#10; @author Cory Sharp &#60;cssharp@eecs.berkeley.edu>&#10;</long>
      </documentation>
      <parameters>
        <typedef name="precision_tag" ref="0x41011010" loc="53:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <interfacedef-ref qname="LocalTime"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="precision_tag" scoped="" ref="0x41011010"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="get" ref="0x410114f0" loc="61:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/lib/timer/LocalTime.nc">
          <short> &#10; Return current time.</short>
          <long> &#10; Return current time. Time starts counting at boot - some time sources&#10; may stop counting while the processor is in low-power mode.&#10;&#10; @return Current time.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LocalTime"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154Send" loc="45:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <function command="" provided="0" name="send" ref="0x40ff4a90" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>.</short>
          <long> &#10; Send a packet with a data payload of &#60;tt>len&#60;/tt> to address&#10; &#60;tt>addr&#60;/tt>. To determine the maximum available size, use the&#10; Packet interface of the component providing AMSend. If send&#10; returns SUCCESS, then the component will signal the sendDone&#10; event in the future; if send returns an error, it will not&#10; signal the event.  Note that a component may accept a send&#10; request which it later finds it cannot satisfy; in this case, it&#10; will signal sendDone with error code.&#10;&#10; @param addr   address to which to send the packet&#10; @param msg    the packet&#10; @param len    the length of the data in the packet payload&#10; @return       SUCCESS if the request to send succeeded and a&#10;               sendDone will be signaled later, EBUSY if the&#10;               abstraction cannot send now but will be able to&#10;               later, or FAIL if the communication layer is not&#10;               in a state that can send (e.g., off).&#10; @see          sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="addr" ref="0x40ff4530" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
            </type-int>
          </variable>
          <variable name="msg" ref="0x40ff4748" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40ff4928" loc="67:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getPayload" ref="0x40fefdb0" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="113:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return a pointer to a protocol's payload region in a packet.</short>
          <long>&#10; Return a pointer to a protocol's payload region in a packet.&#10; This command behaves identically to &#60;tt>Packet.getPayload&#60;/tt>&#10; (minus the length parameter) and is included in this interface&#10; as a convenience.&#10;&#10; @param  msg    the packet&#10; @return        the payload of the packet&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-void size="I:1" alignment="I:1"></type-void>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40fefa50" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x40fefc30" loc="122:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x40fef4f0" loc="110:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="100:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Return the maximum payload length that this communication layer&#10; can provide.</short>
          <long>&#10; Return the maximum payload length that this communication layer&#10; can provide. This command behaves identically to&#10; &#60;tt>Packet.maxPayloadLength&#60;/tt> and is included in this&#10; interface as a convenience.&#10;&#10; @return the maximum payload length&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x40ff1460" loc="83:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="69:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short>&#10; Cancel a requested transmission.</short>
          <long>&#10; Cancel a requested transmission. Returns SUCCESS if the &#10; transmission was canceled properly (not sent in its&#10; entirety). Note that the component may not know&#10; if the send was successfully canceled, if the radio is&#10; handling much of the logic; in this case, a component&#10; should be conservative and return an appropriate error code.&#10; A successful call to cancel must always result in a &#10; sendFailed event, and never a sendSucceeded event.&#10; &#10; @param  msg     the packet whose transmission should be cancelled.&#10; @return SUCCESS if the transmission was cancelled, FAIL otherwise.&#10; @see    sendDone&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ff1308" loc="83:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x40ff1e40" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
        <documentation loc="85:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
          <short> &#10; Signaled in response to an accepted send request.</short>
          <long> &#10; Signaled in response to an accepted send request. &#60;tt>msg&#60;/tt> is&#10; the message buffer sent, and &#60;tt>error&#60;/tt> indicates whether&#10; the send was successful.&#10;&#10; @param  msg   the packet which was submitted as a send request&#10; @param  error SUCCESS if it was sent successfully, FAIL if it was not,&#10;               ECANCEL if it was cancelled&#10; @see send&#10; @see cancel&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154Send"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x40ff1ae8" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="error" ref="0x40ff1ce0" loc="97:/opt/tinyos-2.x/tos/interfaces/Ieee154Send.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioChannel" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
      <function event="" provided="0" name="setChannelDone" ref="0x4101fe68" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x4101f988" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress),&#10; EALREADY if the selected channel is already set, SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x4101f830" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x4101b3b8" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioChannel.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioChannel"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LinkPacketMetadata" loc="37:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <short>&#10; This interface provides metadata associated with a link layer packet.</short>
        <long>&#10; This interface provides metadata associated with a link layer packet.&#10; @author Philip Levis&#10;</long>
      </documentation>
      <function command="" provided="0" name="highChannelQuality" ref="0x41012010" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
          <short>&#10; Return true if the channel during this packet had high quality (few bit errors).</short>
          <long>&#10; Return true if the channel during this packet had high quality (few bit errors).&#10; A good rule of thumb for &#34;high quality&#34; is that the channel quality&#10; would enable MTU packets to have a reception rate of 90% or greater.&#10;&#10; @param 'message_t* ONE msg' A received packet during which the channel was measured.&#10; @return Whether the channel had high quality.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LinkPacketMetadata"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41015df0" loc="47:/opt/tinyos-2.x/tos/interfaces/LinkPacketMetadata.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="DummyConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
      <function command="" provided="0" name="nothing" ref="0x41031548" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/DummyConfig.nc">
          <short>&#10; We need to put something here, but this is not going to get called&#10;</short>
        </documentation>
        <interfacedef-ref qname="DummyConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="TrafficMonitorConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
      <function command="" provided="0" name="getBytes" ref="0x41032db0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
          <short>&#10; Returns the number of bytes in this message.</short>
          <long>&#10; Returns the number of bytes in this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="TrafficMonitorConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41032c58" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/TrafficMonitorConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
      <function command="" provided="0" name="group" ref="0x41028738" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.group *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410285e0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="checkFrame" ref="0x410614b8" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.</short>
          <long>&#10; Check if the packet is properly formatted, and if the user &#10; forgot to call Packet.clear then format it properly.&#10; Return SUCCESS if the frame is now properly set up, &#10; or FAIL of the send operation should be aborted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41061360" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="source" ref="0x4102a948" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.source *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102a7f0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="destination" ref="0x41036b30" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.destination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410369d8" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSource" ref="0x41028170" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setSource *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102ad78" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x41028010" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestination" ref="0x4102a378" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setDestination *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102a010" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x4102a218" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setGroup" ref="0x41028ec0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
          <short> Same as AMPacket.setGroup *</short>
        </documentation>
        <interfacedef-ref qname="ActiveMessageConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41028b60" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="grp" ref="0x41028d60" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/ActiveMessageConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SlottedCollisionConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
      <function command="" provided="0" name="getInitialDelay" ref="0x4102fdc0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.</short>
          <long>&#10; This command should return the approximate transmit delay between&#10; setting an alarm, waiting for the fire event, calling send and&#10; obtaining the timestamp for the transmitted message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getScheduleExponent" ref="0x4102d478" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Must return a binary exponent so that the collision avoidance layer&#10; can assign slots in the range of [0, 1 &#60;&#60; exponent) of size collision&#10; window.</short>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowLength" ref="0x4102c9e8" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the size of the collision window for this received message.</short>
          <long>&#10; Returns the size of the collision window for this received message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102c890" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitTime" ref="0x4102db28" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; This command must return the time when the message was transmitted.</short>
          <long>&#10; This command must return the time when the message was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102d9d0" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getCollisionWindowStart" ref="0x4102c240" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
          <short>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.</short>
          <long>&#10; Returns the start of the collision window for this received message,&#10; so transmit times in this range would be considered possible collisions.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SlottedCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102c0e8" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SlottedCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioAlarm" loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
      <function event="" provided="0" name="fired" ref="0x4104b158" loc="60:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; This event is fired when the specified timeout period expires.</short>
          <long>&#10; This event is fired when the specified timeout period expires.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="wait" ref="0x4104c8e0" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Waits till the specified timeout period expires.</short>
          <long>&#10; Waits till the specified timeout period expires. The alarm must be free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x404bfbe0"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="timeout" ref="0x4104c788" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="tradio_size" ref="0x404bfbe0"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancel" ref="0x4104cd28" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Cancels the running alarm.</short>
          <long>&#10; Cancels the running alarm. The alarm must be pending.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isFree" ref="0x4104c250" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns TRUE if the alarm is free and ready to be used.</short>
          <long>&#10; Returns TRUE if the alarm is free and ready to be used. Once the alarm&#10; is free, it cannot become nonfree in the same tasklet block. Note,&#10; if the alarm is currently set (even if for ourselves) then it is not free.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getNow" ref="0x4104b618" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
        <documentation loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioAlarm.nc">
          <short>&#10; Returns the current time as measured by the radio stack.</short>
          <long>&#10; Returns the current time as measured by the radio stack.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioAlarm"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="tradio_size" ref="0x404bfbe0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="CsmaConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
      <function command="" provided="0" name="requiresSoftwareCCA" ref="0x41032010" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
          <short>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.</short>
          <long>&#10; This command is called when the message is transmitted to&#10; check if it needs software clear channel assesment.&#10;</long>
        </documentation>
        <interfacedef-ref qname="CsmaConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41033e70" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/layers/CsmaConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SoftwareAckConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
      <function command="" provided="0" name="reportChannelError" ref="0x410378b8" loc="86:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="82:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.</short>
          <long>&#10; This command is called when a sent packet did not receive an&#10; acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckPacket" ref="0x41037400" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41037088" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x410372a0" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x4103a450" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.</short>
          <long>&#10; Returns TRUE if the layer should wait for a software acknowledgement&#10; to be received after this packet was transmitted.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103a2f8" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckPacket" ref="0x4103ab18" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet is an acknowledgement packet.</short>
          <long>&#10; Returns TRUE if the received packet is an acknowledgement packet.&#10; The AckedSend layer will filter out all received acknowledgement&#10; packets and uses  only the matching one for the acknowledgement.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103a9c0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckPacket" ref="0x41038470" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The acknowledgement packect was already verified &#10; to be a valid acknowledgement packet via the isAckPacket command.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x410380f8" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x41038310" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckTimeout" ref="0x4103f578" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.</short>
          <long>&#10; Returns the acknowledgement timeout (in the radio clock units),&#10; in which a sent packet must be acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x4103fde8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Sets the flag in the message indicating to the receiver whether&#10; the message should be acknowledged.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103fac0" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x4103fc88" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x41038b88" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
          <short>&#10; Returns TRUE if the received packet needs software acknowledgements&#10; to be sent back to the sender.</short>
        </documentation>
        <interfacedef-ref qname="SoftwareAckConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41038a30" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/SoftwareAckConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Ieee154PacketLayer" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
      <documentation loc="38:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <short>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses.</short>
        <long>&#10; This interface encapsulates IEEE 802.15.4 intrapan data frames with &#10; 16-bit destination pan, source and destination addresses. It also &#10; supports 6LowPan interoperability mode, and acknowledgement frames.&#10; Note, that this interface does not support the CRC-16 value, which&#10; should be verified before the data can be trusted.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getDestPan" ref="0x41055d38" loc="131:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="127:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; returns the destination PAN id, values &#60;= 255 are tinyos groups,&#10; valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41055be0" loc="131:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDSN" ref="0x41056ed8" loc="120:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="117:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41056d80" loc="120:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFCF" ref="0x4105ce38" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame control field.</short>
          <long>&#10; Sets the frame control field. This method should not be used, &#10; createDataFrame and createAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105cae8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="fcf" ref="0x4105ccd8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isAckFrame" ref="0x4105a220" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is an acknowledgement frame supported&#10; by this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105a0c8" loc="75:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setSrcAddr" ref="0x41051190" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="153:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41052e10" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x41051030" loc="156:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createDataFrame" ref="0x4105bb58" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create a data frame supported by this interface.</short>
          <long>&#10; Sets the FCF to create a data frame supported by this interface.&#10; You may call setAckRequired and setFramePending commands after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105ba00" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDSN" ref="0x41055728" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="122:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the data sequence number&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410553e8" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="dsn" ref="0x410555c8" loc="125:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckReply" ref="0x410591c8" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Creates an acknowledgement packet for the given data packet.</short>
          <long>&#10; Creates an acknowledgement packet for the given data packet.&#10; This also sets the DSN value. The data message must be a &#10; data frame, the ack message will be overwritten.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x4105ae10" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x41059068" loc="88:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSrcAddr" ref="0x41052998" loc="151:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="148:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the source address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41052840" loc="151:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isDataFrame" ref="0x4105b4b8" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).</short>
          <long>&#10; Returns TRUE if the message is a data frame supported by &#10; this interface (based on the value of the FCF).&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105b360" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getAckRequired" ref="0x410571c0" loc="99:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="96:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the ACK required field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the ACK required field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41057068" loc="99:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="verifyAckReply" ref="0x41059ad0" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="90:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet.</short>
          <long>&#10; Returns TRUE if the acknowledgement packet corresponds to the&#10; data packet. The data message must be a data packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="data" ref="0x41059758" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x41059970" loc="94:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localAddr" ref="0x4104f8b8" loc="178:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="175:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local address of the node (AM address)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_saddr_t" ref="0x40449410"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckWait" ref="0x410517b8" loc="162:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="158:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.</short>
          <long>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destination address is not the broadcast address.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41051660" loc="162:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="localPan" ref="0x4104f418" loc="173:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="170:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the local pan id (AM group)&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="ieee154_panid_t" ref="0x40449178"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestAddr" ref="0x41052370" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="143:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41052010" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="addr" ref="0x41052210" loc="146:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="createAckFrame" ref="0x4105a8d0" loc="81:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="77:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface.</short>
          <long>&#10; Sets the FCF to create an acknowledgement frame supported by&#10; this interface. You may call setFramePending after this.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105a778" loc="81:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setFramePending" ref="0x410568c8" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="112:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the frame pending field in the FCF.</short>
          <long>&#10; Sets the frame pending field in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41056578" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pending" ref="0x41056768" loc="115:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setDestPan" ref="0x41053548" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="133:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the destination PAN id, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410531f8" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="pan" ref="0x410533e8" loc="136:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isForMe" ref="0x4104fe90" loc="185:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="180:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.</short>
          <long>&#10; Returns TRUE if the destionation of this message is either 0xFFFF&#10; or is the local address of the node, and the pan address is the&#10; local one.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4104fd38" loc="185:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setAckRequired" ref="0x410579c8" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="101:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.</short>
          <long>&#10; Sets the ACK required field in the FCF, should never be set&#10; for acknowledgement frames.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410576a0" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="ack" ref="0x41057868" loc="105:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFCF" ref="0x4105c630" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the frame control field.</short>
          <long>&#10; Returns the frame control field. This method should not be used, &#10; isDataFrame and isAckFrame should be used instead.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105c4d8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresAckReply" ref="0x41051ec8" loc="168:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="164:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the packet is a data packet, the ACK_REQ field&#10; is set and the destionation address is this node.</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41051d70" loc="168:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDestAddr" ref="0x41053b78" loc="141:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="138:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns the destination address, valid only for data frames&#10;</short>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41053a20" loc="141:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getFramePending" ref="0x41056090" loc="110:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
        <documentation loc="107:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
          <short>&#10; Returns TRUE if the frame pending field is set in the FCF.</short>
          <long>&#10; Returns TRUE if the frame pending field is set in the FCF.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Ieee154PacketLayer"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41057f20" loc="110:/opt/tinyos-2.x/tos/lib/rfxlink/layers/Ieee154PacketLayer.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UniqueConfig" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
      <function command="" provided="0" name="setSequenceNumber" ref="0x41035b40" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Sets the sequence number of the packet.</short>
          <long>&#10; Sets the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410357e0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="number" ref="0x410359e0" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="reportChannelError" ref="0x41033010" loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.</short>
          <long>&#10; This command is called when the unqiue layer detects a missing (jump &#10; in the data sequence number) or a duplicate packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getSequenceNumber" ref="0x4103ecb0" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sequence number of the packet.</short>
          <long>&#10; Returns the sequence number of the packet.&#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103eb58" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getSender" ref="0x41035310" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
          <short>&#10; Returns the sender of the packet.</short>
          <long>&#10; Returns the sender of the packet. &#10;</long>
        </documentation>
        <interfacedef-ref qname="UniqueConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x410351b8" loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/layers/UniqueConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="LowPowerListeningConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
      <function command="" provided="0" name="getListenLength" ref="0x4105e350" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages.</short>
          <long>&#10; Returns the number of milliseconds the mote should turn on&#10; its radio to check for incoming messages. This check is &#10; performed at every localWakeInterval.&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="ackRequested" ref="0x4102be70" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement has been requested for &#10; this message via the PacketAcknowledgements interface.</short>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102bd18" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="needsAutoAckRequest" ref="0x4102b760" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
          <short>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).</short>
          <long>&#10; Returns TRUE if an acknowledgement should be requested&#10; for the message automatically by the LPL code (this should &#10; normally happen for all non-broadcast messages).&#10;</long>
        </documentation>
        <interfacedef-ref qname="LowPowerListeningConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4102b608" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/LowPowerListeningConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RandomCollisionConfig" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
      <function command="" provided="0" name="getCongestionBackoff" ref="0x410302e0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the amount of maximum backoff when there is congestion&#10; (the channel was busy for the first try)&#10;</short>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41030188" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInitialBackoff" ref="0x4103bbc0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the initial amount of maximum backoff for this message.</short>
          <long>&#10; Returns the initial amount of maximum backoff for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103ba68" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getMinimumBackoff" ref="0x410307d8" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; Returns the minimum ticks before the message could be sent.</short>
          <long>&#10; Returns the minimum ticks before the message could be sent.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getTransmitBarrier" ref="0x41030e90" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
          <short>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.</short>
          <long>&#10; The provided message was just received, and this command should return &#10; the time till no transmission should be initiated.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RandomCollisionConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41030d38" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/layers/RandomCollisionConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioPacket" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
      <function command="" provided="0" name="clear" ref="0x410477d8" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Clears all metadata and sets all default values in the headers.</short>
          <long>&#10; Clears all metadata and sets all default values in the headers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41047680" loc="70:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="payloadLength" ref="0x4105fda8" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the payload.</short>
          <long>&#10; Returns the length of the payload. The payload starts right&#10; after the header.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105fc50" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxPayloadLength" ref="0x41048b28" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the maximum length that can be set for this message.</short>
          <long>&#10; Returns the maximum length that can be set for this message.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setPayloadLength" ref="0x41048668" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Sets the length of the payload.</short>
          <long>&#10; Sets the length of the payload.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41048308" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="length" ref="0x41048508" loc="54:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4105f6b0" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; This command returns the length of the header.</short>
          <long>&#10; This command returns the length of the header. The header&#10; starts at the first byte of the message_t structure &#10; (some layers may add dummy bytes to allign the payload to&#10; the msg->data section).&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4105f558" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x410471c0" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
          <short>&#10; Returns the length of the metadata section.</short>
          <long>&#10; Returns the length of the metadata section. The metadata section&#10; is at the very end of the message_t structure and grows downwards.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioPacket"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41047068" loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioPacket.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RFA1DriverConfig" loc="36:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
      <function command="" provided="0" name="maxPayloadLength" ref="0x4103d938" loc="47:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.</short>
          <long>&#10; Returns the maximum length of the PHY payload including the &#10; length field but not counting the FCF field.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="headerLength" ref="0x4103d438" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="38:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy header to align the payload properly.</short>
          <long>&#10; Returns the length of a dummy header to align the payload properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103d2e0" loc="41:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="metadataLength" ref="0x4103c058" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="49:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.</short>
          <long>&#10; Returns the length of a dummy metadata section to align the&#10; metadata section properly.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103dec0" loc="53:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="requiresRssiCca" ref="0x4103c708" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
          <short>&#10; Returns TRUE if before sending this message we should make sure that&#10; the channel is clear via a very basic (and quick) RSSI check.</short>
        </documentation>
        <interfacedef-ref qname="RFA1DriverConfig"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4103c5b0" loc="59:/opt/tinyos-2.x/tos/chips/atm128rfa1/radio/RFA1DriverConfig.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Tasklet" loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <short>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled.</short>
        <long>&#10; This interface is useful in building state machines when the state &#10; transitions should be executed atomically but with interrupts enabled. &#10; All state transitions should take place in the run event handler or&#10; in blocks protected by the suspend and resume commands.&#10;</long>
      </documentation>
      <function command="" provided="0" name="schedule" ref="0x410b0cf0" loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Makes sure that the run event is called at least once more.</short>
          <long>&#10; Makes sure that the run event is called at least once more. If the &#10; run event is currently not executing, then it  is called immediately &#10; and this command returns only after the completion of the run event. &#10; If the run event is currently executed, then this method returns at &#10; once, and makes sure that the run event is called once more when &#10; it is finished. If this method is called from a task, then by the &#10; above rules, the run event will be called from a task as well.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="suspend" ref="0x410ad2d8" loc="72:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="61:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section.</short>
          <long>&#10; Enters a critical section of the code and meakes sure that the&#10; run event is not called while in this section. No long running&#10; computation should be called from the critical session, and&#10; in particular no user event should be fired. This call is only&#10; possible from task context, otherwise we cannot guarantee that&#10; the run event is not currently running. The suspend calls&#10; can be nested. It is very important that the same number of&#10; resume commands must be called in all control paths, e.g. be very&#10; careful with the return and break commands.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resume" ref="0x410ad918" loc="79:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; Leaves the critical section.</short>
          <long>&#10; Leaves the critical section. This call is conly possible from &#10; task context. If there were scheduled executions of the run&#10; event, then those will be called before this command returns.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="run" ref="0x410b08f0" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/Tasklet.nc">
          <short>&#10; This method is executed atomically.</short>
        </documentation>
        <interfacedef-ref qname="Tasklet"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ActiveMessageAddress" loc="38:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Moss&#10;</long>
      </documentation>
      <function command="" provided="0" name="amAddress" ref="0x410be010" loc="50:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the active message address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="changed" ref="0x410be880" loc="60:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="57:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Notification that the address or group settings changed.</short>
          <long>&#10; Notification that the address or group settings changed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="amGroup" ref="0x410be480" loc="55:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; </short>
          <long>&#10; @return the group address of this node&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setAddress" ref="0x410c1a88" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
        <documentation loc="40:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
          <short>&#10; Set the active message address of this node&#10; </short>
          <long>&#10; Set the active message address of this node&#10; @param group The node's group ID&#10; @param addr The node's active message address&#10;</long>
        </documentation>
        <interfacedef-ref qname="ActiveMessageAddress"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="group" ref="0x410c1720" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="am_group_t" ref="0x404bdcd0"/></typename>
            </type-int>
          </variable>
          <variable name="addr" ref="0x410c1928" loc="45:/opt/tinyos-2.x/tos/interfaces/ActiveMessageAddress.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioReceive" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
      <function event="" provided="0" name="receive" ref="0x412084f0" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event.</short>
          <long>&#10; Signals the reception of a message, but only for those messages for&#10; which SUCCESS was returned in the header event. The usual owner rules &#10; apply to the message pointers.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
              <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41208378" loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="header" ref="0x4120bce0" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
          <short>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed.</short>
          <long>&#10; This event is fired when the header is received/downloaded and the &#10; higher layers are consulted whether it needs to be downloaded and &#10; further processed. Return FALSE if the message should be discarded.&#10; In particular, the message buffer layer returns FALSE if there is&#10; no space for a new message, so this message will not get acknowledged.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioReceive"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x4120bb88" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioReceive.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="NeighborhoodFlag" loc="41:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <short>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example).</short>
        <long>&#10; This interface provides one bit storage for each neighbor in a very&#10; fast and conveint way (without using shifts for example). &#10;</long>
      </documentation>
      <function command="" provided="0" name="clear" ref="0x411fd2c8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="53:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for the given index.</short>
          <long>&#10; Clears the flag for the given index. The flag is automatically&#10; cleared after the Neighborhood.evicted event is fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x411fd170" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="clearAll" ref="0x411fd748" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Clears the flag for all indices&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41203810" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="43:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Returns the value of the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x412036b8" loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x41203d58" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
          <short>&#10; Sets the flag for the given index&#10;</short>
        </documentation>
        <interfacedef-ref qname="NeighborhoodFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x41203c00" loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/NeighborhoodFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Neighborhood" loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
      <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <short>&#10; Every component maintains its own neighborhood data.</short>
        <long>&#10; Every component maintains its own neighborhood data. The Neighboorhood&#10; component maintains only the nodeids and ages of the neighbors, and&#10; evicts old entries from the table when necessary.&#10;</long>
      </documentation>
      <function command="" provided="0" name="getAge" ref="0x41201220" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="51:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the age of the given entry.</short>
          <long>&#10; Returns the age of the given entry. The age is incremented by one&#10; every time a new node is inserted into the neighborhood table that&#10; is not already at the very end. If the age would get too large to&#10; fit into a byte, then it is periodically reset to a smaller value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x412010c8" loc="57:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="insertNode" ref="0x41201f08" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="64:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Adds a new node into the neighborhood table.</short>
          <long>&#10; Adds a new node into the neighborhood table. If this node was already&#10; in the table, then it is just brought to the front (its age is reset&#10; to zero). If the node was not in the table, then the oldest is evicted&#10; and its entry is replaced with this node. The index of the entry&#10; is returned in the range [0, NEIGHBORHOOD-1]. &#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x41201db0" loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getNode" ref="0x412018f0" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="59:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the node address for the given entry.</short>
          <long>&#10; Returns the node address for the given entry.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x41201798" loc="62:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="evicted" ref="0x411ff5e8" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="73:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; This event is fired when the oldest entry is replaced with a new&#10; node.</short>
          <long>&#10; This event is fired when the oldest entry is replaced with a new&#10; node. The same interface is used by many users, so all of them&#10; will receive this event and can clear the corresponding entry.&#10; After this event is fired, all flags for this entry are cleared&#10; (see the NeighborhoodFlag interface)&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x411ff490" loc="80:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getIndex" ref="0x41204b80" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
        <documentation loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
          <short>&#10; Returns the index of the neighbor in the table.</short>
          <long>&#10; Returns the index of the neighbor in the table. If the node was not &#10; found in the table, then the value NEIGHBORHOOD is  returned, &#10; otherwise an index in the range [0, NEIGHBORHOOD-1] is returned.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Neighborhood"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="id" ref="0x41204a28" loc="49:/opt/tinyos-2.x/tos/lib/rfxlink/util/Neighborhood.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="am_addr_t" ref="0x404c7010"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="SystemLowPowerListening" loc="1:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
      <function command="" provided="0" name="setDefaultRemoteWakeupInterval" ref="0x4128b920" loc="3:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4128b7c8" loc="3:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRemoteWakeupInterval" ref="0x41288408" loc="6:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDelayAfterReceive" ref="0x41288880" loc="7:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDelayAfterReceive" ref="0x4128bf08" loc="4:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
        <interfacedef-ref qname="SystemLowPowerListening"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="intervalMs" ref="0x4128bdb0" loc="4:/opt/tinyos-2.x/tos/interfaces/SystemLowPowerListening.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioState" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
      <function command="" provided="0" name="turnOff" ref="0x412ecd78" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time.</short>
          <long>&#10; Moves to radio into sleep state with the lowest power consumption but &#10; highest wakeup time. The radio cannot send or receive in this state &#10; and releases all access to shared resources (e.g. SPI bus). &#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="turnOn" ref="0x412e97d8" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Goes into receive state.</short>
          <long>&#10; Goes into receive state. The radio continuously receive messages &#10; and able to transmit.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setChannel" ref="0x412e9e20" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Sets the current channel.</short>
          <long>&#10; Sets the current channel. Returns EBUSY if the stack is unable&#10; to change the channel this time (some other operation is in progress)&#10; SUCCESS otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="channel" ref="0x412e9cc8" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="done" ref="0x412e82b0" loc="69:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="65:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.</short>
          <long>&#10; This event is signaled exactly once for each sucessfully posted state &#10; transition and setChannel command when it is completed.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="standby" ref="0x412e92e0" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.</short>
          <long>&#10; The same as the turnOff command, except it is not as deep sleep, and&#10; it is quicker to recover from this state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getChannel" ref="0x412e87f0" loc="74:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
        <documentation loc="71:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioState.nc">
          <short>&#10; Returns the currently selected channel.</short>
          <long>&#10; Returns the currently selected channel.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioState"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioSend" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
      <function command="" provided="0" name="send" ref="0x412eb870" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Starts the transmission of the given message.</short>
          <long>&#10; Starts the transmission of the given message. This command must not&#10; be called while another send is in progress (so one must wait for the&#10; sendDone event). Returns EBUSY if a reception is in progress or for&#10; some other reason the request cannot be temporarily satisfied (e.g.&#10; the SPI bus access could not be acquired). In this case the send &#10; command could be retried from a tasklet. Returns SUCCESS if the &#10; transmission could be started. In this case sendDone will be fired.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x412eb718" loc="48:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="ready" ref="0x412e5528" loc="63:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="58:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; This event is fired when the component is most likely able to accept &#10; a send request.</short>
          <long>&#10; This event is fired when the component is most likely able to accept &#10; a send request. If the send command has returned with a failure, then&#10; this event will be called at least once in the near future.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function event="" provided="0" name="sendDone" ref="0x412e5010" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
        <documentation loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
          <short>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command.</short>
          <long>&#10; Signals the completion of the send command, exactly once for each &#10; successfull send command. If the returned error code is SUCCESS, then &#10; the message was sent (may not have been acknowledged), otherwise &#10; the message was not transmitted over the air.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioSend"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x412ebe90" loc="56:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioSend.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Random" loc="40:/opt/tinyos-2.x/tos/interfaces/Random.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <short> &#10; Interface for generating 16-bit and 32-bit random numbers.</short>
        <long> &#10; Interface for generating 16-bit and 32-bit random numbers.&#10;&#10; @author Barbara Hohlt &#10; @date   March 1 2005 &#10;</long>
      </documentation>
      <function command="" provided="0" name="rand16" ref="0x4132c4b8" loc="52:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="48:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns low 16 bits of the pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="rand32" ref="0x4132c010" loc="46:/opt/tinyos-2.x/tos/interfaces/Random.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/interfaces/Random.nc">
          <short> &#10; Produces a 32-bit pseudorandom number.</short>
          <long> &#10; Produces a 32-bit pseudorandom number. &#10; @return Returns the 32-bit pseudorandom number.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Random"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
            <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ParameterInit" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
      <documentation loc="34:/opt/tinyos-2.x/tos/types/TinyError.h">
        <short>&#10; </short>
        <long>&#10; @author Phil Levis&#10; @author David Gay&#10; Revision:  $Revision: 1.12 $&#10;&#10; Defines global error codes for error_t in TinyOS.&#10;</long>
      </documentation>
      <parameters>
        <typedef name="parameter" ref="0x4135ca70" loc="53:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <interfacedef-ref qname="ParameterInit"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4135ca70"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="init" ref="0x41357168" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
        <documentation loc="55:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
          <short>&#10; Initialize this component.</short>
          <long>&#10; Initialize this component. Initialization should not assume that&#10; any component is running: init() cannot call any commands besides&#10; those that initialize other components. This command behaves&#10; identically to Init.init, except that it takes a parameter.&#10;&#10; @param   param   the initialization parameter&#10; @return          SUCCESS if initialized properly, FAIL otherwise.&#10;</long>
        </documentation>
        <interfacedef-ref qname="ParameterInit"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4135ca70"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="param" ref="0x41357010" loc="64:/opt/tinyos-2.x/tos/interfaces/ParameterInit.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="parameter" scoped="" ref="0x4135ca70"/></type-var>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="PacketFlag" loc="35:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
      <function command="" provided="0" name="clear" ref="0x41342d38" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to FALSE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41342be0" loc="55:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x41345a08" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Returns if the flag is set for this message.</short>
          <long>&#10; Returns if the flag is set for this message. &#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x413458b0" loc="40:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="setValue" ref="0x413421e8" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="42:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to the specified value.</short>
          <long>&#10; Sets the flag in this message to the specified value.&#10;</long>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41345e98" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
          <variable name="value" ref="0x41342088" loc="45:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="set" ref="0x413427a8" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
        <documentation loc="47:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
          <short>&#10; Sets the flag in this message to TRUE&#10;</short>
        </documentation>
        <interfacedef-ref qname="PacketFlag"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x41342650" loc="50:/opt/tinyos-2.x/tos/lib/rfxlink/util/PacketFlag.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RadioCCA" loc="37:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
      <function event="" provided="0" name="done" ref="0x4136b988" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="46:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Signals the completion of the clear channel assesment send command.</short>
          <long>&#10; Signals the completion of the clear channel assesment send command.&#10; SUCCESS means the channel is clear, EBUSY means the channel is not&#10; clear, and FAIL means that the clear channel assesment could not&#10; be finished or the operation was cancelled.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="error" ref="0x4136b830" loc="52:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="request" ref="0x4136b350" loc="44:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
        <documentation loc="39:/opt/tinyos-2.x/tos/lib/rfxlink/util/RadioCCA.nc">
          <short>&#10; Starts the clear channel assesment procedure.</short>
          <long>&#10; Starts the clear channel assesment procedure. Returns EBUSY if the radio&#10; is currently servicing a clear channel assesment, and SUCCESS otherwise.&#10; The check will be performed only in the RX_READY state.&#10;</long>
        </documentation>
        <interfacedef-ref qname="RadioCCA"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="BlipStatistics" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
      <parameters>
        <typedef name="stat_str" ref="0x414c93a8" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
          <interfacedef-ref qname="BlipStatistics"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x414c93a8"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="clear" ref="0x414c9d50" loc="34:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="get" ref="0x414c99b8" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
        <interfacedef-ref qname="BlipStatistics"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x414c93a8"/></type-var>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="stats" ref="0x414c9860" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/BlipStatistics.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-var size="U:" alignment="U:"><typedef-ref name="stat_str" scoped="" ref="0x414c93a8"/></type-var>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ReadLqi" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
      <function command="" provided="0" name="readRssi" ref="0x414b92a0" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x414b9148" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="readLqi" ref="0x414bccb0" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
        <interfacedef-ref qname="ReadLqi"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="msg" ref="0x414bcb58" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ReadLqi.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:137" alignment="I:1"><nx_struct-ref name="message_t" ref="0x404d2d90"/>
                <typename><typedef-ref name="message_t" ref="0x404d1b40"/></typename>
              </type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="Queue" loc="43:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
      <documentation loc="33:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <short>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type.</short>
        <long>&#10;  Interface to a FIFO list (queue) that contains items&#10;  of a specific type. The queue has a maximum size.&#10;&#10;  @author Philip Levis&#10;  @author Kyle Jamieson&#10;  @date   $Date: 2008-06-04 03:00:31 $&#10;</long>
      </documentation>
      <parameters>
        <typedef name="t" ref="0x414b4d68" loc="43:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <interfacedef-ref qname="Queue"/>
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x414b4d68"/></type-var>
        </typedef>
      </parameters>
      <function command="" provided="0" name="head" ref="0x414af010" loc="73:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="67:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Get the head of the queue without removing it.</short>
          <long>&#10; Get the head of the queue without removing it. If the queue&#10; is empty, the return value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x414b4d68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="enqueue" ref="0x414afec8" loc="90:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="83:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Enqueue an element to the tail of the queue.</short>
          <long>&#10; Enqueue an element to the tail of the queue.&#10;&#10; @param 't ONE newVal' - the element to enqueue&#10; @return SUCCESS if the element was enqueued successfully, FAIL&#10;                 if it was not enqueued.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x414b4d68"/></type-var>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="newVal" ref="0x414afd70" loc="90:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x414b4d68"/></type-var>
            <attribute-value>
              <attribute-ref name="one" ref="0x40038840"/>
              <value-structured>
                <type-tag size="I:2" alignment="I:1"><attribute-ref name="one" ref="0x40038840"/></type-tag>
              </value-structured>
            </attribute-value>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="element" ref="0x414ae7f8" loc="101:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="92:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail.</short>
          <long>&#10; Return the nth element of the queue without dequeueing it, &#10; where 0 is the head of the queue and (size - 1) is the tail. &#10; If the element requested is larger than the current queue size,&#10; the return value is undefined.&#10;&#10; @param index - the index of the element to return&#10; @return 't ONE' the requested element in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x414b4d68"/></type-var>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="idx" ref="0x414ae6a0" loc="101:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="maxSize" ref="0x414b1b48" loc="65:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="60:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The maximum number of elements the queue can hold.</short>
          <long>&#10; The maximum number of elements the queue can hold.&#10;&#10; @return The maximum queue size.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="dequeue" ref="0x414af6b8" loc="81:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="75:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Remove the head of the queue.</short>
          <long>&#10; Remove the head of the queue. If the queue is empty, the return&#10; value is undefined.&#10;&#10; @return 't ONE' The head of the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-var size="U:" alignment="U:"><typedef-ref name="t" scoped="" ref="0x414b4d68"/></type-var>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="empty" ref="0x414b1248" loc="50:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="45:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; Returns if the queue is empty.</short>
          <long>&#10; Returns if the queue is empty.&#10;&#10; @return Whether the queue is empty.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="size" ref="0x414b1690" loc="58:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
        <documentation loc="52:/opt/tinyos-2.x/tos/interfaces/Queue.nc">
          <short>&#10; The number of elements currently in the queue.</short>
          <long>&#10; The number of elements currently in the queue.&#10; Always less than or equal to maxSize().&#10;&#10; @return The number of elements in the queue.&#10;</long>
        </documentation>
        <interfacedef-ref qname="Queue"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRank" loc="72:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <short>&#10; </short>
        <long>&#10; @ author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <function event="" provided="0" name="parentRankChange" ref="0x416f5640" loc="106:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isRoot" ref="0x416f97d0" loc="81:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setQueuingDelay" ref="0x416f5be0" loc="111:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <documentation loc="109:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
          <short></short>
        </documentation>
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="delay" ref="0x416f5a88" loc="111:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned long" unsigned="" size="I:4" alignment="I:1">
              <typename><typedef-ref name="uint32_t" ref="0x40213848"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="hasParent" ref="0x416f8c08" loc="98:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x416f5248" loc="104:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x416f50f0" loc="104:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="declareRoot" ref="0x416f9038" loc="75:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x416f9db0" loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x416f9c58" loc="84:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getEtx" ref="0x416f73f8" loc="101:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="isLeaf" ref="0x416f7010" loc="99:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="compareAddr" ref="0x416f7c30" loc="103:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node1" ref="0x416f7878" loc="103:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="node2" ref="0x416f7ad0" loc="103:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="isParent" ref="0x416f8388" loc="87:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="node" ref="0x416f8230" loc="87:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistencyDetected" ref="0x416f87f0" loc="94:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x416f4300" loc="113:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x416f41a8" loc="113:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="cancelRoot" ref="0x416f9400" loc="78:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRank.nc">
        <interfacedef-ref qname="RPLRank"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLOF" loc="1:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
      <function command="" provided="0" name="recomputeRoutes" ref="0x41719638" loc="20:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="OCP" ref="0x4171e778" loc="4:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ocp" ref="0x4171e620" loc="4:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="objectSupported" ref="0x4171ed68" loc="7:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="objectType" ref="0x4171ec10" loc="7:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x4171aa30" loc="14:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="resetRank" ref="0x4171ade0" loc="15:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setMinHopRankIncrease" ref="0x41719be0" loc="22:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="val" ref="0x41719a88" loc="22:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getObjectValue" ref="0x4171a1c8" loc="9:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getParent" ref="0x4171a630" loc="11:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="recalculateRank" ref="0x41719210" loc="17:/opt/tinyos-2.x/tos/lib/net/rpl/RPLOF.nc">
        <interfacedef-ref qname="RPLOF"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLParentTable" loc="1:/opt/tinyos-2.x/tos/lib/net/rpl/RPLParentTable.nc">
      <function command="" provided="0" name="get" ref="0x41728998" loc="2:/opt/tinyos-2.x/tos/lib/net/rpl/RPLParentTable.nc">
        <interfacedef-ref qname="RPLParentTable"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:23" alignment="I:1"><struct-ref ref="0x4172cba8"/>
              <typename><typedef-ref name="parent_t" ref="0x4172cef0"/></typename>
            </type-tag>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="parent_index" ref="0x41728820" loc="2:/opt/tinyos-2.x/tos/lib/net/rpl/RPLParentTable.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLRoutingEngine" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
      <documentation loc="32:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <short>&#10; RPLRoutingEngine.nc&#10; </short>
        <long>&#10; RPLRoutingEngine.nc&#10; @ author JeongGil Ko (John) &#60;jgko@cs.jhu.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="getMOP" ref="0x41721e18" loc="52:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDTSN" ref="0x41720348" loc="53:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dtsn" ref="0x417201f0" loc="53:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getDTSN" ref="0x41720728" loc="54:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="hasDODAG" ref="0x41724268" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="validInstance" ref="0x41723688" loc="46:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="instanceID" ref="0x41723530" loc="46:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="inconsistency" ref="0x41720b00" loc="56:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getRank" ref="0x41724c90" loc="44:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
            <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDodagId" ref="0x41723ae8" loc="47:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="setDODAGConfig" ref="0x41721a40" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="DIOIntDouble" ref="0x41721010" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="DIOIntMin" ref="0x41721230" loc="49:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="DIORedun" ref="0x41721458" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="MaxRankInc" ref="0x41721680" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
          <variable name="MinHopRankInc" ref="0x417218c8" loc="50:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
              <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="getInstanceID" ref="0x417230c8" loc="45:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="uint8_t" ref="0x40212b68"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getDefaultRoute" ref="0x417248a0" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="next_hop" ref="0x41724748" loc="43:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="resetTrickle" ref="0x41727e70" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLRoutingEngine.nc">
        <interfacedef-ref qname="RPLRoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RPLDAORoutingEngine" loc="39:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
      <documentation loc="68:/opt/tinyos-2.x/tos/lib/net/rpl/RPL.h">
        <short>&#10; </short>
        <long>&#10; @author Yiwei Yao &#60;yaoyiwei@stanford.edu>&#10;</long>
      </documentation>
      <function command="" provided="0" name="newParent" ref="0x4178c3c0" loc="42:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="getStoreState" ref="0x4178c010" loc="41:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="bool" ref="0x403506e8"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
      <function command="" provided="0" name="startDAO" ref="0x41790bb0" loc="40:/opt/tinyos-2.x/tos/lib/net/rpl/RPLDAORoutingEngine.nc">
        <interfacedef-ref qname="RPLDAORoutingEngine"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="UDP" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
      <function command="" provided="0" name="sendto" ref="0x4190ea38" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x4045bd98"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4190e4f0" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x4045bd98"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4190e6d0" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4190e8d0" loc="19:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="bind" ref="0x4190e058" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="port" ref="0x4191bec0" loc="12:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="sendtov" ref="0x4190c2d0" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x4045bd98"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="dest" ref="0x4190eec8" loc="21:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x4045bd98"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="iov" ref="0x4190c170" loc="22:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:6" alignment="I:1"><struct-ref name="ip_iovec" ref="0x4044d848"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="recvfrom" ref="0x4190cef0" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
        <interfacedef-ref qname="UDP"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x4045bd98"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="src" ref="0x4190c728" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:18" alignment="I:1"><struct-ref name="sockaddr_in6" ref="0x4045bd98"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="payload" ref="0x4190c908" loc="29:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-void size="I:1" alignment="I:1"></type-void>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x4190cb08" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="meta" ref="0x4190cd80" loc="30:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/UDP.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:11" alignment="I:1"><struct-ref name="ip6_metadata" ref="0x4046ea98"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ShellCommand" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
      <function command="" provided="0" name="getBuffer" ref="0x419356f0" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="len" ref="0x41935578" loc="18:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="eval" ref="0x41935190" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="argc" ref="0x41911df0" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
          <variable name="argv" ref="0x41935010" loc="11:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-pointer size="I:2" alignment="I:1">
                <type-int cname="char" size="I:1" alignment="I:1"></type-int>
              </type-pointer>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="write" ref="0x41935d70" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
        <interfacedef-ref qname="ShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="str" ref="0x41935a78" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-int cname="char" size="I:1" alignment="I:1"></type-int>
            </type-pointer>
          </variable>
          <variable name="len" ref="0x41935c10" loc="24:/opt/tinyos-2.x/tos/lib/net/blip/shell/ShellCommand.nc">
            <type-int cname="int" size="I:2" alignment="I:1"></type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="RegisterShellCommand" loc="2:/opt/tinyos-2.x/tos/lib/net/blip/shell/RegisterShellCommand.nc">
      <function event="" provided="0" name="getCommandName" ref="0x41938d30" loc="3:/opt/tinyos-2.x/tos/lib/net/blip/shell/RegisterShellCommand.nc">
        <interfacedef-ref qname="RegisterShellCommand"/>
        <type-function size="I:1" alignment="I:1">
          <type-pointer size="I:2" alignment="I:1">
            <type-int cname="char" size="I:1" alignment="I:1"></type-int>
          </type-pointer>
          <function-parameters>
          </function-parameters>
        </type-function>
        <parameters>
        </parameters>
      </function>
    </interfacedef>
    <interfacedef qname="ICMPPing" loc="4:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
      <function event="" provided="0" name="pingDone" ref="0x4192f8e8" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="ping_rcv" ref="0x4192f578" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="ping_n" ref="0x4192f788" loc="10:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
      <function event="" provided="0" name="pingReply" ref="0x4192f170" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-void size="I:1" alignment="I:1"></type-void>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="icmp_stats" ref="0x4168a8a0"/></type-tag>
            </type-pointer>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="source" ref="0x41931d00" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="stats" ref="0x4192f010" loc="8:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:7" alignment="I:1"><struct-ref name="icmp_stats" ref="0x4168a8a0"/></type-tag>
            </type-pointer>
          </variable>
        </parameters>
      </function>
      <function command="" provided="0" name="ping" ref="0x419318b8" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
        <interfacedef-ref qname="ICMPPing"/>
        <type-function size="I:1" alignment="I:1">
          <type-int cname="unsigned char" unsigned="" size="I:1" alignment="I:1">
            <typename><typedef-ref name="error_t" ref="0x4035d340"/></typename>
          </type-int>
          <function-parameters>
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </function-parameters>
        </type-function>
        <parameters>
          <variable name="target" ref="0x41931360" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-pointer size="I:2" alignment="I:1">
              <type-tag size="I:16" alignment="I:1"><struct-ref name="in6_addr" ref="0x4045b228"/></type-tag>
            </type-pointer>
          </variable>
          <variable name="period" ref="0x41931570" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
          <variable name="n" ref="0x41931750" loc="6:/opt/tinyos-2.x/tos/lib/net/blip/interfaces/ICMPPing.nc">
            <type-int cname="unsigned short" unsigned="" size="I:2" alignment="I:1">
              <typename><typedef-ref name="uint16_t" ref="0x402131e8"/></typename>
            </type-int>
          </variable>
        </parameters>
      </function>
    </interfacedef>
  </interfacedefs>
  <tags>
  </tags>
  <variables>
  </variables>
  <constants>
  </constants>
  <functions>
  </functions>
  <typedefs>
  </typedefs>
</nesc>
